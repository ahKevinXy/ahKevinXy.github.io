<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ahkevinxy.github.io/blog</id>
    <title>ahKevinXy Blog</title>
    <updated>2023-05-25T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ahkevinxy.github.io/blog"/>
    <subtitle>ahKevinXy Blog</subtitle>
    <icon>https://ahkevinxy.github.io/static/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[招商银行银企直联 go sdk]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/25/go-cmb</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/25/go-cmb"/>
        <updated>2023-05-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[招商银行logo]]></summary>
        <content type="html"><![CDATA[<p><a target="_blank" href="/assets/files/cmb_logo-68457137dfd9694992a692db9e0d05c8.jpeg"><img loading="lazy" alt="招商银行logo" src="/assets/images/cmb_logo-68457137dfd9694992a692db9e0d05c8.jpeg" width="1996" height="969" class="img_ev3q"></a></p><p><a href="https://jb.gg/OpenSourceSupport" target="_blank" rel="noopener noreferrer"><img loading="lazy" src="https://resources.jetbrains.com/storage/products/company/brand/logos/jb_beam.svg" alt="JetBrains Logo (Main) logo" title="logo" class="img_ev3q"></a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="介绍">介绍<a href="#介绍" class="hash-link" aria-label="介绍的直接链接" title="介绍的直接链接">​</a></h2><p>招商银行银企直联服务</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="招商银行文档-官网">招商银行文档 <a href="https://openbiz.cmbchina.com/developer/UI/business/Index.aspx" target="_blank" rel="noopener noreferrer">官网</a><a href="#招商银行文档-官网" class="hash-link" aria-label="招商银行文档-官网的直接链接" title="招商银行文档-官网的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="使用">使用<a href="#使用" class="hash-link" aria-label="使用的直接链接" title="使用的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">go get -u github.com/ahKevinXy/go-cmb</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="todo">TODO<a href="#todo" class="hash-link" aria-label="TODO的直接链接" title="TODO的直接链接">​</a></h2><ul class="contains-task-list containsTaskList_mC6p"><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->更新 models 为 proto 兼容其他语言</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->优化请求参数</li><li class="task-list-item"><input type="checkbox" disabled=""> <!-- -->完善功能</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="目录说明">目录说明<a href="#目录说明" class="hash-link" aria-label="目录说明的直接链接" title="目录说明的直接链接">​</a></h2><ul><li><code>cmb_error</code> 错误参数</li><li><code>config</code>  配置文件</li><li><code>constants</code> 常量文件</li><li><code>docs</code> 文档文件</li><li><code>handler</code> 业务处理<ul><li><code>account</code> 账户处理</li><li><code>notice</code> 通知</li><li><code>payment</code> 支付</li><li><code>payroll</code> 代发</li><li><code>payrool_old</code> 代发(旧)</li><li><code>unit_manager</code> 交易管家</li></ul></li><li><code>help</code> 工具类函数</li><li><code>models</code> 实例</li><li><code>pkg</code> 第三方包</li><li><code>testdata</code> 本地测试数据</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="账务管理">账务管理<a href="#账务管理" class="hash-link" aria-label="账务管理的直接链接" title="账务管理的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="交易管家">交易管家<a href="#交易管家" class="hash-link" aria-label="交易管家的直接链接" title="交易管家的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="代发代扣">代发代扣<a href="#代发代扣" class="hash-link" aria-label="代发代扣的直接链接" title="代发代扣的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="交易流水">交易流水<a href="#交易流水" class="hash-link" aria-label="交易流水的直接链接" title="交易流水的直接链接">​</a></h3><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开发调试">开发调试<a href="#开发调试" class="hash-link" aria-label="开发调试的直接链接" title="开发调试的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="生成-testdata-参数数据">生成 testdata 参数数据<a href="#生成-testdata-参数数据" class="hash-link" aria-label="生成 testdata 参数数据的直接链接" title="生成 testdata 参数数据的直接链接">​</a></h3><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"># 创建 testdata目录</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> testdata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic"># 生成 testdata.go 文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">cp</span><span class="token plain"> -rf  testdata.go.template  testdata/testdata.go</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="录入本地测试数据">录入本地测试数据<a href="#录入本地测试数据" class="hash-link" aria-label="录入本地测试数据的直接链接" title="录入本地测试数据的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> testdata</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 商户配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UserId     </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 用户ID</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Account    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//账户</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    UserKey    </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 用户秘钥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    AseKey     </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 对称秘钥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    BankLinkNo </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 分行号</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Sass平台配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CmbSassName       </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Sass 名称</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CmbSassPrivateKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 平台私钥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CmbSigdatDefault  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 默认值</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    CmbUrl            </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 银企直联地址</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="go" term="go"/>
        <category label="招商银行" term="招商银行"/>
        <category label="sdk" term="sdk"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL中DATE_FORMAT()函数的说明和简介]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/23/mysql</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/23/mysql"/>
        <updated>2023-05-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[DATE_FORMAT]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="date_format">DATE_FORMAT<a href="#date_format" class="hash-link" aria-label="DATE_FORMAT的直接链接" title="DATE_FORMAT的直接链接">​</a></h2><p>格式化 datetime timestamp</p><ul><li>date 是要格式化的有效日期</li><li>format 预定义的说明符</li></ul>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="mysql" term="mysql"/>
        <category label="基础知识" term="基础知识"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CPU 详解]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/18/cpu</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/18/cpu"/>
        <updated>2023-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[介绍]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="介绍">介绍<a href="#介绍" class="hash-link" aria-label="介绍的直接链接" title="介绍的直接链接">​</a></h2><p>中央处理器,简称 CPU( Center Processing Unit )</p><p>主要包括两个部分 <code>控制器</code> <code>运算器</code>,其中还包括 高速缓冲 存储器及实现它们之间联系的数据,控制的总线.电子计算机的三大核心部件(CPU,内存存储器,输入\输出设备).</p><p>中央处理器主要为处理指令,执行操作,控制时间,处理数据.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="i7">i7<a href="#i7" class="hash-link" aria-label="i7的直接链接" title="i7的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="i5">i5<a href="#i5" class="hash-link" aria-label="i5的直接链接" title="i5的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="i3">i3<a href="#i3" class="hash-link" aria-label="i3的直接链接" title="i3的直接链接">​</a></h2>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="CPU" term="CPU"/>
        <category label="基础知识" term="基础知识"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[git  tag]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/14/git</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/14/git"/>
        <updated>2023-05-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[获取git tag 列表]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取git-tag-列表">获取git tag 列表<a href="#获取git-tag-列表" class="hash-link" aria-label="获取git tag 列表的直接链接" title="获取git tag 列表的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> tag</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建标签">创建标签<a href="#创建标签" class="hash-link" aria-label="创建标签的直接链接" title="创建标签的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> tag -a v1.0.3 -m</span><span class="token string" style="color:#e3116c">"tag 备注"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看备注">查看备注<a href="#查看备注" class="hash-link" aria-label="查看备注的直接链接" title="查看备注的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain">  show v1.0.3</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="对历史进行标签">对历史进行标签<a href="#对历史进行标签" class="hash-link" aria-label="对历史进行标签的直接链接" title="对历史进行标签的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> log --pretty</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">oneline</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> tag -a v1.0.3 0d52aaab44</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="提交tag">提交tag<a href="#提交tag" class="hash-link" aria-label="提交tag的直接链接" title="提交tag的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> push origin --tags</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="删除标签">删除标签<a href="#删除标签" class="hash-link" aria-label="删除标签的直接链接" title="删除标签的直接链接">​</a></h2><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">git</span><span class="token plain"> tag -d v1.0.3</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">git</span><span class="token plain"> push origin --delete </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">tagname</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="git" term="git"/>
        <category label="command" term="command"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[samba修改密码]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/04/samb</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/04/samb"/>
        <updated>2023-05-04T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> smbpasswd -a </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">username</span><span class="token operator" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="samba" term="samba"/>
        <category label="群机器人" term="群机器人"/>
        <category label="go" term="go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[go 企业微信机器人实例]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/05/04/webchat</id>
        <link href="https://ahkevinxy.github.io/blog/2023/05/04/webchat"/>
        <updated>2023-05-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在终端某个群组添加机器人之后，创建者可以在机器人详情页看的该机器人特有的webhookurl。开发者可以按以下说明向这个地址发起HTTP POST 请求，即可实现给该群组发送消息]]></summary>
        <content type="html"><![CDATA[<blockquote><p>在终端某个群组添加机器人之后，创建者可以在机器人详情页看的该机器人特有的webhookurl。开发者可以按以下说明向这个地址发起HTTP POST 请求，即可实现给该群组发送消息
go 语言实现机器人推送消息</p></blockquote><ul><li>使用curl 工具</li></ul><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693axxx6-7aoc-4bc4-97a0-0ec2sifa5aaa'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   -H </span><span class="token string" style="color:#e3116c">'Content-Type: application/json'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   -d </span><span class="token string" style="color:#e3116c">'</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">   {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">     "msgtype": "text",</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">     "text": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">         "content": "hello world"</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">     }</span><br></span><span class="token-line" style="color:#393A34"><span class="token string" style="color:#e3116c">   }'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li><p>当前自定义机器人支持文本（text）、markdown（markdown）、图片（image）、图文（news）四种消息类型</p></li><li><p>机器人的text/markdown类型消息支持在content中使用&lt;@userid&gt;扩展语法来@群成员</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="go-语言实现">go 语言实现<a href="#go-语言实现" class="hash-link" aria-label="go 语言实现的直接链接" title="go 语言实现的直接链接">​</a></h2><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> helps</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bytes"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"encoding/json"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"errors"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"io/ioutil"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net/http"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"net/http/cookiejar"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"strings"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// PushMessageToQwx</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  @Description:   推送消息到企业微信</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  @Author  ahKevinXy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//  @Date 2023-04-12 10:32:59</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">PushMessageToQwx</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mp </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> noticeUrl </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> request</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MakeHttpRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"POST"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> noticeUrl</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mp</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">request</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"处理结果"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> POST  </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"POST"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> GET   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"GET"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PUT   </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PUT"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> PATCH </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PATCH"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// MakeHttpRequest</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Description: HTTP请求</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Author ahKevinXy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Date 2022-11-08 16:49:40</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">MakeHttpRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> url </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> entity </span><span class="token keyword" style="color:#00009f">map</span><span class="token punctuation" style="color:#393A34">[</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">]</span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> jar </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cookiejar</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Jar</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> body io</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reader</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> err </span><span class="token builtin">error</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> entity </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">switch</span><span class="token plain"> method </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> POST</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> PUT</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> PATCH</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> json</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Marshal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\\u003c"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\\u003e"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   b </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Replace</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"\\u0026"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   body </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewBuffer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">b</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> GET</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    params </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    index </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> entity </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     _v </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     params</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%s=%v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> k</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> _v</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     index</span><span class="token operator" style="color:#393A34">++</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    queryStr </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> strings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Join</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">params</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    url </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sprintf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"%s?%s"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> queryStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> req</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> body</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> entity </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> POST </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> method </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> PUT </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> method </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> PATCH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Content-Type"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json;charset=utf-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Accept"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"application/json"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Add</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Connection"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"close"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> req</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"User-Agent"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> client </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DefaultClient</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> jar </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Client</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   Jar</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> jar</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Do</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">req</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusCode </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusOK </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusCode </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusCreated </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusCode </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> http</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusNoContent </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> errors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">New</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"http request failed to call"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> resBody</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> ioutil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ReadAll</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Body</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> errors</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">New</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"the response could not be read"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">resBody</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> res</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StatusCode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="企业微信" term="企业微信"/>
        <category label="群机器人" term="群机器人"/>
        <category label="go" term="go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[常用MySQL 信息查询]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/04/18/mysql</id>
        <link href="https://ahkevinxy.github.io/blog/2023/04/18/mysql"/>
        <updated>2023-04-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[查询所有空间]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="查询所有空间">查询所有空间<a href="#查询所有空间" class="hash-link" aria-label="查询所有空间的直接链接" title="查询所有空间的直接链接">​</a></h2><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_schema </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据库'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">table_rows</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'记录数'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据容量(MB)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'索引容量(MB)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> information_schema</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">tables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">group</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> table_schema</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data_length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index_length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查询空间">查询空间<a href="#查询空间" class="hash-link" aria-label="查询空间的直接链接" title="查询空间的直接链接">​</a></h2><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_schema </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据库'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'表名'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_rows </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'记录数'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据容量(MB)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'索引容量(MB)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> information_schema</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">tables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> data_length </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> index_length </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看指定数据库容量大小">查看指定数据库容量大小<a href="#查看指定数据库容量大小" class="hash-link" aria-label="查看指定数据库容量大小的直接链接" title="查看指定数据库容量大小的直接链接">​</a></h2><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_schema </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据库'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">table_rows</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'记录数'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据容量(MB)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">sum</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'索引容量(MB)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> information_schema</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">tables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> table_schema</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'mysql'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="查看指定数据库各表容量大小">查看指定数据库各表容量大小<a href="#查看指定数据库各表容量大小" class="hash-link" aria-label="查看指定数据库各表容量大小的直接链接" title="查看指定数据库各表容量大小的直接链接">​</a></h2><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_schema </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据库'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_name </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'表名'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">table_rows </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'记录数'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'数据容量(MB)'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">truncate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index_length</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token operator" style="color:#393A34">/</span><span class="token number" style="color:#36acaa">1024</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">as</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'索引容量(MB)'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> information_schema</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">tables</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> table_schema</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">'mysql'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">order</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">by</span><span class="token plain"> data_length </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> index_length </span><span class="token keyword" style="color:#00009f">desc</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="mysql" term="mysql"/>
        <category label="工具" term="工具"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 中的sync poll]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/15/sync_poll</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/15/sync_poll"/>
        <updated>2023-03-15T23:07:03.000Z</updated>
        <summary type="html"><![CDATA[Go 中的waitgroup]]></summary>
        <content type="html"><![CDATA[<blockquote><p>使用场景：频繁构造结构体，分配内存，可以考虑对象池.</p></blockquote><p><a href="https://juejin.cn/post/7209625823580520504" target="_blank" rel="noopener noreferrer">from</a></p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
        <category label="Go基础知识" term="Go基础知识"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[TODO]]></title>
        <id>https://ahkevinxy.github.io/blog/todos</id>
        <link href="https://ahkevinxy.github.io/blog/todos"/>
        <updated>2023-03-15T15:30:34.000Z</updated>
        <summary type="html"><![CDATA[* go unsafe 2023-3-15 2326]]></summary>
        <content type="html"><![CDATA[<ul><li>go unsafe 2023-3-15 23:22:26</li><li>Go异步任务处理解决方案：Asynq 2023-3-15 23:21:25</li><li>go 测试 testing 2023-3-15 23:21:30</li><li>go 1.18后泛型学习 2023-3-15 23:21:35</li><li><a href="https://www.cloudwego.io/zh/" target="_blank" rel="noopener noreferrer">CloudWeGo</a> 学习 2023-3-15 23:19:41</li><li>gin通过embed 打包静态文件 2023-3-15 23:18:05</li></ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[letcode 打卡]]></title>
        <id>https://ahkevinxy.github.io/blog/letcode</id>
        <link href="https://ahkevinxy.github.io/blog/letcode"/>
        <updated>2023-03-07T13:09:13.000Z</updated>
        <summary type="html"><![CDATA[letcode 个人学习]]></summary>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="letcode" term="letcode"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go defer 详解]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/07/index</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/07/index"/>
        <updated>2023-03-07T13:09:13.000Z</updated>
        <summary type="html"><![CDATA[Go defer 详解]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="基本功能介绍">基本功能介绍<a href="#基本功能介绍" class="hash-link" aria-label="基本功能介绍的直接链接" title="基本功能介绍的直接链接">​</a></h2><ol><li>defer是一种延迟处理机制，是在函数进行return之前进行执行。</li><li>defer是采用栈的方式执行，也就是说先定义的defer后执行，后定义的defer最先被执行。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="扩展">扩展<a href="#扩展" class="hash-link" aria-label="扩展的直接链接" title="扩展的直接链接">​</a></h2><ol><li>defer 执行顺序 . 采用栈的方式执行,先定义先执行</li><li>defer 与 return 谁先谁执行 return 之后的语句先执行，defer 后的语句后执行。</li><li>函数的返回值初始化与 defer 间接影响。defer中修改了返回值，实际返回的值是按照defer修改后的值进行返回</li><li>defer 遇见 panic。按照defer的栈顺序，输出panic触发之前定义好的defer</li><li>defer 中包含 panic。按照defer的栈顺序，输出panic触发之前的defer。并且defer中会接收到panic信息。</li><li>defer 下的函数参数包含子函数。会先进行子函数的结果值，然后在按照栈的顺序进行输出</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="defer-与panic">defer 与panic<a href="#defer-与panic" class="hash-link" aria-label="defer 与panic的直接链接" title="defer 与panic的直接链接">​</a></h2><p>panic是Go语言中的一种异常现象，它会中断程序的执行，并抛出具体的异常信息</p><p>当函数中发生了panic异常，会马上中止当前函数的执行，panic之前定义的defer都会被执行，所有的 defer 语句都会保证执行并把控制权交还给接收到 panic 的函数调用者。这样向上冒泡直到最顶层，并执行（每层的） defer，在栈顶处程序崩溃，并在命令行中用传给 panic 的值报告错误情况：这个终止过程就是 panicking。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="defer中包含panic">defer中包含panic<a href="#defer中包含panic" class="hash-link" aria-label="defer中包含panic的直接链接" title="defer中包含panic的直接链接">​</a></h2><p>程序中虽然发生了panic，但是在panic之前定义的defer语句，还是会被执行。要想在defer中获取到具体的panic信息，需要使用 recover() 进行获取。</p><p>这个（recover）内建函数被用于从 panic 或 错误场景中恢复：让程序可以从 panicking 重新获得控制权，停止终止过程进而恢复正常执行。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="defer下的函数参数包含子函数">defer下的函数参数包含子函数<a href="#defer下的函数参数包含子函数" class="hash-link" aria-label="defer下的函数参数包含子函数的直接链接" title="defer下的函数参数包含子函数的直接链接">​</a></h2><ol><li>执行第1个defer时，压入defer栈中，该defer会执行一个function的函数，在函数返回之前执行</li><li>因为该函数中又包含了一个函数(子函数)，Go语言处理的机制是，先执行该子函数。</li><li>执行完子函数，接着再执行第2个defer语句。此时，第2个defer中也有一个子函数，按照第2点的逻辑，这个子函数会被直接执行</li><li>定义完defer语句之后，此时结束该函数的调用。所有被定义的defer语句，按照栈顺序进行输出</li></ol><p>当defer中存在子函数时，子函数会按照defer定义的语句顺序，优先执行。defer最外层的逻辑，则按照栈的顺序执行。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go语言实现十大排序算法]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/07/sort_go</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/07/sort_go"/>
        <updated>2023-03-07T13:09:13.000Z</updated>
        <summary type="html"><![CDATA[Go defer 详解]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="冒泡排序">冒泡排序<a href="#冒泡排序" class="hash-link" aria-label="冒泡排序的直接链接" title="冒泡排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>从左到右遍历数组，相邻元素两两进行比较。每次比较完一轮，就会找到数组中最大的一个或最小的一个。这个数就会从序列的最右边冒出来</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="选择排序">选择排序<a href="#选择排序" class="hash-link" aria-label="选择排序的直接链接" title="选择排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>首先在开始的时候遍历整个数组，找到序列中的最小元素，然后将这个元素与第一个元素交换，这样最小的元素就放到了它的最终位置上了,然后，从第二个元素开始遍历，找到剩下的n-1个元素中的最小元素，再与第二个元素进行交换。以此类推，直到最后一个元素放到了最终位</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="插入排序">插入排序<a href="#插入排序" class="hash-link" aria-label="插入排序的直接链接" title="插入排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>将一个记录插入到已经排好序的有序表中，从而一个新的、记录数增1的有序表,在其实现过程使用双层循环，外层循环对除了第一个元素之外的所有元素，内层循环对当前元素前面的有序表进行待插入位置查找，并进行移动</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="快速排序">快速排序<a href="#快速排序" class="hash-link" aria-label="快速排序的直接链接" title="快速排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>快速排序要求我们选择一个基准，根据这个基准为原数组分组，比基准大的一组，比基准小的一组，再重复递归地进行快速排序，重新合并每组排序后的序列，即为排好序的序列</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="归并排序">归并排序<a href="#归并排序" class="hash-link" aria-label="归并排序的直接链接" title="归并排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>归并排序是采用分治法的一个典型的排序算法，将已有序的子序列合并为一个完全有序的序列。</p><p>归并排序的过程是：首先将序列拆分成子序列，然后对子序列进行排序，最后将排序好的子序列合并，就得到了一个有序的序列。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="堆排序">堆排序<a href="#堆排序" class="hash-link" aria-label="堆排序的直接链接" title="堆排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>先来介绍一下什么是堆？堆是一种近似完全二叉树的数据结构，可以分为大根堆，小根堆。</p><p>接着我们来看一下堆排序的过程：</p><ol><li>将待排序序列构造成一个大根堆，此时，整个数组的最大值就是堆结构顶端的根节点。</li><li>将堆根节点的数与末尾的数交换，此时，末尾的数为最大值，剩余待排序序列个数为n-1。</li><li>将剩余的n-1个数再构造成一个大根堆，再将顶端数与n-1位置的数交换，如此反复执行，便能得到有序数组。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="希尔排序">希尔排序<a href="#希尔排序" class="hash-link" aria-label="希尔排序的直接链接" title="希尔排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="计数排序">计数排序<a href="#计数排序" class="hash-link" aria-label="计数排序的直接链接" title="计数排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>计数排序是一种通过计数而不是比较进行排序的算法，适用于范围较小的整数序列。
它的优势在于在对一定范围内的整数排序时，时间复杂度为Ο(n+k)（其中k是整数的范围），快于任何比较排序算法。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="桶排序">桶排序<a href="#桶排序" class="hash-link" aria-label="桶排序的直接链接" title="桶排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>将数组按照元素所属范围分到有限数量的桶里，再单独对每个桶排序（可以使用别的排序算法或是以递归方式继续使用桶排序进行排序），最后依次把各个桶中的记录列出来记得到有序序列。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="基数排序">基数排序<a href="#基数排序" class="hash-link" aria-label="基数排序的直接链接" title="基数排序的直接链接">​</a></h2><blockquote><p>原理</p></blockquote><p>依次按照个位、十位、百位...的顺序对待排序数组分组，然后将每一次的分组按照索引大小重新组成新的数组。最后一轮的新数组即为排好序的数组</p><ol><li>我们按照个位将待排序数组分组。</li><li>我们按照十位将待排序数组分组</li><li>我们按照百位将待排序数组分组。</li></ol>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
        <category label="算法" term="算法"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go语言 三剑客]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/07/three_tools</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/07/three_tools"/>
        <updated>2023-03-07T13:09:13.000Z</updated>
        <summary type="html"><![CDATA[Go语言 三剑客]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="viper"><a href="https://github.com/spf13/viper" target="_blank" rel="noopener noreferrer">viper</a><a href="#viper" class="hash-link" aria-label="viper的直接链接" title="viper的直接链接">​</a></h2><p>Go configuration with fangs</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cobra"><a href="https://github.com/spf13/cobra" target="_blank" rel="noopener noreferrer">Cobra</a><a href="#cobra" class="hash-link" aria-label="cobra的直接链接" title="cobra的直接链接">​</a></h2><p>A Commander for modern Go CLI interactions</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pflag"><a href="https://github.com/spf13/pflag" target="_blank" rel="noopener noreferrer">Pflag</a><a href="#pflag" class="hash-link" aria-label="pflag的直接链接" title="pflag的直接链接">​</a></h2><p>Drop-in replacement for Go's flag package, implementing POSIX/GNU-style --flags.</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 中的waitgroup]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/15/wait_group</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/15/wait_group"/>
        <updated>2023-03-07T13:09:13.000Z</updated>
        <summary type="html"><![CDATA[Go 中的waitgroup]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是waitgroup">什么是WaitGroup<a href="#什么是waitgroup" class="hash-link" aria-label="什么是WaitGroup的直接链接" title="什么是WaitGroup的直接链接">​</a></h2><p><code>WaitGroup</code> 是同步goroutines的一种有效方式，</p><p><code>WaitGroup</code> 是通过调用标准库<code>sync</code> 包</p><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> wg sync</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">WaitGroup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>WaitGroup 有三个重要的方法</p><ol><li>Add: 添加到你需要等待的goroutines的总量上</li><li>Done: 从你需要等待的goroutines上减除1</li><li>Wait: 阻止代码进行进行下去，直到所有的goroutines全部执行完成</li></ol>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
        <category label="Go基础知识" term="Go基础知识"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[资源汇聚]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome</id>
        <link href="https://ahkevinxy.github.io/blog/awesome"/>
        <updated>2023-03-07T06:45:03.000Z</updated>
        <summary type="html"><![CDATA[github]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/topics/awesome" target="_blank" rel="noopener noreferrer">github</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[高性能协程池ants源码剖析]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/ants</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/ants"/>
        <updated>2023-03-06T15:17:31.000Z</updated>
        <summary type="html"><![CDATA[Go的结构体内存对齐机制]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="简介">简介<a href="#简介" class="hash-link" aria-label="简介的直接链接" title="简介的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ants是什么">ants是什么<a href="#ants是什么" class="hash-link" aria-label="ants是什么的直接链接" title="ants是什么的直接链接">​</a></h3><p>ants是一个高性能的 goroutine 池，实现了对大规模 goroutine 的调度管理、goroutine 复用，允许使用者在开发并发程序的时候限制 goroutine 数量，复用资源，达到更高效执行任务的效果。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="功能特点">功能特点<a href="#功能特点" class="hash-link" aria-label="功能特点的直接链接" title="功能特点的直接链接">​</a></h3><ul><li>自动调度海量的 goroutines，复用 goroutines</li><li>定期清理过期的 goroutines，进一步节省资源</li><li>提供了大量有用的接口：任务提交、获取运行中的 goroutine 数量、动态调整 Pool 大小、释放 Pool、重启 Pool</li><li>优雅处理 panic，防止程序崩溃</li><li>资源复用，极大节省内存使用量；在大规模批量并发任务场景下比原生 goroutine 并发具有更高的性能</li><li>非阻塞机制</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ants核心概念">ants核心概念<a href="#ants核心概念" class="hash-link" aria-label="ants核心概念的直接链接" title="ants核心概念的直接链接">​</a></h3><ul><li>Pool ：协程池</li><li>WorkerArray：Pool池中的worker队列，存放所有的goWorker</li><li>goWorker：运行任务的实际执行者，它启动一个 goroutine 来接受任务并执行函数调用。</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="pool协程池">Pool协程池<a href="#pool协程池" class="hash-link" aria-label="Pool协程池的直接链接" title="Pool协程池的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pool结构">Pool结构<a href="#pool结构" class="hash-link" aria-label="Pool结构的直接链接" title="Pool结构的直接链接">​</a></h3><blockquote><p>Ants 提供了两种Pool结构：Pool和PoolWithFunc ；但两者逻辑大致一样，本文着重介绍Pool的结构</p></blockquote><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Pool accepts the tasks from client, it limits the total of goroutines to a given number by recycling goroutines.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Pool </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// capacity of the pool, a negative value means that the capacity of pool is limitless, an infinite pool is used to</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// avoid potential issue of endless blocking caused by nested usage of a pool: submitting a task to pool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// which submits a new task to the same pool.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 协程池的容量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> capacity </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// running is the number of the currently running goroutines.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 正在运行的goroutines的数量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> running </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// lock for protecting the worker queue.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 锁，自旋锁，保护队列</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lock sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Locker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// workers is a slice that store the available workers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 存放池中所有的worker,workerArray包含可用workers队列和过期workers队列，只会从可用workers队列中取可用worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> workers workerArray</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// state is used to notice the pool to closed itself.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 记录池子的状态 （关闭、开启）</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> state </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// cond for waiting to get an idle worker.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 条件变量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cond </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Cond</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// workerCache speeds up the obtainment of a usable worker in function:retrieveWorker.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// worker 对象池</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> workerCache sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// waiting is the number of goroutines already been blocked on pool.Submit(), protected by pool.lock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//阻塞等待的任务量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waiting </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 清道夫，定时清理workerarray 队列中过期的worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> purgeDone </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stopPurge context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CancelFunc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 定时器 更新pool中now的字段</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ticktockDone </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stopTicktock context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CancelFunc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> now atomic</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 需要自定义加载的配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> options </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Options</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="pool创建">Pool创建<a href="#pool创建" class="hash-link" aria-label="Pool创建的直接链接" title="Pool创建的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// NewPool generates an instance of ants pool.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">NewPool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">size </span><span class="token builtin">int</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> options </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">Option</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> opts </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">loadOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token operator" style="color:#393A34">...</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 加载自定义的options中的配置</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> size </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  size </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DisablePurge </span><span class="token punctuation" style="color:#393A34">{</span><span class="token comment" style="color:#999988;font-style:italic">// 当 DisablePurge 为 true 时，worker 不会被清除并且是驻留的。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> expiry </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExpiryDuration</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> expiry </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ErrInvalidPoolExpiry</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> expiry </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExpiryDuration </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> DefaultCleanIntervalTime </span><span class="token comment" style="color:#999988;font-style:italic">// 默认间隔时间1s</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  opts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> defaultLogger</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  capacity</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">int32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">size</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lock</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">     syncx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewSpinLock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token comment" style="color:#999988;font-style:italic">//自旋锁</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  options</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">  opts</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workerCache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">New </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//sync.pool 初始化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   pool</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   task</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workerChanCap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PreAlloc </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> size </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> ErrInvalidPreAllocSize</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">newWorkerArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">loopQueueType</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> size</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//循环队列</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">newWorkerArray</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">stackType</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//数组</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewCond</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// sync.cond初始化</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">goPurge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">goTicktock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="自旋锁spinlock重点">自旋锁SpinLock(重点)<a href="#自旋锁spinlock重点" class="hash-link" aria-label="自旋锁SpinLock(重点)的直接链接" title="自旋锁SpinLock(重点)的直接链接">​</a></h3><blockquote><p>思考：如何设计一种自旋锁，设计自旋锁时需要注意什么？</p></blockquote><p>spinLock是基于CAS机制和指数退避算法实现的一种自旋锁</p><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> sync</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"runtime"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sync"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sync/atomic"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> spinLock </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 实现sync.Locker接口</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> maxBackoff </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">16</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//最大的回避次数</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">spinLock</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> backoff </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 基于CAS机制，尝试获取锁，且使用指数退避算法来提供获取锁的成功率</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">atomic</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">CompareAndSwapUint32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token builtin">uint32</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Leverage the exponential backoff algorithm, see https://en.wikipedia.org/wiki/Exponential_backoff.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> backoff</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">//runtime.Gosched()函数功能：使当前goroutine让出CPU时间片（“回避”），让其他的goroutine获得执行的机会。当前的goroutine会在未来的某个时间点继续运行。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">//注意：当一个goroutine发生阻塞，Go会自动地把与该goroutine处于同一系统线程的其他goroutines转移到另一个系统线程上去，以使这些goroutines不阻塞（从GMP模型角度来说，就是当与P绑定的M发生阻塞，P就与其解绑，然后与另一个空闲的M进行绑定 或者 去创建一个M进行绑定）。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Gosched</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> backoff </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> maxBackoff </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   backoff </span><span class="token operator" style="color:#393A34">&lt;&lt;=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sl </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">spinLock</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">//原子操作，并发安全</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> atomic</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StoreUint32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token builtin">uint32</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">sl</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// NewSpinLock instantiates a spin-lock.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">NewSpinLock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> sync</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Locker </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">new</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">spinLock</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>sync.Locker</p><blockquote><p>设计锁时必须实现该接口中的方法</p></blockquote><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// A Locker represents an object that can be locked and unlocked.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> Locker </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="关键知识点">关键知识点<a href="#关键知识点" class="hash-link" aria-label="关键知识点的直接链接" title="关键知识点的直接链接">​</a></h3><ul><li>sync.Locker接口</li><li>指数退避算法</li><li>atomic 原子包中的方法了解</li><li>runtime.Gosched()</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="任务执行">任务执行<a href="#任务执行" class="hash-link" aria-label="任务执行的直接链接" title="任务执行的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="goworker的结构">goWorker的结构<a href="#goworker的结构" class="hash-link" aria-label="goWorker的结构的直接链接" title="goWorker的结构的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// goWorker is the actual executor who runs the tasks,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// it starts a goroutine that accepts tasks and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// performs function calls.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//goWorker 是运行任务的实际执行者，它启动一个 goroutine 来接受任务并执行函数调用。</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> goWorker </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// pool who owns this worker.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pool </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool </span><span class="token comment" style="color:#999988;font-style:italic">// 拥有worker的协议池</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// task is a job should be done.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> task </span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 需要执行的任务，注意：该chan 可能是缓存区或者非缓存区，如果是多核的话，缓存区的大小是1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// recycleTime will be updated when putting a worker back into queue.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> recycleTime time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Time </span><span class="token comment" style="color:#999988;font-style:italic">// 回收时间</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="gowoker的初始化">goWoker的初始化<a href="#gowoker的初始化" class="hash-link" aria-label="goWoker的初始化的直接链接" title="goWoker的初始化的直接链接">​</a></h3><blockquote><p>goWorker 是sync.pool 对象池创建的；初始化在Pool创建时</p></blockquote><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workerCache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">New </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   pool</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   task</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">chan</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> workerChanCap</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="workerchancap的值">workerChanCap的值<a href="#workerchancap的值" class="hash-link" aria-label="workerChanCap的值的直接链接" title="workerChanCap的值的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// workerChanCap determines whether the channel of a worker should be a buffered channel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// to get the best performance. Inspired by fasthttp at</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// https://github.com/valyala/fasthttp/blob/master/workerpool.go#L139</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> workerChanCap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Use blocking channel if GOMAXPROCS=1.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// This switches context from sender to receiver immediately,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// which results in higher performance (under go1.5 at least).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">GOMAXPROCS</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Use non-blocking workerChan if GOMAXPROCS&gt;1,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// since otherwise the sender might be dragged down if the receiver is CPU-bound.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="task-任务提交">Task 任务提交<a href="#task-任务提交" class="hash-link" aria-label="Task 任务提交的直接链接" title="Task 任务提交的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Submit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">task </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsClosed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 前置检查 协程池是否关闭</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ErrPoolClosed</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">retrieveWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//获取一个可用的worker取执行任务</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> ErrPoolOverload</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">task </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain"> task</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="retrieveworker-可用worker获取">retrieveWorker （可用worker获取）<a href="#retrieveworker-可用worker获取" class="hash-link" aria-label="retrieveWorker （可用worker获取）的直接链接" title="retrieveWorker （可用worker获取）的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// retrieveWorker returns an available worker to run the tasks.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">retrieveWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> spawnWorker </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 使用sync.pool 创建worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  w </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workerCache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 自旋锁 加锁</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> w </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">detach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 尝试从worker池子中获取可用的worker，注：任务执行完后，会回收worker 以便下次使用</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// first try to fetch the worker from the queue  获取到返回</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> capacity </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Cap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> capacity </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> capacity </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Running</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 判断正在运行的worker 是否超过 pool协程词设置的容量大小，注 capacity=-1 表示池子容量无限大</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// if the worker queue is empty and we don't run out of the pool capacity,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// then just spawn a new worker goroutine.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">spawnWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 创建worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// otherwise, we'll have to keep them blocked and wait for at least one worker to be put back into pool.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Nonblocking </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 判断协程池是否 是非阻塞模式 ，如果是非阻塞模式下就直接返回</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> retry</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 阻塞模式下的逻辑</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 判断阻塞的任务数量是否超过了设置的最大阈值，如果超过直接返回</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MaxBlockingTasks </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Waiting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">MaxBlockingTasks </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addWaiting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 阻塞任务数量加1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Wait</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// block and wait for an available worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addWaiting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 获取到可用的worker后，阻塞数量减一</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsClosed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// check pool池是否关闭</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> nw </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> nw </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Running</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> nw </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 如果正在执行的worker数量为0时，需要重新创建woker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token function" style="color:#d73a49">spawnWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">detach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> w </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//从workerArray中获取可用的worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> nw </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Cap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 获取不到，判断正在运行的goroutines的数量是否超过协层池的容量，没有就创建</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">spawnWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">goto</span><span class="token plain"> retry </span><span class="token comment" style="color:#999988;font-style:italic">// goto 重试阻塞模式下获取可用worker的逻辑</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="workerarray-工作池的结构">WorkerArray 工作池的结构<a href="#workerarray-工作池的结构" class="hash-link" aria-label="WorkerArray 工作池的结构的直接链接" title="WorkerArray 工作池的结构的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> workerArray </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">len</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 长度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 是否为空</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">insert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">worker </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">error</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 插入</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">detach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker </span><span class="token comment" style="color:#999988;font-style:italic">// 从WorkerArray获取可用的worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">retrieveExpiry</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">duration time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Duration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker  </span><span class="token comment" style="color:#999988;font-style:italic">//清道夫调用pool.worker中的此方法来清理pool.workers中的过期worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token function" style="color:#d73a49">reset</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 重置，清空WorkerArray中所有的Worker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>workerArray 接口的实现workerStack 和loopQueue</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="任务执行-1">任务执行<a href="#任务执行-1" class="hash-link" aria-label="任务执行的直接链接" title="任务执行的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// run starts a goroutine to repeat the process</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// that performs the function calls.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addRunning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// pool的running 加 一</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">addRunning</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workerCache</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">recover</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> ph </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PanicHandler</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> ph </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token function" style="color:#d73a49">ph</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"worker exits from a panic: %v\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> buf </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">4096</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               n </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stack</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">               w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"worker exits from panic: %s\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain">n</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token comment" style="color:#999988;font-style:italic">// Call Signal() here in case there are goroutines waiting for available workers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Signal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> f </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">task </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> f </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token function" style="color:#d73a49">f</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 任务执行</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> ok </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> w</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">pool</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">revertWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">w</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token plain">ok </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 回收woker</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>revertWorker</code>worker回收</p><blockquote><p>逻辑简单：1、往workerArray 队列中插入；2、通知正在阻塞获取worker的goroutines</p></blockquote><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// revertWorker puts a worker back into free pool, recycling the goroutines.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">revertWorker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">worker </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">goWorker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> capacity </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Cap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">capacity </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Running</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> capacity</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsClosed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Broadcast</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> worker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">recycleTime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">nowTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// To avoid memory leaks, add a double check in the lock scope.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Issue: https://github.com/panjf2000/ants/issues/113</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsClosed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">insert</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">worker</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Notify the invoker stuck in 'retrieveWorker()' of there is an available worker in the worker queue.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Signal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="定时清理过期的worker">定时清理过期的worker<a href="#定时清理过期的worker" class="hash-link" aria-label="定时清理过期的worker的直接链接" title="定时清理过期的worker的直接链接">​</a></h3><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">goPurge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">DisablePurge </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Start a goroutine to clean up expired workers periodically.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ctx</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">stopPurge </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">WithCancel</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Background</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">go</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">purgeStaleWorkers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// purgeStaleWorkers clears stale workers periodically, it runs in an individual goroutine, as a scavenger.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">Pool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">purgeStaleWorkers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">ctx context</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Context</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ticker </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> time</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">NewTicker</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExpiryDuration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  ticker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  atomic</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">StoreInt32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">purgeDone</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain">ctx</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Done</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">case</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain">ticker</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">C</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">IsClosed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   </span><span class="token keyword" style="color:#00009f">break</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Lock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  expiredWorkers </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">workers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">retrieveExpiry</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">ExpiryDuration</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">lock</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Unlock</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Notify obsolete workers to stop.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// This notification must be outside the p.lock, since w.task</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// may be blocking and may consume a lot of time if many workers</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// are located on non-local CPUs.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">range</span><span class="token plain"> expiredWorkers </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   expiredWorkers</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">task </span><span class="token operator" style="color:#393A34">&lt;-</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   expiredWorkers</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// There might be a situation where all workers have been cleaned up(no worker is running),</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// or another case where the pool capacity has been Tuned up,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// while some invokers still get stuck in "p.cond.Wait()",</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// then it ought to wake all those invokers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Running</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Waiting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Free</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   p</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cond</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Broadcast</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>ants源码 自旋锁的设计、sync.cond 条件变量 、sync.pool 对象池，原子操作，channel通信等</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
        <category label="ants" term="ants"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go的内存对齐机制]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/memory_struct</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/memory_struct"/>
        <updated>2023-03-06T15:17:31.000Z</updated>
        <summary type="html"><![CDATA[Go的结构体内存对齐机制]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么是内存对齐">什么是内存对齐<a href="#什么是内存对齐" class="hash-link" aria-label="什么是内存对齐的直接链接" title="什么是内存对齐的直接链接">​</a></h2><p>为了能让CPU可以更快的存取到各个字段，Go编译器会帮你把<code>struct结构体</code>做数据的对齐。所谓的数据对齐，是指内存地址是所存储数据的大小（按字节为单位）的整数倍，以便CU可以一次将该数据从内存中读取出来。编译器通过在结构体的各个字段之间填充一些空白已达到对齐的目的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="对齐系数">对齐系数<a href="#对齐系数" class="hash-link" aria-label="对齐系数的直接链接" title="对齐系数的直接链接">​</a></h2><p>不同硬件平台占用的大小和对齐值都可能是不一样的，每个特定平台上的编译器都有自己的默认"对齐系数"，32位系统对齐系数是4，64位系统对齐系数是8</p><p>不同类型的对齐系数也可能不一样，使用Go语言中的<code>unsafe.Alignof</code>函数可以返回相应类型的对齐系数，对齐系数都符合2^n这个规律，最大也不会超过8</p><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">"unsafe"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"bool alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">bool</span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"string alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"a"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"int alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">int</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"float alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">float64</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"int32 alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">int32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Printf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"float32 alignof is %d\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Alignof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">float32</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>可以查看到各种类型在Windows 64位上的对齐系数如下：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bool alignof is </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">string alignof is </span><span class="token number" style="color:#36acaa">8</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">int alignof is </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">float alignof is </span><span class="token number" style="color:#36acaa">8</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">int32 alignof is </span><span class="token number" style="color:#36acaa">4</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">float32 alignof is </span><span class="token number" style="color:#36acaa">4</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="缺点">缺点<a href="#缺点" class="hash-link" aria-label="缺点的直接链接" title="缺点的直接链接">​</a></h2><p>存在内存空间的浪费，实际上是空间换时间。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="优点">优点<a href="#优点" class="hash-link" aria-label="优点的直接链接" title="优点的直接链接">​</a></h2><ol><li>提高可移植性，有些CPU可以访问任意地址上的任意数据，而有些CPU只能在特定地址访问数据，因此不同硬件平台具有差异性，这样的代码就不具有移植性，如果在编译时，将分配的内存进行对齐，这就具有平台可以移植性了</li><li>提高内存的访问效率，32位CPU下一次可以从内存中读取32位（4个字节）的数据，64位CPU下一次可以从内存中读取64位（8个字节）的数据，这个长度也称为CPU的字长。CPU一次可以读取1个字长的数据到内存中，如果所需要读取的数据正好跨了1个字长，那就得花两个CPU周期的时间去读取了。因此在内存中存放数据时进行对齐，可以提高内存访问效率。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="结构体对齐原则">结构体对齐原则<a href="#结构体对齐原则" class="hash-link" aria-label="结构体对齐原则的直接链接" title="结构体对齐原则的直接链接">​</a></h2><p>对齐原则：</p><ol><li>第一个成员在结构体变量偏移处为0的地址处</li><li>其他成员要对齐到某个数字(对齐数)的整数倍的地址处。对齐数=编译器默认的一个对齐数与该成员大小的较小值。每个特定平台上的编译器都有自己的默认"对齐系数"，32位系统对齐系数是4，64位系统对齐系数是8。</li><li>结构体总大小为最大对齐数的整数倍</li><li>如果嵌套了结构体的情况，嵌套的结构体对齐到自己的最大对齐数的整数倍处，结构体整体就是所有最大对齐数的整数倍。</li></ol><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> T1 </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i16  </span><span class="token builtin">int16</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 2 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 1 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> T2 </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i8  </span><span class="token builtin">int8</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 1 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i64 </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 8 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i32 </span><span class="token builtin">int32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> T3 </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i8  </span><span class="token builtin">int8</span><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 1 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i32 </span><span class="token builtin">int32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    i64 </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 8 byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">runtime</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">GOARCH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// amd64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t1 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> T1</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 4 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t2 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> T2</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 24 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    t3 </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> T3</span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Sizeof</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">t3</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 16 bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以T1 结构
i16并没有直接放在bool的后面，而是在bool中填充了一个空白后，放到了偏移量为2的位置上。如果i16从偏移量为1的位置开始占用2个字节，根据对齐原则2：构体变量中成员的偏移量必须是成员大小的整数倍，套用公式 1 % 2 = 1，就不满足对齐的要求，所以i16从偏移量为2的位置开始</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[懂秒杀系统]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/ms</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/ms"/>
        <updated>2023-03-06T15:17:31.000Z</updated>
        <summary type="html"><![CDATA[懂秒杀系统]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="知识点详解">知识点详解<a href="#知识点详解" class="hash-link" aria-label="知识点详解的直接链接" title="知识点详解的直接链接">​</a></h2>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[记 IM 即时通信开发]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/im</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/im"/>
        <updated>2023-03-06T14:10:16.000Z</updated>
        <summary type="html"><![CDATA[IM 即时通信开发]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="基础知识">基础知识<a href="#基础知识" class="hash-link" aria-label="基础知识的直接链接" title="基础知识的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="什么是网络">什么是网络<a href="#什么是网络" class="hash-link" aria-label="什么是网络的直接链接" title="什么是网络的直接链接">​</a></h3><ul><li>在计算机领域中，网络是信息传输，接收，共享的虚拟平台</li><li>通过把各个点，面，体的信息联系到一起，从而实现这些资源的共享</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="什么是网络编程">什么是网络编程<a href="#什么是网络编程" class="hash-link" aria-label="什么是网络编程的直接链接" title="什么是网络编程的直接链接">​</a></h3><ul><li>网络编程从大的方面说就是对信息的发送到接收</li><li>通过操作相对应api调度计算机硬件资源，并利用传输管道进行数据交换的过程</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="7-层网络模型-osi">7 层网络模型 OSI<a href="#7-层网络模型-osi" class="hash-link" aria-label="7 层网络模型 OSI的直接链接" title="7 层网络模型 OSI的直接链接">​</a></h3><ul><li>基础层： 物理层（physical）,数据链路层(datalink),网络层(network)</li><li>传输层(Tramsport) :TCP-UDP 协议层，Socket</li><li>高级层： 会话层（session）,表示层(presentation),应用层(Application)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="socket的作用与组成">Socket的作用与组成<a href="#socket的作用与组成" class="hash-link" aria-label="Socket的作用与组成的直接链接" title="Socket的作用与组成的直接链接">​</a></h3><ul><li>在网络传输中用于唯一标示两个端点之间的链接</li><li>端点: 包括（ip+port)</li><li>4个要素</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="报文段">报文段<a href="#报文段" class="hash-link" aria-label="报文段的直接链接" title="报文段的直接链接">​</a></h3><ul><li>报文段是指TCP/IP 协议网络传输过程中，起到路由导航的作用</li><li>用以查询各个网络路由网段，IP地址，交换协议等IP数据包</li><li>报文段充当整个TCP/IP协议数据包的导航路由功能</li><li>报文在传输过程中不断地封装成分组，包，帧来传输</li><li>封装方式就是添加一些控制信息组成的首部，即报文头</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="传输协议">传输协议<a href="#传输协议" class="hash-link" aria-label="传输协议的直接链接" title="传输协议的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mac地址">Mac地址<a href="#mac地址" class="hash-link" aria-label="Mac地址的直接链接" title="Mac地址的直接链接">​</a></h3><ul><li>Media Access Control</li><li>媒体访问控制，或物理地址 硬件地址</li><li>用来定义网络设备的位置</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="端口">端口<a href="#端口" class="hash-link" aria-label="端口的直接链接" title="端口的直接链接">​</a></h3><ul><li>端口相当于窗口 0-1023 号端口  以及1024-49151 号端口都是特殊端口</li><li>49142-65525动态端口</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="udp">UDP<a href="#udp" class="hash-link" aria-label="UDP的直接链接" title="UDP的直接链接">​</a></h3><ul><li>User Datagram Protocol</li><li>用户数据协议，又称用户数据报文协议</li><li>是一个简单的面向数据报的传输层协议，正式规范为RFC 768</li><li>用户数据协议，非连接协议</li><li>一旦把应用程序发给网络层的数据发送出去，就不保留数据备份</li><li>udp 在IP数据的报的头部仅仅加入了复用和数据校验</li><li>发送端生产数据，接收端从网络中抓取数据</li><li>结构简单，无校验，速度快，容易丢包，可广播</li><li>udp 包最大长度 65535 2^16-1 自身协议占用 32+32 = 64 位=8字节  65535-8=65527</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="udp-核心api">UDP 核心API<a href="#udp-核心api" class="hash-link" aria-label="UDP 核心API的直接链接" title="UDP 核心API的直接链接">​</a></h3>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="im" term="im"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何写好一份技术文档]]></title>
        <id>https://ahkevinxy.github.io/blog/2022/11/28/index</id>
        <link href="https://ahkevinxy.github.io/blog/2022/11/28/index"/>
        <updated>2023-03-06T13:46:13.000Z</updated>
        <summary type="html"><![CDATA[如何写好一份技术文档]]></summary>
        <content type="html"><![CDATA[<blockquote><p>参考 <a href="https://juejin.cn/post/6854573217747894279" target="_blank" rel="noopener noreferrer">飞享-即时聊天系统技术文档</a></p></blockquote><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>信息</div><div class="admonitionContent_S0QG"><p>三部曲:</p><ol><li>概述</li><li>系统架构</li><li>系统流程图</li><li>系统关键介绍(登录设计,......)</li><li>系统接口文档</li></ol></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="文档" term="文档"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[后端资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/backend</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/backend"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/front</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/front"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Java 资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/java</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/java"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[php 资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/php</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/php"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[react 资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/react</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/react"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[vue 资源]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/vue</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/vue"/>
        <updated>2023-03-06T06:00:09.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 源码学习 --- chan]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/go_chan</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/go_chan"/>
        <updated>2023-03-06T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<h1>hchan</h1><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> hchan </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> qcount   </span><span class="token builtin">uint</span><span class="token plain">           </span><span class="token comment" style="color:#999988;font-style:italic">// 通道中的总数据 total data in the queue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> dataqsiz </span><span class="token builtin">uint</span><span class="token plain">           </span><span class="token comment" style="color:#999988;font-style:italic">// 循环队列的大小 size of the circular queue</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> buf      unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pointer </span><span class="token comment" style="color:#999988;font-style:italic">// 指向dataqsiz元素数组  points to an array of dataqsiz elements</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> elemsize </span><span class="token builtin">uint16</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 大小</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> closed   </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 是否关闭</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> elemtype </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">_type </span><span class="token comment" style="color:#999988;font-style:italic">// 节点类型 element type</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sendx    </span><span class="token builtin">uint</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// 发送数据 send index</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> recvx    </span><span class="token builtin">uint</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// 接受 receive index</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> recvq    waitq  </span><span class="token comment" style="color:#999988;font-style:italic">// 等待接受 list of recv waiters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sendq    waitq  </span><span class="token comment" style="color:#999988;font-style:italic">//  等待发送 list of send waiters</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// lock protects all fields in hchan, as well as several</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// fields in sudogs blocked on this channel.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Do not change another G's status while holding this lock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// (in particular, do not ready a G), as this can deadlock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// with stack shrinking.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lock mutex </span><span class="token comment" style="color:#999988;font-style:italic">// 锁</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> waitq </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> first </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// 第一个</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> last  </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// 最后一个</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> sudog </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// The following fields are protected by the hchan.lock of the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// channel this sudog is blocking on. shrinkstack depends on</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// this for sudogs involved in channel ops.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> g </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">g</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> next </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// 下一个</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> prev </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// 上一个</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> elem unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pointer </span><span class="token comment" style="color:#999988;font-style:italic">// 数据元素(可能指向堆栈)  data element (may point to stack)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// The following fields are never accessed concurrently.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// For channels, waitlink is only accessed by g.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// For semaphores, all fields (including the ones above)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// are only accessed when holding a semaRoot lock.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> acquiretime </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> releasetime </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ticket      </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// isSelect indicates g is participating in a select, so</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// g.selectDone must be CAS'd to win the wake-up race.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> isSelect </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// success indicates whether communication over channel c</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// succeeded. It is true if the goroutine was awoken because a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// value was delivered over channel c, and false if awoken</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// because c was closed.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> success </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//是否成功</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> parent   </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// semaRoot二叉树  semaRoot binary tree</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waitlink </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// g.等待列表或semaRoot  g.waiting list or semaRoot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waittail </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog </span><span class="token comment" style="color:#999988;font-style:italic">// 等待 semaRoot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> c        </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">hchan </span><span class="token comment" style="color:#999988;font-style:italic">// 通道 channel</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="源码" term="源码"/>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[源码 上解读 GMP模型]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/06/go_gmp</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/06/go_gmp"/>
        <updated>2023-03-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[path : src/runtime/runtime1.go]]></summary>
        <content type="html"><![CDATA[<blockquote><p>path : src/runtime/runtime1.go</p></blockquote><blockquote><p>go  version 1.16.1</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="g">G<a href="#g" class="hash-link" aria-label="G的直接链接" title="G的直接链接">​</a></h2><div class="language-Go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-Go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">type g struct {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // Stack (栈)parameters(参数).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // stack describes the actual stack memory: [stack.lo, stack.hi).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // stackguard0 is the stack pointer compared in the Go stack growth prologue.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//stackguard0是在Go堆栈增长序言中比较的堆栈指针</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // It is stack.lo+StackGuard normally, but can be StackPreempt to trigger a preemption.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//lo+StackGuard正常，但可以是StackPreempt触发抢占</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // stackguard1 is the stack pointer compared in the C stack growth prologue.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//stackguard1是在C堆栈增长序言中比较的堆栈指针</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // It is stack.lo+StackGuard on g0 and gsignal stacks.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // It is ~0 on other goroutine stacks, to trigger a call to morestackc (and crash).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stack       stack   // offset known to runtime/cgo 已知的偏移量为runtime/cgo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stackguard0 uintptr // offset known to liblink 已知liblink的偏移量</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stackguard1 uintptr // offset known to liblink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> _panic       *_panic // innermost panic - offset known to liblink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> _defer       *_defer // innermost defer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> m            *m      // current m; offset known to arm liblink</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sched        gobuf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> syscallsp    uintptr        // if status==Gsyscall, syscallsp = sched.sp to use during gc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> syscallpc    uintptr        // if status==Gsyscall, syscallpc = sched.pc to use during gc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stktopsp     uintptr        // expected sp at top of stack, to check in traceback</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> param        unsafe.Pointer // passed parameter on wakeup</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> atomicstatus uint32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> stackLock    uint32 // sigprof/scang lock; TODO: fold in to atomicstatus</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> goid         int64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> schedlink    guintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waitsince    int64      // approx time when the g become blocked</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waitreason   waitReason // if status==Gwaiting</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preempt       bool // preemption signal, duplicates stackguard0 = stackpreempt</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preemptStop   bool // transition to _Gpreempted on preemption; otherwise, just deschedule</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preemptShrink bool // shrink stack at synchronous safe point</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // asyncSafePoint is set if g is stopped at an asynchronous</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // safe point. This means there are frames on the stack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // without precise pointer information.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> asyncSafePoint bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> paniconfault bool // panic (instead of crash) on unexpected fault address</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcscandone   bool // g has scanned stack; protected by _Gscan bit in status</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> throwsplit   bool // must not split stack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // activeStackChans indicates that there are unlocked channels</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // pointing into this goroutine's stack. If true, stack</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // copying needs to acquire channel locks to protect these</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // areas of the stack.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> activeStackChans bool</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // parkingOnChan indicates that the goroutine is about to</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // park on a chansend or chanrecv. Used to signal an unsafe point</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // for stack shrinking. It's a boolean value, but is updated atomically.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> parkingOnChan uint8</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> raceignore     int8     // ignore race detection events</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sysblocktraced bool     // StartTrace has emitted EvGoInSyscall about this goroutine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sysexitticks   int64    // cputicks when syscall has returned (for tracing)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> traceseq       uint64   // trace event sequencer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> tracelastp     puintptr // last P emitted an event for this goroutine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lockedm        muintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sig            uint32</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> writebuf       []byte</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sigcode0       uintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sigcode1       uintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sigpc          uintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gopc           uintptr         // pc of go statement that created this goroutine</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ancestors      *[]ancestorInfo // ancestor information goroutine(s) that created this goroutine (only used if debug.tracebackancestors)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> startpc        uintptr         // pc of goroutine function</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> racectx        uintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waiting        *sudog         // sudog structures this g is waiting on (that have a valid elem ptr); in lock order</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cgoCtxt        []uintptr      // cgo traceback context</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> labels         unsafe.Pointer // profiler labels</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timer          *timer         // cached timer for time.Sleep</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> selectDone     uint32         // are we participating in a select and did someone win the race?</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // Per-G GC state</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // gcAssistBytes is this G's GC assist credit in terms of</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // bytes allocated. If this is positive, then the G has credit</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // to allocate gcAssistBytes bytes without assisting. If this</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // is negative, then the G must correct this by performing</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // scan work. We track this in bytes to make it fast to update</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // and check for debt in the malloc hot path. The assist ratio</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> // determines how this corresponds to scan work debt.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcAssistBytes int64</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="m">M<a href="#m" class="hash-link" aria-label="M的直接链接" title="M的直接链接">​</a></h2><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> m </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> g0      </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">g     </span><span class="token comment" style="color:#999988;font-style:italic">// goroutine with scheduling stack</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> morebuf gobuf  </span><span class="token comment" style="color:#999988;font-style:italic">// gobuf arg to morestack</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> divmod  </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// div/mod denominator for arm - known to liblink</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Fields not known to debuggers.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> procid        </span><span class="token builtin">uint64</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// for debuggers, but offset not hard-coded</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gsignal       </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">g           </span><span class="token comment" style="color:#999988;font-style:italic">// signal-handling g</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> goSigStack    gsignalStack </span><span class="token comment" style="color:#999988;font-style:italic">// Go-allocated signal handling stack</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sigmask       sigset       </span><span class="token comment" style="color:#999988;font-style:italic">// storage for saved signal mask</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> tls           </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">6</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">uintptr</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// thread-local storage (for x86 extern register)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mstartfn      </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> curg          </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">g       </span><span class="token comment" style="color:#999988;font-style:italic">// current running goroutine</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> caughtsig     guintptr </span><span class="token comment" style="color:#999988;font-style:italic">// goroutine running during fatal signal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> p             puintptr </span><span class="token comment" style="color:#999988;font-style:italic">// attached p for executing go code (nil if not executing go code)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> nextp         puintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> oldp          puintptr </span><span class="token comment" style="color:#999988;font-style:italic">// the p that was attached before executing a syscall</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> id            </span><span class="token builtin">int64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mallocing     </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> throwing      </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preemptoff    </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// if != "", keep curg running on this m</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> locks         </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> dying         </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> profilehz     </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> spinning      </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// m is out of work and is actively looking for work</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> blocked       </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// m is blocked on a note</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> newSigstack   </span><span class="token builtin">bool</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// minit on C thread called sigaltstack</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> printlock     </span><span class="token builtin">int8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> incgo         </span><span class="token builtin">bool</span><span class="token plain">   </span><span class="token comment" style="color:#999988;font-style:italic">// m is executing a cgo call</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> freeWait      </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// if == 0, safe to free g0 and delete m (atomic)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> fastrand      </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> needextram    </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> traceback     </span><span class="token builtin">uint8</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ncgocall      </span><span class="token builtin">uint64</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// number of cgo calls in total</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> ncgo          </span><span class="token builtin">int32</span><span class="token plain">       </span><span class="token comment" style="color:#999988;font-style:italic">// number of cgo calls currently in progress</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cgoCallersUse </span><span class="token builtin">uint32</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// if non-zero, cgoCallers in use temporarily</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cgoCallers    </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">cgoCallers </span><span class="token comment" style="color:#999988;font-style:italic">// cgo traceback if crashing in cgo call</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> doesPark      </span><span class="token builtin">bool</span><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// non-P running threads: sysmon and newmHandoff never use .park</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> park          note</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> alllink       </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">m </span><span class="token comment" style="color:#999988;font-style:italic">// on allm</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> schedlink     muintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lockedg       guintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> createstack   </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">uintptr</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// stack that created this thread.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lockedExt     </span><span class="token builtin">uint32</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// tracking for external LockOSThread</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> lockedInt     </span><span class="token builtin">uint32</span><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// tracking for internal lockOSThread</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> nextwaitm     muintptr    </span><span class="token comment" style="color:#999988;font-style:italic">// next m waiting for lock</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waitunlockf   </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">g</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pointer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waitlock      unsafe</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Pointer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waittraceev   </span><span class="token builtin">byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> waittraceskip </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> startingtrace </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> syscalltick   </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> freelink      </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">m </span><span class="token comment" style="color:#999988;font-style:italic">// on sched.freem</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// mFixup is used to synchronize OS related m state (credentials etc)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// use mutex to access.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mFixup </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  lock mutex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fn   </span><span class="token keyword" style="color:#00009f">func</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">bool</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// these are here because they are too large to be on the stack</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// of low-level NOSPLIT functions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> libcall   libcall</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> libcallpc </span><span class="token builtin">uintptr</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// for cpu profiler</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> libcallsp </span><span class="token builtin">uintptr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> libcallg  guintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> syscall   libcall </span><span class="token comment" style="color:#999988;font-style:italic">// stores syscall parameters on windows</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> vdsoSP </span><span class="token builtin">uintptr</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// SP for traceback while in VDSO call (0 if not in call)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> vdsoPC </span><span class="token builtin">uintptr</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// PC for traceback while in VDSO call</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// preemptGen counts the number of completed preemption</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// signals. This is used to detect when a preemption is</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// requested, but fails. Accessed atomically.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preemptGen </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Whether this is a pending preemption signal on this M.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Accessed atomically.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> signalPending </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> dlogPerM</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mOS</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Up to 10 locks held by this m, maintained by the lock ranking code.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> locksHeldLen </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> locksHeld    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">heldLockInfo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="p">P<a href="#p" class="hash-link" aria-label="P的直接链接" title="P的直接链接">​</a></h2><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> p </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> id          </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> status      </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// one of pidle/prunning/...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> link        puintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> schedtick   </span><span class="token builtin">uint32</span><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// incremented on every scheduler call</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> syscalltick </span><span class="token builtin">uint32</span><span class="token plain">     </span><span class="token comment" style="color:#999988;font-style:italic">// incremented on every system call</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sysmontick  sysmontick </span><span class="token comment" style="color:#999988;font-style:italic">// last tick observed by sysmon</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> m           muintptr   </span><span class="token comment" style="color:#999988;font-style:italic">// back-link to associated m (nil if idle)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mcache      </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">mcache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pcache      pageCache</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> raceprocctx </span><span class="token builtin">uintptr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> deferpool    </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">_defer </span><span class="token comment" style="color:#999988;font-style:italic">// pool of available defer structs of different sizes (see panic.go)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> deferpoolbuf </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">_defer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Cache of goroutine ids, amortizes accesses to runtime·sched.goidgen.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> goidcache    </span><span class="token builtin">uint64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> goidcacheend </span><span class="token builtin">uint64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Queue of runnable goroutines. Accessed without lock.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> runqhead </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> runqtail </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> runq     </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">256</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain">guintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// runnext, if non-nil, is a runnable G that was ready'd by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// the current G and should be run next instead of what's in</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// runq if there's time remaining in the running G's time</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// slice. It will inherit the time left in the current time</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// slice. If a set of goroutines is locked in a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// communicate-and-wait pattern, this schedules that set as a</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// unit and eliminates the (potentially large) scheduling</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// latency that otherwise arises from adding the ready'd</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// goroutines to the end of the run queue.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> runnext guintptr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Available G's (status == Gdead)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gFree </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  gList</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  n </span><span class="token builtin">int32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sudogcache </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> sudogbuf   </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">128</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">sudog</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Cache of mspan objects from the heap.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> mspancache </span><span class="token keyword" style="color:#00009f">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// We need an explicit length here because this field is used</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// in allocation codepaths where write barriers are not allowed,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// and eliminating the write barrier/keeping it eliminated from</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// slice updates is tricky, moreso than just managing the length</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// ourselves.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token builtin">len</span><span class="token plain"> </span><span class="token builtin">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  buf </span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">128</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">mspan</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> tracebuf traceBufPtr</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// traceSweep indicates the sweep events should be traced.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This is used to defer the sweep start event until a span</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// has actually been swept.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> traceSweep </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// traceSwept and traceReclaimed track the number of bytes</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// swept and reclaimed by sweeping in the current sweep loop.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> traceSwept</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> traceReclaimed </span><span class="token builtin">uintptr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> palloc persistentAlloc </span><span class="token comment" style="color:#999988;font-style:italic">// per-P to avoid mutex</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Alignment for atomic fields below</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// The when field of the first entry on the timer heap.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This is updated using atomic functions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This is 0 if the timer heap is empty.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timer0When </span><span class="token builtin">uint64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// The earliest known nextwhen field of a timer with</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// timerModifiedEarlier status. Because the timer may have been</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// modified again, there need not be any timer with this value.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This is updated using atomic functions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This is 0 if the value is unknown.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timerModifiedEarliest </span><span class="token builtin">uint64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Per-P GC state</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcAssistTime         </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Nanoseconds in assistAlloc</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcFractionalMarkTime </span><span class="token builtin">int64</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Nanoseconds in fractional mark worker (atomic)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// gcMarkWorkerMode is the mode for the next mark worker to run in.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// That is, this is used to communicate with the worker goroutine</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// selected for immediate execution by</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// gcController.findRunnableGCWorker. When scheduling other goroutines,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// this field must be set to gcMarkWorkerNotWorker.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcMarkWorkerMode gcMarkWorkerMode</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// gcMarkWorkerStartTime is the nanotime() at which the most recent</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// mark worker started.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcMarkWorkerStartTime </span><span class="token builtin">int64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// gcw is this P's GC work buffer cache. The work buffer is</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// filled by write barriers, drained by mutator assists, and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// disposed on certain GC state transitions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> gcw gcWork</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// wbBuf is this P's GC write barrier buffer.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// TODO: Consider caching this in the running G.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> wbBuf wbBuf</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> runSafePointFn </span><span class="token builtin">uint32</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// if 1, run sched.safePointFn at next safe point</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// statsSeq is a counter indicating whether this P is currently</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// writing any stats. Its value is even when not, odd when it is.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> statsSeq </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Lock for timers. We normally access the timers while running</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// on this P, but the scheduler can also do it from a different P.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timersLock mutex</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Actions to take at some time. This is used to implement the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// standard library's time package.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Must hold timersLock to access.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timers </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">timer</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Number of timers in P's heap.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Modified using atomic instructions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> numTimers </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Number of timerModifiedEarlier timers on P's heap.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// This should only be modified while holding timersLock,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// or while the timer status is in a transient state</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// such as timerModifying.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> adjustTimers </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Number of timerDeleted timers in P's heap.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Modified using atomic instructions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> deletedTimers </span><span class="token builtin">uint32</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Race context used while executing timer functions.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> timerRaceCtx </span><span class="token builtin">uintptr</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// preempt is set to indicate that this P should be enter the</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// scheduler ASAP (regardless of what G is running on it).</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> preempt </span><span class="token builtin">bool</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> pad cpu</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">CacheLinePad</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="go-的模型调度">Go 的模型调度<a href="#go-的模型调度" class="hash-link" aria-label="Go 的模型调度的直接链接" title="Go 的模型调度的直接链接">​</a></h2><p>M(thread) 内核线程   , P(processor) 进程 ,G (goroutine) 协程</p><ul><li>G :  Go 运行时对goroutine的描述,G中存放并发执行的 <code>代码入口地址</code>,<code>上下文</code>,<code>运行环境</code> (关联的P和M),运行栈等执行相关的信息,G的新建,休眠,恢复,停止都受到Go运行时的管理</li></ul><p>GO运行时的监控线程会监控G的调度，G不会长久地阻塞系统线程，运行时的调度器会自动切换到其他G上运行。G新建或恢复时会添加到运行队列，等待M取出并运行。</p><ul><li><p>M : OS内核线程,是操作系统层面调度和执行的实体.M仅负责执行,M不停的唤醒或创建,然后执行</p></li><li><p>P : 代表M和P所需要的资源,是对资源的一种抽象管理,P 不是一段代码实体,而是一个管理的数据结构,P主要是降低 M对G的复杂性,增加一个间接的控制层数据结构,<code>P控制Go的并行度</code>,它不是实体</p></li></ul><p>P持有G的队列，P可以隔离调度，解除P和M的绑定就解除了M对一串G的调用。</p><p>G并不是执行体，而是存放并发执行体的元信息，包括并发执行的入口函数、堆栈、上下文等信息。G由于保存的是元信息，为了减少对象的分配和回收，G对象是可以复用，只需要将相关元信息初始化为新值即可。</p><p>M仅负责执行，M启动时进入运行时的管理代码，这段管理代码必须拿到P后，才能执行调度。</p><p>P的数目默认是CPU核心的数量。M和P的数目差不多，但运行时会根据当前的状态动态地创建M，M有一个最大值上限：10000；G与P是M:N的关系，M可以成千上万，远远大于N.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="work-stealing算法的基本原理">Work Stealing算法的基本原理<a href="#work-stealing算法的基本原理" class="hash-link" aria-label="Work Stealing算法的基本原理的直接链接" title="Work Stealing算法的基本原理的直接链接">​</a></h2><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">M和P构成一个运行时环境，每个P有一个本地的可调度的G队列，队列里面的G会被M依次调度执行，如果本地队列空了，则去全局队列偷取一部分G，如果全局队列也是空的，则去其他的P中偷取一部分G。</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="什么时候创建mpg">什么时候创建M、P、G<a href="#什么时候创建mpg" class="hash-link" aria-label="什么时候创建M、P、G的直接链接" title="什么时候创建M、P、G的直接链接">​</a></h2><p>在程序启动过程中会初始化空闲P列表，P是这个时候创建的，同时第一个G也是在初始化过程中被创建的。</p><p>每个并发调用都会初始化一个新的G任务，如何唤醒M执行任务。这个唤醒不是特定唤醒某个线程去工作，而是先尝试获取当前线程M，如果无法获取，则从全局调度的空闲M列表中获取可用的M，如果没有可用的M，则新建M，然后绑定P和GY运行。M和P不是一一对应的，而是按需分配的</p><p>M线程有管理调度和切换堆栈的逻辑，但是M必须拿到P后才能运行，可用看到M是自驱动的，单需要P的配合。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="goroutine经历的过程">goroutine经历的过程<a href="#goroutine经历的过程" class="hash-link" aria-label="goroutine经历的过程的直接链接" title="goroutine经历的过程的直接链接">​</a></h2><ol><li>通过go func()来创建一个 goroutine</li><li>有两个存储的G队列,一个是局部调度器P的本地队列,一个是全局G队列,新创建的G会先保存在P的本地队列中,如果P的本地队列已经满了就会保存在全局队列中</li><li>G只能运行在M中,一个M必须有一个P,M与P是1:1的关系. M会对P的本地队列弹出一个可执行状态的G来执行,如果P的本地队列为空,就会向其它的MP组合取一个可执行的G来执行</li><li>一个M 调度执行的过程是一个循环机制</li><li>当 M执行某一个G 时候 如果发生了 syscall或其余阻塞操作,M会阻塞,如果</li></ol>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="源码" term="源码"/>
        <category label="Go" term="Go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[高并发下如何保证接口的幂等性]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/05/idempotent</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/05/idempotent"/>
        <updated>2023-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[高并发幂等解决方案]]></summary>
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&amp;mid=2247490307&amp;idx=1&amp;sn=b9eeb427c33cb171da6c3f11243a88f4&amp;chksm=c0ebc3ebf79c4afd0d5a1851a975534b672d86c531d28c5933013140173e794f5f53e78a6765&amp;token=751314179&amp;lang=zh_CN&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">from</a></p><p><code>接口幂等性</code>问题，对于开发人员来说，是一个跟语言无关的公共问题。本文分享了一些解决这类问题非常实用的办法，绝大部分内容我在项目中实践过的，给有需要的小伙伴一个参考</p><p>场景</p><ol><li>有时我们在填写某些form表单时，保存按钮不小心快速点了两次，表中竟然产生了两条重复的数据，只是id不一样</li><li>我们在项目中为了解决<code>接口超时</code>问题，通常会引入了重试机制。第一次请求<code>接口超时</code>了，请求方没能及时获取返回结果（此时有可能已经成功了），为了避免返回错误的结果（这种情况不可能直接返回失败吧？），于是会对该请求重试几次，这样也会产生重复的数据。</li><li><code>mq</code>消费者在读取消息时，有时候会读取到重复消息，如果处理不好，也会产生重复的数据。</li></ol><p><code>接口幂等性</code>是指用户对于同一操作发起的一次请求或者多次请求的结果是一致的，不会因为多次点击而产生了副作用。</p><ul><li>insert操作，这种情况下多次请求，可能会产生重复数据</li><li>update操作，如果只是单纯的更新数据，比如：update user set status=1 where id=1，是没有问题的。如果还有计算，比如：update user set status=status+1 where id=1，这种情况下多次请求，可能会导致数据错误</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="insert前先select">insert前先select<a href="#insert前先select" class="hash-link" aria-label="insert前先select的直接链接" title="insert前先select的直接链接">​</a></h2><p>通常情况下，在保存数据的接口中，我们为了防止产生重复数据，一般会在insert前，先根据name或code字段select一下数据。如果该数据已存在，则执行update操作，如果不存在，才执行  insert操作。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加悲观锁">加悲观锁<a href="#加悲观锁" class="hash-link" aria-label="加悲观锁的直接链接" title="加悲观锁的直接链接">​</a></h2><p>在支付场景中，用户A的账号余额有150元，想转出100元，正常情况下用户A的余额只剩50元。一般情况下，sql是这样的：</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> amount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> amount</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">100</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果出现多次相同的请求，可能会导致用户A的余额变成负数。这种情况，用户A来可能要哭了。于此同时，系统开发人员可能也要哭了，因为这是很严重的系统bug。</p><p>为了解决这个问题，可以加悲观锁，将用户A的那行数据锁住，在同一时刻只允许一个请求获得锁，更新数据，其他的请求则等待。</p><p>通常情况下通过如下sql锁住单行数据：</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">update</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol><li>多个请求同时根据id查询用户信息</li><li>判断余额是否不足100，如果余额不足，则直接返回余额不足。</li><li>如果余额充足，则通过for update再次查询用户信息，并且尝试获取锁</li><li>只有第一个请求能获取到行锁，其余没有获取锁的请求，则等待下一次获取锁的机会</li><li>第一个请求获取到锁之后，判断余额是否不足100，如果余额足够，则进行update操作。</li><li>如果余额不足，说明是重复请求，则直接返回成功。</li></ol><blockquote><p>需要特别注意的是：如果使用的是mysql数据库，存储引擎必须用innodb，因为它才支持事务。此外，这里id字段一定要是主键或者唯一索引，不然会锁住整张表。</p></blockquote><p>悲观锁需要在同一个事务操作过程中锁住一行数据，如果事务耗时比较长，会造成大量的请求等待，影响接口性能。</p><p>每次请求接口很难保证都有相同的返回值，所以不适合幂等性设计场景，但是在防重场景中是可以的使用的。</p><p>在这里顺便说一下，<code>防重设计</code> 和 <code>幂等设计</code>，其实是有区别的。防重设计主要为了避免产生重复数据，对接口返回没有太多要求。而幂等设计除了避免产生重复数据之外，还要求每次请求都返回一样的结果。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加乐观锁">加乐观锁<a href="#加乐观锁" class="hash-link" aria-label="加乐观锁的直接链接" title="加乐观锁的直接链接">​</a></h2><p>既然悲观锁有性能问题，为了提升接口性能，我们可以使用乐观锁。需要在表中增加一个timestamp或者version字段，这里以version字段为例。</p><p>在更新数据之前先查询一下数据：</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">select</span><span class="token plain"> id</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">amount</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">version </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>如果数据存在，假设查到的version等于1，再使用id和version字段作为查询条件更新数据：</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> amount</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">amount</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">version</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">version</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> version</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>更新数据的同时version+1，然后判断本次update操作的影响行数，如果大于0，则说明本次更新成功，如果等于0，则说明本次更新没有让数据变更。</p><p>由于第一次请求version等于1是可以成功的，操作成功后version变成2了。这时如果并发的请求过来，再执行相同的sql：</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">user</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> amount</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">amount</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">100</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain">version</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">version</span><span class="token operator" style="color:#393A34">+</span><span class="token number" style="color:#36acaa">1</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> version</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>该update操作不会真正更新数据，最终sql的执行结果影响行数是0，因为version已经变成2了，where中的version=1肯定无法满足条件。但为了保证接口幂等性，接口可以直接返回成功，因为version值已经修改了，那么前面必定已经成功过一次，后面都是重复的请求。</p><ol><li>先根据id查询用户信息，包含version字段</li><li>根据id和version字段值作为where条件的参数，更新用户信息，同时version+1</li><li>判断操作影响行数，如果影响1行，则说明是一次请求，可以做其他数据操作</li><li>如果影响0行，说明是重复请求，则直接返回成功</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加唯一索引">加唯一索引<a href="#加唯一索引" class="hash-link" aria-label="加唯一索引的直接链接" title="加唯一索引的直接链接">​</a></h2><p>绝大数情况下，为了防止重复数据的产生，我们都会在表中加唯一索引，这是一个非常简单，并且有效的方案。</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">alter</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">table</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">order</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">add</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">UNIQUE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">KEY</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">un_code</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">code</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>加了唯一索引之后，第一次请求数据可以插入成功。但后面的相同请求，插入数据时会报<code>Duplicate entry '002' for key 'order.un_code</code>异常，表示唯一索引有冲突。</p><p>虽说抛异常对数据来说没有影响，不会造成错误数据。但是为了保证接口幂等性，我们需要对该异常进行捕获，然后返回成功。</p><ol><li>用户通过浏览器发起请求，服务端收集数据。</li><li>将该数据插入mysql</li><li>判断是否执行成功，如果成功，则操作其他数据（可能还有其他的业务逻辑）。</li><li>如果执行失败，捕获唯一索引冲突异常，直接返回成功。</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="建防重表">建防重表<a href="#建防重表" class="hash-link" aria-label="建防重表的直接链接" title="建防重表的直接链接">​</a></h2><p>有时候表中并非所有的场景都不允许产生重复的数据，只有某些特定场景才不允许。这时候，直接在表中加唯一索引，显然是不太合适的。
针对这种情况，我们可以通过<code>建防重表</code>来解决问题。</p><p>该表可以只包含两个字段：<code>id</code> 和 <code>唯一索引</code>，唯一索引可以是多个字段比如：name、code等组合起来的唯一标识，例如：susan_0001。</p><ol><li>用户通过浏览器发起请求，服务端收集数据。</li><li>将该数据插入mysql防重表</li><li>判断是否执行成功，如果成功，则做mysql其他的数据操作（可能还有其他的业务逻辑）。</li><li>如果执行失败，捕获唯一索引冲突异常，直接返回成功。</li></ol><blockquote><p>需要特别注意的是：防重表和业务表必须在同一个数据库中，并且操作要在同一个事务中。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="根据状态机">根据状态机<a href="#根据状态机" class="hash-link" aria-label="根据状态机的直接链接" title="根据状态机的直接链接">​</a></h2><p>很多时候业务表是有状态的，比如订单表中有：1-下单、2-已支付、3-完成、4-撤销等状态。如果这些状态的值是有规律的，按照业务节点正好是从小到大，我们就能通过它来保证接口的幂等性。</p><p>假如<code>id=123</code>的订单状态是已支付，现在要变成完成状态。</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">update</span><span class="token plain"> </span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token identifier">order</span><span class="token identifier punctuation" style="color:#393A34">`</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">set</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">status</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">where</span><span class="token plain"> id</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">123</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">and</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">status</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>第一次请求时，该订单的状态是<code>已支付</code>，值是<code>2</code>，所以该<code>update</code>语句可以正常更新数据，<code>sql</code>执行结果的影响行数是<code>1</code>，订单状态变成了<code>3</code>。</p><p>后面有相同的请求过来，再执行相同的sql时，由于订单状态变成了3，再用status=2作为条件，无法查询出需要更新的数据，所以最终sql执行结果的影响行数是0，即不会真正的更新数据。但为了保证接口幂等性，影响行数是0时，接口也可以直接返回成功。</p><ol><li>用户通过浏览器发起请求，服务端收集数据。</li><li>根据id和当前状态作为条件，更新成下一个状态</li><li>判断操作影响行数，如果影响了1行，说明当前操作成功，可以进行其他数据操作。</li><li>如果影响了0行，说明是重复请求，直接返回成功。</li></ol><blockquote><p>主要特别注意的是，该方案仅限于要更新的<code>表有状态字段</code>，并且刚好要更新<code>状态字段</code>的这种特殊情况，并非所有场景都适用。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加分布式锁">加分布式锁<a href="#加分布式锁" class="hash-link" aria-label="加分布式锁的直接链接" title="加分布式锁的直接链接">​</a></h2><p>其实前面介绍过的<code>加唯一索引</code>或者<code>加防重表</code>，本质是使用了<code>数据库</code>的<code>分布式锁</code>，也属于<code>分布式锁</code>的一种。但由于<code>数据库分布式锁</code>的性能不太好，我们可以改用：<code>redis</code>或<code>zookeeper</code>。</p><p>鉴于现在很多公司分布式配置中心改用<code>apollo</code>或<code>nacos</code>，已经很少用<code>zookeeper</code>了，我们以<code>redis</code>为例介绍分布式锁。</p><p>目前主要有三种方式实现redis的分布式锁：</p><ol><li>setNx命令</li><li>set命令</li><li>Redission框架</li></ol><p>具体步骤：</p><ol><li>用户通过浏览器发起请求，服务端会收集数据，并且生成订单号code作为唯一业务字段。</li><li>使用redis的set命令，将该订单code设置到redis中，同时设置超时时间。</li><li>判断是否设置成功，如果设置成功，说明是第一次请求，则进行数据操作。</li><li>如果设置失败，说明是重复请求，则直接返回成功。</li></ol><blockquote><p>需要特别注意的是：分布式锁一定要设置一个合理的过期时间，如果设置过短，无法有效的防止重复请求。如果设置过长，可能会浪费redis的存储空间，需要根据实际业务情况而定。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取token">获取token<a href="#获取token" class="hash-link" aria-label="获取token的直接链接" title="获取token的直接链接">​</a></h2><p>除了上述方案之外，还有最后一种使用token的方案。该方案跟之前的所有方案都有点不一样，需要两次请求才能完成一次业务操作。</p><ol><li>第一次请求获取token</li><li>第二次请求带着这个token，完成业务操作。</li></ol><p>具体步骤：</p><ol><li>用户访问页面时，浏览器自动发起获取token请求。</li><li>服务端生成token，保存到redis中，然后返回给浏览器。</li><li>用户通过浏览器发起请求时，携带该token。</li><li>在redis中查询该token是否存在，如果不存在，说明是第一次请求，做则后续的数据操作。</li><li>如果存在，说明是重复请求，则直接返回成功。</li><li>在redis中token会在过期时间之后，被自动删除。</li></ol><blockquote><p>需要特别注意的是：token必须是全局唯一的。</p></blockquote>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="高并发" term="高并发"/>
        <category label="幂等" term="幂等"/>
        <category label="解决方案" term="解决方案"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何优雅的接口]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/03/05/index</id>
        <link href="https://ahkevinxy.github.io/blog/2023/03/05/index"/>
        <updated>2023-03-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[from]]></summary>
        <content type="html"><![CDATA[<p><a href="https://juejin.cn/post/7176220436714225721" target="_blank" rel="noopener noreferrer">from</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="签名">签名<a href="#签名" class="hash-link" aria-label="签名的直接链接" title="签名的直接链接">​</a></h2><p>接口请求将 <code>请求参数</code> + <code>时间戳</code> + <code>秘钥</code> 拼接成一个字符串,通过<code>md5</code> 等hash 算法,生成一个sign</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加密">加密<a href="#加密" class="hash-link" aria-label="加密的直接链接" title="加密的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sm2-国密">sm2 国密<a href="#sm2-国密" class="hash-link" aria-label="sm2 国密的直接链接" title="sm2 国密的直接链接">​</a></h3><h3 class="anchor anchorWithStickyNavbar_LWe7" id="rsa-加密">rsa 加密<a href="#rsa-加密" class="hash-link" aria-label="rsa 加密的直接链接" title="rsa 加密的直接链接">​</a></h3><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ip-白名单">ip 白名单<a href="#ip-白名单" class="hash-link" aria-label="ip 白名单的直接链接" title="ip 白名单的直接链接">​</a></h2><p>为了 限制 api 接口的安全性,防止 接口签名或加密被破解,攻击者 可以在自己的服务器上请求改接口</p><p>只有 在白名单中的ip地址,才能成功请求api接口,否则返回无权限</p><p>这时候就需要增加web防火墙了，比如：ModSecurity (todo 研究)等。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="限流">限流<a href="#限流" class="hash-link" aria-label="限流的直接链接" title="限流的直接链接">​</a></h2><p>限流方法有三种：</p><ol><li>对请求ip做限流 : 策略制定</li><li>对请求接口做限流</li><li>对请求用户做限流</li></ol><p>我们在实际工作中，可以通过nginx，redis或者gateway实现限流的功能。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参数校验">参数校验<a href="#参数校验" class="hash-link" aria-label="参数校验的直接链接" title="参数校验的直接链接">​</a></h2><p>我们需要对API接口做参数校验，比如：校验必填字段是否为空，校验字段类型，校验字段长度，校验枚举值等等。</p><p>这样做可以拦截一些无效的请求。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="统一返回值">统一返回值<a href="#统一返回值" class="hash-link" aria-label="统一返回值的直接链接" title="统一返回值的直接链接">​</a></h2><p>我之前调用过别人的API接口，正常返回数据是一种json格式，比如：</p><p>签名错误返回的json格式：</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"code"</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1001</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"message"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"签名错误"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"data"</span><span class="token operator" style="color:#393A34">:</span><span class="token null keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>没有数据权限返回的json格式：</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"rt"</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">10</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"errorMgt"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"没有权限"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"result"</span><span class="token operator" style="color:#393A34">:</span><span class="token null keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="统一封装异常">统一封装异常<a href="#统一封装异常" class="hash-link" aria-label="统一封装异常的直接链接" title="统一封装异常的直接链接">​</a></h2><p>我们的API接口需要对异常进行统一处理。</p><p>不知道你有没有遇到过这种场景：有时候在API接口中，需要访问数据库，但表不存在，或者sql语句异常，就会直接把sql信息在API接口中直接返回。</p><p>返回值中包含了<code>异常堆栈信息</code>、<code>数据库信息</code>、<code>错误代码</code>和<code>行数</code>等信息。</p><p>因此非常有必要对API接口中的异常做统一处理，把异常转换成这样：</p><div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"code"</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">500</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"message"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"服务器内部错误"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property" style="color:#36acaa">"data"</span><span class="token operator" style="color:#393A34">:</span><span class="token null keyword" style="color:#00009f">null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们可以在gateway中对异常进行拦截，做统一封装，然后给第三方平台的是处理后没有敏感信息的错误信息。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="请求日志">请求日志<a href="#请求日志" class="hash-link" aria-label="请求日志的直接链接" title="请求日志的直接链接">​</a></h2><p>我们需要把API接口的请求url、请求参数、请求头、请求方式、响应数据和响应时间等，记录到日志文件中。</p><p>当然有些时候，请求日志不光是你们公司开发人员需要查看，第三方平台的用户也需要能查看接口的请求日志。</p><p>这时就需要把日志落地到数据库，比如：mongodb或者elastic search，然后做一个UI页面，给第三方平台的用户开通查看权限。这样他们就能在外网查看请求日志了，他们自己也能定位一部分问题。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="幂等设计">幂等设计<a href="#幂等设计" class="hash-link" aria-label="幂等设计的直接链接" title="幂等设计的直接链接">​</a></h2><p>第三方平台极有可能在极短的时间内，请求我们接口多次，比如：在1秒内请求两次。有可能是他们业务系统有bug，或者在做接口调用失败重试，因此我们的API接口需要做幂等设计。</p><p>也就是说要支持在极短的时间内，第三方平台用相同的参数请求API接口多次，第一次请求数据库会新增数据，但第二次请求以后就不会新增数据，但也会返回成功。</p><p>我们在日常工作中，可以通过在数据库中增加唯一索引，或者在redis保存requestId和请求参来保证接口幂等性。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="限制记录条数">限制记录条数<a href="#限制记录条数" class="hash-link" aria-label="限制记录条数的直接链接" title="限制记录条数的直接链接">​</a></h2><p>对于对我提供的批量接口，一定要<code>限制请求的记录条数</code>。</p><p>如果请求的数据太多，很容易造成API接口超时等问题，让API接口变得不稳定。</p><p>通常情况下，建议一次请求中的参数，最多支持传入500条记录。</p><p>如果用户传入多余500条记录，则接口直接给出提示。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="压测">压测<a href="#压测" class="hash-link" aria-label="压测的直接链接" title="压测的直接链接">​</a></h2><p>上线前我们务必要对API接口做一下压力测试，知道各个接口的<code>qps</code>情况。</p><p>我们在工作中可以用<code>jmeter</code>或者<code>apache benc</code> 或 <code>ab</code>对API接口做压力测试。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="异步处理">异步处理<a href="#异步处理" class="hash-link" aria-label="异步处理的直接链接" title="异步处理的直接链接">​</a></h2><p>一般的<code>API</code>接口的逻辑都是同步处理的，请求完之后立刻返回结果。</p><p>但有时候，我们的<code>API</code>接口里面的业务逻辑非常复杂，特别是有些批量接口，如果同步处理业务，耗时会非常长。</p><p>这种情况下，为了提升<code>API</code>接口的性能，我们可以改成异步处理。</p><p>在API接口中可以发送一条mq消息，然后直接返回成功。之后，有个专门的mq消费者去异步消费该消息，做业务逻辑处理。</p><p>直接异步处理的接口，第三方平台有两种方式获取到。</p><p>第一种方式是：我们回调第三方平台的接口，告知他们API接口的处理结果，很多支付接口就是这么玩的。</p><p>第二种方式是：第三方平台通过轮询调用我们另外一个查询状态的API接口，每隔一段时间查询一次状态，传入的参数是之前的那个API接口中的id集合。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="数据脱敏">数据脱敏<a href="#数据脱敏" class="hash-link" aria-label="数据脱敏的直接链接" title="数据脱敏的直接链接">​</a></h2><p>有时候第三方平台调用我们API接口时，获取的数据中有一部分是敏感数据，比如：用户手机号、银行卡号等等。</p><p>这样信息如果通过API接口直接保留到外网，是非常不安全的，很容易造成用户隐私数据泄露的问题。</p><p>这就需要对部分数据做数据脱敏了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="完整的接口文档">完整的接口文档<a href="#完整的接口文档" class="hash-link" aria-label="完整的接口文档的直接链接" title="完整的接口文档的直接链接">​</a></h2><p>说实话，一份完整的API接口文档，在双方做接口对接时，可以减少很多沟通成本，让对方少走很多弯路。</p><p>接口文档中需要包含如下信息：</p><ol><li>接口地址</li><li>请求方式，比如：post或get</li><li>请求参数和字段介绍</li><li>返回值和字段介绍</li><li>返回码和错误信息</li><li>加密或签名示例</li><li>完整的请求demo</li><li>额外的说明，比如：开通ip白名单</li></ol><p>接口文档中最好能够统一接口和字段名称的命名风格，比如都用<code>驼峰标识</code>命名。</p><p>统一字段的类型和长度，比如：id字段用Long类型，长度规定20。status字段用int类型，长度固定2等。</p><p>统一时间格式字段，比如：time用String类型，格式为：yyyy-MM-dd HH:mm:ss。</p><p>接口文档中写明AK/SK和域名，找某某单独提供等。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="接口" term="接口"/>
        <category label="加密" term="加密"/>
        <category label="规范" term="规范"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[umi4 配置 antd 默认中文模式]]></title>
        <id>https://ahkevinxy.github.io/blog/2023/02/24/index</id>
        <link href="https://ahkevinxy.github.io/blog/2023/02/24/index"/>
        <updated>2023-02-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[umi4 配置 antd 默认中文模式]]></summary>
        <content type="html"><![CDATA[<p>2023年02月24日17:32:20</p><div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> defineConfig </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"umi"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> zhCN </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'antd/locale/zh_CN'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">defineConfig</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  plugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'@umijs/plugins/dist/antd'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  antd</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    configProvider</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      locale</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> zhCN</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  routes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> component</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"index"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"/docs"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> component</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"docs"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  npmClient</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'yarn'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  base</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'/'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  hash</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="umi" term="umi"/>
        <category label="antd" term="antd"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[优秀博客]]></title>
        <id>https://ahkevinxy.github.io/blog/stars</id>
        <link href="https://ahkevinxy.github.io/blog/stars"/>
        <updated>2022-12-04T06:15:06.000Z</updated>
        <summary type="html"><![CDATA[CppGuide]]></summary>
        <content type="html"><![CDATA[<p><a href="https://github.com/balloonwj/CppGuide" target="_blank" rel="noopener noreferrer">CppGuide</a></p><p><a href="https://csdiy.wiki/" target="_blank" rel="noopener noreferrer">陈天奇,cs入门一条龙服务</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Go 与 Java  Rsa加密算法]]></title>
        <id>https://ahkevinxy.github.io/blog/2022/11/25/index</id>
        <link href="https://ahkevinxy.github.io/blog/2022/11/25/index"/>
        <updated>2022-11-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Go 与 Java  Rsa加密算法]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="https://visitor-badge.glitch.me/badge?page_id=ahKevinXy/ahKevinXy.github.io/blog/2022_11_25" alt="visitors" class="img_ev3q">
⚡️ 和 甲方对接系统 遇到 java Rsa 加密  go 无法解密的问题</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_S0QG"><ol><li>go 生成的公钥 不能直接给Java使用</li><li>java的 公钥 需要把  go 生成的头 <code>-----BEGIN RSA Public Key-----</code> 和 <code>-----END RSA Public Key-----</code> 删除 不能保存即可</li></ol></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="go--代码">go  代码<a href="#go--代码" class="hash-link" aria-label="go  代码的直接链接" title="go  代码的直接链接">​</a></h2><div class="language-go codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-go codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> rsa</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"crypto/rand"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"crypto/rsa"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"crypto/x509"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"encoding/pem"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"crypto"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"encoding/base64"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"encoding/pem"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"errors"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"os"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token string" style="color:#e3116c">"strings"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//RSA解密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Decrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> path </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//打开文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//获取文件内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> info</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> buf </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> info</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//pem解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> block</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//X509解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> privateKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> x509</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParsePKCS1PrivateKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//对密文进行解密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> plainText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">DecryptPKCS1v15</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reader</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> privateKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//返回明文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plainText</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// DecryptByString</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Description: 解密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Author ahKevinXy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Date 2022-11-22 16:50:15</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">DecryptByString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> key </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//打开文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> content </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Base64Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//X509解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> block</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> privateKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> x509</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParsePKCS1PrivateKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//对密文进行解密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> plainText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">DecryptPKCS1v15</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reader</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> privateKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> content</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//返回明文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> plainText</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//RSA加密 通过私钥路径</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plainText </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> path </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//打开文件</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> os</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Open</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">path</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">defer</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Close</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//读取文件的内容</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> info</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Stat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> buf </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">make</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> info</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Size</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> file</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Read</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//pem解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> block</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buf</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//x509解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> publicKeyInterface</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> x509</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParsePKIXPublicKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//类型断言</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> publicKey </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> publicKeyInterface</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PublicKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//对明文进行加密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cipherText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">EncryptPKCS1v15</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reader</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> plainText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//返回密文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> cipherText</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 通过直接传 string 方式</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">EncryptByString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plainText </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> public </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> block</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> pem</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">public</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//x509解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> publicKeyInterface</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> x509</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">ParsePKIXPublicKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Bytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//类型断言</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> publicKey </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> publicKeyInterface</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">*</span><span class="token plain">rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">PublicKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//对明文进行加密</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> cipherText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> rsa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">EncryptPKCS1v15</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">rand</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Reader</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> publicKey</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">plainText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> err </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">nil</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">panic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">err</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">//返回密文</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> fmt</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">Println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Base64EncodeString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">string</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Base64EncodeString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">str </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StdEncoding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">EncodeToString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token function" style="color:#d73a49">byte</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">str</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Base64Decode</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Description: base64解码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Author ahKevinXy</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// @Date 2022-11-22 17:04:52</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">func</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Base64Decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token builtin">byte</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> decodedByte</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">_</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:=</span><span class="token plain"> base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">StdEncoding</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">DecodeString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">data</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> decodedByte</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="java-代码">java 代码<a href="#java-代码" class="hash-link" aria-label="java 代码的直接链接" title="java 代码的直接链接">​</a></h2><div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">javax</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">crypto</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Cipher</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">io</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">ByteArrayOutputStream</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import operator" style="color:#393A34">*</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">interfaces</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">RSAPrivateKey</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">interfaces</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">RSAPublicKey</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">spec</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">InvalidKeySpecException</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">spec</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">PKCS8EncodedKeySpec</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">security</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">spec</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">X509EncodedKeySpec</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Base64</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">HashMap</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Map</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">RSATest</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">KEY_ALGORITHM</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"RSA"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 公钥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PUBLIC_KEY</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"xxxxx加密公钥"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">MAX_ENCRYPT_BLOCK</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">117</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">MAX_DECRYPT_BLOCK</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">128</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Exception</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">String</span><span class="token plain"> cipherText</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">String</span><span class="token plain"> content </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"这是一个测试加密密码"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">String</span><span class="token plain"> publicKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">PUBLIC_KEY</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cipherText </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">content</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> publicKey</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cipherText</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 获取公钥</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token class-name">PublicKey</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getPublicKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> publicKeyString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">NoSuchAlgorithmException</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">InvalidKeySpecException</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">byte</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> publicKeyByte </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">Base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getDecoder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">decode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">publicKeyString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">X509EncodedKeySpec</span><span class="token plain"> keySpec </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">X509EncodedKeySpec</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">publicKeyByte</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token class-name">KeyFactory</span><span class="token plain"> keyFactory </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">KeyFactory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">KEY_ALGORITHM</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> keyFactory</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">generatePublic</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">keySpec</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">encrypt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> text</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> publicKeyStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token class-name">Cipher</span><span class="token plain"> cipher </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">Cipher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getInstance</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">KEY_ALGORITHM</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cipher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">init</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Cipher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">ENCRYPT_MODE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getPublicKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">publicKeyStr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">byte</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> tempBytes </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cipher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">doFinal</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">text</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getBytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"UTF-8"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token class-name">Base64</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getEncoder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">encodeToString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tempBytes</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Exception</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RuntimeException</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"加密字符串["</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> text </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"]时遇到异常"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="Go" term="Go"/>
        <category label="Java" term="Java"/>
        <category label="加密" term="加密"/>
        <category label="RSA" term="RSA"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[计算机专业术语解释]]></title>
        <id>https://ahkevinxy.github.io/blog/english/base</id>
        <link href="https://ahkevinxy.github.io/blog/english/base"/>
        <updated>2022-11-22T17:01:44.000Z</updated>
        <summary type="html"><![CDATA[CPU]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cpu">CPU<a href="#cpu" class="hash-link" aria-label="CPU的直接链接" title="CPU的直接链接">​</a></h2>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[专业英语翻译]]></title>
        <id>https://ahkevinxy.github.io/blog/english</id>
        <link href="https://ahkevinxy.github.io/blog/english"/>
        <updated>2022-10-03T15:56:47.000Z</updated>
        <summary type="html"><![CDATA[微服务 Microservice]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="微服务-microservice">微服务 Microservice<a href="#微服务-microservice" class="hash-link" aria-label="微服务 Microservice的直接链接" title="微服务 Microservice的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="栈stack">(栈)Stack<a href="#栈stack" class="hash-link" aria-label="(栈)Stack的直接链接" title="(栈)Stack的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="案例-case">案例 case<a href="#案例-case" class="hash-link" aria-label="案例 case的直接链接" title="案例 case的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="例子-example">例子 example<a href="#例子-example" class="hash-link" aria-label="例子 example的直接链接" title="例子 example的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="自由职业者-freelancer------work-工作">自由职业者 freelancer  --  work （工作）<a href="#自由职业者-freelancer------work-工作" class="hash-link" aria-label="自由职业者 freelancer  --  work （工作）的直接链接" title="自由职业者 freelancer  --  work （工作）的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="硬件-hardware">硬件 hardware<a href="#硬件-hardware" class="hash-link" aria-label="硬件 hardware的直接链接" title="硬件 hardware的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="意见反馈-feedback">意见反馈 feedback<a href="#意见反馈-feedback" class="hash-link" aria-label="意见反馈 feedback的直接链接" title="意见反馈 feedback的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="概要-summary">概要 summary<a href="#概要-summary" class="hash-link" aria-label="概要 summary的直接链接" title="概要 summary的直接链接">​</a></h2>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[白嫖的冷知识]]></title>
        <id>https://ahkevinxy.github.io/blog/free</id>
        <link href="https://ahkevinxy.github.io/blog/free"/>
        <updated>2022-10-02T15:47:32.000Z</updated>
        <summary type="html"><![CDATA[白嫖工具]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开放-图片生成器-any-idea-you-can-imagine-and-create">开放 图片生成器 any idea you can imagine and create<a href="#开放-图片生成器-any-idea-you-can-imagine-and-create" class="hash-link" aria-label="开放 图片生成器 any idea you can imagine and create的直接链接" title="开放 图片生成器 any idea you can imagine and create的直接链接">​</a></h2><p><a href="https://undraw.co/" target="_blank" rel="noopener noreferrer">undraw</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="托管平台-几乎无限制使用">托管平台 (几乎无限制使用)<a href="#托管平台-几乎无限制使用" class="hash-link" aria-label="托管平台 (几乎无限制使用)的直接链接" title="托管平台 (几乎无限制使用)的直接链接">​</a></h2><p><a href="https://codeup.aliyun.com/" target="_blank" rel="noopener noreferrer">阿里codeup</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="远程编辑器">远程编辑器<a href="#远程编辑器" class="hash-link" aria-label="远程编辑器的直接链接" title="远程编辑器的直接链接">​</a></h2><p><a href="https://ide.aliyun.com/" target="_blank" rel="noopener noreferrer">阿里ide</a></p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="免费" term="免费"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员到架构师]]></title>
        <id>https://ahkevinxy.github.io/blog/2022/09/22/index</id>
        <link href="https://ahkevinxy.github.io/blog/2022/09/22/index"/>
        <updated>2022-09-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[还是直接放弃吧]]></summary>
        <content type="html"><![CDATA[<p>还是直接放弃吧</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[优质开源软件]]></title>
        <id>https://ahkevinxy.github.io/blog/source</id>
        <link href="https://ahkevinxy.github.io/blog/source"/>
        <updated>2022-09-03T13:37:22.000Z</updated>
        <summary type="html"><![CDATA[Gihub 掘金计划]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gihub-掘金计划"><a href="https://www.zhihu.com/people/github-stars" target="_blank" rel="noopener noreferrer">Gihub 掘金计划</a><a href="#gihub-掘金计划" class="hash-link" aria-label="gihub-掘金计划的直接链接" title="gihub-掘金计划的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="开源大屏展示"><a href="https://zhuanlan.zhihu.com/p/384830720" target="_blank" rel="noopener noreferrer">开源大屏展示</a><a href="#开源大屏展示" class="hash-link" aria-label="开源大屏展示的直接链接" title="开源大屏展示的直接链接">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="sns">SNS<a href="#sns" class="hash-link" aria-label="SNS的直接链接" title="SNS的直接链接">​</a></h2><ul><li><a href="https://github.com/slimkit/plus" target="_blank" rel="noopener noreferrer">ThinkSNS</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="笔记">笔记<a href="#笔记" class="hash-link" aria-label="笔记的直接链接" title="笔记的直接链接">​</a></h2><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>信息</div><div class="admonitionContent_S0QG"><p>An open source, markdown-based, self-hosted note taking webapp.</p></div></div><ul><li><p><a href="https://github.com/batnoter/batnoter.git" target="_blank" rel="noopener noreferrer">batnoter</a></p></li><li><p><a href="https://www.topgoer.com/" target="_blank" rel="noopener noreferrer">topgoer</a></p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="go-学习资料全">go 学习资料(全)<a href="#go-学习资料全" class="hash-link" aria-label="go 学习资料(全)的直接链接" title="go 学习资料(全)的直接链接">​</a></h2>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[博客]]></title>
        <id>https://ahkevinxy.github.io/blog/index</id>
        <link href="https://ahkevinxy.github.io/blog/index"/>
        <updated>2022-08-30T03:49:14.000Z</updated>
    </entry>
    <entry>
        <title type="html"><![CDATA[网站导航]]></title>
        <id>https://ahkevinxy.github.io/blog/awesome/go</id>
        <link href="https://ahkevinxy.github.io/blog/awesome/go"/>
        <updated>2022-08-30T03:49:14.000Z</updated>
        <summary type="html"><![CDATA[Go 资源网站导航]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="go-资源网站导航"><a href="https://hao.studygolang.com/" target="_blank" rel="noopener noreferrer">Go 资源网站导航</a><a href="#go-资源网站导航" class="hash-link" aria-label="go-资源网站导航的直接链接" title="go-资源网站导航的直接链接">​</a></h2><iframe src="https://awesome-go.com/" width="100%" height="800" frameborder="0"></iframe>]]></content>
    </entry>
</feed>