<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.opencodes.top/blog</id>
    <title>ahKevinXy Blog</title>
    <updated>2024-03-14T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.opencodes.top/blog"/>
    <subtitle>ahKevinXy Blog</subtitle>
    <icon>https://blog.opencodes.top/static/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[如何删除linux 文件]]></title>
        <id>https://blog.opencodes.top/blog/2024/03/14/linux</id>
        <link href="https://blog.opencodes.top/blog/2024/03/14/linux"/>
        <updated>2024-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何删除linux 文件 | 删除带空格的linux文件 | 删除带空格的文件]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="删除带空格的linux文件">删除带空格的linux文件<a href="https://blog.opencodes.top/blog/2024/03/14/linux#%E5%88%A0%E9%99%A4%E5%B8%A6%E7%A9%BA%E6%A0%BC%E7%9A%84linux%E6%96%87%E4%BB%B6" class="hash-link" aria-label="删除带空格的linux文件的直接链接" title="删除带空格的linux文件的直接链接">​</a></h2>
<blockquote>
<p>使用正则表达式添加删除</p>
</blockquote>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">rm *.png </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="批量删除文件">批量删除文件<a href="https://blog.opencodes.top/blog/2024/03/14/linux#%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6" class="hash-link" aria-label="批量删除文件的直接链接" title="批量删除文件的直接链接">​</a></h2>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ls | grep 'xxx' | | xargs  rm -rf </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Tauri 和 electron 区别]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/24/tarui</id>
        <link href="https://blog.opencodes.top/blog/2024/02/24/tarui"/>
        <updated>2024-02-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Tauri 和 electron 区别是什么]]></summary>
        <content type="html"><![CDATA[<p>Tauri 和 Electron 都是用于构建跨平台桌面应用程序的开源工具，它们之间有几个重要的区别：</p>
<ol>
<li>
<p><strong>底层技术</strong>：</p>
<ul>
<li><strong>Tauri</strong>：Tauri 使用了 Rust 作为其核心开发语言，并结合了现代 Web 技术（如 HTML、CSS 和 JavaScript/TypeScript）。它采用了一个轻量级的、自定义的 Rust 运行时，以及一个内置的轻量级浏览器引擎来呈现应用程序界面。</li>
<li><strong>Electron</strong>：Electron 使用了 Chromium 和 Node.js。Chromium 用于渲染界面，而 Node.js 则用于后端逻辑。这使得 Electron 应用程序能够使用完整的 Chrome 浏览器功能，并允许开发者使用 JavaScript/TypeScript 开发全栈应用程序。</li>
</ul>
</li>
<li>
<p><strong>性能</strong>：</p>
<ul>
<li><strong>Tauri</strong>：由于 Tauri 使用了 Rust，它在性能方面可能比 Electron 更好。Rust 提供了内存安全性和并发性能，这意味着 Tauri 应用程序可能更加稳定且具有更低的资源消耗。</li>
<li><strong>Electron</strong>：尽管 Electron 提供了强大的功能和广泛的社区支持，但它可能会受到性能方面的一些限制，尤其是对于大型应用程序或需要处理大量数据的应用程序而言。</li>
</ul>
</li>
<li>
<p><strong>应用程序大小</strong>：</p>
<ul>
<li><strong>Tauri</strong>：由于 Tauri 使用了自定义的 Rust 运行时和轻量级的浏览器引擎，因此生成的应用程序可能比 Electron 应用程序更小。</li>
<li><strong>Electron</strong>：Electron 应用程序通常会比较大，因为它需要打包 Chromium、Node.js 以及应用程序代码。</li>
</ul>
</li>
<li>
<p><strong>生态系统和社区</strong>：</p>
<ul>
<li><strong>Tauri</strong>：Tauri 是一个相对较新的项目，尚在不断发展。它的社区规模可能不如 Electron 那么大，但正在逐步壮大。</li>
<li><strong>Electron</strong>：Electron 是一个成熟的项目，拥有庞大的社区和丰富的生态系统。这意味着在开发过程中可以找到更多的文档、库和工具来支持应用程序开发。</li>
</ul>
</li>
</ol>
<p>总的来说，Tauri 和 Electron 都是强大的桌面应用程序开发工具，选择使用哪一个取决于开发者的具体需求和偏好。如果你更注重性能和应用程序大小，或者想要尝试使用 Rust 进行开发，那么 Tauri 可能是一个不错的选择。而如果你更倾向于一个成熟的生态系统和更广泛的社区支持，那么 Electron 则可能更适合你。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Css 特效]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/23/css</id>
        <link href="https://blog.opencodes.top/blog/2024/02/23/css"/>
        <updated>2024-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Css 特效]]></summary>
        <content type="html"><![CDATA[<p>当谈到CSS特效时，有许多不同的效果和技术可以实现。以下是一些常见的CSS特效示例：</p>
<ol>
<li>
<p><strong>过渡（Transitions）</strong>：通过过渡，可以使元素的属性（如颜色、大小、位置等）在一定的时间内平滑地改变。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">transition</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> all </span><span class="token number" style="color:rgb(247, 140, 108)">0.3</span><span class="token unit">s</span><span class="token plain"> ease</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token selector pseudo-class" style="color:rgb(199, 146, 234)">:hover</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">transform</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">scale</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1.1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">background-color</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token hexcode color">#ff0000</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>动画（Animations）</strong>：使用关键帧（keyframes）规则可以创建更复杂的动画效果。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token atrule rule">@keyframes</span><span class="token atrule"> example</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token selector" style="color:rgb(199, 146, 234)">0%</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token property">transform</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">scale</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token selector" style="color:rgb(199, 146, 234)">50%</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token property">transform</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">scale</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1.2</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token selector" style="color:rgb(199, 146, 234)">100%</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> </span><span class="token property">transform</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">scale</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">animation</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> example </span><span class="token number" style="color:rgb(247, 140, 108)">2</span><span class="token unit">s</span><span class="token plain"> infinite alternate</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>渐变（Gradients）</strong>：创建渐变背景可以为元素添加独特的外观。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">background</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">linear-gradient</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">to right</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token hexcode color">#ff0000</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token hexcode color">#00ff00</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>阴影（Box Shadows）</strong>：通过添加阴影效果可以使元素看起来更立体。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">box-shadow</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">5</span><span class="token unit">px</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">5</span><span class="token unit">px</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token unit">px</span><span class="token plain"> </span><span class="token hexcode color">#888888</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>透明度（Opacity）</strong>：使元素透明度变化可以实现淡入淡出效果。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">opacity</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0.5</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>变形（Transforms）</strong>：使用transform属性可以实现旋转、缩放、倾斜和平移等效果。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">transform</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">rotate</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">45</span><span class="token unit">deg</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>
<p><strong>过滤器（Filters）</strong>：通过CSS滤镜可以对元素应用各种效果，如模糊、饱和度调整等。</p>
<div class="language-css codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-css codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token selector class" style="color:rgb(199, 146, 234)">.element</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token property">filter</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">blur</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">5</span><span class="token unit">px</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
</ol>
<p>这只是一小部分常见的CSS特效，实际上还有很多其他的特效和技术可以用于创建各种动态和吸引人的用户界面效果。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[系统开发详细设计]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/23/develop</id>
        <link href="https://blog.opencodes.top/blog/2024/02/23/develop"/>
        <updated>2024-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何进行系统开发详细设计,技术设计模板]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="介绍">介绍<a href="https://blog.opencodes.top/blog/2024/02/23/develop#%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="介绍的直接链接" title="介绍的直接链接">​</a></h2>
<p>当你准备开发详细设计时，你需要确保设计方案充分考虑了项目的需求、技术限制和可行性。以下是一个简要的开发详细设计的步骤：</p>
<ol>
<li>
<p><strong>确定需求和目标</strong>：</p>
<ul>
<li>确定项目的功能需求和非功能需求。</li>
<li>定义项目的目标和预期结果。</li>
</ul>
</li>
<li>
<p><strong>收集信息</strong>：</p>
<ul>
<li>回顾之前的需求文档、用户故事或任何已经定义的项目规范。</li>
<li>与相关利益相关者（如客户、用户、管理层）讨论和确认需求。</li>
</ul>
</li>
<li>
<p><strong>制定架构</strong>：</p>
<ul>
<li>设计系统的整体架构，包括组件、模块和其相互关系。</li>
<li>确定系统的数据流和处理流程。</li>
</ul>
</li>
<li>
<p><strong>细化功能</strong>：</p>
<ul>
<li>将系统功能分解为更小的单元，以便更容易实现和测试。</li>
<li>确定每个功能模块的输入、输出和处理逻辑。</li>
</ul>
</li>
<li>
<p><strong>设计数据库</strong>：</p>
<ul>
<li>如果系统涉及数据库，设计数据库结构、表和关系。</li>
<li>确定数据的存储和检索方式。</li>
</ul>
</li>
<li>
<p><strong>界面设计</strong>：</p>
<ul>
<li>设计用户界面，包括页面布局、控件和交互设计。</li>
<li>确保用户界面符合用户体验设计原则。</li>
</ul>
</li>
<li>
<p><strong>考虑安全性</strong>：</p>
<ul>
<li>确保系统具有适当的安全机制，如身份验证、授权和数据加密。</li>
<li>考虑可能的安全漏洞，并设计相应的防御措施。</li>
</ul>
</li>
<li>
<p><strong>性能优化</strong>：</p>
<ul>
<li>分析系统的性能需求，并设计相应的性能优化策略。</li>
<li>考虑缓存、异步处理和其他优化技术。</li>
</ul>
</li>
<li>
<p><strong>制定测试计划</strong>：</p>
<ul>
<li>设计测试用例，覆盖系统的各个功能和场景。</li>
<li>确保测试计划充分覆盖了所有的功能和边界条件。</li>
</ul>
</li>
<li>
<p><strong>文档编写</strong>：</p>
<ul>
<li>编写开发文档，包括设计文档、接口文档和用户手册等。</li>
<li>确保文档清晰、详细，并与实际实现保持一致。</li>
</ul>
</li>
<li>
<p><strong>审查和评估</strong>：</p>
<ul>
<li>与团队成员、客户或其他利益相关者一起审查设计方案，获取反馈并进行改进。</li>
<li>确保设计方案符合项目的需求和目标。</li>
</ul>
</li>
<li>
<p><strong>最终化设计</strong>：</p>
<ul>
<li>根据审查和反馈进行必要的修改和调整。</li>
<li>确定最终的详细设计方案，并准备开始实施。</li>
</ul>
</li>
</ol>
<p>在实施之前，确保你的详细设计方案充分考虑了项目的各个方面，并与相关利益相关者共享并获得他们的批准。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="案例模板">案例模板<a href="https://blog.opencodes.top/blog/2024/02/23/develop#%E6%A1%88%E4%BE%8B%E6%A8%A1%E6%9D%BF" class="hash-link" aria-label="案例模板的直接链接" title="案例模板的直接链接">​</a></h2>
<p>系统详细设计的模板可以根据项目的具体需求和规模进行定制。以下是一个通用的系统详细设计模板，你可以根据需要进行调整：</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1-引言">1. 引言<a href="https://blog.opencodes.top/blog/2024/02/23/develop#1-%E5%BC%95%E8%A8%80" class="hash-link" aria-label="1. 引言的直接链接" title="1. 引言的直接链接">​</a></h2>
<p>简要介绍系统详细设计文档的目的、范围和主要目标。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2-系统架构">2. 系统架构<a href="https://blog.opencodes.top/blog/2024/02/23/develop#2-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84" class="hash-link" aria-label="2. 系统架构的直接链接" title="2. 系统架构的直接链接">​</a></h2>
<p>描述系统的整体结构，包括主要组件、模块和它们之间的关系。可以包括以下内容：</p>
<ul>
<li><strong>系统组件</strong>：列出系统的各个组件，包括前端、后端、数据库等。</li>
<li><strong>模块划分</strong>：将系统划分为较小的模块，说明它们的职责和相互关系。</li>
<li><strong>数据流图</strong>：展示数据在系统内的流动路径。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3-数据库设计">3. 数据库设计<a href="https://blog.opencodes.top/blog/2024/02/23/develop#3-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1" class="hash-link" aria-label="3. 数据库设计的直接链接" title="3. 数据库设计的直接链接">​</a></h2>
<p>如果系统涉及数据库，提供数据库设计的详细信息：</p>
<ul>
<li><strong>实体关系图 (ERD)</strong>：显示数据库中表的关系。</li>
<li><strong>表设计</strong>：列出数据库表，包括字段、数据类型、主键、外键等。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4-模块详细设计">4. 模块详细设计<a href="https://blog.opencodes.top/blog/2024/02/23/develop#4-%E6%A8%A1%E5%9D%97%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1" class="hash-link" aria-label="4. 模块详细设计的直接链接" title="4. 模块详细设计的直接链接">​</a></h2>
<p>对系统的各个模块进行详细设计，包括以下内容：</p>
<ul>
<li><strong>模块功能</strong>：描述模块的主要功能和目标。</li>
<li><strong>输入和输出</strong>：定义模块的输入和输出。</li>
<li><strong>处理逻辑</strong>：说明模块内部的处理逻辑，可能使用流程图或伪代码。</li>
<li><strong>接口设计</strong>：如果模块需要与其他模块或系统进行交互，定义接口规范。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5-用户界面设计">5. 用户界面设计<a href="https://blog.opencodes.top/blog/2024/02/23/develop#5-%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1" class="hash-link" aria-label="5. 用户界面设计的直接链接" title="5. 用户界面设计的直接链接">​</a></h2>
<p>如果系统包含用户界面，提供用户界面设计的详细信息：</p>
<ul>
<li><strong>界面布局</strong>：说明页面的布局结构，包括各个元素的位置和大小。</li>
<li><strong>控件设计</strong>：列出在界面上使用的控件，如按钮、表格、输入框等。</li>
<li><strong>交互设计</strong>：描述用户与界面的交互方式，包括用户操作的响应和反馈。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="6-安全设计">6. 安全设计<a href="https://blog.opencodes.top/blog/2024/02/23/develop#6-%E5%AE%89%E5%85%A8%E8%AE%BE%E8%AE%A1" class="hash-link" aria-label="6. 安全设计的直接链接" title="6. 安全设计的直接链接">​</a></h2>
<p>考虑系统的安全性，包括：</p>
<ul>
<li><strong>身份验证和授权</strong>：定义用户身份验证和访问控制策略。</li>
<li><strong>数据加密</strong>：确定敏感数据的加密方式和存储方法。</li>
<li><strong>安全漏洞防御</strong>：识别可能的安全漏洞并设计相应的防御措施。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7-性能优化">7. 性能优化<a href="https://blog.opencodes.top/blog/2024/02/23/develop#7-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96" class="hash-link" aria-label="7. 性能优化的直接链接" title="7. 性能优化的直接链接">​</a></h2>
<p>考虑系统的性能需求和优化策略：</p>
<ul>
<li><strong>缓存策略</strong>：确定何时以及如何使用缓存。</li>
<li><strong>异步处理</strong>：考虑使用异步任务来提高系统性能。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="8-测试计划">8. 测试计划<a href="https://blog.opencodes.top/blog/2024/02/23/develop#8-%E6%B5%8B%E8%AF%95%E8%AE%A1%E5%88%92" class="hash-link" aria-label="8. 测试计划的直接链接" title="8. 测试计划的直接链接">​</a></h2>
<p>制定详细的测试计划，包括单元测试、集成测试和系统测试：</p>
<ul>
<li><strong>测试用例</strong>：定义每个功能模块和场景的测试用例。</li>
<li><strong>测试数据</strong>：提供用于测试的数据样本。</li>
<li><strong>测试流程</strong>：说明测试的流程和步骤。</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="9-文档编写">9. 文档编写<a href="https://blog.opencodes.top/blog/2024/02/23/develop#9-%E6%96%87%E6%A1%A3%E7%BC%96%E5%86%99" class="hash-link" aria-label="9. 文档编写的直接链接" title="9. 文档编写的直接链接">​</a></h2>
<p>详细说明各个设计部分，确保文档清晰、易读。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="10-审查和批准">10. 审查和批准<a href="https://blog.opencodes.top/blog/2024/02/23/develop#10-%E5%AE%A1%E6%9F%A5%E5%92%8C%E6%89%B9%E5%87%86" class="hash-link" aria-label="10. 审查和批准的直接链接" title="10. 审查和批准的直接链接">​</a></h2>
<p>确保详细设计文档经过团队的审查，并获得相关利益相关者的批准。</p>
<p>这个模板提供了一个通用的框架，你可以根据项目的具体需求和规模进行调整和扩展。确保每个部分都充分详细，以便开发团队能够理解并按照文档进行实施。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[go 基础面试题]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/23/go</id>
        <link href="https://blog.opencodes.top/blog/2024/02/23/go"/>
        <updated>2024-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[面试中关于 Go 语言的问题通常涉及语言特性、并发模型、标准库、常见的陷阱以及最佳实践等方面]]></summary>
        <content type="html"><![CDATA[<ol>
<li>
<p><strong>Go 语言的特性是什么？</strong></p>
<ul>
<li>Go 是一门开源的、静态类型的编程语言，具有高效的编译速度和并发支持。</li>
<li>它具有简洁的语法，包括垃圾回收机制、内置的并发支持（goroutines 和 channels）、强大的标准库等特性。</li>
</ul>
</li>
<li>
<p><strong>什么是 goroutines？</strong></p>
<ul>
<li>Goroutines 是 Go 语言中用于并发编程的轻量级线程。它们由 Go 运行时环境管理，并可以在程序内部高效地创建和销毁。</li>
<li>Goroutines 使用关键字 <code>go</code> 来启动，并且可以在同一个地址空间中进行通信，避免了传统线程间的显式锁定。</li>
</ul>
</li>
<li>
<p><strong>channels 在 Go 中的作用是什么？</strong></p>
<ul>
<li>Channels 是用于在 goroutines 之间进行通信和同步的主要机制。</li>
<li>通过 channels，不同的 goroutines 可以安全地发送和接收数据，并在需要时进行同步。</li>
<li>Channels 提供了一种方式来避免共享内存并发访问的问题，从而降低了并发编程的复杂性。</li>
</ul>
</li>
<li>
<p><strong>Go 的切片和数组有什么区别？</strong></p>
<ul>
<li>数组的长度是固定的，而切片的长度可以动态增长。</li>
<li>切片是对数组的抽象，提供了更灵活的操作和使用方式。</li>
<li>当你不确定需要多大的容量时，通常会使用切片而不是数组。</li>
</ul>
</li>
<li>
<p><strong>Go 中的 defer 关键字有什么作用？</strong></p>
<ul>
<li>defer 关键字用于在函数退出时执行一些清理操作，无论函数是正常返回还是发生了 panic。</li>
<li>defer 语句会在函数退出前执行，并且可以多次调用，按照后进先出（LIFO）的顺序执行。</li>
</ul>
</li>
<li>
<p><strong>Go 中的接口是如何工作的？</strong></p>
<ul>
<li>接口是一种定义行为的抽象类型。一个对象只要实现了接口所定义的方法集合，就被认为是实现了该接口。</li>
<li>Go 中的接口是隐式实现的，即对象无需显式声明实现了某个接口，只要它们实现了接口所需的方法即可。</li>
</ul>
</li>
<li>
<p><strong>Go 中的并发模型是什么？</strong></p>
<ul>
<li>Go 使用基于 CSP（Communicating Sequential Processes）的并发模型，其中 goroutines 通过 channels 进行通信。</li>
<li>这种模型使得编写并发程序变得简单和直观，避免了传统线程编程中的锁和共享内存带来的复杂性和风险。</li>
</ul>
</li>
<li>
<p><strong>Go 的标准库中有哪些常用的包？</strong></p>
<ul>
<li>标准库中包含了大量常用的包，如 <code>fmt</code>（用于格式化输入输出）、<code>net/http</code>（用于构建 HTTP 服务器和客户端）、<code>io</code>（提供了基本的 I/O 操作）、<code>os</code>（用于操作操作系统功能）、<code>encoding/json</code>（用于 JSON 编码和解码）等等。</li>
</ul>
</li>
<li>
<p><strong>什么是 Go 的空接口？</strong></p>
<ul>
<li>空接口是 Go 中的一个特殊接口，它不包含任何方法声明，因此任何类型都实现了空接口。</li>
<li>空接口可以保存任何类型的值，因此在需要存储不同类型值的场景下非常有用，如在函数参数中传递任意类型的数据。</li>
</ul>
</li>
</ol>
<p>以上是一些关于 Go 语言的常见面试问题以及相应的详细解答。在面试前，确保对这些问题有所了解，并能够清晰地表达出来，同时也可以通过阅读官方文档和编写实践代码来加深对 Go 语言的理解。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Local Cache]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/23/localcache</id>
        <link href="https://blog.opencodes.top/blog/2024/02/23/localcache"/>
        <updated>2024-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[通常指的是在应用程序或系统内部维护的一个缓存，用于存储临时性数据以提高访问速度和性能。本地缓存通常位于应用程序内存中或文件系统中，相对于远程缓存（如分布式缓存系统）而言，它更加轻量级，适用于存储相对较小且生命周期较短的数据]]></summary>
        <content type="html"><![CDATA[<p>"LocalCache"（本地缓存）通常指的是在应用程序或系统内部维护的一个缓存，用于存储临时性数据以提高访问速度和性能。本地缓存通常位于应用程序内存中或文件系统中，相对于远程缓存（如分布式缓存系统）而言，它更加轻量级，适用于存储相对较小且生命周期较短的数据。</p>
<p>以下是一些使用本地缓存的常见情况和优点：</p>
<ol>
<li>
<p><strong>提高性能：</strong> 本地缓存可以存储频繁访问的数据，减少每次请求需要访问数据库或其他远程资源的次数，从而提高系统的响应速度和性能。</p>
</li>
<li>
<p><strong>减少资源消耗：</strong> 与远程缓存相比，本地缓存通常占用的资源更少，因为它不需要通过网络进行通信，而且通常是在应用程序的内存中操作，这减少了网络带宽和服务器资源的消耗。</p>
</li>
<li>
<p><strong>降低延迟：</strong> 由于本地缓存位于应用程序内部，数据访问的延迟相对较低，这使得应用程序能够更快地获取所需的数据，从而提高用户体验。</p>
</li>
<li>
<p><strong>提高可用性：</strong> 本地缓存不依赖于外部服务，因此它的可用性通常比远程缓存更高，这有助于减少系统因外部服务故障而导致的影响。</p>
</li>
</ol>
<p>尽管本地缓存具有上述优点，但也需要注意一些潜在的问题：</p>
<ol>
<li>
<p><strong>数据一致性：</strong> 由于本地缓存的数据可能与底层数据源（如数据库）的数据不同步，因此需要考虑如何维护数据的一致性，以避免数据不一致的问题。</p>
</li>
<li>
<p><strong>内存管理：</strong> 将数据存储在内存中可能会增加应用程序的内存消耗，因此需要谨慎管理内存，避免因为缓存过多数据而导致内存溢出的问题。</p>
</li>
<li>
<p><strong>缓存击穿和缓存雪崩：</strong> 如果缓存中的某些数据特别热门，而其他数据不常被访问，可能会导致缓存击穿和缓存雪崩等问题，需要采取相应的缓解措施，如设置合适的过期时间、使用互斥锁等。</p>
</li>
</ol>
<p>总的来说，本地缓存是一种有效提高系统性能和用户体验的方法，但在实际应用中需要根据具体场景和需求进行合理的设计和使用。</p>
<p>下面是一个简单的 Go 语言实现的本地缓存示例：</p>
<div class="language-go codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-go codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">import</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string" style="color:rgb(195, 232, 141)">"sync"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string" style="color:rgb(195, 232, 141)">"time"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 缓存项结构体</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">type</span><span class="token plain"> cacheItem </span><span class="token keyword" style="font-style:italic">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    data      </span><span class="token keyword" style="font-style:italic">interface</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"> </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 缓存数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    expireAt  time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Time   </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 过期时间</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 本地缓存结构体</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">type</span><span class="token plain"> LocalCache </span><span class="token keyword" style="font-style:italic">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    items </span><span class="token keyword" style="font-style:italic">map</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain">cacheItem </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 缓存项映射表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    mutex sync</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">RWMutex          </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 读写锁</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 新建一个本地缓存</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">NewLocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&amp;</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        items</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">make</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">map</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain">cacheItem</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 设置缓存项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">Set</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">key </span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> data </span><span class="token keyword" style="font-style:italic">interface</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> ttl time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Duration</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Lock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">defer</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Unlock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    expireAt </span><span class="token operator" style="color:rgb(137, 221, 255)">:=</span><span class="token plain"> time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Now</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Add</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">ttl</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">key</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> cacheItem</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> expireAt</span><span class="token punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token plain"> expireAt</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 获取缓存项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">Get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">key </span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">interface</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(130, 170, 255)">bool</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">RLock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">defer</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">RUnlock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    item</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> ok </span><span class="token operator" style="color:rgb(137, 221, 255)">:=</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token plain">key</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">if</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">!</span><span class="token plain">ok </span><span class="token operator" style="color:rgb(137, 221, 255)">||</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">expireAt</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Before</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Now</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">nil</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">true</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 删除缓存项</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">Delete</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">key </span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Lock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">defer</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Unlock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token function" style="color:rgb(130, 170, 255)">delete</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> key</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 清空缓存</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">Clear</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Lock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">defer</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Unlock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">items </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">make</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token keyword" style="font-style:italic">map</span><span class="token punctuation" style="color:rgb(199, 146, 234)">[</span><span class="token builtin" style="color:rgb(130, 170, 255)">string</span><span class="token punctuation" style="color:rgb(199, 146, 234)">]</span><span class="token plain">cacheItem</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 获取缓存项数量</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">LocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">Count</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token builtin" style="color:rgb(130, 170, 255)">int</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">RLock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">defer</span><span class="token plain"> lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">mutex</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">RUnlock</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">len</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">lc</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">main</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 使用示例</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    cache </span><span class="token operator" style="color:rgb(137, 221, 255)">:=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">NewLocalCache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    cache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Set</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"key1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"value1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Second</span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token number" style="color:rgb(247, 140, 108)">10</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    cache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Set</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"key2"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"value2"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Second</span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token number" style="color:rgb(247, 140, 108)">20</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">if</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> ok </span><span class="token operator" style="color:rgb(137, 221, 255)">:=</span><span class="token plain"> cache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"key1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> ok </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token function" style="color:rgb(130, 170, 255)">println</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"Value of key1:"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Sleep</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Second </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">15</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">if</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">_</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> ok </span><span class="token operator" style="color:rgb(137, 221, 255)">:=</span><span class="token plain"> cache</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"key1"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">!</span><span class="token plain">ok </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token function" style="color:rgb(130, 170, 255)">println</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"Key1 has expired or does not exist"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码实现了一个简单的本地缓存，其中包括了设置缓存项、获取缓存项、删除缓存项、清空缓存等功能。这个缓存结构使用了读写锁来保证并发安全性。请注意，这只是一个基本示例，实际应用中可能需要根据具体需求进行扩展和优化，比如添加缓存项的过期策略、淘汰机制等。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 数据库磁盘满了如何处理]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/23/mysql</id>
        <link href="https://blog.opencodes.top/blog/2024/02/23/mysql"/>
        <updated>2024-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何解决MySQL磁盘空间不足问题]]></summary>
        <content type="html"><![CDATA[<p>当MySQL数据库的磁盘空间满了时，可能会导致数据库无法正常工作。以下是一些处理满磁盘的方法：</p>
<ol>
<li>
<p><strong>清理不必要的数据：</strong></p>
<ul>
<li>删除不再需要的旧数据或备份。</li>
<li>定期清理日志文件，如MySQL的二进制日志（binary logs）和慢查询日志（slow query logs）。</li>
</ul>
</li>
<li>
<p><strong>优化数据库表：</strong></p>
<ul>
<li>使用<code>OPTIMIZE TABLE</code>命令来优化表，这可以释放磁盘空间。</li>
<li>确保表使用了合适的存储引擎，例如InnoDB对于大型数据库通常比MyISAM更有效。</li>
</ul>
</li>
<li>
<p><strong>检查索引：</strong></p>
<ul>
<li>确保表有适当的索引，以提高查询性能。不必要的索引可能导致磁盘空间的浪费。</li>
</ul>
</li>
<li>
<p><strong>调整日志文件大小：</strong></p>
<ul>
<li>如果二进制日志或慢查询日志占用大量空间，可以考虑调整它们的大小或定期清理旧日志文件。</li>
</ul>
</li>
<li>
<p><strong>移动数据文件：</strong></p>
<ul>
<li>如果有多个磁盘，可以考虑将数据库文件移到具有更多可用空间的磁盘上。</li>
</ul>
</li>
<li>
<p><strong>增加磁盘空间：</strong></p>
<ul>
<li>考虑增加服务器的硬盘空间，这是一个临时的解决方案，但可以给你更多的时间来采取其他措施。</li>
</ul>
</li>
<li>
<p><strong>分析空间占用：</strong></p>
<ul>
<li>使用工具来分析磁盘上的空间占用情况，确定哪些目录或文件占用了大量空间。可能有一些临时文件或日志文件需要清理。</li>
</ul>
</li>
<li>
<p><strong>数据库压缩：</strong></p>
<ul>
<li>对InnoDB表进行压缩，可以使用<code>OPTIMIZE TABLE</code>命令或<code>innodb_table_compression</code>配置。</li>
</ul>
</li>
</ol>
<p>在执行这些操作之前，请确保在操作之前进行数据库备份，以防发生意外情况。同时，在操作时，需要谨慎，以免影响数据库的正常运行。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[AI 资源包及其导航]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/22/ai</id>
        <link href="https://blog.opencodes.top/blog/2024/02/22/ai"/>
        <updated>2024-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[AI 学习资源包，包含学习资料、学习视频、学习书籍、学习网站、学习软件、AI 学习导航 AI 资源]]></summary>
        <content type="html"><![CDATA[<p>人工智能（Artificial Intelligence，AI）是一种计算机科学领域，致力于开发能够模拟人类智能行为的系统。这些系统可以执行像学习、推理、问题解决、感知、理解自然语言等任务。人工智能的目标是使计算机系统具有类似于人类智能的能力，以便能够自主地执行各种任务，而无需人类的直接干预。</p>
<p>人工智能的方法论和技术非常广泛，包括但不限于：</p>
<ol>
<li>
<p><strong>机器学习（Machine Learning）</strong>：一种让计算机系统通过数据学习并改进性能的技术。它包括监督学习、无监督学习、强化学习等方法。</p>
</li>
<li>
<p><strong>深度学习（Deep Learning）</strong>：一种机器学习的分支，它使用人工神经网络来模拟人类大脑的结构和功能，用于处理复杂的数据模式识别任务。</p>
</li>
<li>
<p><strong>专家系统（Expert Systems）</strong>：一种基于规则和知识库的人工智能系统，它模拟了专家在特定领域的决策过程。</p>
</li>
<li>
<p><strong>自然语言处理（Natural Language Processing，NLP）</strong>：致力于让计算机理解、处理和生成自然语言的技术，包括语音识别、文本理解、机器翻译等。</p>
</li>
<li>
<p><strong>计算机视觉（Computer Vision）</strong>：一种使计算机能够理解和分析图像和视频的技术，用于识别、分类、检测和理解图像中的对象和场景。</p>
</li>
<li>
<p><strong>智能代理（Intelligent Agents）</strong>：具有感知环境和采取行动能力的计算机系统，用于执行特定任务并实现目标。</p>
</li>
</ol>
<p>这些技术和方法的结合使得人工智能系统能够在各种领域展现出惊人的能力，如医疗保健、金融、交通、制造业等，为社会带来了许多新的应用和机会。</p>
<ol>
<li>
<p><strong>在线课程和教育资源</strong>：包括各种网站、平台和大学提供的课程，如Coursera、edX、Udacity等。这些课程涵盖从入门到高级的 AI 主题，包括机器学习、深度学习、自然语言处理等。</p>
</li>
<li>
<p><strong>开源工具和框架</strong>：例如 TensorFlow、PyTorch、Scikit-learn 等，这些工具提供了构建和部署 AI 模型所需的库和工具。</p>
</li>
<li>
<p><strong>研究论文和期刊</strong>：包括 arXiv、Google 学术等平台，这些平台提供了最新的 AI 研究成果和论文。</p>
</li>
<li>
<p><strong>博客和社区</strong>：例如 Towards Data Science、Reddit 的 r/MachineLearning 等，这些平台提供了 AI 领域的最新动态、技术分享和讨论。</p>
</li>
<li>
<p><strong>书籍和参考资料</strong>：包括经典的教科书、技术手册和学术著作，如《Deep Learning》、《Pattern Recognition and Machine Learning》等。</p>
</li>
<li>
<p><strong>工具和应用程序</strong>：包括用于数据处理、模型训练、模型部署等各种 AI 工具和应用程序。</p>
</li>
</ol>
<p>以下是一些常见的 AI 资源导航网站：</p>
<ul>
<li>
<p><strong>Awesome AI</strong>: 这是一个 GitHub 上的项目，收集了各种 AI 相关的资源，包括论文、课程、工具等。
<a href="https://github.com/owainlewis/awesome-artificial-intelligence" target="_blank" rel="noopener noreferrer">GitHub Link</a></p>
</li>
<li>
<p><strong>deeplearning.ai</strong>: 由吴恩达教授创办的在线教育平台，提供了深度学习和 AI 相关的课程和资料。
<a href="https://www.deeplearning.ai/" target="_blank" rel="noopener noreferrer">deeplearning.ai</a></p>
</li>
<li>
<p><strong>OpenAI</strong>: OpenAI 是一个 AI 研究实验室，他们在 AI 研究和开发领域有很多开源项目和论文。
<a href="https://openai.com/" target="_blank" rel="noopener noreferrer">OpenAI</a></p>
</li>
<li>
<p><strong>Google AI</strong>: 谷歌的 AI 团队在其网站上分享了很多 AI 研究成果、工具和资源。
<a href="https://ai.google/" target="_blank" rel="noopener noreferrer">Google AI</a></p>
</li>
<li>
<p><strong>ArXiv</strong>: 这是一个预印本平台，研究人员可以在这里分享他们的研究论文。
<a href="https://arxiv.org/" target="_blank" rel="noopener noreferrer">arXiv</a></p>
</li>
<li>
<p><strong>Towards Data Science</strong>: 这是一个在 Medium 上的博客，涵盖了数据科学、机器学习和人工智能等领域的各种技术文章。
<a href="https://towardsdatascience.com/" target="_blank" rel="noopener noreferrer">Towards Data Science</a></p>
</li>
<li>
<p><strong>Kaggle</strong>: Kaggle 是一个数据科学竞赛和交流平台，上面有很多数据集、Notebook 和比赛等资源。
<a href="https://www.kaggle.com/" target="_blank" rel="noopener noreferrer">Kaggle</a></p>
</li>
</ul>
<p>通过这些资源，您可以获取到丰富的 AI 相关信息，学习最新的技术和发展动态。</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[nacos 学习]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/21/nacos</id>
        <link href="https://blog.opencodes.top/blog/2024/02/21/nacos"/>
        <updated>2024-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[nacos 学习]]></summary>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 学习笔记]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/19/rust</id>
        <link href="https://blog.opencodes.top/blog/2024/02/19/rust"/>
        <updated>2024-02-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Rust 学习笔记]]></summary>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="web3" term="web3"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[快速入门React]]></title>
        <id>https://blog.opencodes.top/blog/2024/02/01/react</id>
        <link href="https://blog.opencodes.top/blog/2024/02/01/react"/>
        <updated>2024-02-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[react 入门学习 快速入门react]]></summary>
        <content type="html"><![CDATA[<p>React 是一个用于构建用户界面(UI) 的JavaScript库</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="框架">框架<a href="https://blog.opencodes.top/blog/2024/02/01/react#%E6%A1%86%E6%9E%B6" class="hash-link" aria-label="框架的直接链接" title="框架的直接链接">​</a></h2>
<ol>
<li>next.js (一个全栈式的React 框架)</li>
<li>Remix (嵌套路由的全栈式React 框架)</li>
<li>Gatsby 是一个快速的支持 CMS 的网站的 React 框架。其丰富的插件生态系统和 GraphQL 数据层简化了将内容、API 和服务整合到一个网站的过程</li>
<li>Expo（用于原生应用）是一个 React 框架，可以让你创建具有真正原生 UI 的应用，包括 Android、iOS，以及 Web 应用。它为 React Native 提供了 SDK，使原生部分更容易使用</li>
</ol>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="创建第一个组件">创建第一个组件<a href="https://blog.opencodes.top/blog/2024/02/01/react#%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BB%84%E4%BB%B6" class="hash-link" aria-label="创建第一个组件的直接链接" title="创建第一个组件的直接链接">​</a></h2>
<div class="language-typescript codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-typescript codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">App</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain">这是一个测试的live</span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token operator" style="color:rgb(137, 221, 255)">/</span><span class="token plain">div</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token operator" style="color:rgb(137, 221, 255)">/</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="react" term="react"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是 GBK UTF8  GB18030 GB2312]]></title>
        <id>https://blog.opencodes.top/blog/2024/01/02/encode</id>
        <link href="https://blog.opencodes.top/blog/2024/01/02/encode"/>
        <updated>2024-01-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[go 编码问题 charset utf8 gbk编码]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="简介">简介<a href="https://blog.opencodes.top/blog/2024/01/02/encode#%E7%AE%80%E4%BB%8B" class="hash-link" aria-label="简介的直接链接" title="简介的直接链接">​</a></h2>
<ul>
<li>GB2312</li>
</ul>
<p>1980 年，中国发布了第一个汉字编码标准，也即 GB2312 ，全称 《信息交换用汉字编码字符集·基本集》，通常简称 GB （“国标”汉语拼音首字母）， 共收录了 6763 个常用的汉字和字符，此标准于次年5月实施，它满足了日常 99% 汉字的使用需求</p>
<ul>
<li>GBK</li>
</ul>
<p>由于有些汉字是在 GB2312 标准发布之后才简化的，还有一些人名、繁体字、日语和朝鲜语中的汉字也没有包括在内，所以，在 GB2312 的基础上添加了这部分字符，就形成了 GBK ，全称 《汉字内码扩展规范》，共收录了两万多个汉字和字符，它完全兼容 GB2312</p>
<p>GBK 于 1995 年发布，不过它只是 "技术规范指导性文件"，并不属于国家标准</p>
<ul>
<li>GB18030</li>
</ul>
<p>GB18030 全称《信息技术 中文编码字符集》 ，共收录七万多个汉字和字符， 它在 GBK 的基础上增加了中日韩语中的汉字 和 少数名族的文字及字符，完全兼容 GB2312，基本兼容 GBK</p>
<p>GB18030 发布过两个版本，第一版于 2000 年发布，称为 GB18030-2000，第二版于 2005 年发布，称为 GB18030-2005</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="编码方式">编码方式<a href="https://blog.opencodes.top/blog/2024/01/02/encode#%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F" class="hash-link" aria-label="编码方式的直接链接" title="编码方式的直接链接">​</a></h2>
<p>ASICII、GB2312、GBK、GB18030 之间的关系可以用下图表示</p>
<p>GB18030 &gt; GBK &gt; GB2312 &gt; ASICII</p>
<p>GB2312 兼容 ASICII 编码, GBK 兼容 GB2312 编码，GB18030 兼容 GB2312 编码 和 GBK 编码</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
        <category label="go" term="go"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wails 入门]]></title>
        <id>https://blog.opencodes.top/blog/2023/12/05/wails</id>
        <link href="https://blog.opencodes.top/blog/2023/12/05/wails"/>
        <updated>2023-12-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何使用go 开发跨平台应用 windows mac]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" src="https://source.unsplash.com/random?nature&amp;68" alt="Wails 入门" class="img_ev3q"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="支持平台">支持平台<a href="https://blog.opencodes.top/blog/2023/12/05/wails#%E6%94%AF%E6%8C%81%E5%B9%B3%E5%8F%B0" class="hash-link" aria-label="支持平台的直接链接" title="支持平台的直接链接">​</a></h2>
<ul>
<li>Windows 10/11 AMD64/ARM64</li>
<li>MacOS 10.13+ AMD64</li>
<li>MacOS 11.0+ ARM64</li>
<li>Linux AMD64/ARM64</li>
</ul>
<p>依赖</p>
<ul>
<li>Go 1.18+</li>
<li>NPM (Node 15+)</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="安装">安装<a href="https://blog.opencodes.top/blog/2023/12/05/wails#%E5%AE%89%E8%A3%85" class="hash-link" aria-label="安装的直接链接" title="安装的直接链接">​</a></h2>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">go install github.com/wailsapp/wails/v2/cmd/wails@latest</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="创建项目">创建项目<a href="https://blog.opencodes.top/blog/2023/12/05/wails#%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE" class="hash-link" aria-label="创建项目的直接链接" title="创建项目的直接链接">​</a></h2>
<ul>
<li>Svelte</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t svelte</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t svelte-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>React</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t react</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t react-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Vue</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t vue</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t vue-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Preact</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t preact</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t preact-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>lit</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t lit</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t lit-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Vanilla</li>
</ul>
<div class="language-bash codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-bash codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t vanilla</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">wails init -n myproject -t vanilla-ts</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="项目结构">项目结构<a href="https://blog.opencodes.top/blog/2023/12/05/wails#%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84" class="hash-link" aria-label="项目结构的直接链接" title="项目结构的直接链接">​</a></h2>
<div class="language-text codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-text codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── build/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   ├── appicon.png</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   ├── darwin/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── windows/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── frontend/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── go.mod</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── go.sum</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── main.go</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">└── wails.json</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>目录概要</p>
<ul>
<li>/main.go - 主应用</li>
<li>/frontend/ - 前端项目文件</li>
<li>/build/ - 项目构建目录</li>
<li>/build/appicon.png - 应用程序图标</li>
<li>/build/darwin/ - Mac 特定的项目文件</li>
<li>/build/windows/ - Windows 特定的项目文件</li>
<li>/wails.json - 项目配置</li>
<li>/go.mod - Go module 文件</li>
<li>/go.sum - Go module 校验文件</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="配置文件">配置文件<a href="https://blog.opencodes.top/blog/2023/12/05/wails#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="hash-link" aria-label="配置文件的直接链接" title="配置文件的直接链接">​</a></h2>
<div class="language-json codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-json codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">{</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 项目配置版本</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "version": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 项目名称</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "name": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 包含编译资产的目录的相对路径，这通常是推断的并且可以留空</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "assetdir": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 触发重新加载的附加目录（逗号分隔），这仅用于某些高级资产配置</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "reloaddirs": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 构建文件所在的目录。默认为“build”</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "build:dir": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 前端目录的相对路径。默认为“frontend”</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dir": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 安装 Node 依赖的命令，在前端目录运行 - 通常是`npm install`</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:install": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 构建资产的命令，在前端目录中运行 - 通常是 `npm run build`</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:build": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 此命令已被 frontend:dev:build 取代。如果未指定 frontend:dev:build 将回退到此命令。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 如果此命令也未指定，将回退到 frontend:build</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dev": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 此命令是 frontend:build 的 dev 等价物。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 如果未指定回退到 frontend:dev</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dev:build": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 此命令是 frontend:install 的 dev 等价物。如果未指定回退到 frontend:install</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dev:install": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 此命令在 `wails dev`上的单独进程中运行。用于第 3 方观察者或启动 3d 方开发服务器</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dev:watcher": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 用于服务资产的第 3 方开发服务器的 URL，比如 Vite。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 如果设置为 'auto' 那么 devServerUrl 将从 Vite 输出中推断出来</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "frontend:dev:serverUrl": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 创建自动生成的 JS 模块的目录的相对路径</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "wailsjsdir": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 二进制文件的名称</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "outputfilename": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 开发服务器在检测到资产更改时等待重新加载的默认时间</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "debounceMS": 100,</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 将 wails 开发服务器绑定到的地址。默认为：localhost:34115</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "devServer": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 在开发模式下以 shell 样式传递给应用程序的参数</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "appargs": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 定义是否应该运行构建 Hooks，尽管它们是为主机操作系统以外的操作系统定义的。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "runNonNativeBuildHooks": false,</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 构建前 Hooks</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "preBuildHooks": {</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 在构建指定的 GOOS/GOARCH 之前将执行的命令：${platform} 被替换为“GOOS/GOARCH”。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    //  “GOOS/GOARCH” hook 在“GOOS/*”和“*/*” hook 之前执行。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "GOOS/GOARCH": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 在指定 GOOS 的构建之前将执行的命令：${platform} 被替换为“GOOS/GOARCH”。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // “GOOS/*” hook 在“*/*” hook 之前执行。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "GOOS/*": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 将在每次构建之前执行的命令：${platform} 替换为“GOOS/GOARCH”。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "*/*": ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 构建后 Hooks</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "postBuildHooks": {</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 在构建指定的 GOOS/GOARCH 之后将执行的命令：${platform} 替换为“GOOS/GOARCH”，</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // ${bin} 替换为已编译二进制文件的路径。 “GOOS/GOARCH” hook 在“GOOS/*”和“*/*” hook 之前执行。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "GOOS/GOARCH": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 在构建指定的 GOOS 之后将执行的命令：${platform} 替换为“GOOS/GOARCH”，</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // ${bin} 替换为已编译二进制文件的路径。 “GOOS/*” hook 在“*/*” hook 之前执行。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "GOOS/*": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 每次构建后将执行的命令：${platform} 替换为“GOOS/GOARCH”，</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // ${bin} 替换为已编译二进制文件的路径。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "*/*": ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 用于填充 manifest 和版本信息的数据。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "info": {</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 公司名称。 默认值：[项目名]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "companyName": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 产品名称。 默认值：[项目名]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "productName": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 产品版本。默认值：'1.0.0'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "productVersion": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 产品的版权。默认值：'Copyright.........'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "copyright": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    // 该应用程序的简短评论。默认值：'Built using Wails (https://wails.app)'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    "comments": ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 'multiple': 每个架构一个安装程序。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 'single': 适用于正在构建的所有体系结构的单一通用安装程序。</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 默认值：'multiple'</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "nsisType": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 应用程序是否应该被混淆。默认值：false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "obfuscated": "",</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  // 使用 obfuscated 标志时传递给乱码命令的参数</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  "garbleargs": ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">}</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hugo Puppet 主题搭建教程]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/26/hugo-puppet</id>
        <link href="https://blog.opencodes.top/blog/2023/11/26/hugo-puppet"/>
        <updated>2023-11-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何快速搭建 hugo Puppet 主题教程]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="配置参数">配置参数<a href="https://blog.opencodes.top/blog/2023/11/26/hugo-puppet#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0" class="hash-link" aria-label="配置参数的直接链接" title="配置参数的直接链接">​</a></h2>
<div class="language-toml codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-toml codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 配置基础路径 默认可以配置 (必须配置你对应的github page 地址 如果是默认github page 地址 设置 / 即可)</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">baseURL = "https://ahkevinxy.github.io/hugo-theme-puppet"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 标题名称  页面为设置 title 会显示</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">title = "ahKevinXy"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 主题配置 </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">theme = "puppet"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">canonifyurls = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">copyright = ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">paginate = 3</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">languageCode = "en"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">defaultContentLanguage = "en"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">hasCJKLanguage = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">enableInlineShortcodes = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">enableEmoji = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># prevent build failures when using Hugo's Instagram shortcode due to deprecated Instagram API.</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># See https://github.com/gohugoio/hugo/issues/7228#issuecomment-714490456</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">ignoreErrors = ["error-remote-getjson"]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">disqusShortname = ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">googleAnalytics = ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[outputs]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">home = ["HTML", "JSON", "RSS"]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># prevent build failures when using Hugo's template _internal/opengraph.html </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[taxonomies]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">category = "categories"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">tag = "tags"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">series = "series"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># markdown 语法配置</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[markup]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[markup.highlight]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">noClasses = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">codeFences = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">guessSyntax = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">lineNos = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">lineNumbersInTable = false</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">style = "dracula"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[markup.goldmark.renderer]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">unsafe = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 菜单设置</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[menu]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "home" # 提示</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "home" # 显示名称</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/" # 链接地址 可以外链</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = -100 # 权重 越小越靠左</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "research"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "research"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/research/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 10</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "publications"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "publications"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/publications/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 20</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "members"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "members"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/members/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 30</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "contract"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "contract"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/contract/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 50</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "opportunities"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "opportunities"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/opportunities/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 60</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[[menu.main]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">identifier = "news"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">name = "news"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">url = "/news/"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">weight = 100</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[params]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">author = "ahKevinXy"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">description = ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">keywords = "blog,developer,personal"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">img_home = "img/home-bg.jpg"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">img_404 = "img/404-bg.jpg"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">useFaviconGenerator = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 自定义主题时候使用 </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">custom_js = []</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">custom_css = [] # ["css/custom.css"]  Add your file to assets folder  [assets/css/custom.css]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 侧边栏配置 </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">[params.sidebar]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">enable = false # 是否显示</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">gravatarEmail = "" # 个人邮箱</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># Overwritten by your gravatar image if `gravatarEmail` is filled</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">avatar = "img/home-bg.jpg" # 头像</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">bio = "lab website" # 个人简介</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 个人社交信息</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#[params.social]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#twitter = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#facebook = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#zhihu = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#weibo = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#github = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#gitlab = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#linkedin = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># rss = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#[params.social.mastodon]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#weight = 56</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#icon = "fab fa-mastodon"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#format = "https://mastodon.social/%v"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#id = "johndoe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#url = ""</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 友链配置</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#[[params.friends]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#name = "John Doe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#url = "https://gohugo.io"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#[[params.friends]]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#name = "John Doe"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#url = "https://gohugo.io"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># See https://giscus.app/</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"># 评论 giscus 配置</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#[params.giscus]</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#enable = true</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#repo = "roninro/hugo-theme-puppet"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#repo_id = "R_kgDOHuvyhw"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#category = "General"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#category_id = "DIC_kwDOHuvyh84CQjDo"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#input_position = "top"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#theme = "light_tritanopia"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">#lang = "en"</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="页面配置">页面配置<a href="https://blog.opencodes.top/blog/2023/11/26/hugo-puppet#%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="页面配置的直接链接" title="页面配置的直接链接">​</a></h2>
<div class="language-markdown codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-markdown codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block punctuation" style="color:rgb(199, 146, 234)">---</span><span class="token front-matter-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block"></span><span class="token front-matter-block front-matter yaml language-yaml key atrule">title</span><span class="token front-matter-block front-matter yaml language-yaml"> </span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token front-matter-block front-matter yaml language-yaml"> </span><span class="token front-matter-block front-matter yaml language-yaml string" style="color:rgb(195, 232, 141)">"Contact Us"</span><span class="token front-matter-block front-matter yaml language-yaml"> </span><span class="token front-matter-block front-matter yaml language-yaml comment" style="color:rgb(105, 112, 152);font-style:italic"># 标题 为空显示默认 title 不想显示`  `即可</span><span class="token front-matter-block front-matter yaml language-yaml"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block front-matter yaml language-yaml"></span><span class="token front-matter-block front-matter yaml language-yaml key atrule">header_img</span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token front-matter-block front-matter yaml language-yaml"> </span><span class="token front-matter-block front-matter yaml language-yaml string" style="color:rgb(195, 232, 141)">"https://source.unsplash.com/random?people&amp;63"</span><span class="token front-matter-block front-matter yaml language-yaml"> </span><span class="token front-matter-block front-matter yaml language-yaml comment" style="color:rgb(105, 112, 152);font-style:italic"># 头部背景图片</span><span class="token front-matter-block front-matter yaml language-yaml"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block front-matter yaml language-yaml"></span><span class="token front-matter-block front-matter yaml language-yaml key atrule">date</span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token front-matter-block front-matter yaml language-yaml"> "2019</span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token front-matter-block front-matter yaml language-yaml">02</span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">-</span><span class="token front-matter-block front-matter yaml language-yaml">28" // 日期</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block front-matter yaml language-yaml"></span><span class="token front-matter-block front-matter yaml language-yaml key atrule">author</span><span class="token front-matter-block front-matter yaml language-yaml punctuation" style="color:rgb(199, 146, 234)">:</span><span class="token front-matter-block front-matter yaml language-yaml"> "ahKevinXy" // 作者</span><span class="token front-matter-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token front-matter-block"></span><span class="token front-matter-block punctuation" style="color:rgb(199, 146, 234)">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="目录介绍">目录介绍<a href="https://blog.opencodes.top/blog/2023/11/26/hugo-puppet#%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="目录介绍的直接链接" title="目录介绍的直接链接">​</a></h2>
<p>页面对应目录 <code>content/</code></p>
<div class="language-text codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-text codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── _index.md  // 首页</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── about</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md  //关于页面</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── archive   // 归档页面</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── contract // 联系页面</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── members // 成员名称</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── news // 新闻</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── opportunities //机会</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">├── publications // 出版物</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">│   └── _index.md</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">└── research //研究</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    └── _index.md</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="对应目录修改">对应目录修改<a href="https://blog.opencodes.top/blog/2023/11/26/hugo-puppet#%E5%AF%B9%E5%BA%94%E7%9B%AE%E5%BD%95%E4%BF%AE%E6%94%B9" class="hash-link" aria-label="对应目录修改的直接链接" title="对应目录修改的直接链接">​</a></h2>
<p><code>_index.md</code></p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Redux]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/24/redux</id>
        <link href="https://blog.opencodes.top/blog/2023/11/24/redux"/>
        <updated>2023-11-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[深入学习 Redux ,Redux最佳实践]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="介绍">介绍<a href="https://blog.opencodes.top/blog/2023/11/24/redux#%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="介绍的直接链接" title="介绍的直接链接">​</a></h2>
<p><img decoding="async" loading="lazy" alt="redux" src="https://blog.opencodes.top/assets/images/img-01d7c1b7a4922926a048be70e21fb920.png" width="895" height="535" class="img_ev3q"></p>
<p>Redux = Reducer + Flux</p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何让网站被收录]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/22/bing</id>
        <link href="https://blog.opencodes.top/blog/2023/11/22/bing"/>
        <updated>2023-11-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如何让网站被收录 bing 百度 google等搜索引擎]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="bing-网站收录">bing 网站收录<a href="https://blog.opencodes.top/blog/2023/11/22/bing#bing-%E7%BD%91%E7%AB%99%E6%94%B6%E5%BD%95" class="hash-link" aria-label="bing 网站收录的直接链接" title="bing 网站收录的直接链接">​</a></h2>
<p>注册微软账号</p>
<p><a href="https://www.bing.com/webmasters" target="_blank" rel="noopener noreferrer">bing 站长之家</a></p>
<p>添加之间的站点</p>
<p><img decoding="async" loading="lazy" alt="bing收录地址" src="https://blog.opencodes.top/assets/images/bingmaster-14d6ae2c1d98ca15ab6308ec566a2b14.png" width="672" height="562" class="img_ev3q"></p>
<p>选择添加方式</p>
<p><img decoding="async" loading="lazy" alt="选择添加方式" src="https://blog.opencodes.top/assets/images/selectadd-772793b11b205fd88230be18d28b780e.png" width="922" height="586" class="img_ev3q"></p>
<p>设置 验证校验
<img decoding="async" loading="lazy" alt="选择添加方式" src="https://blog.opencodes.top/assets/images/yangzheng-0876382cce12bcda4901549f063560c7.png" width="950" height="510" class="img_ev3q"></p>
<p>以hugo blog 为例</p>
<p>下载 <code>BingSiteAuth.xml</code> 文件</p>
<p>放在 <code>hugo</code>  <code>static/</code> 目录下即可</p>
<p>验证通过就可以收录</p>
<p>添加网站地图</p>
<p><img decoding="async" loading="lazy" alt="网站地图" src="https://blog.opencodes.top/assets/images/img-3db1e869d7f90af46f4c1b1c0b7b8dc1.png" width="2095" height="649" class="img_ev3q"></p>
<p>查看SEO优化</p>
<p><img decoding="async" loading="lazy" alt="查看seo" src="https://blog.opencodes.top/assets/images/img_1-36dbe000ed4dbbf964b925cdc0d21841.png" width="2158" height="852" class="img_ev3q"></p>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 特效]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/16/css</id>
        <link href="https://blog.opencodes.top/blog/2023/11/16/css"/>
        <updated>2023-11-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Css3 基础知识]]></summary>
        <content type="html"><![CDATA[<div class="language-typescript codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-typescript codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">app</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">return</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        这是一个测试 </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token operator" style="color:rgb(137, 221, 255)">&lt;</span><span class="token operator" style="color:rgb(137, 221, 255)">/</span><span class="token plain">div</span><span class="token operator" style="color:rgb(137, 221, 255)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="rainbow-color----七彩虹颜色">rainbow color    七彩虹颜色<a href="https://blog.opencodes.top/blog/2023/11/16/css#rainbow-color----%E4%B8%83%E5%BD%A9%E8%99%B9%E9%A2%9C%E8%89%B2" class="hash-link" aria-label="rainbow color    七彩虹颜色的直接链接" title="rainbow color    七彩虹颜色的直接链接">​</a></h2>
<div class="rainbow-color"><div class="violet"></div><div class="indigo"></div><div class="blue"></div><div class="green"></div><div class="yellow"></div><div class="orange"></div><div class="red"></div></div>
<table><thead><tr><th>color Description</th><th>RGB</th><th>HEX</th></tr></thead><tbody><tr><td>Violet</td><td>148, 0, 211</td><td>#9400D3</td></tr><tr><td>Indigo</td><td>75, 0, 130</td><td>#4B0082</td></tr><tr><td>Blue</td><td>0, 0, 255</td><td>#0000FF</td></tr><tr><td>Green</td><td>0, 255, 0</td><td>#00FF00</td></tr><tr><td>Yellow</td><td>255, 255, 0</td><td>#FFFF00</td></tr><tr><td>Orange</td><td>255, 127, 0</td><td>#FF7F00</td></tr><tr><td>Red</td><td>255, 0 , 0</td><td>#FF0000</td></tr></tbody></table>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[BBR 算法]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/14/bbr</id>
        <link href="https://blog.opencodes.top/blog/2023/11/14/bbr"/>
        <updated>2023-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[BBR 算法]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="什么是bbr-算法">什么是bbr 算法<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E4%BB%80%E4%B9%88%E6%98%AFbbr-%E7%AE%97%E6%B3%95" class="hash-link" aria-label="什么是bbr 算法的直接链接" title="什么是bbr 算法的直接链接">​</a></h2>
<p>自适应限流 从整体维度对应应用入口流量进行控制,结合应用的Load CPU使用率,总体平均RT,入口QPS和并发线程等几个维度的监控指标,通过自适应的流控策略,让系统的入口流量和系统负载达到一个平衡,让系统尽可能跑到最大吞吐量的同时保证系统整体的稳定性</p>
<p><strong>核心目标</strong></p>
<ul>
<li>自动嗅探负载和qps,减少人工配置</li>
<li>削顶,保证超载时系统不奔溃,并能以高水准qps运行</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="限流规则">限流规则<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E9%99%90%E6%B5%81%E8%A7%84%E5%88%99" class="hash-link" aria-label="限流规则的直接链接" title="限流规则的直接链接">​</a></h2>
<p><strong>计算吞吐量</strong> : 利特尔法则: <code>L=λ * W</code></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="指标说明">指标说明<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E6%8C%87%E6%A0%87%E8%AF%B4%E6%98%8E" class="hash-link" aria-label="指标说明的直接链接" title="指标说明的直接链接">​</a></h2>
<ul>
<li>入口QPS: 指的是从外部访问系统的请求数,即请求数/秒</li>
<li>入口RT: 指的是从外部访问系统的平均响应时间,即响应时间/秒</li>
<li>入口CPU使用率: 指的是从外部访问系统的平均CPU使用率,即CPU使用率/秒</li>
<li>入口并发线程数: 指的是从外部访问系统的并发线程数</li>
<li>系统负载: 指的是系统的平均CPU使用率,即CPU使用率/秒</li>
<li>系统平均RT: 指的是系统的平均响应时间,即响应时间/秒</li>
<li>系统并发线程数: 指的是系统的并发线程数</li>
</ul>
<table><thead><tr><th>指标名称</th><th>指标含义</th></tr></thead><tbody><tr><td>cpu</td><td>最近1s cpu使用率均值,使用滑动平均计算,采样周期250ms</td></tr><tr><td>inflight</td><td>当前处理中正在进行处理的请求数量</td></tr><tr><td>pass</td><td>请求处理成功数量</td></tr><tr><td>rt</td><td>请求成功响应耗时</td></tr></tbody></table>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="滑动窗口">滑动窗口<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3" class="hash-link" aria-label="滑动窗口的直接链接" title="滑动窗口的直接链接">​</a></h2>
<p>在自适应限流保护,采集到的指标的时效性强,系统只需要采集最近一段时间的指标,通过滑动窗口的方式,计算出当前系统的吞吐量,并根据系统的负载和QPS,动态调整限流阈值</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="自适应限流策略">自适应限流策略<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E8%87%AA%E9%80%82%E5%BA%94%E9%99%90%E6%B5%81%E7%AD%96%E7%95%A5" class="hash-link" aria-label="自适应限流策略的直接链接" title="自适应限流策略的直接链接">​</a></h2>
<ul>
<li>动态调整限流阈值: 动态调整限流阈值,根据系统的负载和QPS,动态调整限流阈值</li>
<li>动态调整阈值: 动态调整限流阈值,根据系统的</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="限流公式">限流公式<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E9%99%90%E6%B5%81%E5%85%AC%E5%BC%8F" class="hash-link" aria-label="限流公式的直接链接" title="限流公式的直接链接">​</a></h2>
<div class="codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-text codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">L = λ * W</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">cpu &gt; 800 AND (Now - PrevDrop) &lt; 1s AND (MaxPass * MinRt * windows / 1000) &lt; InFlight</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>MaxPass 表示最近 5s 内，单个采样窗口中最大的请求数。 MinRt 表示最近 5s 内，单个采样窗口中最小的响应时间。 windows 表示一秒内采样窗口的数量，默认配置中是 5s 50 个采样，那么 windows 的值为 10。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="限流阈值">限流阈值<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E9%99%90%E6%B5%81%E9%98%88%E5%80%BC" class="hash-link" aria-label="限流阈值的直接链接" title="限流阈值的直接链接">​</a></h2>
<ul>
<li>静态阈值: 静态阈值,在系统启动时,设置一个固定阈值,不随系统负载和QPS的变化而变化</li>
<li>动态阈值: 动态阈值,在系统启动时,设置一个初始阈值,随着系统负载和QPS的变化而变化</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="源码分析">源码分析<a href="https://blog.opencodes.top/blog/2023/11/14/bbr#%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" class="hash-link" aria-label="源码分析的直接链接" title="源码分析的直接链接">​</a></h2>
<p><strong>BBR struct</strong></p>
<div class="language-go codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-go codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">type</span><span class="token plain"> BBR </span><span class="token keyword" style="font-style:italic">struct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      cpu cpuGetter </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  passStat window</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">RollingCounter </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  rtStat window</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">RollingCounter</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  inFlight </span><span class="token builtin" style="color:rgb(130, 170, 255)">int64</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  bucketPerSecond </span><span class="token builtin" style="color:rgb(130, 170, 255)">int64</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  bucketSize      time</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Duration</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">		prevDropTime atomic</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">		maxPASSCache atomic</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">		minRtCache   atomic</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Value</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">		opts </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain">options</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	  </span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li><code>cpu</code>
<ul>
<li>cpu 指标函数,cpu的使用率</li>
</ul>
</li>
<li><code>passStat</code>
<ul>
<li>请求数的采样数据，使用滑动窗口进行统计</li>
</ul>
</li>
<li><code>rtStat</code>
<ul>
<li>响应时间的采样数据，同样使用滑动窗口进行统计</li>
</ul>
</li>
<li><code>inFlight</code>
<ul>
<li>inFlight 当前系统中的请求数，数据得来方法是：中间件原理在处理前+1，处理handle之后不管成功失败都减去1</li>
</ul>
</li>
<li><code>bucketPerSecond</code>
<ul>
<li>一个 bucket 的时间</li>
</ul>
</li>
<li><code>prevDropTime</code>
<ul>
<li>上次触发限流时间</li>
</ul>
</li>
<li><code>bucketSize</code>
<ul>
<li>桶的数量</li>
</ul>
</li>
<li><code>maxPASSCache</code>
<ul>
<li>单个采样窗口中最大的请求数的缓存数据</li>
</ul>
</li>
<li><code>minRtCache</code>
<ul>
<li>单个采样窗口中最小的响应时间的缓存数据</li>
</ul>
</li>
<li><code>opts</code>
<ul>
<li>限流参数</li>
</ul>
</li>
</ol>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[分布式事务锁]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/14/lock</id>
        <link href="https://blog.opencodes.top/blog/2023/11/14/lock"/>
        <updated>2023-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Redis、Zookeeper、Etcd的分布式锁实现方案]]></summary>
        <content type="html"><![CDATA[<p>分布式锁是一种控制分布式系统中并发访问共享资源的机制，它可以保证在同一时间只有一个进程对共享资源进行操作。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="单机锁">单机锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#%E5%8D%95%E6%9C%BA%E9%94%81" class="hash-link" aria-label="单机锁的直接链接" title="单机锁的直接链接">​</a></h2>
<p>最常见的有两种锁，一种是Synchronized锁，一种是CAS锁。</p>
<p>CAS锁是Compare And Swap的缩写，是一种无锁算法，CAS算法是硬件指令，它可以保证在多处理器环境下，多个线程在执行CAS操作时，只有一个线程能执行成功，而其他线程都能执行失败，从而避免了锁的竞争。</p>
<div class="language-java codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-java codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">CASLock</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">int</span><span class="token plain"> value </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">synchronized</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">increment</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">value</span><span class="token operator" style="color:rgb(137, 221, 255)">!=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>Synchronized</code>锁是Java中的内置锁，它可以保证在同一时间只有一个线程对共享资源进行操作。</p>
<div class="language-java codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-java codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">class</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">SynchronizedLock</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">private</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">int</span><span class="token plain"> value </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">public</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">synchronized</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">void</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">increment</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token keyword" style="font-style:italic">while</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">value</span><span class="token operator" style="color:rgb(137, 221, 255)">!=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="1-基于redis的分布式锁">1. 基于Redis的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#1-%E5%9F%BA%E4%BA%8Eredis%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="1. 基于Redis的分布式锁的直接链接" title="1. 基于Redis的分布式锁的直接链接">​</a></h2>
<p>Redis的setnx命令可以实现分布式锁，setnx命令的作用是将键key的值设为value，当且仅当键key不存在时，返回1，否则返回0。</p>
<div class="codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-text codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token plain">SET resource_name my_random_value NX PX 30000</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="2-基于zookeeper的分布式锁">2. 基于Zookeeper的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#2-%E5%9F%BA%E4%BA%8Ezookeeper%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="2. 基于Zookeeper的分布式锁的直接链接" title="2. 基于Zookeeper的分布式锁的直接链接">​</a></h2>
<p>Zookeeper的recipes/locks recipe可以实现分布式锁，recipes/locks recipe的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="3-基于etcd的分布式锁">3. 基于Etcd的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#3-%E5%9F%BA%E4%BA%8Eetcd%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="3. 基于Etcd的分布式锁的直接链接" title="3. 基于Etcd的分布式锁的直接链接">​</a></h2>
<p>etcd是一个分布式键值存储，它提供了一种类似于数据库的机制，可以用来存储配置信息、共享状态、负载均衡、命名服务、分布式锁和分布式队列等。</p>
<p>etcd的租约机制可以保证在一个时间段内，只有一个客户端能对某个键进行修改。</p>
<p>etcd的租约机制可以保证在一个时间段内，只有一个客户端能对某个键进行修改。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="4-基于redisson的分布式锁">4. 基于Redisson的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#4-%E5%9F%BA%E4%BA%8Eredisson%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="4. 基于Redisson的分布式锁的直接链接" title="4. 基于Redisson的分布式锁的直接链接">​</a></h2>
<p>Redisson的Lock接口可以实现分布式锁，Lock接口的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="5-基于apollo的分布式锁">5. 基于Apollo的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#5-%E5%9F%BA%E4%BA%8Eapollo%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="5. 基于Apollo的分布式锁的直接链接" title="5. 基于Apollo的分布式锁的直接链接">​</a></h2>
<p>Apollo的Apollo.lock接口可以实现分布式锁，Apollo.lock接口的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="6-基于rocketmq的分布式锁">6. 基于RocketMQ的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#6-%E5%9F%BA%E4%BA%8Erocketmq%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="6. 基于RocketMQ的分布式锁的直接链接" title="6. 基于RocketMQ的分布式锁的直接链接">​</a></h2>
<p>RocketMQ的ReentrantLock接口可以实现分布式锁，ReentrantLock接口的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="7-基于seata的分布式锁">7. 基于Seata的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#7-%E5%9F%BA%E4%BA%8Eseata%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="7. 基于Seata的分布式锁的直接链接" title="7. 基于Seata的分布式锁的直接链接">​</a></h2>
<p>Seata的GlobalLock接口可以实现分布式锁，GlobalLock接口的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="8-基于tcc的分布式锁">8. 基于TCC的分布式锁<a href="https://blog.opencodes.top/blog/2023/11/14/lock#8-%E5%9F%BA%E4%BA%8Etcc%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81" class="hash-link" aria-label="8. 基于TCC的分布式锁的直接链接" title="8. 基于TCC的分布式锁的直接链接">​</a></h2>
<p>TCC的TccAction接口可以实现分布式锁，TccAction接口的作用是</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="raft共识算法">Raft共识算法<a href="https://blog.opencodes.top/blog/2023/11/14/lock#raft%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95" class="hash-link" aria-label="Raft共识算法的直接链接" title="Raft共识算法的直接链接">​</a></h2>
<p>Raft是一种分布式一致性算法，它是一种为分布式系统提供的一种共识算法。Raft算法的目标是实现一个分布式系统中多个节点的状态机一致性，即在任意时刻，集群中大多数节点的状态机都是相同的。</p>
<p>Raft算法的核心思想是，每个节点都维护一个当前的状态，并且每个节点都有能力将自己的状态复制到其他节点，当有客户端请求时，首先会将请求发送给Leader节点，Leader节点</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="总结">总结<a href="https://blog.opencodes.top/blog/2023/11/14/lock#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>分布式锁的优点：</p>
<ul>
<li>避免了锁的竞争，提高了系统的并发度。</li>
<li>锁的可重入性：即同一个线程可以多次获取同一个锁。</li>
<li>锁的可操作性：可以方便的对锁进行释放和删除。</li>
<li>锁的可扩展性：分布式锁可以对数据库中的不同数据进行锁定。</li>
<li>锁的可操作性：可以方便的对锁进行释放和删除</li>
</ul>
<p>分布式锁具备的特点：</p>
<ul>
<li>互斥性：同一时间只有一个客户端能对共享资源进行操作。</li>
<li>不会发生死锁：即使发生死锁，也能通过超时机制来避免。</li>
<li>高性能：分布式锁的性能比传统的锁要高。</li>
<li>基于数据库的实现：分布式锁的实现通常是基于数据库的，因此可以保证数据的强一致性。</li>
<li>锁的粒度：分布式锁可以对数据库中的不同数据进行锁定</li>
</ul>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[go 语言你不知道的那些事]]></title>
        <id>https://blog.opencodes.top/blog/2023/11/14/unknows</id>
        <link href="https://blog.opencodes.top/blog/2023/11/14/unknows"/>
        <updated>2023-11-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[go 语言你不知道的那些事 如何巧妙使用go]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithHideOnScrollNavbar_WYt5" id="字段匿名化">字段匿名化<a href="https://blog.opencodes.top/blog/2023/11/14/unknows#%E5%AD%97%E6%AE%B5%E5%8C%BF%E5%90%8D%E5%8C%96" class="hash-link" aria-label="字段匿名化的直接链接" title="字段匿名化的直接链接">​</a></h2>
<p>字段匿名化: 使用下划线将字段匿名化，这意味着字段没有显式的名称。这样的做法通常
在希望隐藏字段名称的情况下使用，使得在结构体实例中直接访问该字段变得不方便，可以防止在其他包中直接访问该字段。</p>
<div class="language-go codeBlockContainer_APcc theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_m3Ux"><pre tabindex="0" class="prism-code language-go codeBlock_qGQc thin-scrollbar" style="color:#bfc7d5;background-color:#292d3e"><code class="codeBlockLines_p187"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">package</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">import</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"fmt"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">var</span><span class="token plain"> </span><span class="token boolean" style="color:rgb(255, 88, 116)">_</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token builtin" style="color:rgb(130, 170, 255)">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">func</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">main</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">	fmt</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token function" style="color:rgb(130, 170, 255)">Println</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>ahKevinXy</name>
            <email>ahkevinxy@gmail.com</email>
            <uri>https://github.com/ahKevinXy</uri>
        </author>
    </entry>
</feed>