"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[38380],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return y}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var a=r.createContext({}),u=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(a.Provider,{value:n},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(t),d=i,y=f["".concat(a,".").concat(d)]||f[d]||p[d]||o;return t?r.createElement(y,c(c({ref:n},l),{},{components:t})):r.createElement(y,c({ref:n},l))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=d;var s={};for(var a in n)hasOwnProperty.call(n,a)&&(s[a]=n[a]);s.originalType=e,s[f]="string"==typeof e?e:i,c[1]=s;for(var u=2;u<o;u++)c[u]=t[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},15630:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return a},default:function(){return y},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return f}});var r=t(83117),i=t(80102),o=(t(67294),t(3905)),c=["components"],s={},a="fs",u={unversionedId:"backend/go/gin/source/1.7.7/fs",id:"backend/go/gin/source/1.7.7/fs",title:"fs",description:"",source:"@site/docs/backend/go/gin/source/1.7.7/fs.md",sourceDirName:"backend/go/gin/source/1.7.7",slug:"/backend/go/gin/source/1.7.7/fs",permalink:"/docs/backend/go/gin/source/1.7.7/fs",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"error",permalink:"/docs/backend/go/gin/source/1.7.7/error"},next:{title:"gin",permalink:"/docs/backend/go/gin/source/1.7.7/gin"}},l={},f=[],p={toc:f},d="wrapper";function y(e){var n=e.components,t=(0,i.Z)(e,c);return(0,o.kt)(d,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"fs"},"fs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Copyright 2017 Manu Martinez-Almeida.  All rights reserved.\n// Use of this source code is governed by a MIT style\n// license that can be found in the LICENSE file.\n\npackage gin\n\nimport (\n "net/http"\n "os"\n)\n\ntype onlyFilesFS struct {\n fs http.FileSystem\n}\n\ntype neuteredReaddirFile struct {\n http.File\n}\n\n// Dir returns a http.Filesystem that can be used by http.FileServer(). It is used internally\n// in router.Static().\n// if listDirectory == true, then it works the same as http.Dir() otherwise it returns\n// a filesystem that prevents http.FileServer() to list the directory files.\nfunc Dir(root string, listDirectory bool) http.FileSystem {\n fs := http.Dir(root)\n if listDirectory {\n  return fs\n }\n return &onlyFilesFS{fs}\n}\n\n// Open conforms to http.Filesystem.\nfunc (fs onlyFilesFS) Open(name string) (http.File, error) {\n f, err := fs.fs.Open(name)\n if err != nil {\n  return nil, err\n }\n return neuteredReaddirFile{f}, nil\n}\n\n// Readdir overrides the http.File default implementation.\nfunc (f neuteredReaddirFile) Readdir(count int) ([]os.FileInfo, error) {\n // this disables directory listing\n return nil, nil\n}\n\n')))}y.isMDXComponent=!0}}]);