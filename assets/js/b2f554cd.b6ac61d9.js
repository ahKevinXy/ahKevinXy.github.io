"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[11477],{30010:n=>{n.exports=JSON.parse('{"blogPosts":[{"id":"/2023/11/14/bbr","metadata":{"permalink":"/blog/2023/11/14/bbr","source":"@site/blog/2023/11/14/bbr.md","title":"BBR \u7b97\u6cd5","description":"BBR \u7b97\u6cd5","date":"2023-11-14T00:00:00.000Z","formattedDate":"2023\u5e7411\u670814\u65e5","tags":[],"readingTime":4.71,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"BBR \u7b97\u6cd5","authors":"ahKevinXy","description":"BBR \u7b97\u6cd5","image":"https://source.unsplash.com/random?people&61"},"unlisted":false,"nextItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u9501","permalink":"/blog/2023/11/14/lock"}},"content":"## \u4ec0\u4e48\u662fbbr \u7b97\u6cd5\\n\u81ea\u9002\u5e94\u9650\u6d41 \u4ece\u6574\u4f53\u7ef4\u5ea6\u5bf9\u5e94\u5e94\u7528\u5165\u53e3\u6d41\u91cf\u8fdb\u884c\u63a7\u5236,\u7ed3\u5408\u5e94\u7528\u7684Load CPU\u4f7f\u7528\u7387,\u603b\u4f53\u5e73\u5747RT,\u5165\u53e3QPS\u548c\u5e76\u53d1\u7ebf\u7a0b\u7b49\u51e0\u4e2a\u7ef4\u5ea6\u7684\u76d1\u63a7\u6307\u6807,\u901a\u8fc7\u81ea\u9002\u5e94\u7684\u6d41\u63a7\u7b56\u7565,\u8ba9\u7cfb\u7edf\u7684\u5165\u53e3\u6d41\u91cf\u548c\u7cfb\u7edf\u8d1f\u8f7d\u8fbe\u5230\u4e00\u4e2a\u5e73\u8861,\u8ba9\u7cfb\u7edf\u5c3d\u53ef\u80fd\u8dd1\u5230\u6700\u5927\u541e\u5410\u91cf\u7684\u540c\u65f6\u4fdd\u8bc1\u7cfb\u7edf\u6574\u4f53\u7684\u7a33\u5b9a\u6027\\n\\n\\n**\u6838\u5fc3\u76ee\u6807**\\n\\n* \u81ea\u52a8\u55c5\u63a2\u8d1f\u8f7d\u548cqps,\u51cf\u5c11\u4eba\u5de5\u914d\u7f6e\\n* \u524a\u9876,\u4fdd\u8bc1\u8d85\u8f7d\u65f6\u7cfb\u7edf\u4e0d\u5954\u6e83,\u5e76\u80fd\u4ee5\u9ad8\u6c34\u51c6qps\u8fd0\u884c\\n\\n## \u9650\u6d41\u89c4\u5219\\n\\n**\u8ba1\u7b97\u541e\u5410\u91cf** : \u5229\u7279\u5c14\u6cd5\u5219: `L=\u03bb * W`\\n\\n## \u6307\u6807\u8bf4\u660e\\n* \u5165\u53e3QPS: \u6307\u7684\u662f\u4ece\u5916\u90e8\u8bbf\u95ee\u7cfb\u7edf\u7684\u8bf7\u6c42\u6570,\u5373\u8bf7\u6c42\u6570/\u79d2\\n* \u5165\u53e3RT: \u6307\u7684\u662f\u4ece\u5916\u90e8\u8bbf\u95ee\u7cfb\u7edf\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4,\u5373\u54cd\u5e94\u65f6\u95f4/\u79d2\\n* \u5165\u53e3CPU\u4f7f\u7528\u7387: \u6307\u7684\u662f\u4ece\u5916\u90e8\u8bbf\u95ee\u7cfb\u7edf\u7684\u5e73\u5747CPU\u4f7f\u7528\u7387,\u5373CPU\u4f7f\u7528\u7387/\u79d2\\n* \u5165\u53e3\u5e76\u53d1\u7ebf\u7a0b\u6570: \u6307\u7684\u662f\u4ece\u5916\u90e8\u8bbf\u95ee\u7cfb\u7edf\u7684\u5e76\u53d1\u7ebf\u7a0b\u6570\\n* \u7cfb\u7edf\u8d1f\u8f7d: \u6307\u7684\u662f\u7cfb\u7edf\u7684\u5e73\u5747CPU\u4f7f\u7528\u7387,\u5373CPU\u4f7f\u7528\u7387/\u79d2\\n* \u7cfb\u7edf\u5e73\u5747RT: \u6307\u7684\u662f\u7cfb\u7edf\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4,\u5373\u54cd\u5e94\u65f6\u95f4/\u79d2\\n* \u7cfb\u7edf\u5e76\u53d1\u7ebf\u7a0b\u6570: \u6307\u7684\u662f\u7cfb\u7edf\u7684\u5e76\u53d1\u7ebf\u7a0b\u6570\\n\\n| \u6307\u6807\u540d\u79f0     | \u6307\u6807\u542b\u4e49                             |\\n|----------|----------------------------------|\\n| cpu      | \u6700\u8fd11s cpu\u4f7f\u7528\u7387\u5747\u503c,\u4f7f\u7528\u6ed1\u52a8\u5e73\u5747\u8ba1\u7b97,\u91c7\u6837\u5468\u671f250ms |\\n| inflight | \u5f53\u524d\u5904\u7406\u4e2d\u6b63\u5728\u8fdb\u884c\u5904\u7406\u7684\u8bf7\u6c42\u6570\u91cf                 |\\n| pass     | \u8bf7\u6c42\u5904\u7406\u6210\u529f\u6570\u91cf                         |\\n| rt       | \u8bf7\u6c42\u6210\u529f\u54cd\u5e94\u8017\u65f6                         |\\n\\n## \u6ed1\u52a8\u7a97\u53e3\\n\\n\u5728\u81ea\u9002\u5e94\u9650\u6d41\u4fdd\u62a4,\u91c7\u96c6\u5230\u7684\u6307\u6807\u7684\u65f6\u6548\u6027\u5f3a,\u7cfb\u7edf\u53ea\u9700\u8981\u91c7\u96c6\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u7684\u6307\u6807,\u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u7684\u65b9\u5f0f,\u8ba1\u7b97\u51fa\u5f53\u524d\u7cfb\u7edf\u7684\u541e\u5410\u91cf,\u5e76\u6839\u636e\u7cfb\u7edf\u7684\u8d1f\u8f7d\u548cQPS,\u52a8\u6001\u8c03\u6574\u9650\u6d41\u9608\u503c\\n\\n## \u81ea\u9002\u5e94\u9650\u6d41\u7b56\u7565\\n\\n* \u52a8\u6001\u8c03\u6574\u9650\u6d41\u9608\u503c: \u52a8\u6001\u8c03\u6574\u9650\u6d41\u9608\u503c,\u6839\u636e\u7cfb\u7edf\u7684\u8d1f\u8f7d\u548cQPS,\u52a8\u6001\u8c03\u6574\u9650\u6d41\u9608\u503c\\n* \u52a8\u6001\u8c03\u6574\u9608\u503c: \u52a8\u6001\u8c03\u6574\u9650\u6d41\u9608\u503c,\u6839\u636e\u7cfb\u7edf\u7684\\n\\n## \u9650\u6d41\u516c\u5f0f\\n\\n```\\nL = \u03bb * W\\n\\ncpu > 800 AND (Now - PrevDrop) < 1s AND (MaxPass * MinRt * windows / 1000) < InFlight\\n\\n```\\nMaxPass \u8868\u793a\u6700\u8fd1 5s \u5185\uff0c\u5355\u4e2a\u91c7\u6837\u7a97\u53e3\u4e2d\u6700\u5927\u7684\u8bf7\u6c42\u6570\u3002 MinRt \u8868\u793a\u6700\u8fd1 5s \u5185\uff0c\u5355\u4e2a\u91c7\u6837\u7a97\u53e3\u4e2d\u6700\u5c0f\u7684\u54cd\u5e94\u65f6\u95f4\u3002 windows \u8868\u793a\u4e00\u79d2\u5185\u91c7\u6837\u7a97\u53e3\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u914d\u7f6e\u4e2d\u662f 5s 50 \u4e2a\u91c7\u6837\uff0c\u90a3\u4e48 windows \u7684\u503c\u4e3a 10\u3002\\n\\n\\n## \u9650\u6d41\u9608\u503c\\n\\n* \u9759\u6001\u9608\u503c: \u9759\u6001\u9608\u503c,\u5728\u7cfb\u7edf\u542f\u52a8\u65f6,\u8bbe\u7f6e\u4e00\u4e2a\u56fa\u5b9a\u9608\u503c,\u4e0d\u968f\u7cfb\u7edf\u8d1f\u8f7d\u548cQPS\u7684\u53d8\u5316\u800c\u53d8\u5316\\n* \u52a8\u6001\u9608\u503c: \u52a8\u6001\u9608\u503c,\u5728\u7cfb\u7edf\u542f\u52a8\u65f6,\u8bbe\u7f6e\u4e00\u4e2a\u521d\u59cb\u9608\u503c,\u968f\u7740\u7cfb\u7edf\u8d1f\u8f7d\u548cQPS\u7684\u53d8\u5316\u800c\u53d8\u5316\\n\\n\\n## \u6e90\u7801\u5206\u6790\\n\\n\\n**BBR struct**\\n\\n\\n```go \\npackage main\\n    type BBR struct {\\n      cpu cpuGetter \\n\\t  passStat window.RollingCounter \\n\\t  rtStat window.RollingCounter\\n\\t  inFlight int64 \\n\\t  bucketPerSecond int64\\n\\t  bucketSize      time.Duration\\n\\n\\n\\t\\tprevDropTime atomic.Value\\n\\t\\tmaxPASSCache atomic.Value\\n\\t\\tminRtCache   atomic.Value\\n\\n\\t\\topts *options\\n\\t  \\n    }\\n```\\n1. `cpu`\\n    * cpu \u6307\u6807\u51fd\u6570,cpu\u7684\u4f7f\u7528\u7387\\n2. `passStat`\\n    * \u8bf7\u6c42\u6570\u7684\u91c7\u6837\u6570\u636e\uff0c\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u7edf\u8ba1\\n3. `rtStat`\\n    * \u54cd\u5e94\u65f6\u95f4\u7684\u91c7\u6837\u6570\u636e\uff0c\u540c\u6837\u4f7f\u7528\u6ed1\u52a8\u7a97\u53e3\u8fdb\u884c\u7edf\u8ba1\\n4. `inFlight`\\n    * inFlight \u5f53\u524d\u7cfb\u7edf\u4e2d\u7684\u8bf7\u6c42\u6570\uff0c\u6570\u636e\u5f97\u6765\u65b9\u6cd5\u662f\uff1a\u4e2d\u95f4\u4ef6\u539f\u7406\u5728\u5904\u7406\u524d+1\uff0c\u5904\u7406handle\u4e4b\u540e\u4e0d\u7ba1\u6210\u529f\u5931\u8d25\u90fd\u51cf\u53bb1\\n5. `bucketPerSecond`\\n    * \u4e00\u4e2a bucket \u7684\u65f6\u95f4\\n6. `prevDropTime`\\n    * \u4e0a\u6b21\u89e6\u53d1\u9650\u6d41\u65f6\u95f4\\n7. `bucketSize`\\n   * \u6876\u7684\u6570\u91cf\\n8. `maxPASSCache`\\n    * \u5355\u4e2a\u91c7\u6837\u7a97\u53e3\u4e2d\u6700\u5927\u7684\u8bf7\u6c42\u6570\u7684\u7f13\u5b58\u6570\u636e\\n9. `minRtCache`\\n    * \u5355\u4e2a\u91c7\u6837\u7a97\u53e3\u4e2d\u6700\u5c0f\u7684\u54cd\u5e94\u65f6\u95f4\u7684\u7f13\u5b58\u6570\u636e\\n10. `opts`\\n    * \u9650\u6d41\u53c2\u6570"},{"id":"/2023/11/14/lock","metadata":{"permalink":"/blog/2023/11/14/lock","source":"@site/blog/2023/11/14/lock.md","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u9501","description":"Redis\u3001Zookeeper\u3001Etcd\u7684\u5206\u5e03\u5f0f\u9501\u5b9e\u73b0\u65b9\u6848","date":"2023-11-14T00:00:00.000Z","formattedDate":"2023\u5e7411\u670814\u65e5","tags":[],"readingTime":5.3,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u9501","authors":"ahKevinXy","description":"Redis\u3001Zookeeper\u3001Etcd\u7684\u5206\u5e03\u5f0f\u9501\u5b9e\u73b0\u65b9\u6848","image":"https://source.unsplash.com/random?people&62"},"unlisted":false,"prevItem":{"title":"BBR \u7b97\u6cd5","permalink":"/blog/2023/11/14/bbr"},"nextItem":{"title":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","permalink":"/blog/2023/11/10/gin"}},"content":"\u5206\u5e03\u5f0f\u9501\u662f\u4e00\u79cd\u63a7\u5236\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u5e76\u53d1\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u7684\u673a\u5236\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u3002\\n\\n\\n## \u5355\u673a\u9501\\n\u6700\u5e38\u89c1\u7684\u6709\u4e24\u79cd\u9501\uff0c\u4e00\u79cd\u662fSynchronized\u9501\uff0c\u4e00\u79cd\u662fCAS\u9501\u3002\\n\\nCAS\u9501\u662fCompare And Swap\u7684\u7f29\u5199\uff0c\u662f\u4e00\u79cd\u65e0\u9501\u7b97\u6cd5\uff0cCAS\u7b97\u6cd5\u662f\u786c\u4ef6\u6307\u4ee4\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u591a\u5904\u7406\u5668\u73af\u5883\u4e0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5728\u6267\u884cCAS\u64cd\u4f5c\u65f6\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u6267\u884c\u6210\u529f\uff0c\u800c\u5176\u4ed6\u7ebf\u7a0b\u90fd\u80fd\u6267\u884c\u5931\u8d25\uff0c\u4ece\u800c\u907f\u514d\u4e86\u9501\u7684\u7ade\u4e89\u3002\\n\\n```java\\npublic class CASLock {\\n    private int value = 0;\\n\\n    public synchronized void increment() {\\n        while (value!= 0) {\\n        }\\n    }\\n}\\n```\\n`Synchronized`\u9501\u662fJava\u4e2d\u7684\u5185\u7f6e\u9501\uff0c\u5b83\u53ef\u4ee5\u4fdd\u8bc1\u5728\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u3002\\n\\n```java\\npublic class SynchronizedLock {\\n    private int value = 0;\\n\\n    public synchronized void increment() {\\n        while (value!= 0) {\\n        }\\n    }\\n}\\n```\\n\\n\\n\\n## 1. \u57fa\u4e8eRedis\u7684\u5206\u5e03\u5f0f\u9501\\nRedis\u7684setnx\u547d\u4ee4\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0csetnx\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u5c06\u952ekey\u7684\u503c\u8bbe\u4e3avalue\uff0c\u5f53\u4e14\u4ec5\u5f53\u952ekey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0\u3002\\n\\n```\\nSET resource_name my_random_value NX PX 30000\\n```\\n\\n## 2. \u57fa\u4e8eZookeeper\u7684\u5206\u5e03\u5f0f\u9501\\nZookeeper\u7684recipes/locks recipe\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0crecipes/locks recipe\u7684\u4f5c\u7528\u662f\\n\\n\\n## 3. \u57fa\u4e8eEtcd\u7684\u5206\u5e03\u5f0f\u9501   \\netcd\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u673a\u5236\uff0c\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u914d\u7f6e\u4fe1\u606f\u3001\u5171\u4eab\u72b6\u6001\u3001\u8d1f\u8f7d\u5747\u8861\u3001\u547d\u540d\u670d\u52a1\u3001\u5206\u5e03\u5f0f\u9501\u548c\u5206\u5e03\u5f0f\u961f\u5217\u7b49\u3002\\n\\netcd\u7684\u79df\u7ea6\u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5728\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u5bf9\u67d0\u4e2a\u952e\u8fdb\u884c\u4fee\u6539\u3002\\n\\netcd\u7684\u79df\u7ea6\u673a\u5236\u53ef\u4ee5\u4fdd\u8bc1\u5728\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\uff0c\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u5bf9\u67d0\u4e2a\u952e\u8fdb\u884c\u4fee\u6539\u3002\\n\\n\\n\\n\\n## 4. \u57fa\u4e8eRedisson\u7684\u5206\u5e03\u5f0f\u9501\\nRedisson\u7684Lock\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0cLock\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 5. \u57fa\u4e8eApollo\u7684\u5206\u5e03\u5f0f\u9501\\nApollo\u7684Apollo.lock\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0cApollo.lock\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 6. \u57fa\u4e8eRocketMQ\u7684\u5206\u5e03\u5f0f\u9501\\nRocketMQ\u7684ReentrantLock\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0cReentrantLock\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 7. \u57fa\u4e8eSeata\u7684\u5206\u5e03\u5f0f\u9501\\nSeata\u7684GlobalLock\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0cGlobalLock\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 8. \u57fa\u4e8eTCC\u7684\u5206\u5e03\u5f0f\u9501\\nTCC\u7684TccAction\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\uff0cTccAction\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 9. \u57fa\u4e8eSeata\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\nSeata\u7684GlobalTransaction\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0cGlobalTransaction\u63a5\u53e3\u7684\u4f5c\u7528\u662f\\n\\n\\n## 10. \u57fa\u4e8eTCC\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\\nTCC\u7684TccAction\u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0\u5206\u5e03\u5f0f\u4e8b\u52a1\\n\\n\\n\\n## Raft\u5171\u8bc6\u7b97\u6cd5\\nRaft\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u5b83\u662f\u4e00\u79cd\u4e3a\u5206\u5e03\u5f0f\u7cfb\u7edf\u63d0\u4f9b\u7684\u4e00\u79cd\u5171\u8bc6\u7b97\u6cd5\u3002Raft\u7b97\u6cd5\u7684\u76ee\u6807\u662f\u5b9e\u73b0\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u591a\u4e2a\u8282\u70b9\u7684\u72b6\u6001\u673a\u4e00\u81f4\u6027\uff0c\u5373\u5728\u4efb\u610f\u65f6\u523b\uff0c\u96c6\u7fa4\u4e2d\u5927\u591a\u6570\u8282\u70b9\u7684\u72b6\u6001\u673a\u90fd\u662f\u76f8\u540c\u7684\u3002\\n\\nRaft\u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u7684\u72b6\u6001\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u80fd\u529b\u5c06\u81ea\u5df1\u7684\u72b6\u6001\u590d\u5236\u5230\u5176\u4ed6\u8282\u70b9\uff0c\u5f53\u6709\u5ba2\u6237\u7aef\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u4f1a\u5c06\u8bf7\u6c42\u53d1\u9001\u7ed9Leader\u8282\u70b9\uff0cLeader\u8282\u70b9\\n\\n\\n\\n## \u603b\u7ed3\\n\u5206\u5e03\u5f0f\u9501\u7684\u4f18\u70b9\uff1a\\n- \u907f\u514d\u4e86\u9501\u7684\u7ade\u4e89\uff0c\u63d0\u9ad8\u4e86\u7cfb\u7edf\u7684\u5e76\u53d1\u5ea6\u3002\\n- \u9501\u7684\u53ef\u91cd\u5165\u6027\uff1a\u5373\u540c\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u591a\u6b21\u83b7\u53d6\u540c\u4e00\u4e2a\u9501\u3002\\n- \u9501\u7684\u53ef\u64cd\u4f5c\u6027\uff1a\u53ef\u4ee5\u65b9\u4fbf\u7684\u5bf9\u9501\u8fdb\u884c\u91ca\u653e\u548c\u5220\u9664\u3002\\n- \u9501\u7684\u53ef\u6269\u5c55\u6027\uff1a\u5206\u5e03\u5f0f\u9501\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u4e0d\u540c\u6570\u636e\u8fdb\u884c\u9501\u5b9a\u3002\\n- \u9501\u7684\u53ef\u64cd\u4f5c\u6027\uff1a\u53ef\u4ee5\u65b9\u4fbf\u7684\u5bf9\u9501\u8fdb\u884c\u91ca\u653e\u548c\u5220\u9664\\n\\n\u5206\u5e03\u5f0f\u9501\u5177\u5907\u7684\u7279\u70b9\uff1a\\n- \u4e92\u65a5\u6027\uff1a\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u5ba2\u6237\u7aef\u80fd\u5bf9\u5171\u4eab\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c\u3002\\n- \u4e0d\u4f1a\u53d1\u751f\u6b7b\u9501\uff1a\u5373\u4f7f\u53d1\u751f\u6b7b\u9501\uff0c\u4e5f\u80fd\u901a\u8fc7\u8d85\u65f6\u673a\u5236\u6765\u907f\u514d\u3002\\n- \u9ad8\u6027\u80fd\uff1a\u5206\u5e03\u5f0f\u9501\u7684\u6027\u80fd\u6bd4\u4f20\u7edf\u7684\u9501\u8981\u9ad8\u3002\\n- \u57fa\u4e8e\u6570\u636e\u5e93\u7684\u5b9e\u73b0\uff1a\u5206\u5e03\u5f0f\u9501\u7684\u5b9e\u73b0\u901a\u5e38\u662f\u57fa\u4e8e\u6570\u636e\u5e93\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u4fdd\u8bc1\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u6027\u3002\\n- \u9501\u7684\u7c92\u5ea6\uff1a\u5206\u5e03\u5f0f\u9501\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u4e2d\u7684\u4e0d\u540c\u6570\u636e\u8fdb\u884c\u9501\u5b9a"},{"id":"/2023/11/10/gin","metadata":{"permalink":"/blog/2023/11/10/gin","source":"@site/blog/2023/11/10/gin.md","title":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","description":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","date":"2023-11-10T00:00:00.000Z","formattedDate":"2023\u5e7411\u670810\u65e5","tags":[],"readingTime":4.995,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","authors":"ahKevinXy","description":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","image":"https://source.unsplash.com/random?people&60"},"unlisted":false,"prevItem":{"title":"\u5206\u5e03\u5f0f\u4e8b\u52a1\u9501","permalink":"/blog/2023/11/14/lock"},"nextItem":{"title":"Uber Go Style Guide","permalink":"/blog/2023/11/10/golang"}},"content":"Gin\u662f \u7528go \u8bed\u8a00\u5f00\u53d1\u7684`web`\u6846\u67b6 \u63d0\u4f9b\u7c7b `Martini`\u7684api \\n\\n\x3c!-- truncate --\x3e\\n\\nGin\u4f18\u70b9\\n* \u9ad8\u6027\u80fd:\u72b9\u5982\u91c7\u7528\u4e86 `httprouter` \u5e93,gin\u7684\u6027\u80fd\u975e\u5e38\u51fa\u8272,\u6bd4\u540c\u7c7b\u6846\u67b6\u5feb\u4e8640\u500d\\n* \u6613\u7528\u6027: gin\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u529f\u80fd,\u8f7b\u677e\u5b9e\u73b0web\u5f00\u53d1\\n* \u6269\u5c55\u6027: gin \u5177\u6709\u63d2\u4ef6\u673a\u5236,\u53ef\u4ee5\u65b9\u4fbf\u6269\u5c55\u6846\u67b6\u7684\u529f\u80fd\\n\\n\\n\\n## gin \u6846\u67b6\u7684\u6838\u5fc3\\n\\n1. \u8def\u7531\u5339\u914d\u5904\u7406\\n2. \u4e2d\u95f4\u4ef6\u673a\u5236\\n3. \u4e0a\u4e0b\u6587\u7ba1\u7406\\n4. \u5f02\u5e38\u5904\u7406\\n5. \u5e76\u53d1\u5904\u7406\\n\\n### \u8def\u7531\u5904\u7406\\ngin \u4f7f\u7528\u4e86 `\u57fa\u6570\u6811(Radix Tree)` \u6765\u7ba1\u7406\u8def\u7531,\u5c06\u8def\u7531\u5206\u89e3\u591a\u4e2a\u8282\u70b9,\u901a\u8fc7\u5339\u914d\u8def\u5f84\u7684\u524d\u7f00\u6765\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u7684\u8def\u7531\u5904\u7406\u51fd\u6570,\u5f53\u6709\u65b0\u7684\u8def\u7531\u6ce8\u518c\u65f6,gin\u4f1a\u6839\u636e\u8def\u5f84\u6784\u5efa\u65b0\u7684\u8282\u70b9,\u5e76\u5c06\u5904\u7406\u7684\u51fd\u6570\u4e0e\u8282\u70b9\u7ed1\u5b9a.\u5728\u8bf7\u6c42\u5230\u6765\u65f6,gin\u4f1a\u4ece\u6839\u8282\u70b9\u5f00\u59cb\u904d\u5386\u8def\u7531\u6811,\u6839\u636e\u8bf7\u6c42\u8def\u5f84\u5339\u914d\u5230\u5bf9\u5e94\u7684\u5904\u7406\u51fd\u6570\u8fdb\u884c\u6267\u884c\\n\\n\\n### \u4e2d\u95f4\u4ef6\u673a\u5236\\ngin \u7684\u4e2d\u95f4\u4ef6\u673a\u5236\u662f\u901a\u8fc7\u65b9\u6cd5\u94fe\u5b9e\u73b0\u7684.\u6bcf\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u662f\u4e00\u4e2a\u51fd\u6570,\u5b83\u63a5\u53d7\u4e0a\u4e0b\u6587\u5bf9\u8c61(context) \u548c\u51fd\u6570(next),\u5e76\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94,\u7136\u540e\u901a\u8fc7\u8c03\u7528next(),\u5c06\u51fd\u6570\u63a7\u5236\u6743\u4ea4\u7ed9\u4e0b\u4e00\u4e2a\u4e2d\u95f4\u4ef6.\u8fd9\u6837\u591a\u4e2a\u4e2d\u95f4\u4ef6\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u94fe\u5f0f\u8c03\u7528\u7684\u8fc7\u7a0b,\u4f9d\u6b21\u5bf9\u8bf7\u6c42\u8fdb\u884c\u5904\u7406\\n\\n\\n### \u4e0a\u4e0b\u6587\u7ba1\u7406\\ngin\u7684\u4e0a\u4e0b\u6587\u5bf9\u8c61(context)\u5c01\u88c5\u4e86\u4e00\u6b21http\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f,\u5305\u62ec\u8bf7\u6c42\u53c2\u6570,\u8bf7\u6c42\u5934,\u54cd\u5e94\u5185\u5bb9.\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d,\u53ef\u4ee5\u901a\u8fc7\u4e0a\u4e0b\u6587\u5bf9\u8c61\u83b7\u53d6\u548c\u8bbe\u7f6e\u8fd9\u4e9b\u4fe1\u606f.gin\u5c06\u4e0a\u4e0b\u6587\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e2d\u95f4\u4ef6\u548c\u8def\u7531\u5904\u7406\u51fd\u6570,\u5b9e\u73b0\u4e86\u8fd9\u4e9b\u51fd\u6570\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u548c\u72b6\u6001\u7684\u80fd\u529b\\n\\n###  \u5f02\u5e38\u5904\u7406\\n\\ngin \u5185\u7f6e\u4e86\u5bf9\u5f02\u5e38\u5904\u7406\u7684\u673a\u5236,\u5f53\u53d1\u751f\u5f02\u5e38,gin\u4f1a\u6355\u83b7\u5f02\u5e38\u5e76\u8fd4\u56de\u4e00\u4e2a\u5408\u9002\u7684\u9519\u8bef\u54cd\u5e94,\u540c\u65f6 gin\u5185\u7f6e\u4e86\u4e00\u4e9b\u8f85\u52a9\u65b9\u6cd5, `Abort()` `AbortWithStatus()` \u7528\u4e8e\u5904\u7406\u8fc7\u7a0b\u4e2d\u7ec8\u6b62\u8bf7\u6c42\u5e76\u8fd4\u56de\u7279\u5b9a\u7684\u9519\u8bef\u54cd\u5e94\\n\\n### \u5e76\u53d1\u5904\u7406\\n\\ngin\u6846\u67b6\u4f7f\u7528\u4e86goroutine\u6765\u5b9e\u73b0\u5e76\u53d1\u5904\u7406\u8bf7\u6c42,\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u5728\u72ec\u7acb\u7684goroutine\u4e2d\u6267\u884c\\n\\n\\n\\n## Engine \u7ed3\u6784\u4f53\\n\\n```go \\npackage gin\\n\\ntype HandlerFunc func(*Context)\\ntype RouteInfo struct {\\n\\tMethod      string\\n\\tPath        string\\n\\tHandler     string\\n\\tHandlerFunc HandlerFunc\\n}\\ntype Engine struct {\\n\\t\\n\\t// \u8def\u7531\u7ec4\\n\\tRouteGroup\\n\\t\\n\\t// \u542f\u7528\u81ea\u52a8\u91cd\u5b9a\u5411,\u5982\u679c\u5f53\u524d\u8def\u7531\u65e0\u6cd5\u5339\u914d\u4f46\u5b58\u5728\u6ca1\u6709\u5c3e\u90e8\u659c\u6746\u7684\u8def\u5f84\u7684\u5904\u7406\u7a0b\u5e8f\\n\\tRedirectTrailingSlash bool\\n\\t\\n\\t// \u5982\u679c\u542f\u7528,\u8def\u7531\u5668\u5c06\u5c1d\u8bd5\u4fee\u590d\u5f53\u524d\u8bf7\u6c42\u8def\u5f84\\n\\tRedirectFixedPath bool\\n\\t\\n\\t// \u5982\u679c\u542f\u7528,\u8def\u7531\u5668\u5c06\u68c0\u67e5\u5f53\u524d\u8def\u7531\u662f\u5426\u5141\u8bb8\u5176\u5b83\u4f7f\u7528\u65b9\u6cd5\\n\\tHandleMethodNotAllowed bool\\n\\t\\n\\t// \u5982\u679c\u542f\u7528,\u5c06\u4ece\u8bf7\u6c42\u5934\u4e2d\u89e3\u6790 \u5339\u914d\u5ba2\u6237\u7aefip\\n\\tForwardedByClientIP bool\\n\\t// \\n\\tAppEngine bool\\n\\t// \u5982\u679c\u542f\u7528 \u5c06\u4f7f\u7528 url.Path \\n\\tUseRawPath bool\\n\\t\\n\\t// \\n\\tUnescapePathValues bool\\n\\n\\t// RemoveExtraSlash\u5373\u4f7f\u6709\u989d\u5916\u7684\u659c\u6760\uff0c\u4e5f\u53ef\u4ee5\u4eceURL\u4e2d\u89e3\u6790\u53c2\u6570\u3002\\n\\t// \u53c2\u89c1PR\uff031817\u548c\u95ee\u9898\uff031644\\n\\tRemoveExtraSlash bool\\n\\n\\t// RemoteIPHeaders\u7528\u4e8e\u5728`(*gin.Engine).ForwardedByClientIP`\u4e3a`true`\u4e14\\n\\t// `(*gin.Context).Request.RemoteAddr`\u5339\u914d`(*gin.Engine).SetTrustedProxies()`\u5b9a\u4e49\u7684\u7f51\u7edc\u6e90\u5217\u8868\u4e4b\u4e00\u65f6\uff0c\\n\\t// \u83b7\u53d6\u5ba2\u6237\u7aefIP\u7684\u5934\u90e8\u5217\u8868\u3002\\n\\tRemoteIPHeaders []string\\n\\n\\t// TrustedPlatform\u5982\u679c\u8bbe\u7f6e\u4e3a\u503c\u4e3agin.Platform*\u7684\u5e38\u6570\uff0c\u5c06\u4fe1\u4efb\u8be5\u5e73\u53f0\u8bbe\u7f6e\u7684\u5934\u90e8\uff0c\u4f8b\u5982\u7528\u4e8e\u786e\u5b9a\u5ba2\u6237\u7aefIP\\n\\tTrustedPlatform string\\n\\t\\n    // MaxMultipartMemory\u662f\u4f20\u9012\u7ed9http.Request\u7684ParseMultipartForm\u65b9\u6cd5\u8c03\u7528\u7684\'maxMemory\'\u53c2\u6570\u7684\u503c\u3002\\n\\tMaxMultipartMemory int64\\n\\n\\t// UseH2C\u542f\u7528h2c\u652f\u6301\u3002\\n\\tUseH2C bool\\n\\n\\t// ContextWithFallback\u5728Context.Request.Context()\u4e0d\u4e3anil\u65f6\uff0c\u542f\u7528\u56de\u9000Context.Deadline()\uff0cContext.Done()\uff0cContext.Err()\u548cContext.Value()\u3002\\n\\tContextWithFallback bool\\n\\n\\tdelims           render.Delims\\n\\tsecureJSONPrefix string\\n\\tHTMLRender       render.HTMLRender\\n\\tFuncMap          template.FuncMap\\n\\tallNoRoute       HandlersChain\\n\\tallNoMethod      HandlersChain\\n\\tnoRoute          HandlersChain\\n\\tnoMethod         HandlersChain\\n\\tpool             sync.Pool\\n\\t// \u65b9\u6cd5\u6811\u5217\u8868\\n\\ttrees            methodTrees\\n\\tmaxParams        uint16\\n\\tmaxSections      uint16\\n\\ttrustedProxies   []string\\n\\ttrustedCIDRs     []*net.IPNet\\n\\n\\n\\n}\\n\\n```\\n\\n\\n## RouterGroup \u7ed3\u6784\u4f53\\n\\n```go \\npackage gin\\n\\ntype RouterGroup struct {\\n\\tHandlers HandlesChain // \u50a8\u5b58\u5c06\u8981\u6267\u884c\u7684\u51fd\u6570,\u5305\u62ec\u8def\u7531\u4e2d\u95f4\u4ef6\u548c\u8def\u7531\u51fd\u6570\\n\\tbasePath string // \u8def\u5f84\\n\\tengine *Engine // \u6307\u5411\u6839\u7ed3\u6784\u4f53\\n\\troot bool // \u6807\u5fd7\u662f\u5426\u662f\u6839\u7ed3\u6784\u4f53\\n}\\n\\n```\\n\\n### Use \u65b9\u6cd5\u4f7f\u7528\u4e2d\u95f4\u4ef6\\n\\n`Use` \u65b9\u6cd5,\u4e00\u822c\u4f7f\u7528`Use` \u51fd\u6570\u4f7f\u7528\u4e2d\u95f4\u4ef6"},{"id":"/2023/11/10/golang","metadata":{"permalink":"/blog/2023/11/10/golang","source":"@site/blog/2023/11/10/golang.md","title":"Uber Go Style Guide","description":"Uber Go Style Guide","date":"2023-11-10T00:00:00.000Z","formattedDate":"2023\u5e7411\u670810\u65e5","tags":[],"readingTime":60.215,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Uber Go Style Guide","authors":"ahKevinXy","description":"Uber Go Style Guide","image":"https://source.unsplash.com/random?people&59"},"unlisted":false,"prevItem":{"title":"Gin \u6846\u67b6\u6570\u636e\u7ed3\u6784","permalink":"/blog/2023/11/10/gin"},"nextItem":{"title":"\u5f00\u53d1\u4e60\u60ef","permalink":"/blog/2023/11/10/habit"}},"content":"\x3c!-- truncate --\x3e\\n\\n- [Introduction](#introduction)\\n- [Guidelines](#guidelines)\\n    - [Pointers to Interfaces](#pointers-to-interfaces)\\n    - [Verify Interface Compliance](#verify-interface-compliance)\\n    - [Receivers and Interfaces](#receivers-and-interfaces)\\n    - [Zero-value Mutexes are Valid](#zero-value-mutexes-are-valid)\\n    - [Copy Slices and Maps at Boundaries](#copy-slices-and-maps-at-boundaries)\\n    - [Defer to Clean Up](#defer-to-clean-up)\\n    - [Channel Size is One or None](#channel-size-is-one-or-none)\\n    - [Start Enums at One](#start-enums-at-one)\\n    - [Use `\\"time\\"` to handle time](#use-time-to-handle-time)\\n    - [Errors](#errors)\\n        - [Error Types](#error-types)\\n        - [Error Wrapping](#error-wrapping)\\n        - [Error Naming](#error-naming)\\n        - [Handle Errors Once](#handle-errors-once)\\n    - [Handle Type Assertion Failures](#handle-type-assertion-failures)\\n    - [Don\'t Panic](#dont-panic)\\n    - [Use go.uber.org/atomic](#use-gouberorgatomic)\\n    - [Avoid Mutable Globals](#avoid-mutable-globals)\\n    - [Avoid Embedding Types in Public Structs](#avoid-embedding-types-in-public-structs)\\n    - [Avoid Using Built-In Names](#avoid-using-built-in-names)\\n    - [Avoid `init()`](#avoid-init)\\n    - [Exit in Main](#exit-in-main)\\n        - [Exit Once](#exit-once)\\n    - [Use field tags in marshaled structs](#use-field-tags-in-marshaled-structs)\\n    - [Don\'t fire-and-forget goroutines](#dont-fire-and-forget-goroutines)\\n        - [Wait for goroutines to exit](#wait-for-goroutines-to-exit)\\n        - [No goroutines in `init()`](#no-goroutines-in-init)\\n- [Performance](#performance)\\n    - [Prefer strconv over fmt](#prefer-strconv-over-fmt)\\n    - [Avoid string-to-byte conversion](#avoid-string-to-byte-conversion)\\n    - [Prefer Specifying Container Capacity](#prefer-specifying-container-capacity)\\n- [Style](#style)\\n    - [Avoid overly long lines](#avoid-overly-long-lines)\\n    - [Be Consistent](#be-consistent)\\n    - [Group Similar Declarations](#group-similar-declarations)\\n    - [Import Group Ordering](#import-group-ordering)\\n    - [Package Names](#package-names)\\n    - [Function Names](#function-names)\\n    - [Import Aliasing](#import-aliasing)\\n    - [Function Grouping and Ordering](#function-grouping-and-ordering)\\n    - [Reduce Nesting](#reduce-nesting)\\n    - [Unnecessary Else](#unnecessary-else)\\n    - [Top-level Variable Declarations](#top-level-variable-declarations)\\n    - [Prefix Unexported Globals with _](#prefix-unexported-globals-with-_)\\n    - [Embedding in Structs](#embedding-in-structs)\\n    - [Local Variable Declarations](#local-variable-declarations)\\n    - [nil is a valid slice](#nil-is-a-valid-slice)\\n    - [Reduce Scope of Variables](#reduce-scope-of-variables)\\n    - [Avoid Naked Parameters](#avoid-naked-parameters)\\n    - [Use Raw String Literals to Avoid Escaping](#use-raw-string-literals-to-avoid-escaping)\\n    - [Initializing Structs](#initializing-structs)\\n        - [Use Field Names to Initialize Structs](#use-field-names-to-initialize-structs)\\n        - [Omit Zero Value Fields in Structs](#omit-zero-value-fields-in-structs)\\n        - [Use `var` for Zero Value Structs](#use-var-for-zero-value-structs)\\n        - [Initializing Struct References](#initializing-struct-references)\\n    - [Initializing Maps](#initializing-maps)\\n    - [Format Strings outside Printf](#format-strings-outside-printf)\\n    - [Naming Printf-style Functions](#naming-printf-style-functions)\\n- [Patterns](#patterns)\\n    - [Test Tables](#test-tables)\\n    - [Functional Options](#functional-options)\\n- [Linting](#linting)\\n\\n## Introduction\\n\\nStyles are the conventions that govern our code. The term style is a bit of a\\nmisnomer, since these conventions cover far more than just source file\\nformatting\u2014gofmt handles that for us.\\n\\nThe goal of this guide is to manage this complexity by describing in detail the\\nDos and Don\'ts of writing Go code at Uber. These rules exist to keep the code\\nbase manageable while still allowing engineers to use Go language features\\nproductively.\\n\\nThis guide was originally created by [Prashant Varanasi](https://github.com/prashantv) and [Simon Newton](https://github.com/nomis52) as\\na way to bring some colleagues up to speed with using Go. Over the years it has\\nbeen amended based on feedback from others.\\n\\nThis documents idiomatic conventions in Go code that we follow at Uber. A lot\\nof these are general guidelines for Go, while others extend upon external\\nresources:\\n\\n1. [Effective Go](https://golang.org/doc/effective_go.html)\\n2. [Go Common Mistakes](https://github.com/golang/go/wiki/CommonMistakes)\\n3. [Go Code Review Comments](https://github.com/golang/go/wiki/CodeReviewComments)\\n\\nWe aim for the code samples to be accurate for the two most recent minor versions\\nof Go [releases](https://go.dev/doc/devel/release).\\n\\nAll code should be error-free when run through `golint` and `go vet`. We\\nrecommend setting up your editor to:\\n\\n- Run `goimports` on save\\n- Run `golint` and `go vet` to check for errors\\n\\nYou can find information in editor support for Go tools here:\\nhttps://github.com/golang/go/wiki/IDEsAndTextEditorPlugins\\n\\n## Guidelines\\n\\n### Pointers to Interfaces\\n\\nYou almost never need a pointer to an interface. You should be passing\\ninterfaces as values\u2014the underlying data can still be a pointer.\\n\\nAn interface is two fields:\\n\\n1. A pointer to some type-specific information. You can think of this as\\n   \\"type.\\"\\n2. Data pointer. If the data stored is a pointer, it\u2019s stored directly. If\\n   the data stored is a value, then a pointer to the value is stored.\\n\\nIf you want interface methods to modify the underlying data, you must use a\\npointer.\\n\\n### Verify Interface Compliance\\n\\nVerify interface compliance at compile time where appropriate. This includes:\\n\\n- Exported types that are required to implement specific interfaces as part of\\n  their API contract\\n- Exported or unexported types that are part of a collection of types\\n  implementing the same interface\\n- Other cases where violating an interface would break users\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Handler struct {\\n  // ...\\n}\\n\\n\\n\\nfunc (h *Handler) ServeHTTP(\\n  w http.ResponseWriter,\\n  r *http.Request,\\n) {\\n  ...\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Handler struct {\\n  // ...\\n}\\n\\nvar _ http.Handler = (*Handler)(nil)\\n\\nfunc (h *Handler) ServeHTTP(\\n  w http.ResponseWriter,\\n  r *http.Request,\\n) {\\n  // ...\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThe statement `var _ http.Handler = (*Handler)(nil)` will fail to compile if\\n`*Handler` ever stops matching the `http.Handler` interface.\\n\\nThe right hand side of the assignment should be the zero value of the asserted\\ntype. This is `nil` for pointer types (like `*Handler`), slices, and maps, and\\nan empty struct for struct types.\\n\\n```go\\ntype LogHandler struct {\\n  h   http.Handler\\n  log *zap.Logger\\n}\\n\\nvar _ http.Handler = LogHandler{}\\n\\nfunc (h LogHandler) ServeHTTP(\\n  w http.ResponseWriter,\\n  r *http.Request,\\n) {\\n  // ...\\n}\\n```\\n\\n### Receivers and Interfaces\\n\\nMethods with value receivers can be called on pointers as well as values.\\nMethods with pointer receivers can only be called on pointers or [addressable values](https://golang.org/ref/spec#Method_values).\\n\\nFor example,\\n\\n```go\\ntype S struct {\\n  data string\\n}\\n\\nfunc (s S) Read() string {\\n  return s.data\\n}\\n\\nfunc (s *S) Write(str string) {\\n  s.data = str\\n}\\n\\n// We cannot get pointers to values stored in maps, because they are not\\n// addressable values.\\nsVals := map[int]S{1: {\\"A\\"}}\\n\\n// We can call Read on values stored in the map because Read\\n// has a value receiver, which does not require the value to\\n// be addressable.\\nsVals[1].Read()\\n\\n// We cannot call Write on values stored in the map because Write\\n// has a pointer receiver, and it\'s not possible to get a pointer\\n// to a value stored in a map.\\n//\\n//  sVals[1].Write(\\"test\\")\\n\\nsPtrs := map[int]*S{1: {\\"A\\"}}\\n\\n// You can call both Read and Write if the map stores pointers,\\n// because pointers are intrinsically addressable.\\nsPtrs[1].Read()\\nsPtrs[1].Write(\\"test\\")\\n```\\n\\nSimilarly, an interface can be satisfied by a pointer, even if the method has a\\nvalue receiver.\\n\\n```go\\ntype F interface {\\n  f()\\n}\\n\\ntype S1 struct{}\\n\\nfunc (s S1) f() {}\\n\\ntype S2 struct{}\\n\\nfunc (s *S2) f() {}\\n\\ns1Val := S1{}\\ns1Ptr := &S1{}\\ns2Val := S2{}\\ns2Ptr := &S2{}\\n\\nvar i F\\ni = s1Val\\ni = s1Ptr\\ni = s2Ptr\\n\\n// The following doesn\'t compile, since s2Val is a value, and there is no value receiver for f.\\n//   i = s2Val\\n```\\n\\nEffective Go has a good write up on [Pointers vs.\xa0Values](https://golang.org/doc/effective_go.html#pointers_vs_values).\\n\\n### Zero-value Mutexes are Valid\\n\\nThe zero-value of `sync.Mutex` and `sync.RWMutex` is valid, so you almost\\nnever need a pointer to a mutex.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nmu := new(sync.Mutex)\\nmu.Lock()\\n```\\n\\n</td><td>\\n\\n```go\\nvar mu sync.Mutex\\nmu.Lock()\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nIf you use a struct by pointer, then the mutex should be a non-pointer field on\\nit. Do not embed the mutex on the struct, even if the struct is not exported.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype SMap struct {\\n  sync.Mutex\\n\\n  data map[string]string\\n}\\n\\nfunc NewSMap() *SMap {\\n  return &SMap{\\n    data: make(map[string]string),\\n  }\\n}\\n\\nfunc (m *SMap) Get(k string) string {\\n  m.Lock()\\n  defer m.Unlock()\\n\\n  return m.data[k]\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype SMap struct {\\n  mu sync.Mutex\\n\\n  data map[string]string\\n}\\n\\nfunc NewSMap() *SMap {\\n  return &SMap{\\n    data: make(map[string]string),\\n  }\\n}\\n\\nfunc (m *SMap) Get(k string) string {\\n  m.mu.Lock()\\n  defer m.mu.Unlock()\\n\\n  return m.data[k]\\n}\\n```\\n\\n</td></tr>\\n\\n<tr><td>\\n\\nThe `Mutex` field, and the `Lock` and `Unlock` methods are unintentionally part\\nof the exported API of `SMap`.\\n\\n</td><td>\\n\\nThe mutex and its methods are implementation details of `SMap` hidden from its\\ncallers.\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Copy Slices and Maps at Boundaries\\n\\nSlices and maps contain pointers to the underlying data so be wary of scenarios\\nwhen they need to be copied.\\n\\n#### Receiving Slices and Maps\\n\\nKeep in mind that users can modify a map or slice you received as an argument\\nif you store a reference to it.\\n\\n<table>\\n<thead><tr><th>Bad</th> <th>Good</th></tr></thead>\\n<tbody>\\n<tr>\\n<td>\\n\\n```go\\nfunc (d *Driver) SetTrips(trips []Trip) {\\n  d.trips = trips\\n}\\n\\ntrips := ...\\nd1.SetTrips(trips)\\n\\n// Did you mean to modify d1.trips?\\ntrips[0] = ...\\n```\\n\\n</td>\\n<td>\\n\\n```go\\nfunc (d *Driver) SetTrips(trips []Trip) {\\n  d.trips = make([]Trip, len(trips))\\n  copy(d.trips, trips)\\n}\\n\\ntrips := ...\\nd1.SetTrips(trips)\\n\\n// We can now modify trips[0] without affecting d1.trips.\\ntrips[0] = ...\\n```\\n\\n</td>\\n</tr>\\n\\n</tbody>\\n</table>\\n\\n#### Returning Slices and Maps\\n\\nSimilarly, be wary of user modifications to maps or slices exposing internal\\nstate.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Stats struct {\\n  mu sync.Mutex\\n  counters map[string]int\\n}\\n\\n// Snapshot returns the current stats.\\nfunc (s *Stats) Snapshot() map[string]int {\\n  s.mu.Lock()\\n  defer s.mu.Unlock()\\n\\n  return s.counters\\n}\\n\\n// snapshot is no longer protected by the mutex, so any\\n// access to the snapshot is subject to data races.\\nsnapshot := stats.Snapshot()\\n```\\n\\n</td><td>\\n\\n```go\\ntype Stats struct {\\n  mu sync.Mutex\\n  counters map[string]int\\n}\\n\\nfunc (s *Stats) Snapshot() map[string]int {\\n  s.mu.Lock()\\n  defer s.mu.Unlock()\\n\\n  result := make(map[string]int, len(s.counters))\\n  for k, v := range s.counters {\\n    result[k] = v\\n  }\\n  return result\\n}\\n\\n// Snapshot is now a copy.\\nsnapshot := stats.Snapshot()\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Defer to Clean Up\\n\\nUse defer to clean up resources such as files and locks.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\np.Lock()\\nif p.count < 10 {\\n  p.Unlock()\\n  return p.count\\n}\\n\\np.count++\\nnewCount := p.count\\np.Unlock()\\n\\nreturn newCount\\n\\n// easy to miss unlocks due to multiple returns\\n```\\n\\n</td><td>\\n\\n```go\\np.Lock()\\ndefer p.Unlock()\\n\\nif p.count < 10 {\\n  return p.count\\n}\\n\\np.count++\\nreturn p.count\\n\\n// more readable\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nDefer has an extremely small overhead and should be avoided only if you can\\nprove that your function execution time is in the order of nanoseconds. The\\nreadability win of using defers is worth the miniscule cost of using them. This\\nis especially true for larger methods that have more than simple memory\\naccesses, where the other computations are more significant than the `defer`.\\n\\n### Channel Size is One or None\\n\\nChannels should usually have a size of one or be unbuffered. By default,\\nchannels are unbuffered and have a size of zero. Any other size\\nmust be subject to a high level of scrutiny. Consider how the size is\\ndetermined, what prevents the channel from filling up under load and blocking\\nwriters, and what happens when this occurs.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// Ought to be enough for anybody!\\nc := make(chan int, 64)\\n```\\n\\n</td><td>\\n\\n```go\\n// Size of one\\nc := make(chan int, 1) // or\\n// Unbuffered channel, size of zero\\nc := make(chan int)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Start Enums at One\\n\\nThe standard way of introducing enumerations in Go is to declare a custom type\\nand a `const` group with `iota`. Since variables have a 0 default value, you\\nshould usually start your enums on a non-zero value.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Operation int\\n\\nconst (\\n  Add Operation = iota\\n  Subtract\\n  Multiply\\n)\\n\\n// Add=0, Subtract=1, Multiply=2\\n```\\n\\n</td><td>\\n\\n```go\\ntype Operation int\\n\\nconst (\\n  Add Operation = iota + 1\\n  Subtract\\n  Multiply\\n)\\n\\n// Add=1, Subtract=2, Multiply=3\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThere are cases where using the zero value makes sense, for example when the\\nzero value case is the desirable default behavior.\\n\\n```go\\ntype LogOutput int\\n\\nconst (\\n  LogToStdout LogOutput = iota\\n  LogToFile\\n  LogToRemote\\n)\\n\\n// LogToStdout=0, LogToFile=1, LogToRemote=2\\n```\\n\\n\x3c!-- TODO: section on String methods for enums --\x3e\\n\\n### Use `\\"time\\"` to handle time\\n\\nTime is complicated. Incorrect assumptions often made about time include the\\nfollowing.\\n\\n1. A day has 24 hours\\n2. An hour has 60 minutes\\n3. A week has 7 days\\n4. A year has 365 days\\n5. [And a lot more](https://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time)\\n\\nFor example, *1* means that adding 24 hours to a time instant will not always\\nyield a new calendar day.\\n\\nTherefore, always use the [`\\"time\\"`](https://golang.org/pkg/time/) package when dealing with time because it\\nhelps deal with these incorrect assumptions in a safer, more accurate manner.\\n\\n#### Use `time.Time` for instants of time\\n\\nUse [`time.Time`](https://golang.org/pkg/time/#Time) when dealing with instants of time, and the methods on\\n`time.Time` when comparing, adding, or subtracting time.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc isActive(now, start, stop int) bool {\\n  return start <= now && now < stop\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc isActive(now, start, stop time.Time) bool {\\n  return (start.Before(now) || start.Equal(now)) && now.Before(stop)\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n#### Use `time.Duration` for periods of time\\n\\nUse [`time.Duration`](https://golang.org/pkg/time/#Duration) when dealing with periods of time.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc poll(delay int) {\\n  for {\\n    // ...\\n    time.Sleep(time.Duration(delay) * time.Millisecond)\\n  }\\n}\\n\\npoll(10) // was it seconds or milliseconds?\\n```\\n\\n</td><td>\\n\\n```go\\nfunc poll(delay time.Duration) {\\n  for {\\n    // ...\\n    time.Sleep(delay)\\n  }\\n}\\n\\npoll(10*time.Second)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nGoing back to the example of adding 24 hours to a time instant, the method we\\nuse to add time depends on intent. If we want the same time of the day, but on\\nthe next calendar day, we should use [`Time.AddDate`](https://golang.org/pkg/time/#Time.AddDate). However, if we want an\\ninstant of time guaranteed to be 24 hours after the previous time, we should\\nuse [`Time.Add`](https://golang.org/pkg/time/#Time.Add).\\n\\n```go\\nnewDay := t.AddDate(0 /* years */, 0 /* months */, 1 /* days */)\\nmaybeNewDay := t.Add(24 * time.Hour)\\n```\\n\\n#### Use `time.Time` and `time.Duration` with external systems\\n\\nUse `time.Duration` and `time.Time` in interactions with external systems when\\npossible. For example:\\n\\n- Command-line flags: [`flag`](https://golang.org/pkg/flag/) supports `time.Duration` via\\n  [`time.ParseDuration`](https://golang.org/pkg/time/#ParseDuration)\\n- JSON: [`encoding/json`](https://golang.org/pkg/encoding/json/) supports encoding `time.Time` as an [RFC 3339](https://tools.ietf.org/html/rfc3339)\\n  string via its [`UnmarshalJSON` method](https://golang.org/pkg/time/#Time.UnmarshalJSON)\\n- SQL: [`database/sql`](https://golang.org/pkg/database/sql/) supports converting `DATETIME` or `TIMESTAMP` columns\\n  into `time.Time` and back if the underlying driver supports it\\n- YAML: [`gopkg.in/yaml.v2`](https://godoc.org/gopkg.in/yaml.v2) supports `time.Time` as an [RFC 3339](https://tools.ietf.org/html/rfc3339) string, and\\n  `time.Duration` via [`time.ParseDuration`](https://golang.org/pkg/time/#ParseDuration).\\n\\nWhen it is not possible to use `time.Duration` in these interactions, use\\n`int` or `float64` and include the unit in the name of the field.\\n\\nFor example, since `encoding/json` does not support `time.Duration`, the unit\\nis included in the name of the field.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// {\\"interval\\": 2}\\ntype Config struct {\\n  Interval int `json:\\"interval\\"`\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// {\\"intervalMillis\\": 2000}\\ntype Config struct {\\n  IntervalMillis int `json:\\"intervalMillis\\"`\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nWhen it is not possible to use `time.Time` in these interactions, unless an\\nalternative is agreed upon, use `string` and format timestamps as defined in\\n[RFC 3339](https://tools.ietf.org/html/rfc3339). This format is used by default by [`Time.UnmarshalText`](https://golang.org/pkg/time/#Time.UnmarshalText) and is\\navailable for use in `Time.Format` and `time.Parse` via [`time.RFC3339`](https://golang.org/pkg/time/#RFC3339).\\n\\nAlthough this tends to not be a problem in practice, keep in mind that the\\n`\\"time\\"` package does not support parsing timestamps with leap seconds\\n([8728](https://github.com/golang/go/issues/8728)), nor does it account for leap seconds in calculations ([15190](https://github.com/golang/go/issues/15190)). If\\nyou compare two instants of time, the difference will not include the leap\\nseconds that may have occurred between those two instants.\\n\\n### Errors\\n\\n#### Error Types\\n\\nThere are few options for declaring errors.\\nConsider the following before picking the option best suited for your use case.\\n\\n- Does the caller need to match the error so that they can handle it?\\n  If yes, we must support the [`errors.Is`](https://golang.org/pkg/errors/#Is) or [`errors.As`](https://golang.org/pkg/errors/#As) functions\\n  by declaring a top-level error variable or a custom type.\\n- Is the error message a static string,\\n  or is it a dynamic string that requires contextual information?\\n  For the former, we can use [`errors.New`](https://golang.org/pkg/errors/#New), but for the latter we must\\n  use [`fmt.Errorf`](https://golang.org/pkg/fmt/#Errorf) or a custom error type.\\n- Are we propagating a new error returned by a downstream function?\\n  If so, see the [section on error wrapping](#error-wrapping).\\n\\n| Error matching? | Error Message | Guidance                                                                |\\n|-----------------|---------------|-------------------------------------------------------------------------|\\n| No              | static        | [`errors.New`](https://golang.org/pkg/errors/#New)                      |\\n| No              | dynamic       | [`fmt.Errorf`](https://golang.org/pkg/fmt/#Errorf)                      |\\n| Yes             | static        | top-level `var` with [`errors.New`](https://golang.org/pkg/errors/#New) |\\n| Yes             | dynamic       | custom `error` type                                                     |\\n\\nFor example,\\nuse [`errors.New`](https://golang.org/pkg/errors/#New) for an error with a static string.\\nExport this error as a variable to support matching it with `errors.Is`\\nif the caller needs to match and handle this error.\\n\\n<table>\\n<thead><tr><th>No error matching</th><th>Error matching</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// package foo\\n\\nfunc Open() error {\\n  return errors.New(\\"could not open\\")\\n}\\n\\n// package bar\\n\\nif err := foo.Open(); err != nil {\\n  // Can\'t handle the error.\\n  panic(\\"unknown error\\")\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// package foo\\n\\nvar ErrCouldNotOpen = errors.New(\\"could not open\\")\\n\\nfunc Open() error {\\n  return ErrCouldNotOpen\\n}\\n\\n// package bar\\n\\nif err := foo.Open(); err != nil {\\n  if errors.Is(err, foo.ErrCouldNotOpen) {\\n    // handle the error\\n  } else {\\n    panic(\\"unknown error\\")\\n  }\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nFor an error with a dynamic string,\\nuse [`fmt.Errorf`](https://golang.org/pkg/fmt/#Errorf) if the caller does not need to match it,\\nand a custom `error` if the caller does need to match it.\\n\\n<table>\\n<thead><tr><th>No error matching</th><th>Error matching</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// package foo\\n\\nfunc Open(file string) error {\\n  return fmt.Errorf(\\"file %q not found\\", file)\\n}\\n\\n// package bar\\n\\nif err := foo.Open(\\"testfile.txt\\"); err != nil {\\n  // Can\'t handle the error.\\n  panic(\\"unknown error\\")\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// package foo\\n\\ntype NotFoundError struct {\\n  File string\\n}\\n\\nfunc (e *NotFoundError) Error() string {\\n  return fmt.Sprintf(\\"file %q not found\\", e.File)\\n}\\n\\nfunc Open(file string) error {\\n  return &NotFoundError{File: file}\\n}\\n\\n\\n// package bar\\n\\nif err := foo.Open(\\"testfile.txt\\"); err != nil {\\n  var notFound *NotFoundError\\n  if errors.As(err, &notFound) {\\n    // handle the error\\n  } else {\\n    panic(\\"unknown error\\")\\n  }\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nNote that if you export error variables or types from a package,\\nthey will become part of the public API of the package.\\n\\n#### Error Wrapping\\n\\nThere are three main options for propagating errors if a call fails:\\n\\n- return the original error as-is\\n- add context with `fmt.Errorf` and the `%w` verb\\n- add context with `fmt.Errorf` and the `%v` verb\\n\\nReturn the original error as-is if there is no additional context to add.\\nThis maintains the original error type and message.\\nThis is well suited for cases when the underlying error message\\nhas sufficient information to track down where it came from.\\n\\nOtherwise, add context to the error message where possible\\nso that instead of a vague error such as \\"connection refused\\",\\nyou get more useful errors such as \\"call service foo: connection refused\\".\\n\\nUse `fmt.Errorf` to add context to your errors,\\npicking between the `%w` or `%v` verbs\\nbased on whether the caller should be able to\\nmatch and extract the underlying cause.\\n\\n- Use `%w` if the caller should have access to the underlying error.\\n  This is a good default for most wrapped errors,\\n  but be aware that callers may begin to rely on this behavior.\\n  So for cases where the wrapped error is a known `var` or type,\\n  document and test it as part of your function\'s contract.\\n- Use `%v` to obfuscate the underlying error.\\n  Callers will be unable to match it,\\n  but you can switch to `%w` in the future if needed.\\n\\nWhen adding context to returned errors, keep the context succinct by avoiding\\nphrases like \\"failed to\\", which state the obvious and pile up as the error\\npercolates up through the stack:\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ns, err := store.New()\\nif err != nil {\\n    return fmt.Errorf(\\n        \\"failed to create new store: %w\\", err)\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ns, err := store.New()\\nif err != nil {\\n    return fmt.Errorf(\\n        \\"new store: %w\\", err)\\n}\\n```\\n\\n</td></tr><tr><td>\\n\\n```plain\\nfailed to x: failed to y: failed to create new store: the error\\n```\\n\\n</td><td>\\n\\n```plain\\nx: y: new store: the error\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nHowever once the error is sent to another system, it should be clear the\\nmessage is an error (e.g. an `err` tag or \\"Failed\\" prefix in logs).\\n\\nSee also [Don\'t just check errors, handle them gracefully](https://dave.cheney.net/2016/04/27/dont-just-check-errors-handle-them-gracefully).\\n\\n#### Error Naming\\n\\nFor error values stored as global variables,\\nuse the prefix `Err` or `err` depending on whether they\'re exported.\\nThis guidance supersedes the [Prefix Unexported Globals with _](#prefix-unexported-globals-with-_).\\n\\n```go\\nvar (\\n  // The following two errors are exported\\n  // so that users of this package can match them\\n  // with errors.Is.\\n\\n  ErrBrokenLink = errors.New(\\"link is broken\\")\\n  ErrCouldNotOpen = errors.New(\\"could not open\\")\\n\\n  // This error is not exported because\\n  // we don\'t want to make it part of our public API.\\n  // We may still use it inside the package\\n  // with errors.Is.\\n\\n  errNotFound = errors.New(\\"not found\\")\\n)\\n```\\n\\nFor custom error types, use the suffix `Error` instead.\\n\\n```go\\n// Similarly, this error is exported\\n// so that users of this package can match it\\n// with errors.As.\\n\\ntype NotFoundError struct {\\n  File string\\n}\\n\\nfunc (e *NotFoundError) Error() string {\\n  return fmt.Sprintf(\\"file %q not found\\", e.File)\\n}\\n\\n// And this error is not exported because\\n// we don\'t want to make it part of the public API.\\n// We can still use it inside the package\\n// with errors.As.\\n\\ntype resolveError struct {\\n  Path string\\n}\\n\\nfunc (e *resolveError) Error() string {\\n  return fmt.Sprintf(\\"resolve %q\\", e.Path)\\n}\\n```\\n\\n#### Handle Errors Once\\n\\nWhen a caller receives an error from a callee,\\nit can handle it in a variety of different ways\\ndepending on what it knows about the error.\\n\\nThese include, but not are limited to:\\n\\n- if the callee contract defines specific errors,\\n  matching the error with `errors.Is` or `errors.As`\\n  and handling the branches differently\\n- if the error is recoverable,\\n  logging the error and degrading gracefully\\n- if the error represents a domain-specific failure condition,\\n  returning a well-defined error\\n- returning the error, either [wrapped](#error-wrapping) or verbatim\\n\\nRegardless of how the caller handles the error,\\nit should typically handle each error only once.\\nThe caller should not, for example, log the error and then return it,\\nbecause *its* callers may handle the error as well.\\n\\nFor example, consider the following cases:\\n\\n<table>\\n<thead><tr><th>Description</th><th>Code</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n**Bad**: Log the error and return it\\n\\nCallers further up the stack will likely take a similar action with the error.\\nDoing so causing a lot of noise in the application logs for little value.\\n\\n</td><td>\\n\\n```go\\nu, err := getUser(id)\\nif err != nil {\\n  // BAD: See description\\n  log.Printf(\\"Could not get user %q: %v\\", id, err)\\n  return err\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n**Good**: Wrap the error and return it\\n\\nCallers further up the stack will handle the error.\\nUse of `%w` ensures they can match the error with `errors.Is` or `errors.As`\\nif relevant.\\n\\n</td><td>\\n\\n```go\\nu, err := getUser(id)\\nif err != nil {\\n  return fmt.Errorf(\\"get user %q: %w\\", id, err)\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n**Good**: Log the error and degrade gracefully\\n\\nIf the operation isn\'t strictly necessary,\\nwe can provide a degraded but unbroken experience\\nby recovering from it.\\n\\n</td><td>\\n\\n```go\\nif err := emitMetrics(); err != nil {\\n  // Failure to write metrics should not\\n  // break the application.\\n  log.Printf(\\"Could not emit metrics: %v\\", err)\\n}\\n\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n**Good**: Match the error and degrade gracefully\\n\\nIf the callee defines a specific error in its contract,\\nand the failure is recoverable,\\nmatch on that error case and degrade gracefully.\\nFor all other cases, wrap the error and return it.\\n\\nCallers further up the stack will handle other errors.\\n\\n</td><td>\\n\\n```go\\ntz, err := getUserTimeZone(id)\\nif err != nil {\\n  if errors.Is(err, ErrUserNotFound) {\\n    // User doesn\'t exist. Use UTC.\\n    tz = time.UTC\\n  } else {\\n    return fmt.Errorf(\\"get user %q: %w\\", id, err)\\n  }\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Handle Type Assertion Failures\\n\\nThe single return value form of a [type assertion](https://golang.org/ref/spec#Type_assertions) will panic on an incorrect\\ntype. Therefore, always use the \\"comma ok\\" idiom.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nt := i.(string)\\n```\\n\\n</td><td>\\n\\n```go\\nt, ok := i.(string)\\nif !ok {\\n  // handle the error gracefully\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n\x3c!-- TODO: There are a few situations where the single assignment form is\\nfine. --\x3e\\n\\n### Don\'t Panic\\n\\nCode running in production must avoid panics. Panics are a major source of\\n[cascading failures](https://en.wikipedia.org/wiki/Cascading_failure). If an error occurs, the function must return an error and\\nallow the caller to decide how to handle it.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc run(args []string) {\\n  if len(args) == 0 {\\n    panic(\\"an argument is required\\")\\n  }\\n  // ...\\n}\\n\\nfunc main() {\\n  run(os.Args[1:])\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc run(args []string) error {\\n  if len(args) == 0 {\\n    return errors.New(\\"an argument is required\\")\\n  }\\n  // ...\\n  return nil\\n}\\n\\nfunc main() {\\n  if err := run(os.Args[1:]); err != nil {\\n    fmt.Fprintln(os.Stderr, err)\\n    os.Exit(1)\\n  }\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nPanic/recover is not an error handling strategy. A program must panic only when\\nsomething irrecoverable happens such as a nil dereference. An exception to this is\\nprogram initialization: bad things at program startup that should abort the\\nprogram may cause panic.\\n\\n```go\\nvar _statusTemplate = template.Must(template.New(\\"name\\").Parse(\\"_statusHTML\\"))\\n```\\n\\nEven in tests, prefer `t.Fatal` or `t.FailNow` over panics to ensure that the\\ntest is marked as failed.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// func TestFoo(t *testing.T)\\n\\nf, err := os.CreateTemp(\\"\\", \\"test\\")\\nif err != nil {\\n  panic(\\"failed to set up test\\")\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// func TestFoo(t *testing.T)\\n\\nf, err := os.CreateTemp(\\"\\", \\"test\\")\\nif err != nil {\\n  t.Fatal(\\"failed to set up test\\")\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Use go.uber.org/atomic\\n\\nAtomic operations with the [sync/atomic](https://golang.org/pkg/sync/atomic/) package operate on the raw types\\n(`int32`, `int64`, etc.) so it is easy to forget to use the atomic operation to\\nread or modify the variables.\\n\\n[go.uber.org/atomic](https://godoc.org/go.uber.org/atomic) adds type safety to these operations by hiding the\\nunderlying type. Additionally, it includes a convenient `atomic.Bool` type.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype foo struct {\\n  running int32  // atomic\\n}\\n\\nfunc (f* foo) start() {\\n  if atomic.SwapInt32(&f.running, 1) == 1 {\\n     // already running\u2026\\n     return\\n  }\\n  // start the Foo\\n}\\n\\nfunc (f *foo) isRunning() bool {\\n  return f.running == 1  // race!\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype foo struct {\\n  running atomic.Bool\\n}\\n\\nfunc (f *foo) start() {\\n  if f.running.Swap(true) {\\n     // already running\u2026\\n     return\\n  }\\n  // start the Foo\\n}\\n\\nfunc (f *foo) isRunning() bool {\\n  return f.running.Load()\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Avoid Mutable Globals\\n\\nAvoid mutating global variables, instead opting for dependency injection.\\nThis applies to function pointers as well as other kinds of values.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// sign.go\\n\\nvar _timeNow = time.Now\\n\\nfunc sign(msg string) string {\\n  now := _timeNow()\\n  return signWithTime(msg, now)\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// sign.go\\n\\ntype signer struct {\\n  now func() time.Time\\n}\\n\\nfunc newSigner() *signer {\\n  return &signer{\\n    now: time.Now,\\n  }\\n}\\n\\nfunc (s *signer) Sign(msg string) string {\\n  now := s.now()\\n  return signWithTime(msg, now)\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```go\\n// sign_test.go\\n\\nfunc TestSign(t *testing.T) {\\n  oldTimeNow := _timeNow\\n  _timeNow = func() time.Time {\\n    return someFixedTime\\n  }\\n  defer func() { _timeNow = oldTimeNow }()\\n\\n  assert.Equal(t, want, sign(give))\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// sign_test.go\\n\\nfunc TestSigner(t *testing.T) {\\n  s := newSigner()\\n  s.now = func() time.Time {\\n    return someFixedTime\\n  }\\n\\n  assert.Equal(t, want, s.Sign(give))\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Avoid Embedding Types in Public Structs\\n\\nThese embedded types leak implementation details, inhibit type evolution, and\\nobscure documentation.\\n\\nAssuming you have implemented a variety of list types using a shared\\n`AbstractList`, avoid embedding the `AbstractList` in your concrete list\\nimplementations.\\nInstead, hand-write only the methods to your concrete list that will delegate\\nto the abstract list.\\n\\n```go\\ntype AbstractList struct {}\\n\\n// Add adds an entity to the list.\\nfunc (l *AbstractList) Add(e Entity) {\\n  // ...\\n}\\n\\n// Remove removes an entity from the list.\\nfunc (l *AbstractList) Remove(e Entity) {\\n  // ...\\n}\\n```\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// ConcreteList is a list of entities.\\ntype ConcreteList struct {\\n  *AbstractList\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// ConcreteList is a list of entities.\\ntype ConcreteList struct {\\n  list *AbstractList\\n}\\n\\n// Add adds an entity to the list.\\nfunc (l *ConcreteList) Add(e Entity) {\\n  l.list.Add(e)\\n}\\n\\n// Remove removes an entity from the list.\\nfunc (l *ConcreteList) Remove(e Entity) {\\n  l.list.Remove(e)\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nGo allows [type embedding](https://golang.org/doc/effective_go.html#embedding) as a compromise between inheritance and composition.\\nThe outer type gets implicit copies of the embedded type\'s methods.\\nThese methods, by default, delegate to the same method of the embedded\\ninstance.\\n\\nThe struct also gains a field by the same name as the type.\\nSo, if the embedded type is public, the field is public.\\nTo maintain backward compatibility, every future version of the outer type must\\nkeep the embedded type.\\n\\nAn embedded type is rarely necessary.\\nIt is a convenience that helps you avoid writing tedious delegate methods.\\n\\nEven embedding a compatible AbstractList *interface*, instead of the struct,\\nwould offer the developer more flexibility to change in the future, but still\\nleak the detail that the concrete lists use an abstract implementation.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// AbstractList is a generalized implementation\\n// for various kinds of lists of entities.\\ntype AbstractList interface {\\n  Add(Entity)\\n  Remove(Entity)\\n}\\n\\n// ConcreteList is a list of entities.\\ntype ConcreteList struct {\\n  AbstractList\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// ConcreteList is a list of entities.\\ntype ConcreteList struct {\\n  list AbstractList\\n}\\n\\n// Add adds an entity to the list.\\nfunc (l *ConcreteList) Add(e Entity) {\\n  l.list.Add(e)\\n}\\n\\n// Remove removes an entity from the list.\\nfunc (l *ConcreteList) Remove(e Entity) {\\n  l.list.Remove(e)\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nEither with an embedded struct or an embedded interface, the embedded type\\nplaces limits on the evolution of the type.\\n\\n- Adding methods to an embedded interface is a breaking change.\\n- Removing methods from an embedded struct is a breaking change.\\n- Removing the embedded type is a breaking change.\\n- Replacing the embedded type, even with an alternative that satisfies the same\\n  interface, is a breaking change.\\n\\nAlthough writing these delegate methods is tedious, the additional effort hides\\nan implementation detail, leaves more opportunities for change, and also\\neliminates indirection for discovering the full List interface in\\ndocumentation.\\n\\n### Avoid Using Built-In Names\\n\\nThe Go [language specification](https://golang.org/ref/spec) outlines several built-in,\\n[predeclared identifiers](https://golang.org/ref/spec#Predeclared_identifiers) that should not be used as names within Go programs.\\n\\nDepending on context, reusing these identifiers as names will either shadow\\nthe original within the current lexical scope (and any nested scopes) or make\\naffected code confusing. In the best case, the compiler will complain; in the\\nworst case, such code may introduce latent, hard-to-grep bugs.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nvar error string\\n// `error` shadows the builtin\\n\\n// or\\n\\nfunc handleErrorMessage(error string) {\\n    // `error` shadows the builtin\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nvar errorMessage string\\n// `error` refers to the builtin\\n\\n// or\\n\\nfunc handleErrorMessage(msg string) {\\n    // `error` refers to the builtin\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```go\\ntype Foo struct {\\n    // While these fields technically don\'t\\n    // constitute shadowing, grepping for\\n    // `error` or `string` strings is now\\n    // ambiguous.\\n    error  error\\n    string string\\n}\\n\\nfunc (f Foo) Error() error {\\n    // `error` and `f.error` are\\n    // visually similar\\n    return f.error\\n}\\n\\nfunc (f Foo) String() string {\\n    // `string` and `f.string` are\\n    // visually similar\\n    return f.string\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Foo struct {\\n    // `error` and `string` strings are\\n    // now unambiguous.\\n    err error\\n    str string\\n}\\n\\nfunc (f Foo) Error() error {\\n    return f.err\\n}\\n\\nfunc (f Foo) String() string {\\n    return f.str\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nNote that the compiler will not generate errors when using predeclared\\nidentifiers, but tools such as `go vet` should correctly point out these and\\nother cases of shadowing.\\n\\n### Avoid `init()`\\n\\nAvoid `init()` where possible. When `init()` is unavoidable or desirable, code\\nshould attempt to:\\n\\n1. Be completely deterministic, regardless of program environment or invocation.\\n2. Avoid depending on the ordering or side-effects of other `init()` functions.\\n   While `init()` ordering is well-known, code can change, and thus\\n   relationships between `init()` functions can make code brittle and\\n   error-prone.\\n3. Avoid accessing or manipulating global or environment state, such as machine\\n   information, environment variables, working directory, program\\n   arguments/inputs, etc.\\n4. Avoid I/O, including both filesystem, network, and system calls.\\n\\nCode that cannot satisfy these requirements likely belongs as a helper to be\\ncalled as part of `main()` (or elsewhere in a program\'s lifecycle), or be\\nwritten as part of `main()` itself. In particular, libraries that are intended\\nto be used by other programs should take special care to be completely\\ndeterministic and not perform \\"init magic\\".\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Foo struct {\\n    // ...\\n}\\n\\nvar _defaultFoo Foo\\n\\nfunc init() {\\n    _defaultFoo = Foo{\\n        // ...\\n    }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nvar _defaultFoo = Foo{\\n    // ...\\n}\\n\\n// or, better, for testability:\\n\\nvar _defaultFoo = defaultFoo()\\n\\nfunc defaultFoo() Foo {\\n    return Foo{\\n        // ...\\n    }\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```go\\ntype Config struct {\\n    // ...\\n}\\n\\nvar _config Config\\n\\nfunc init() {\\n    // Bad: based on current directory\\n    cwd, _ := os.Getwd()\\n\\n    // Bad: I/O\\n    raw, _ := os.ReadFile(\\n        path.Join(cwd, \\"config\\", \\"config.yaml\\"),\\n    )\\n\\n    yaml.Unmarshal(raw, &_config)\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Config struct {\\n    // ...\\n}\\n\\nfunc loadConfig() Config {\\n    cwd, err := os.Getwd()\\n    // handle err\\n\\n    raw, err := os.ReadFile(\\n        path.Join(cwd, \\"config\\", \\"config.yaml\\"),\\n    )\\n    // handle err\\n\\n    var config Config\\n    yaml.Unmarshal(raw, &config)\\n\\n    return config\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nConsidering the above, some situations in which `init()` may be preferable or\\nnecessary might include:\\n\\n- Complex expressions that cannot be represented as single assignments.\\n- Pluggable hooks, such as `database/sql` dialects, encoding type registries, etc.\\n- Optimizations to [Google Cloud Functions](https://cloud.google.com/functions/docs/bestpractices/tips#use_global_variables_to_reuse_objects_in_future_invocations) and other forms of deterministic\\n  precomputation.\\n\\n### Exit in Main\\n\\nGo programs use [`os.Exit`](https://golang.org/pkg/os/#Exit) or [`log.Fatal*`](https://golang.org/pkg/log/#Fatal) to exit immediately. (Panicking\\nis not a good way to exit programs, please [don\'t panic](#dont-panic).)\\n\\nCall one of `os.Exit` or `log.Fatal*` **only in `main()`**. All other\\nfunctions should return errors to signal failure.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc main() {\\n  body := readFile(path)\\n  fmt.Println(body)\\n}\\n\\nfunc readFile(path string) string {\\n  f, err := os.Open(path)\\n  if err != nil {\\n    log.Fatal(err)\\n  }\\n\\n  b, err := io.ReadAll(f)\\n  if err != nil {\\n    log.Fatal(err)\\n  }\\n\\n  return string(b)\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc main() {\\n  body, err := readFile(path)\\n  if err != nil {\\n    log.Fatal(err)\\n  }\\n  fmt.Println(body)\\n}\\n\\nfunc readFile(path string) (string, error) {\\n  f, err := os.Open(path)\\n  if err != nil {\\n    return \\"\\", err\\n  }\\n\\n  b, err := io.ReadAll(f)\\n  if err != nil {\\n    return \\"\\", err\\n  }\\n\\n  return string(b), nil\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nRationale: Programs with multiple functions that exit present a few issues:\\n\\n- Non-obvious control flow: Any function can exit the program so it becomes\\n  difficult to reason about the control flow.\\n- Difficult to test: A function that exits the program will also exit the test\\n  calling it. This makes the function difficult to test and introduces risk of\\n  skipping other tests that have not yet been run by `go test`.\\n- Skipped cleanup: When a function exits the program, it skips function calls\\n  enqueued with `defer` statements. This adds risk of skipping important\\n  cleanup tasks.\\n\\n#### Exit Once\\n\\nIf possible, prefer to call `os.Exit` or `log.Fatal` **at most once** in your\\n`main()`. If there are multiple error scenarios that halt program execution,\\nput that logic under a separate function and return errors from it.\\n\\nThis has the effect of shortening your `main()` function and putting all key\\nbusiness logic into a separate, testable function.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\npackage main\\n\\nfunc main() {\\n  args := os.Args[1:]\\n  if len(args) != 1 {\\n    log.Fatal(\\"missing file\\")\\n  }\\n  name := args[0]\\n\\n  f, err := os.Open(name)\\n  if err != nil {\\n    log.Fatal(err)\\n  }\\n  defer f.Close()\\n\\n  // If we call log.Fatal after this line,\\n  // f.Close will not be called.\\n\\n  b, err := io.ReadAll(f)\\n  if err != nil {\\n    log.Fatal(err)\\n  }\\n\\n  // ...\\n}\\n```\\n\\n</td><td>\\n\\n```go\\npackage main\\n\\nfunc main() {\\n  if err := run(); err != nil {\\n    log.Fatal(err)\\n  }\\n}\\n\\nfunc run() error {\\n  args := os.Args[1:]\\n  if len(args) != 1 {\\n    return errors.New(\\"missing file\\")\\n  }\\n  name := args[0]\\n\\n  f, err := os.Open(name)\\n  if err != nil {\\n    return err\\n  }\\n  defer f.Close()\\n\\n  b, err := io.ReadAll(f)\\n  if err != nil {\\n    return err\\n  }\\n\\n  // ...\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThe example above uses `log.Fatal`, but the guidance also applies to\\n`os.Exit` or any library code that calls `os.Exit`.\\n\\n```go\\nfunc main() {\\n  if err := run(); err != nil {\\n    fmt.Fprintln(os.Stderr, err)\\n    os.Exit(1)\\n  }\\n}\\n```\\n\\nYou may alter the signature of `run()` to fit your needs.\\nFor example, if your program must exit with specific exit codes for failures,\\n`run()` may return the exit code instead of an error.\\nThis allows unit tests to verify this behavior directly as well.\\n\\n```go\\nfunc main() {\\n  os.Exit(run(args))\\n}\\n\\nfunc run() (exitCode int) {\\n  // ...\\n}\\n```\\n\\nMore generally, note that the `run()` function used in these examples\\nis not intended to be prescriptive.\\nThere\'s flexibility in the name, signature, and setup of the `run()` function.\\nAmong other things, you may:\\n\\n- accept unparsed command line arguments (e.g., `run(os.Args[1:])`)\\n- parse command line arguments in `main()` and pass them onto `run`\\n- use a custom error type to carry the exit code back to `main()`\\n- put business logic in a different layer of abstraction from `package main`\\n\\nThis guidance only requires that there\'s a single place in your `main()`\\nresponsible for actually exiting the process.\\n\\n### Use field tags in marshaled structs\\n\\nAny struct field that is marshaled into JSON, YAML,\\nor other formats that support tag-based field naming\\nshould be annotated with the relevant tag.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Stock struct {\\n  Price int\\n  Name  string\\n}\\n\\nbytes, err := json.Marshal(Stock{\\n  Price: 137,\\n  Name:  \\"UBER\\",\\n})\\n```\\n\\n</td><td>\\n\\n```go\\ntype Stock struct {\\n  Price int    `json:\\"price\\"`\\n  Name  string `json:\\"name\\"`\\n  // Safe to rename Name to Symbol.\\n}\\n\\nbytes, err := json.Marshal(Stock{\\n  Price: 137,\\n  Name:  \\"UBER\\",\\n})\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nRationale:\\nThe serialized form of the structure is a contract between different systems.\\nChanges to the structure of the serialized form--including field names--break\\nthis contract. Specifying field names inside tags makes the contract explicit,\\nand it guards against accidentally breaking the contract by refactoring or\\nrenaming fields.\\n\\n### Don\'t fire-and-forget goroutines\\n\\nGoroutines are lightweight, but they\'re not free:\\nat minimum, they cost memory for their stack and CPU to be scheduled.\\nWhile these costs are small for typical uses of goroutines,\\nthey can cause significant performance issues\\nwhen spawned in large numbers without controlled lifetimes.\\nGoroutines with unmanaged lifetimes can also cause other issues\\nlike preventing unused objects from being garbage collected\\nand holding onto resources that are otherwise no longer used.\\n\\nTherefore, do not leak goroutines in production code.\\nUse [go.uber.org/goleak](https://pkg.go.dev/go.uber.org/goleak)\\nto test for goroutine leaks inside packages that may spawn goroutines.\\n\\nIn general, every goroutine:\\n\\n- must have a predictable time at which it will stop running; or\\n- there must be a way to signal to the goroutine that it should stop\\n\\nIn both cases, there must be a way code to block and wait for the goroutine to\\nfinish.\\n\\nFor example:\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ngo func() {\\n  for {\\n    flush()\\n    time.Sleep(delay)\\n  }\\n}()\\n```\\n\\n</td><td>\\n\\n```go\\nvar (\\n  stop = make(chan struct{}) // tells the goroutine to stop\\n  done = make(chan struct{}) // tells us that the goroutine exited\\n)\\ngo func() {\\n  defer close(done)\\n\\n  ticker := time.NewTicker(delay)\\n  defer ticker.Stop()\\n  for {\\n    select {\\n    case <-ticker.C:\\n      flush()\\n    case <-stop:\\n      return\\n    }\\n  }\\n}()\\n\\n// Elsewhere...\\nclose(stop)  // signal the goroutine to stop\\n<-done       // and wait for it to exit\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\nThere\'s no way to stop this goroutine.\\nThis will run until the application exits.\\n\\n</td><td>\\n\\nThis goroutine can be stopped with `close(stop)`,\\nand we can wait for it to exit with `<-done`.\\n\\n</td></tr>\\n</tbody></table>\\n\\n#### Wait for goroutines to exit\\n\\nGiven a goroutine spawned by the system,\\nthere must be a way to wait for the goroutine to exit.\\nThere are two popular ways to do this:\\n\\n- Use a `sync.WaitGroup`.\\n  Do this if there are multiple goroutines that you want to wait for\\n\\n  ```go\\n  var wg sync.WaitGroup\\n  for i := 0; i < N; i++ {\\n    wg.Add(1)\\n    go func() {\\n      defer wg.Done()\\n      // ...\\n    }()\\n  }\\n\\n  // To wait for all to finish:\\n  wg.Wait()\\n  ```\\n\\n- Add another `chan struct{}` that the goroutine closes when it\'s done.\\n  Do this if there\'s only one goroutine.\\n\\n  ```go\\n  done := make(chan struct{})\\n  go func() {\\n    defer close(done)\\n    // ...\\n  }()\\n\\n  // To wait for the goroutine to finish:\\n  <-done\\n  ```\\n\\n#### No goroutines in `init()`\\n\\n`init()` functions should not spawn goroutines.\\nSee also [Avoid init()](#avoid-init).\\n\\nIf a package has need of a background goroutine,\\nit must expose an object that is responsible for managing a goroutine\'s\\nlifetime.\\nThe object must provide a method (`Close`, `Stop`, `Shutdown`, etc)\\nthat signals the background goroutine to stop, and waits for it to exit.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc init() {\\n  go doWork()\\n}\\n\\nfunc doWork() {\\n  for {\\n    // ...\\n  }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Worker struct{ /* ... */ }\\n\\nfunc NewWorker(...) *Worker {\\n  w := &Worker{\\n    stop: make(chan struct{}),\\n    done: make(chan struct{}),\\n    // ...\\n  }\\n  go w.doWork()\\n}\\n\\nfunc (w *Worker) doWork() {\\n  defer close(w.done)\\n  for {\\n    // ...\\n    case <-w.stop:\\n      return\\n  }\\n}\\n\\n// Shutdown tells the worker to stop\\n// and waits until it has finished.\\nfunc (w *Worker) Shutdown() {\\n  close(w.stop)\\n  <-w.done\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\nSpawns a background goroutine unconditionally when the user exports this package.\\nThe user has no control over the goroutine or a means of stopping it.\\n\\n</td><td>\\n\\nSpawns the worker only if the user requests it.\\nProvides a means of shutting down the worker so that the user can free up\\nresources used by the worker.\\n\\nNote that you should use `WaitGroup`s if the worker manages multiple\\ngoroutines.\\nSee [Wait for goroutines to exit](#wait-for-goroutines-to-exit).\\n\\n</td></tr>\\n</tbody></table>\\n\\n## Performance\\n\\nPerformance-specific guidelines apply only to the hot path.\\n\\n### Prefer strconv over fmt\\n\\nWhen converting primitives to/from strings, `strconv` is faster than\\n`fmt`.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfor i := 0; i < b.N; i++ {\\n  s := fmt.Sprint(rand.Int())\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfor i := 0; i < b.N; i++ {\\n  s := strconv.Itoa(rand.Int())\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```plain\\nBenchmarkFmtSprint-4    143 ns/op    2 allocs/op\\n```\\n\\n</td><td>\\n\\n```plain\\nBenchmarkStrconv-4    64.2 ns/op    1 allocs/op\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Avoid string-to-byte conversion\\n\\nDo not create byte slices from a fixed string repeatedly. Instead, perform the\\nconversion once and capture the result.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfor i := 0; i < b.N; i++ {\\n  w.Write([]byte(\\"Hello world\\"))\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ndata := []byte(\\"Hello world\\")\\nfor i := 0; i < b.N; i++ {\\n  w.Write(data)\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```plain\\nBenchmarkBad-4   50000000   22.2 ns/op\\n```\\n\\n</td><td>\\n\\n```plain\\nBenchmarkGood-4  500000000   3.25 ns/op\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Prefer Specifying Container Capacity\\n\\nSpecify container capacity where possible in order to allocate memory for the\\ncontainer up front. This minimizes subsequent allocations (by copying and\\nresizing of the container) as elements are added.\\n\\n#### Specifying Map Capacity Hints\\n\\nWhere possible, provide capacity hints when initializing\\nmaps with `make()`.\\n\\n```go\\nmake(map[T1]T2, hint)\\n```\\n\\nProviding a capacity hint to `make()` tries to right-size the\\nmap at initialization time, which reduces the need for growing\\nthe map and allocations as elements are added to the map.\\n\\nNote that, unlike slices, map capacity hints do not guarantee complete,\\npreemptive allocation, but are used to approximate the number of hashmap buckets\\nrequired. Consequently, allocations may still occur when adding elements to the\\nmap, even up to the specified capacity.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nm := make(map[string]os.FileInfo)\\n\\nfiles, _ := os.ReadDir(\\"./files\\")\\nfor _, f := range files {\\n    m[f.Name()] = f\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n\\nfiles, _ := os.ReadDir(\\"./files\\")\\n\\nm := make(map[string]os.DirEntry, len(files))\\nfor _, f := range files {\\n    m[f.Name()] = f\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n`m` is created without a size hint; there may be more\\nallocations at assignment time.\\n\\n</td><td>\\n\\n`m` is created with a size hint; there may be fewer\\nallocations at assignment time.\\n\\n</td></tr>\\n</tbody></table>\\n\\n#### Specifying Slice Capacity\\n\\nWhere possible, provide capacity hints when initializing slices with `make()`,\\nparticularly when appending.\\n\\n```go\\nmake([]T, length, capacity)\\n```\\n\\nUnlike maps, slice capacity is not a hint: the compiler will allocate enough\\nmemory for the capacity of the slice as provided to `make()`, which means that\\nsubsequent `append()` operations will incur zero allocations (until the length\\nof the slice matches the capacity, after which any appends will require a resize\\nto hold additional elements).\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfor n := 0; n < b.N; n++ {\\n  data := make([]int, 0)\\n  for k := 0; k < size; k++{\\n    data = append(data, k)\\n  }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfor n := 0; n < b.N; n++ {\\n  data := make([]int, 0, size)\\n  for k := 0; k < size; k++{\\n    data = append(data, k)\\n  }\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```plain\\nBenchmarkBad-4    100000000    2.48s\\n```\\n\\n</td><td>\\n\\n```plain\\nBenchmarkGood-4   100000000    0.21s\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n## Style\\n\\n### Avoid overly long lines\\n\\nAvoid lines of code that require readers to scroll horizontally\\nor turn their heads too much.\\n\\nWe recommend a soft line length limit of **99 characters**.\\nAuthors should aim to wrap lines before hitting this limit,\\nbut it is not a hard limit.\\nCode is allowed to exceed this limit.\\n\\n### Be Consistent\\n\\nSome of the guidelines outlined in this document can be evaluated objectively;\\nothers are situational, contextual, or subjective.\\n\\nAbove all else, **be consistent**.\\n\\nConsistent code is easier to maintain, is easier to rationalize, requires less\\ncognitive overhead, and is easier to migrate or update as new conventions emerge\\nor classes of bugs are fixed.\\n\\nConversely, having multiple disparate or conflicting styles within a single\\ncodebase causes maintenance overhead, uncertainty, and cognitive dissonance,\\nall of which can directly contribute to lower velocity, painful code reviews,\\nand bugs.\\n\\nWhen applying these guidelines to a codebase, it is recommended that changes\\nare made at a package (or larger) level: application at a sub-package level\\nviolates the above concern by introducing multiple styles into the same code.\\n\\n### Group Similar Declarations\\n\\nGo supports grouping similar declarations.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nimport \\"a\\"\\nimport \\"b\\"\\n```\\n\\n</td><td>\\n\\n```go\\nimport (\\n  \\"a\\"\\n  \\"b\\"\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThis also applies to constants, variables, and type declarations.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n\\nconst a = 1\\nconst b = 2\\n\\n\\n\\nvar a = 1\\nvar b = 2\\n\\n\\n\\ntype Area float64\\ntype Volume float64\\n```\\n\\n</td><td>\\n\\n```go\\nconst (\\n  a = 1\\n  b = 2\\n)\\n\\nvar (\\n  a = 1\\n  b = 2\\n)\\n\\ntype (\\n  Area float64\\n  Volume float64\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nOnly group related declarations. Do not group declarations that are unrelated.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Operation int\\n\\nconst (\\n  Add Operation = iota + 1\\n  Subtract\\n  Multiply\\n  EnvVar = \\"MY_ENV\\"\\n)\\n```\\n\\n</td><td>\\n\\n```go\\ntype Operation int\\n\\nconst (\\n  Add Operation = iota + 1\\n  Subtract\\n  Multiply\\n)\\n\\nconst EnvVar = \\"MY_ENV\\"\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nGroups are not limited in where they can be used. For example, you can use them\\ninside of functions.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc f() string {\\n  red := color.New(0xff0000)\\n  green := color.New(0x00ff00)\\n  blue := color.New(0x0000ff)\\n\\n  // ...\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc f() string {\\n  var (\\n    red   = color.New(0xff0000)\\n    green = color.New(0x00ff00)\\n    blue  = color.New(0x0000ff)\\n  )\\n\\n  // ...\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nException: Variable declarations, particularly inside functions, should be\\ngrouped together if declared adjacent to other variables. Do this for variables\\ndeclared together even if they are unrelated.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc (c *client) request() {\\n  caller := c.name\\n  format := \\"json\\"\\n  timeout := 5*time.Second\\n  var err error\\n\\n  // ...\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc (c *client) request() {\\n  var (\\n    caller  = c.name\\n    format  = \\"json\\"\\n    timeout = 5*time.Second\\n    err error\\n  )\\n\\n  // ...\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Import Group Ordering\\n\\nThere should be two import groups:\\n\\n- Standard library\\n- Everything else\\n\\nThis is the grouping applied by goimports by default.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nimport (\\n  \\"fmt\\"\\n  \\"os\\"\\n  \\"go.uber.org/atomic\\"\\n  \\"golang.org/x/sync/errgroup\\"\\n)\\n```\\n\\n</td><td>\\n\\n```go\\nimport (\\n  \\"fmt\\"\\n  \\"os\\"\\n\\n  \\"go.uber.org/atomic\\"\\n  \\"golang.org/x/sync/errgroup\\"\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Package Names\\n\\nWhen naming packages, choose a name that is:\\n\\n- All lower-case. No capitals or underscores.\\n- Does not need to be renamed using named imports at most call sites.\\n- Short and succinct. Remember that the name is identified in full at every call\\n  site.\\n- Not plural. For example, `net/url`, not `net/urls`.\\n- Not \\"common\\", \\"util\\", \\"shared\\", or \\"lib\\". These are bad, uninformative names.\\n\\nSee also [Package Names](https://blog.golang.org/package-names) and [Style guideline for Go packages](https://rakyll.org/style-packages/).\\n\\n### Function Names\\n\\nWe follow the Go community\'s convention of using [MixedCaps for function\\nnames](https://golang.org/doc/effective_go.html#mixed-caps). An exception is made for test functions, which may contain underscores\\nfor the purpose of grouping related test cases, e.g.,\\n`TestMyFunction_WhatIsBeingTested`.\\n\\n### Import Aliasing\\n\\nImport aliasing must be used if the package name does not match the last\\nelement of the import path.\\n\\n```go\\nimport (\\n  \\"net/http\\"\\n\\n  client \\"example.com/client-go\\"\\n  trace \\"example.com/trace/v2\\"\\n)\\n```\\n\\nIn all other scenarios, import aliases should be avoided unless there is a\\ndirect conflict between imports.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nimport (\\n  \\"fmt\\"\\n  \\"os\\"\\n\\n\\n  nettrace \\"golang.net/x/trace\\"\\n)\\n```\\n\\n</td><td>\\n\\n```go\\nimport (\\n  \\"fmt\\"\\n  \\"os\\"\\n  \\"runtime/trace\\"\\n\\n  nettrace \\"golang.net/x/trace\\"\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Function Grouping and Ordering\\n\\n- Functions should be sorted in rough call order.\\n- Functions in a file should be grouped by receiver.\\n\\nTherefore, exported functions should appear first in a file, after\\n`struct`, `const`, `var` definitions.\\n\\nA `newXYZ()`/`NewXYZ()` may appear after the type is defined, but before the\\nrest of the methods on the receiver.\\n\\nSince functions are grouped by receiver, plain utility functions should appear\\ntowards the end of the file.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc (s *something) Cost() {\\n  return calcCost(s.weights)\\n}\\n\\ntype something struct{ ... }\\n\\nfunc calcCost(n []int) int {...}\\n\\nfunc (s *something) Stop() {...}\\n\\nfunc newSomething() *something {\\n    return &something{}\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype something struct{ ... }\\n\\nfunc newSomething() *something {\\n    return &something{}\\n}\\n\\nfunc (s *something) Cost() {\\n  return calcCost(s.weights)\\n}\\n\\nfunc (s *something) Stop() {...}\\n\\nfunc calcCost(n []int) int {...}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Reduce Nesting\\n\\nCode should reduce nesting where possible by handling error cases/special\\nconditions first and returning early or continuing the loop. Reduce the amount\\nof code that is nested multiple levels.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfor _, v := range data {\\n  if v.F1 == 1 {\\n    v = process(v)\\n    if err := v.Call(); err == nil {\\n      v.Send()\\n    } else {\\n      return err\\n    }\\n  } else {\\n    log.Printf(\\"Invalid v: %v\\", v)\\n  }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfor _, v := range data {\\n  if v.F1 != 1 {\\n    log.Printf(\\"Invalid v: %v\\", v)\\n    continue\\n  }\\n\\n  v = process(v)\\n  if err := v.Call(); err != nil {\\n    return err\\n  }\\n  v.Send()\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Unnecessary Else\\n\\nIf a variable is set in both branches of an if, it can be replaced with a\\nsingle if.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nvar a int\\nif b {\\n  a = 100\\n} else {\\n  a = 10\\n}\\n```\\n\\n</td><td>\\n\\n```go\\na := 10\\nif b {\\n  a = 100\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Top-level Variable Declarations\\n\\nAt the top level, use the standard `var` keyword. Do not specify the type,\\nunless it is not the same type as the expression.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nvar _s string = F()\\n\\nfunc F() string { return \\"A\\" }\\n```\\n\\n</td><td>\\n\\n```go\\nvar _s = F()\\n// Since F already states that it returns a string, we don\'t need to specify\\n// the type again.\\n\\nfunc F() string { return \\"A\\" }\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nSpecify the type if the type of the expression does not match the desired type\\nexactly.\\n\\n```go\\ntype myError struct{}\\n\\nfunc (myError) Error() string { return \\"error\\" }\\n\\nfunc F() myError { return myError{} }\\n\\nvar _e error = F()\\n// F returns an object of type myError but we want error.\\n```\\n\\n### Prefix Unexported Globals with _\\n\\nPrefix unexported top-level `var`s and `const`s with `_` to make it clear when\\nthey are used that they are global symbols.\\n\\nRationale: Top-level variables and constants have a package scope. Using a\\ngeneric name makes it easy to accidentally use the wrong value in a different\\nfile.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// foo.go\\n\\nconst (\\n  defaultPort = 8080\\n  defaultUser = \\"user\\"\\n)\\n\\n// bar.go\\n\\nfunc Bar() {\\n  defaultPort := 9090\\n  ...\\n  fmt.Println(\\"Default port\\", defaultPort)\\n\\n  // We will not see a compile error if the first line of\\n  // Bar() is deleted.\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// foo.go\\n\\nconst (\\n  _defaultPort = 8080\\n  _defaultUser = \\"user\\"\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n**Exception**: Unexported error values may use the prefix `err` without the underscore.\\nSee [Error Naming](#error-naming).\\n\\n### Embedding in Structs\\n\\nEmbedded types should be at the top of the field list of a\\nstruct, and there must be an empty line separating embedded fields from regular\\nfields.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype Client struct {\\n  version int\\n  http.Client\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Client struct {\\n  http.Client\\n\\n  version int\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nEmbedding should provide tangible benefit, like adding or augmenting\\nfunctionality in a semantically-appropriate way. It should do this with zero\\nadverse user-facing effects (see also: [Avoid Embedding Types in Public Structs](#avoid-embedding-types-in-public-structs)).\\n\\nException: Mutexes should not be embedded, even on unexported types. See also: [Zero-value Mutexes are Valid](#zero-value-mutexes-are-valid).\\n\\nEmbedding **should not**:\\n\\n- Be purely cosmetic or convenience-oriented.\\n- Make outer types more difficult to construct or use.\\n- Affect outer types\' zero values. If the outer type has a useful zero value, it\\n  should still have a useful zero value after embedding the inner type.\\n- Expose unrelated functions or fields from the outer type as a side-effect of\\n  embedding the inner type.\\n- Expose unexported types.\\n- Affect outer types\' copy semantics.\\n- Change the outer type\'s API or type semantics.\\n- Embed a non-canonical form of the inner type.\\n- Expose implementation details of the outer type.\\n- Allow users to observe or control type internals.\\n- Change the general behavior of inner functions through wrapping in a way that\\n  would reasonably surprise users.\\n\\nSimply put, embed consciously and intentionally. A good litmus test is, \\"would\\nall of these exported inner methods/fields be added directly to the outer type\\";\\nif the answer is \\"some\\" or \\"no\\", don\'t embed the inner type - use a field\\ninstead.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\ntype A struct {\\n    // Bad: A.Lock() and A.Unlock() are\\n    //      now available, provide no\\n    //      functional benefit, and allow\\n    //      users to control details about\\n    //      the internals of A.\\n    sync.Mutex\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype countingWriteCloser struct {\\n    // Good: Write() is provided at this\\n    //       outer layer for a specific\\n    //       purpose, and delegates work\\n    //       to the inner type\'s Write().\\n    io.WriteCloser\\n\\n    count int\\n}\\n\\nfunc (w *countingWriteCloser) Write(bs []byte) (int, error) {\\n    w.count += len(bs)\\n    return w.WriteCloser.Write(bs)\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```go\\ntype Book struct {\\n    // Bad: pointer changes zero value usefulness\\n    io.ReadWriter\\n\\n    // other fields\\n}\\n\\n// later\\n\\nvar b Book\\nb.Read(...)  // panic: nil pointer\\nb.String()   // panic: nil pointer\\nb.Write(...) // panic: nil pointer\\n```\\n\\n</td><td>\\n\\n```go\\ntype Book struct {\\n    // Good: has useful zero value\\n    bytes.Buffer\\n\\n    // other fields\\n}\\n\\n// later\\n\\nvar b Book\\nb.Read(...)  // ok\\nb.String()   // ok\\nb.Write(...) // ok\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\n```go\\ntype Client struct {\\n    sync.Mutex\\n    sync.WaitGroup\\n    bytes.Buffer\\n    url.URL\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ntype Client struct {\\n    mtx sync.Mutex\\n    wg  sync.WaitGroup\\n    buf bytes.Buffer\\n    url url.URL\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Local Variable Declarations\\n\\nShort variable declarations (`:=`) should be used if a variable is being set to\\nsome value explicitly.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nvar s = \\"foo\\"\\n```\\n\\n</td><td>\\n\\n```go\\ns := \\"foo\\"\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nHowever, there are cases where the default value is clearer when the `var`\\nkeyword is used. [Declaring Empty Slices](https://github.com/golang/go/wiki/CodeReviewComments#declaring-empty-slices), for example.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc f(list []int) {\\n  filtered := []int{}\\n  for _, v := range list {\\n    if v > 10 {\\n      filtered = append(filtered, v)\\n    }\\n  }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc f(list []int) {\\n  var filtered []int\\n  for _, v := range list {\\n    if v > 10 {\\n      filtered = append(filtered, v)\\n    }\\n  }\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### nil is a valid slice\\n\\n`nil` is a valid slice of length 0. This means that,\\n\\n- You should not return a slice of length zero explicitly. Return `nil`\\n  instead.\\n\\n  <table>\\n  <thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n  <tbody>\\n  <tr><td>\\n\\n  ```go\\n  if x == \\"\\" {\\n    return []int{}\\n  }\\n  ```\\n\\n  </td><td>\\n\\n  ```go\\n  if x == \\"\\" {\\n    return nil\\n  }\\n  ```\\n\\n  </td></tr>\\n  </tbody></table>\\n\\n- To check if a slice is empty, always use `len(s) == 0`. Do not check for\\n  `nil`.\\n\\n  <table>\\n  <thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n  <tbody>\\n  <tr><td>\\n\\n  ```go\\n  func isEmpty(s []string) bool {\\n    return s == nil\\n  }\\n  ```\\n\\n  </td><td>\\n\\n  ```go\\n  func isEmpty(s []string) bool {\\n    return len(s) == 0\\n  }\\n  ```\\n\\n  </td></tr>\\n  </tbody></table>\\n\\n- The zero value (a slice declared with `var`) is usable immediately without\\n  `make()`.\\n\\n  <table>\\n  <thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n  <tbody>\\n  <tr><td>\\n\\n  ```go\\n  nums := []int{}\\n  // or, nums := make([]int)\\n\\n  if add1 {\\n    nums = append(nums, 1)\\n  }\\n\\n  if add2 {\\n    nums = append(nums, 2)\\n  }\\n  ```\\n\\n  </td><td>\\n\\n  ```go\\n  var nums []int\\n\\n  if add1 {\\n    nums = append(nums, 1)\\n  }\\n\\n  if add2 {\\n    nums = append(nums, 2)\\n  }\\n  ```\\n\\n  </td></tr>\\n  </tbody></table>\\n\\nRemember that, while it is a valid slice, a nil slice is not equivalent to an\\nallocated slice of length 0 - one is nil and the other is not - and the two may\\nbe treated differently in different situations (such as serialization).\\n\\n### Reduce Scope of Variables\\n\\nWhere possible, reduce scope of variables. Do not reduce the scope if it\\nconflicts with [Reduce Nesting](#reduce-nesting).\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nerr := os.WriteFile(name, data, 0644)\\nif err != nil {\\n return err\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nif err := os.WriteFile(name, data, 0644); err != nil {\\n return err\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nIf you need a result of a function call outside of the if, then you should not\\ntry to reduce the scope.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nif data, err := os.ReadFile(name); err == nil {\\n  err = cfg.Decode(data)\\n  if err != nil {\\n    return err\\n  }\\n\\n  fmt.Println(cfg)\\n  return nil\\n} else {\\n  return err\\n}\\n```\\n\\n</td><td>\\n\\n```go\\ndata, err := os.ReadFile(name)\\nif err != nil {\\n   return err\\n}\\n\\nif err := cfg.Decode(data); err != nil {\\n  return err\\n}\\n\\nfmt.Println(cfg)\\nreturn nil\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Avoid Naked Parameters\\n\\nNaked parameters in function calls can hurt readability. Add C-style comments\\n(`/* ... */`) for parameter names when their meaning is not obvious.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// func printInfo(name string, isLocal, done bool)\\n\\nprintInfo(\\"foo\\", true, true)\\n```\\n\\n</td><td>\\n\\n```go\\n// func printInfo(name string, isLocal, done bool)\\n\\nprintInfo(\\"foo\\", true /* isLocal */, true /* done */)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nBetter yet, replace naked `bool` types with custom types for more readable and\\ntype-safe code. This allows more than just two states (true/false) for that\\nparameter in the future.\\n\\n```go\\ntype Region int\\n\\nconst (\\n  UnknownRegion Region = iota\\n  Local\\n)\\n\\ntype Status int\\n\\nconst (\\n  StatusReady Status = iota + 1\\n  StatusDone\\n  // Maybe we will have a StatusInProgress in the future.\\n)\\n\\nfunc printInfo(name string, region Region, status Status)\\n```\\n\\n### Use Raw String Literals to Avoid Escaping\\n\\nGo supports [raw string literals](https://golang.org/ref/spec#raw_string_lit),\\nwhich can span multiple lines and include quotes. Use these to avoid\\nhand-escaped strings which are much harder to read.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nwantError := \\"unknown name:\\\\\\"test\\\\\\"\\"\\n```\\n\\n</td><td>\\n\\n```go\\nwantError := `unknown error:\\"test\\"`\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Initializing Structs\\n\\n#### Use Field Names to Initialize Structs\\n\\nYou should almost always specify field names when initializing structs. This is\\nnow enforced by [`go vet`](https://golang.org/cmd/vet/).\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nk := User{\\"John\\", \\"Doe\\", true}\\n```\\n\\n</td><td>\\n\\n```go\\nk := User{\\n    FirstName: \\"John\\",\\n    LastName: \\"Doe\\",\\n    Admin: true,\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nException: Field names *may* be omitted in test tables when there are 3 or\\nfewer fields.\\n\\n```go\\ntests := []struct{\\n  op Operation\\n  want string\\n}{\\n  {Add, \\"add\\"},\\n  {Subtract, \\"subtract\\"},\\n}\\n```\\n\\n#### Omit Zero Value Fields in Structs\\n\\nWhen initializing structs with field names, omit fields that have zero values\\nunless they provide meaningful context. Otherwise, let Go set these to zero\\nvalues automatically.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nuser := User{\\n  FirstName: \\"John\\",\\n  LastName: \\"Doe\\",\\n  MiddleName: \\"\\",\\n  Admin: false,\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nuser := User{\\n  FirstName: \\"John\\",\\n  LastName: \\"Doe\\",\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThis helps reduce noise for readers by omitting values that are default in\\nthat context. Only meaningful values are specified.\\n\\nInclude zero values where field names provide meaningful context. For example,\\ntest cases in [Test Tables](#test-tables) can benefit from names of fields\\neven when they are zero-valued.\\n\\n```go\\ntests := []struct{\\n  give string\\n  want int\\n}{\\n  {give: \\"0\\", want: 0},\\n  // ...\\n}\\n```\\n\\n#### Use `var` for Zero Value Structs\\n\\nWhen all the fields of a struct are omitted in a declaration, use the `var`\\nform to declare the struct.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nuser := User{}\\n```\\n\\n</td><td>\\n\\n```go\\nvar user User\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThis differentiates zero valued structs from those with non-zero fields\\nsimilar to the distinction created for [map initialization](#initializing-maps), and matches how\\nwe prefer to [declare empty slices](https://github.com/golang/go/wiki/CodeReviewComments#declaring-empty-slices).\\n\\n#### Initializing Struct References\\n\\nUse `&T{}` instead of `new(T)` when initializing struct references so that it\\nis consistent with the struct initialization.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nsval := T{Name: \\"foo\\"}\\n\\n// inconsistent\\nsptr := new(T)\\nsptr.Name = \\"bar\\"\\n```\\n\\n</td><td>\\n\\n```go\\nsval := T{Name: \\"foo\\"}\\n\\nsptr := &T{Name: \\"bar\\"}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Initializing Maps\\n\\nPrefer `make(..)` for empty maps, and maps populated\\nprogrammatically. This makes map initialization visually\\ndistinct from declaration, and it makes it easy to add size\\nhints later if available.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nvar (\\n  // m1 is safe to read and write;\\n  // m2 will panic on writes.\\n  m1 = map[T1]T2{}\\n  m2 map[T1]T2\\n)\\n```\\n\\n</td><td>\\n\\n```go\\nvar (\\n  // m1 is safe to read and write;\\n  // m2 will panic on writes.\\n  m1 = make(map[T1]T2)\\n  m2 map[T1]T2\\n)\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\nDeclaration and initialization are visually similar.\\n\\n</td><td>\\n\\nDeclaration and initialization are visually distinct.\\n\\n</td></tr>\\n</tbody></table>\\n\\nWhere possible, provide capacity hints when initializing\\nmaps with `make()`. See\\n[Specifying Map Capacity Hints](#specifying-map-capacity-hints)\\nfor more information.\\n\\nOn the other hand, if the map holds a fixed list of elements,\\nuse map literals to initialize the map.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nm := make(map[T1]T2, 3)\\nm[k1] = v1\\nm[k2] = v2\\nm[k3] = v3\\n```\\n\\n</td><td>\\n\\n```go\\nm := map[T1]T2{\\n  k1: v1,\\n  k2: v2,\\n  k3: v3,\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nThe basic rule of thumb is to use map literals when adding a fixed set of\\nelements at initialization time, otherwise use `make` (and specify a size hint\\nif available).\\n\\n### Format Strings outside Printf\\n\\nIf you declare format strings for `Printf`-style functions outside a string\\nliteral, make them `const` values.\\n\\nThis helps `go vet` perform static analysis of the format string.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nmsg := \\"unexpected values %v, %v\\\\n\\"\\nfmt.Printf(msg, 1, 2)\\n```\\n\\n</td><td>\\n\\n```go\\nconst msg = \\"unexpected values %v, %v\\\\n\\"\\nfmt.Printf(msg, 1, 2)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\n### Naming Printf-style Functions\\n\\nWhen you declare a `Printf`-style function, make sure that `go vet` can detect\\nit and check the format string.\\n\\nThis means that you should use predefined `Printf`-style function\\nnames if possible. `go vet` will check these by default. See [Printf family](https://golang.org/cmd/vet/#hdr-Printf_family)\\nfor more information.\\n\\nIf using the predefined names is not an option, end the name you choose with\\nf: `Wrapf`, not `Wrap`. `go vet` can be asked to check specific `Printf`-style\\nnames but they must end with f.\\n\\n```shell\\ngo vet -printfuncs=wrapf,statusf\\n```\\n\\nSee also [go vet: Printf family check](https://kuzminva.wordpress.com/2017/11/07/go-vet-printf-family-check/).\\n\\n## Patterns\\n\\n### Test Tables\\n\\nTable-driven tests with [subtests](https://blog.golang.org/subtests) can be a helpful pattern for writing tests\\nto avoid duplicating code when the core test logic is repetitive.\\n\\nIf a system under test needs to be tested against *multiple conditions* where\\ncertain parts of the the inputs and outputs change, a table-driven test should\\nbe used to reduce redundancy and improve readability.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// func TestSplitHostPort(t *testing.T)\\n\\nhost, port, err := net.SplitHostPort(\\"192.0.2.0:8000\\")\\nrequire.NoError(t, err)\\nassert.Equal(t, \\"192.0.2.0\\", host)\\nassert.Equal(t, \\"8000\\", port)\\n\\nhost, port, err = net.SplitHostPort(\\"192.0.2.0:http\\")\\nrequire.NoError(t, err)\\nassert.Equal(t, \\"192.0.2.0\\", host)\\nassert.Equal(t, \\"http\\", port)\\n\\nhost, port, err = net.SplitHostPort(\\":8000\\")\\nrequire.NoError(t, err)\\nassert.Equal(t, \\"\\", host)\\nassert.Equal(t, \\"8000\\", port)\\n\\nhost, port, err = net.SplitHostPort(\\"1:8\\")\\nrequire.NoError(t, err)\\nassert.Equal(t, \\"1\\", host)\\nassert.Equal(t, \\"8\\", port)\\n```\\n\\n</td><td>\\n\\n```go\\n// func TestSplitHostPort(t *testing.T)\\n\\ntests := []struct{\\n  give     string\\n  wantHost string\\n  wantPort string\\n}{\\n  {\\n    give:     \\"192.0.2.0:8000\\",\\n    wantHost: \\"192.0.2.0\\",\\n    wantPort: \\"8000\\",\\n  },\\n  {\\n    give:     \\"192.0.2.0:http\\",\\n    wantHost: \\"192.0.2.0\\",\\n    wantPort: \\"http\\",\\n  },\\n  {\\n    give:     \\":8000\\",\\n    wantHost: \\"\\",\\n    wantPort: \\"8000\\",\\n  },\\n  {\\n    give:     \\"1:8\\",\\n    wantHost: \\"1\\",\\n    wantPort: \\"8\\",\\n  },\\n}\\n\\nfor _, tt := range tests {\\n  t.Run(tt.give, func(t *testing.T) {\\n    host, port, err := net.SplitHostPort(tt.give)\\n    require.NoError(t, err)\\n    assert.Equal(t, tt.wantHost, host)\\n    assert.Equal(t, tt.wantPort, port)\\n  })\\n}\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nTest tables make it easier to add context to error messages, reduce duplicate\\nlogic, and add new test cases.\\n\\nWe follow the convention that the slice of structs is referred to as `tests`\\nand each test case `tt`. Further, we encourage explicating the input and output\\nvalues for each test case with `give` and `want` prefixes.\\n\\n```go\\ntests := []struct{\\n  give     string\\n  wantHost string\\n  wantPort string\\n}{\\n  // ...\\n}\\n\\nfor _, tt := range tests {\\n  // ...\\n}\\n```\\n\\n#### Avoid Unnecessary Complexity in Table Tests\\n\\nTable tests can be difficult to read and maintain if the subtests contain conditional\\nassertions or other branching logic. Table tests should **NOT** be used whenever\\nthere needs to be complex or conditional logic inside subtests (i.e. complex logic inside the `for` loop).\\n\\nLarge, complex table tests harm readability and maintainability because test readers may\\nhave difficulty debugging test failures that occur.\\n\\nTable tests like this should be split into either multiple test tables or multiple\\nindividual `Test...` functions.\\n\\nSome ideals to aim for are:\\n\\n* Focus on the narrowest unit of behavior\\n* Minimize \\"test depth\\", and avoid conditional assertions (see below)\\n* Ensure that all table fields are used in all tests\\n* Ensure that all test logic runs for all table cases\\n\\nIn this context, \\"test depth\\" means \\"within a given test, the number of\\nsuccessive assertions that require previous assertions to hold\\" (similar\\nto cyclomatic complexity).\\nHaving \\"shallower\\" tests means that there are fewer relationships between\\nassertions and, more importantly, that those assertions are less likely\\nto be conditional by default.\\n\\nConcretely, table tests can become confusing and difficult to read if they use multiple branching\\npathways (e.g. `shouldError`, `expectCall`, etc.), use many `if` statements for\\nspecific mock expectations (e.g. `shouldCallFoo`), or place functions inside the\\ntable (e.g. `setupMocks func(*FooMock)`).\\n\\nHowever, when testing behavior that only\\nchanges based on changed input, it may be preferable to group similar cases\\ntogether in a table test to better illustrate how behavior changes across all inputs,\\nrather than splitting otherwise comparable units into separate tests\\nand making them harder to compare and contrast.\\n\\nIf the test body is short and straightforward,\\nit\'s acceptable to have a single branching pathway for success versus failure cases\\nwith a table field like `shouldErr` to specify error expectations.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\nfunc TestComplicatedTable(t *testing.T) {\\n  tests := []struct {\\n    give          string\\n    want          string\\n    wantErr       error\\n    shouldCallX   bool\\n    shouldCallY   bool\\n    giveXResponse string\\n    giveXErr      error\\n    giveYResponse string\\n    giveYErr      error\\n  }{\\n    // ...\\n  }\\n\\n  for _, tt := range tests {\\n    t.Run(tt.give, func(t *testing.T) {\\n      // setup mocks\\n      ctrl := gomock.NewController(t)\\n      xMock := xmock.NewMockX(ctrl)\\n      if tt.shouldCallX {\\n        xMock.EXPECT().Call().Return(\\n          tt.giveXResponse, tt.giveXErr,\\n        )\\n      }\\n      yMock := ymock.NewMockY(ctrl)\\n      if tt.shouldCallY {\\n        yMock.EXPECT().Call().Return(\\n          tt.giveYResponse, tt.giveYErr,\\n        )\\n      }\\n\\n      got, err := DoComplexThing(tt.give, xMock, yMock)\\n\\n      // verify results\\n      if tt.wantErr != nil {\\n        require.EqualError(t, err, tt.wantErr)\\n        return\\n      }\\n      require.NoError(t, err)\\n      assert.Equal(t, want, got)\\n    })\\n  }\\n}\\n```\\n\\n</td><td>\\n\\n```go\\nfunc TestShouldCallX(t *testing.T) {\\n  // setup mocks\\n  ctrl := gomock.NewController(t)\\n  xMock := xmock.NewMockX(ctrl)\\n  xMock.EXPECT().Call().Return(\\"XResponse\\", nil)\\n\\n  yMock := ymock.NewMockY(ctrl)\\n\\n  got, err := DoComplexThing(\\"inputX\\", xMock, yMock)\\n\\n  require.NoError(t, err)\\n  assert.Equal(t, \\"want\\", got)\\n}\\n\\nfunc TestShouldCallYAndFail(t *testing.T) {\\n  // setup mocks\\n  ctrl := gomock.NewController(t)\\n  xMock := xmock.NewMockX(ctrl)\\n\\n  yMock := ymock.NewMockY(ctrl)\\n  yMock.EXPECT().Call().Return(\\"YResponse\\", nil)\\n\\n  _, err := DoComplexThing(\\"inputY\\", xMock, yMock)\\n  assert.EqualError(t, err, \\"Y failed\\")\\n}\\n```\\n</td></tr>\\n</tbody></table>\\n\\nThis complexity makes it more difficult to change, understand, and prove the\\ncorrectness of the test.\\n\\nWhile there are no strict guidelines, readability and maintainability should\\nalways be top-of-mind when deciding between Table Tests versus separate tests\\nfor multiple inputs/outputs to a system.\\n\\n#### Parallel Tests\\n\\nParallel tests, like some specialized loops (for example, those that spawn\\ngoroutines or capture references as part of the loop body),\\nmust take care to explicitly assign loop variables within the loop\'s scope to\\nensure that they hold the expected values.\\n\\n```go\\ntests := []struct{\\n  give string\\n  // ...\\n}{\\n  // ...\\n}\\n\\nfor _, tt := range tests {\\n  tt := tt // for t.Parallel\\n  t.Run(tt.give, func(t *testing.T) {\\n    t.Parallel()\\n    // ...\\n  })\\n}\\n```\\n\\nIn the example above, we must declare a `tt` variable scoped to the loop\\niteration because of the use of `t.Parallel()` below.\\nIf we do not do that, most or all tests will receive an unexpected value for\\n`tt`, or a value that changes as they\'re running.\\n\\n\x3c!-- TODO: Explain how to use _test packages. --\x3e\\n\\n### Functional Options\\n\\nFunctional options is a pattern in which you declare an opaque `Option` type\\nthat records information in some internal struct. You accept a variadic number\\nof these options and act upon the full information recorded by the options on\\nthe internal struct.\\n\\nUse this pattern for optional arguments in constructors and other public APIs\\nthat you foresee needing to expand, especially if you already have three or\\nmore arguments on those functions.\\n\\n<table>\\n<thead><tr><th>Bad</th><th>Good</th></tr></thead>\\n<tbody>\\n<tr><td>\\n\\n```go\\n// package db\\n\\nfunc Open(\\n  addr string,\\n  cache bool,\\n  logger *zap.Logger\\n) (*Connection, error) {\\n  // ...\\n}\\n```\\n\\n</td><td>\\n\\n```go\\n// package db\\n\\ntype Option interface {\\n  // ...\\n}\\n\\nfunc WithCache(c bool) Option {\\n  // ...\\n}\\n\\nfunc WithLogger(log *zap.Logger) Option {\\n  // ...\\n}\\n\\n// Open creates a connection.\\nfunc Open(\\n  addr string,\\n  opts ...Option,\\n) (*Connection, error) {\\n  // ...\\n}\\n```\\n\\n</td></tr>\\n<tr><td>\\n\\nThe cache and logger parameters must always be provided, even if the user\\nwants to use the default.\\n\\n```go\\ndb.Open(addr, db.DefaultCache, zap.NewNop())\\ndb.Open(addr, db.DefaultCache, log)\\ndb.Open(addr, false /* cache */, zap.NewNop())\\ndb.Open(addr, false /* cache */, log)\\n```\\n\\n</td><td>\\n\\nOptions are provided only if needed.\\n\\n```go\\ndb.Open(addr)\\ndb.Open(addr, db.WithLogger(log))\\ndb.Open(addr, db.WithCache(false))\\ndb.Open(\\n  addr,\\n  db.WithCache(false),\\n  db.WithLogger(log),\\n)\\n```\\n\\n</td></tr>\\n</tbody></table>\\n\\nOur suggested way of implementing this pattern is with an `Option` interface\\nthat holds an unexported method, recording options on an unexported `options`\\nstruct.\\n\\n```go\\ntype options struct {\\n  cache  bool\\n  logger *zap.Logger\\n}\\n\\ntype Option interface {\\n  apply(*options)\\n}\\n\\ntype cacheOption bool\\n\\nfunc (c cacheOption) apply(opts *options) {\\n  opts.cache = bool(c)\\n}\\n\\nfunc WithCache(c bool) Option {\\n  return cacheOption(c)\\n}\\n\\ntype loggerOption struct {\\n  Log *zap.Logger\\n}\\n\\nfunc (l loggerOption) apply(opts *options) {\\n  opts.logger = l.Log\\n}\\n\\nfunc WithLogger(log *zap.Logger) Option {\\n  return loggerOption{Log: log}\\n}\\n\\n// Open creates a connection.\\nfunc Open(\\n  addr string,\\n  opts ...Option,\\n) (*Connection, error) {\\n  options := options{\\n    cache:  defaultCache,\\n    logger: zap.NewNop(),\\n  }\\n\\n  for _, o := range opts {\\n    o.apply(&options)\\n  }\\n\\n  // ...\\n}\\n```\\n\\nNote that there\'s a method of implementing this pattern with closures but we\\nbelieve that the pattern above provides more flexibility for authors and is\\neasier to debug and test for users. In particular, it allows options to be\\ncompared against each other in tests and mocks, versus closures where this is\\nimpossible. Further, it lets options implement other interfaces, including\\n`fmt.Stringer` which allows for user-readable string representations of the\\noptions.\\n\\nSee also,\\n\\n- [Self-referential functions and the design of options](https://commandcenter.blogspot.com/2014/01/self-referential-functions-and-design.html)\\n- [Functional options for friendly APIs](https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis)\\n\\n\x3c!-- TODO: replace this with parameter structs and functional options, when to\\nuse one vs other --\x3e\\n\\n## Linting\\n\\nMore importantly than any \\"blessed\\" set of linters, lint consistently across a\\ncodebase.\\n\\nWe recommend using the following linters at a minimum, because we feel that they\\nhelp to catch the most common issues and also establish a high bar for code\\nquality without being unnecessarily prescriptive:\\n\\n- [errcheck](https://github.com/kisielk/errcheck) to ensure that errors are handled\\n- [goimports](https://godoc.org/golang.org/x/tools/cmd/goimports) to format code and manage imports\\n- [golint](https://github.com/golang/lint) to point out common style mistakes\\n- [govet](https://golang.org/cmd/vet/) to analyze code for common mistakes\\n- [staticcheck](https://staticcheck.io/) to do various static analysis checks\\n\\n### Lint Runners\\n\\nWe recommend [golangci-lint](https://github.com/golangci/golangci-lint) as the go-to lint runner for Go code, largely due\\nto its performance in larger codebases and ability to configure and use many\\ncanonical linters at once. This repo has an example [.golangci.yml](https://github.com/uber-go/guide/blob/master/.golangci.yml) config file\\nwith recommended linters and settings.\\n\\ngolangci-lint has [various linters](https://golangci-lint.run/usage/linters/) available for use. The above linters are\\nrecommended as a base set, and we encourage teams to add any additional linters\\nthat make sense for their projects."},{"id":"/2023/11/10/habit","metadata":{"permalink":"/blog/2023/11/10/habit","source":"@site/blog/2023/11/10/habit.md","title":"\u5f00\u53d1\u4e60\u60ef","description":"\u5982\u4f55\u57f9\u517b\u826f\u597d\u7684\u5f00\u53d1\u4e60\u60ef","date":"2023-11-10T00:00:00.000Z","formattedDate":"2023\u5e7411\u670810\u65e5","tags":[],"readingTime":2.34,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5f00\u53d1\u4e60\u60ef","authors":"ahKevinXy","description":"\u5982\u4f55\u57f9\u517b\u826f\u597d\u7684\u5f00\u53d1\u4e60\u60ef","image":"https://source.unsplash.com/random?people&59"},"unlisted":false,"prevItem":{"title":"Uber Go Style Guide","permalink":"/blog/2023/11/10/golang"},"nextItem":{"title":"Dubbo  \u5b66\u4e60\u7b14\u8bb0","permalink":"/blog/2023/11/05/dubbo"}},"content":"\x3c!-- truncate --\x3e\\n\\n1. \u4fdd\u6301\u5bf9\u4ee3\u7801\u7ec6\u8282\u7684\u504f\u6267\u89c2\u5ff5\\n2. \u63a7\u5236\u7cfb\u7edf\u7684\u71b5\u589e\\n3. \u7f16\u5199\u81ea\u52a8\u5316\u6d4b\u8bd5\\n4. \u5c3d\u65e9\u6d4b\u8bd5\\n5. \u9879\u76ee\u4e2d\u7edf\u4e00\u672f\u8bed\\n6. \u4e0d\u8981\u9762\u5411\u9700\u6c42\u7f16\u7a0b,\u5e94\u5f53\u9762\u5411\u4e1a\u52a1\u6a21\u578b\u7f16\u7a0b\\n7. \u8f6f\u4ef6\u5de5\u7a0b = \u79d1\u5b66 + \u827a\u672f\\n8. \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6846\u67b6\uff0c\u4f46\u8981\u65f6\u523b\u8b66\u60d5\uff0c\u522b\u88ab\u5b83\u62d6\u4f4f\u3002\u6211\u4eec\u5e94\u8be5\u5c06\u6846\u67b6\u4f5c\u4e3a\u67b6\u6784\u6700\u5916\u5708\u7684\u4e00\u4e2a\u5b9e\u73b0\u7ec6\u8282\u6765\u4f7f\u7528\uff0c\u4e0d\u8981\u8ba9\u5b83\u8fdb\u5165\u5185\u5708\u3002 \u2014\u2014\u300a\u6574\u6d01\u67b6\u6784\u4e4b\u9053\u300b\\n9. \u89e3\u8026 \u63d2\u4ef6\u5316 \\n10.  \u5982\u679c\u6709\u4e00\u4e9b\u53c2\u6570\u662f\u53ef\u53d8\u7684\uff0c\u6211\u4eec\u5e94\u8be5\u4f7f\u7528\u914d\u7f6e\uff0c\u800c\u4e0d\u662f\u628a\u53c2\u6570\u5199\u6b7b\u5728\u4ee3\u7801\u91cc \u65b0\u65f6\u4ee3\u7684\u4e24\u4e2a\u9053\u7406\uff1a\uff081\uff09\u914d\u7f6e\u5373\u9690\u6027\u8026\u5408\u3002\u914d\u5408\u548c\u76f8\u9694\u5341\u4e07\u516b\u5343\u91cc\u7684\u4ee3\u7801\u4ea7\u751f\u4e86\u8026\u5408\u3002 \uff082\uff09\u4ee3\u7801\u6709\u5f88\u5f3a\u7684\u81ea\u89e3\u91ca\u80fd\u529b\uff0c\u5de5\u7a0b\u5e08\u4eec\u66f4\u613f\u610f\u9605\u8bfb\u53ef\u8bfb\u6027\u5f3a\u7684\u4ee3\u7801\uff0c\u800c\u4e0d\u662f\u7f16\u5199\u5f97\u5f88\u70c2\u7684\u914d\u7f6e\u6587\u6863\u3002\\n11. \u5c01\u88c5\u4e0d\u4e00\u5b9a\u662f\u597d\u7684\u7ec4\u7ec7\u5f62\u5f0f,\u4e0d\u8981\u8fc7\u5ea6\u5c01\u88c5\\n12. \u5f53\u81ea\u5df1\u4ee3\u7801\u53ef\u80fd\u4f1a\u7ed9\u522b\u4eba\u5e26\u6765\u56f0\u6270\u7684\u5730\u65b9,\u5e94\u8be5\u663e\u5f0f\u53bb\u5904\u7406\\n13. \u5408\u7406\u6ce8\u91ca\u4e00\u4e9b\u5e76\u4e0d\u201d\u901a\u4fd7\u201c\u7684\u903b\u8f91\u548c\u6570\u503c\uff08\u795e\u79d8\u5b57\u7b26\u4e32\uff09\\n14. \u4ee3\u529e\u7684\u4e8b\u9879\u8981\u7528TODO\u6807\u8bc6\u51fa\u6765\uff0c\u6781\u6709\u53ef\u80fd\u5c31\u662f\u4f60\u81ea\u5df1\u63a5\u7740\u5f00\u53d1\\n15. \u8981\u628a\u9519\u8bef\uff08error/Exception\uff09\u5305\u88c5\u4e00\u4e0b\u8fd4\u56de\u4e0a\u5c42\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u629b\u5f03\\n16. \u5386\u53f2\u6709\u95ee\u9898\u7684\u4ee3\u7801, \u53d1\u73b0\u4e86\u95ee\u9898\u8981\u53ca\u65f6 push \u76f8\u5173\u4eba\u4e3b\u52a8\u89e3\u51b3\\n17. \u5982\u679c\u6253\u4e86\u9519\u8bef\u65e5\u5fd7\uff0c\u6709\u6548\u4fe1\u606f\u5fc5\u987b\u5145\u8db3\uff0c\u4e14\u4e0d\u8fc7\u591a\u3002\u8bb2\u4e0d\u6e05\u695a\u7684\u65e5\u5fd7\u7b49\u4e8e\u6ca1\u6709\\n18. MR \u8981\u81ea\u5df1\u5148 review, \u4e0d\u8981\u6d6a\u8d39 reviewer \u7684\u65f6\u95f4\\n19. \u7a7a\u5b9e\u73b0\u9700\u8981\u6ce8\u660e\u7a7a\u5b9e\u73b0\u5c31\u662f\u5b9e\u73b0\u3002\\n20. \u4e0d\u8981\u51fa\u73b0\u7279\u5b9a IP\uff0c\u6216\u8005\u628a\u4ec0\u4e48\u53ef\u53d8\u7684\u4e1c\u897f\u5199\u6b7b"},{"id":"/2023/11/05/dubbo","metadata":{"permalink":"/blog/2023/11/05/dubbo","source":"@site/blog/2023/11/05/dubbo.md","title":"Dubbo  \u5b66\u4e60\u7b14\u8bb0","description":"Dubbo\u5982\u4f55\u591a\u8bed\u8a00\u540c\u65f6\u5f00\u53d1\u5b66\u4e60 java \u548c go  \u7a0b\u5e8f\u5458\u5982\u4f55\u8054\u52a8\u5f00\u53d1","date":"2023-11-05T00:00:00.000Z","formattedDate":"2023\u5e7411\u67085\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":1,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Dubbo  \u5b66\u4e60\u7b14\u8bb0","tags":["Java"],"authors":"ahKevinXy","description":"Dubbo\u5982\u4f55\u591a\u8bed\u8a00\u540c\u65f6\u5f00\u53d1\u5b66\u4e60 java \u548c go  \u7a0b\u5e8f\u5458\u5982\u4f55\u8054\u52a8\u5f00\u53d1","image":"https://source.unsplash.com/random?people&59"},"unlisted":false,"prevItem":{"title":"\u5f00\u53d1\u4e60\u60ef","permalink":"/blog/2023/11/10/habit"},"nextItem":{"title":"Spring  \u5b66\u4e60\u7b14\u8bb0","permalink":"/blog/2023/11/05/springboot"}},"content":"\x3c!-- truncate --\x3e\\n## \u4ec0\u4e48\u662fDubbo\\n\\nDubbo \u662f\u4e00\u6b3eRPC \u670d\u52a1\u5f00\u53d1\u6846\u67b6.\u7528\u4e8e\u89e3\u51b3\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u7684\u670d\u52a1\u6cbb\u7406\u4e0e\u901a\u4fe1\u95ee\u9898\\n\\nDubbo \u5f00\u53d1\u7684\u5fae\u670d\u52a1\u539f\u751f\u5177\u5907\u76f8\u4e92\u4e4b\u95f4\u7684\u8fdc\u7a0b\u5730\u5740\u53d1\u73b0\u4e0e\u901a\u4fe1\u7684\u80fd\u529b,\u5229\u7528Dubbo\u63d0\u4f9b\u7684\u4e30\u5bcc\u7684\u670d\u52a1\u6cbb\u7406\u7279\u6027,\u53ef\u4ee5\u5b9e\u73b0\u8bf8\u5982\u670d\u52a1\u53d1\u73b0,\u8d1f\u8f7d\u5747\u8861,\u6d41\u91cf\u8c03\u5ea6\u7b49\u670d\u52a1\u6cbb\u7406\\n\\n## Dubbo \u53ef\u4ee5\u505a\u54ea\u4e9b\\n\\n* \u5fae\u670d\u52a1\u7f16\u7a0b\u8303\u5f0f\u548c\u5de5\u5177\\n* \u9ad8\u6027\u80fd\u7684RPC\u901a\u4fe1\\n* \u5fae\u670d\u52a1\u76d1\u63a7\u4e0e\u6cbb\u7406\\n* \u90e8\u7f72\u591a\u79cd\u73af\u5883\\n\\n## Dubbo \u7279\u6027\\n\\n* Dubbo \u548cSpring Cloud\u90fd\u4fa7\u91cd\u5728\u5bf9\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e38\u7528\u95ee\u9898\u6a21\u5f0f\u7684\u62bd\u8c61(\u5982\u670d\u52a1\u53d1\u73b0,\u8d1f\u8f7d\u5747\u8861,\u52a8\u6001\u914d\u7f6e)\\n* Dubbo \u548c Spring Cloud \u90fd\u5b8c\u5168\u517c\u5bb9Spring \u4f53\u7cfb\u7684\u5e94\u7528\u5f00\u53d1\u6a21\u5f0f"},{"id":"/2023/11/05/springboot","metadata":{"permalink":"/blog/2023/11/05/springboot","source":"@site/blog/2023/11/05/springboot.md","title":"Spring  \u5b66\u4e60\u7b14\u8bb0","description":"\u5982\u4f55\u5feb\u901f\u5b66\u4e60Spring","date":"2023-11-05T00:00:00.000Z","formattedDate":"2023\u5e7411\u67085\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.645,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Spring  \u5b66\u4e60\u7b14\u8bb0","tags":["Java"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5feb\u901f\u5b66\u4e60Spring","image":"https://source.unsplash.com/random?people&58"},"unlisted":false,"prevItem":{"title":"Dubbo  \u5b66\u4e60\u7b14\u8bb0","permalink":"/blog/2023/11/05/dubbo"},"nextItem":{"title":"Zookeeper","permalink":"/blog/2023/10/30/zookeeper"}},"content":"\x3c!-- truncate --\x3e\\n## \u4ec0\u4e48\u662fSpring \\n\\nSpring \u6846\u67b6\u662f\u57fa\u4e8eJava\u7684\u73b0\u4ee3\u4f01\u4e1a\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u5168\u9762\u7684\u7f16\u7a0b\u548c\u914d\u7f6e\u6a21\u578b\\n\\n\\n\u7279\u70b9:\\n\\n* \u6838\u5fc3\u6280\u672f: \u4f9d\u8d56\u6ce8\u5165,\u4e8b\u4ef6,\u8d44\u6e90,i18n,\u9a8c\u8bc1,\u6570\u636e\u7ed1\u5b9a,\u7c7b\u578b\u8f6c\u6362,Spel,AOP\\n* \u6d4b\u8bd5: \u6a21\u62df\u5bf9\u8c61,TestContext\u6846\u67b6,Spring MVC\u6d4b\u8bd5,WebTestClient\\n* \u6570\u636e\u8bbf\u95ee: \u4e8b\u52a1,DAO \u652f\u6301,JDBC,ORM,\u7f16\u7ec4xml\\n* Spring MVC\u548c Spring WebFlux Web\u6846\u67b6\\n* \u96c6\u6210: \u8fdc\u7a0b\u5904\u7406,JMS,JCA,JMX,\u7535\u5b50\u90ae\u4ef6,\u4efb\u52a1,\u8c03\u5ea6,\u7f13\u5b58\u548c\u53ef\u89c2\u5bdf\u6027\\n* \u8bed\u8a00: Kotlin,Groovy,\u52a8\u6001\u8bed\u8a00"},{"id":"/2023/10/30/zookeeper","metadata":{"permalink":"/blog/2023/10/30/zookeeper","source":"@site/blog/2023/10/30/zookeeper.md","title":"Zookeeper","description":"Zookeeper \u4ecb\u7ecd","date":"2023-10-30T00:00:00.000Z","formattedDate":"2023\u5e7410\u670830\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":1.84,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Zookeeper","tags":["Java"],"authors":"ahKevinXy","description":"Zookeeper \u4ecb\u7ecd","image":"https://source.unsplash.com/random?people&57"},"unlisted":false,"prevItem":{"title":"Spring  \u5b66\u4e60\u7b14\u8bb0","permalink":"/blog/2023/11/05/springboot"},"nextItem":{"title":"\u96ea\u82b1\u7b97\u6cd5","permalink":"/blog/2023/10/29/snowflake"}},"content":"Zookeeper \u662f\u4e00\u4e2a\u9488\u5bf9\u5206\u5e03\u5f0f\u5e94\u7528\u7a0b\u5e8f\u7684\u5206\u5e03\u5f0f\u5f00\u6e90\u534f\u8c03\u670d\u52a1,\u5206\u5e03\u5f0f\u5e94\u7528\u53ef\u4ee5\u5728\u8fd9\u4e9b\u670d\u52a1\u7684\u57fa\u7840\u4e0a\u6784\u5efa\u66f4\u9ad8\u7ea7\u7684\u540c\u6b65,\u914d\u7f6e\u7ef4\u62a4,\u7ec4\u548c\u547d\u540d\u670d\u52a1\\n\\nZookeeper\u5141\u8bb8\u5206\u5e03\u5f0f\u8fdb\u7a0b\u901a\u8fc7\u5171\u4eab\u7684\u5206\u5c42\u7a7a\u95f4\u76f8\u4e92\u534f\u8c03\\n\\n\u4e2d\u95f4\u4ef6 \u63d0\u4f9b\u534f\u8c03\u670d\u52a1\\n\\n\u4f5c\u7528\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf \\n\\n\u652f\u6301Java \u901a\u8fc7java\u548cC\u8bed\u8a00\u7684\u5ba2\u6237\u7aefapi\\n\\n## \u7279\u6027\\n\\n*  \u987a\u5e8f\u4e00\u81f4\u6027\\n*  \u539f\u5b50\u6027\\n* \u5355\u4e00\u89c6\u56fe\\n* \u53ef\u9760\u6027\\n* \u53ca\u65f6\u6027  \\n\\n\u7b80\u5355\u7684api\\n\\n* `create` \u5728\u6811\u79cd\u67d0\u4e2a\u4f4d\u7f6e\u521b\u5efa\u8282\u70b9\\n* `delete` \u5220\u9664\u4e00\u4e2a\u8282\u70b9\\n* `exist` \u6d4b\u8bd5\u67d0\u4e2a\u4f4d\u7f6e\u8282\u70b9\u72b6\u6001\\n* `get data` \u83b7\u53d6\u8282\u70b9\u6570\u636e\\n* `set data` \u5c06\u6570\u636e\u5199\u5165\u8282\u70b9\\n* `get children` \u68c0\u7d22\u8282\u70b9\u6570\u636e\\n* `sync` \u7b49\u5f85\u6570\u636e\u4f20\u64ad\\n\\n## \u4ecb\u7ecd\\n\\n \\n\\n\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740 :[download](http://zookeeper.apache.org/releases.html)\\n\\n```bash\\n# \u4e0b\u8f7d bin\\n\\nwget https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.9.1/apache-zookeeper-3.9.1-bin.tar.gz\\n \\n # \u89e3\u538b\u6587\u4ef6 \\n  tar -zxvf apache-zookeeper-3.9.1-bin.tar.gz \\n  \\n  # \u76ee\u5f55\u7ed3\u6784 \\n  # bin  conf  docs  lib  LICENSE.txt  logs  NOTICE.txt  README.md  README_packaging.md\\n  \\n  \\n # \u751f\u6210\u914d\u7f6e\u6587\u4ef6\\n # \u8fdb\u5165 conf\\n \\n cp zoo_sample.cfg zoo.cfg \\n \\n # \u8fdb\u5165 bin \u76ee\u5f55\\n \\n # \u542f\u52a8 zookeeper\\n ./zkServer.sh start \\n \\n # zkCli.sh\\n \\n./zkCli.sh -server 127.0.0.1:2181\\n\\n  \\n```\\n\\n## zoo.cfg \u914d\u7f6e\u8bf4\u660e\\n\\n* tickTime \u7528\u4e8e\u8ba1\u7b97\u7684\u65f6\u95f4\u5355\u5143\\n* initLimit \u7528\u4e8e\u96c6\u7fa4,\u5141\u8bb8 \u4ece\u8282\u70b9\u8fde\u63a5 \u5e76\u540c\u6b65\u5230master\u8282\u70b9\u7684\u521d\u59cb\u5316\u8fde\u63a5\u65f6\u95f4.\u4ee5tickTime\u7684\u500d\u6570\u6765\u8868\u793a\\n* syncLimit \u7528\u4e8e\u96c6\u7fa4 master\u4e3b\u8282\u70b9\u4e0e\u4ece\u8282\u70b9\u4e4b\u95f4\u53d1\u9001\u6d88\u606f,\u8bf7\u6c42\u548c\u5e94\u7b54\u65f6\u95f4\u957f\u5ea6(\u5fc3\u8df3\u673a\u5236)\\n* dataDir \u5fc5\u987b\u914d\u7f6e\\n* dataLogDir \u65e5\u5fd7\u6587\u4ef6\\n* clientPort \u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3"},{"id":"/2023/10/29/snowflake","metadata":{"permalink":"/blog/2023/10/29/snowflake","source":"@site/blog/2023/10/29/snowflake.md","title":"\u96ea\u82b1\u7b97\u6cd5","description":"\u96ea\u82b1\u7b97\u6cd5 \u4ec0\u4e48\u662f\u96ea\u82b1\u7b97\u6cd5","date":"2023-10-29T00:00:00.000Z","formattedDate":"2023\u5e7410\u670829\u65e5","tags":[{"label":"\u7b97\u6cd5","permalink":"/blog/tags/\u7b97\u6cd5"}],"readingTime":0,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u96ea\u82b1\u7b97\u6cd5","tags":["\u7b97\u6cd5"],"authors":"ahKevinXy","description":"\u96ea\u82b1\u7b97\u6cd5 \u4ec0\u4e48\u662f\u96ea\u82b1\u7b97\u6cd5","image":"https://source.unsplash.com/random?people&57"},"unlisted":false,"prevItem":{"title":"Zookeeper","permalink":"/blog/2023/10/30/zookeeper"},"nextItem":{"title":"yarn \u5982\u4f55\u5347\u7ea7\u5305","permalink":"/blog/2023/10/18/yarn"}},"content":""},{"id":"/2023/10/18/yarn","metadata":{"permalink":"/blog/2023/10/18/yarn","source":"@site/blog/2023/10/18/yarn.md","title":"yarn \u5982\u4f55\u5347\u7ea7\u5305","description":"yarn \u5982\u4f55\u5347\u7ea7\u5305 yarn \u5982\u4f55\u5347\u7ea7\u672c\u5730package","date":"2023-10-18T00:00:00.000Z","formattedDate":"2023\u5e7410\u670818\u65e5","tags":[{"label":"\u524d\u7aef","permalink":"/blog/tags/\u524d\u7aef"},{"label":"yarn","permalink":"/blog/tags/yarn"}],"readingTime":0.175,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"yarn \u5982\u4f55\u5347\u7ea7\u5305","tags":["\u524d\u7aef","yarn"],"authors":"ahKevinXy","description":"yarn \u5982\u4f55\u5347\u7ea7\u5305 yarn \u5982\u4f55\u5347\u7ea7\u672c\u5730package","image":"https://source.unsplash.com/random?people&57"},"unlisted":false,"prevItem":{"title":"\u96ea\u82b1\u7b97\u6cd5","permalink":"/blog/2023/10/29/snowflake"},"nextItem":{"title":"go \u8bed\u8a00\u52a0\u5bc6","permalink":"/blog/2023/10/16/crypto"}},"content":"```bash\\nyarn upgrade-interactive --latest\\n```\\n\u9700\u8981\u624b\u52a8\u9009\u62e9\u5347\u7ea7\u7684\u4f9d\u8d56\u5305\uff0c\u6309\u7a7a\u683c\u952e\u9009\u62e9\uff0ca \u952e\u5207\u6362\u6240\u6709\uff0ci \u952e\u53cd\u9009\u9009\u62e9"},{"id":"/2023/10/16/crypto","metadata":{"permalink":"/blog/2023/10/16/crypto","source":"@site/blog/2023/10/16/crypto.md","title":"go \u8bed\u8a00\u52a0\u5bc6","description":"Go \u8bed\u8a00\u52a0\u5bc6 AES RSA \u56fd\u5bc6\u52a0\u5bc6","date":"2023-10-16T00:00:00.000Z","formattedDate":"2023\u5e7410\u670816\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"\u52a0\u5bc6","permalink":"/blog/tags/\u52a0\u5bc6"}],"readingTime":0,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"go \u8bed\u8a00\u52a0\u5bc6","tags":["go","\u52a0\u5bc6"],"authors":"ahKevinXy","description":"Go \u8bed\u8a00\u52a0\u5bc6 AES RSA \u56fd\u5bc6\u52a0\u5bc6","image":"https://source.unsplash.com/random?people&56"},"unlisted":false,"prevItem":{"title":"yarn \u5982\u4f55\u5347\u7ea7\u5305","permalink":"/blog/2023/10/18/yarn"},"nextItem":{"title":"\u4e00\u5929\u5b66\u4f1aiOS\u5f00\u53d1","permalink":"/blog/2023/10/09/onedayios"}},"content":""},{"id":"/2023/10/09/onedayios","metadata":{"permalink":"/blog/2023/10/09/onedayios","source":"@site/blog/2023/10/09/onedayios.md","title":"\u4e00\u5929\u5b66\u4f1aiOS\u5f00\u53d1","description":"\u5feb\u901f\u5b66\u4e60iOS \u5165\u95e8 \u5982\u4f55\u9ad8\u6548\u5b66\u4e60\u5165\u95e8iOS\u5f00\u53d1\u8bed\u8a00","date":"2023-10-09T00:00:00.000Z","formattedDate":"2023\u5e7410\u67089\u65e5","tags":[{"label":"iOS","permalink":"/blog/tags/i-os"},{"label":"oneday","permalink":"/blog/tags/oneday"}],"readingTime":0.895,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u4e00\u5929\u5b66\u4f1aiOS\u5f00\u53d1","tags":["iOS","oneday"],"authors":"ahKevinXy","description":"\u5feb\u901f\u5b66\u4e60iOS \u5165\u95e8 \u5982\u4f55\u9ad8\u6548\u5b66\u4e60\u5165\u95e8iOS\u5f00\u53d1\u8bed\u8a00","image":"https://source.unsplash.com/random?people&55"},"unlisted":false,"prevItem":{"title":"go \u8bed\u8a00\u52a0\u5bc6","permalink":"/blog/2023/10/16/crypto"},"nextItem":{"title":"\u4e00\u5929\u5b66\u4f1aJava \u8bed\u8a00","permalink":"/blog/2023/10/07/onedayjava"}},"content":"## objective-c \\nObjective-C \u662f\u4e00\u79cd\u7b80\u5355\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\uff0c\u8bbe\u8ba1\u4e3a\u53ef\u4ee5\u652f\u6301\u771f\u6b63\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u3002\\nObjective-C \u901a\u8fc7\u63d0\u4f9b\u7c7b\u5b9a\u4e49\uff0c\u65b9\u6cd5\u4ee5\u53ca\u5c5e\u6027\u7684\u8bed\u6cd5\uff0c\u8fd8\u6709\u5176\u4ed6\u53ef\u4ee5\u63d0\u9ad8\u7c7b\u7684\u52a8\u6001\u6269\u5c55\u80fd\u529b\u7684\u7ed3\u6784\u7b49\uff0c\u6269\u5c55\u4e86\u6807\u51c6\u7684 ANSI C \u8bed\u8a00\\n\\nObjective-C \u6269\u5c55\u540d\u8bf4\u660e\\n\\n| \u6269\u5c55\u540d | \u5185\u5bb9\u7c7b\u578b                                                   |\\n|-----|--------------------------------------------------------|\\n| .h  | \u5934\u6587\u4ef6.\u5934\u6587\u4ef6\u5305\u542b\u7c7b,\u7c7b\u578b,\u51fd\u6570\u548c\u5e38\u6570\u7684\u8bf4\u660e                                 |\\n| .m  | \u6e90\u4ee3\u7801\u6587\u4ef6,\u8fd9\u662f\u5178\u578b\u7684\u6e90\u4ee3\u7801\u6269\u5c55\u540d,\u53ef\u4ee5\u5305\u542bObjective-C\u548cC\u4ee3\u7801                  |\\n| .mm | \u6e90\u4ee3\u7801\u6587\u4ef6,\u5e26\u6709\u8fd9\u79cd\u6269\u5c55\u540d\u7684\u6e90\u4ee3\u7801\u6587\u4ef6,\u9664\u4e86\u5305\u542bObjective-C \u548cC\u4ee3\u7801\u6587\u4ef6\u4ee5\u5916\u8fd8\u53ef\u4ee5\u5305\u542bC++\u4ee3\u7801 |"},{"id":"/2023/10/07/onedayjava","metadata":{"permalink":"/blog/2023/10/07/onedayjava","source":"@site/blog/2023/10/07/onedayjava.md","title":"\u4e00\u5929\u5b66\u4f1aJava \u8bed\u8a00","description":"\u5feb\u901f\u5b66\u4e60java \u5165\u95e8 \u5982\u4f55\u9ad8\u6548\u5b66\u4e60\u5165\u95e8java\u8bed\u8a00","date":"2023-10-07T00:00:00.000Z","formattedDate":"2023\u5e7410\u67087\u65e5","tags":[{"label":"java","permalink":"/blog/tags/java"},{"label":"oneday","permalink":"/blog/tags/oneday"}],"readingTime":5.545,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u4e00\u5929\u5b66\u4f1aJava \u8bed\u8a00","tags":["java","oneday"],"authors":"ahKevinXy","description":"\u5feb\u901f\u5b66\u4e60java \u5165\u95e8 \u5982\u4f55\u9ad8\u6548\u5b66\u4e60\u5165\u95e8java\u8bed\u8a00","image":"https://source.unsplash.com/random?people&55"},"unlisted":false,"prevItem":{"title":"\u4e00\u5929\u5b66\u4f1aiOS\u5f00\u53d1","permalink":"/blog/2023/10/09/onedayios"},"nextItem":{"title":"goland \u4f7f\u7528\u6280\u5de7","permalink":"/blog/2023/10/01/goland"}},"content":"## \u57fa\u7840\u8bed\u6cd5\\n\\n* \u5bf9\u8c61 \u5bf9\u8c61\u662f\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f53\\n* \u7c7b \u7c7b\u662f\u4e00\u4e2a\u6a21\u677f,\u5b83\u63cf\u8ff0\u4e00\u7c7b\u5bf9\u8c61\u7684\u884c\u4e3a\u548c\u72b6\u6001\\n* \u65b9\u6cd5 \u65b9\u6cd5\u662f\u884c\u4e3a, \u4e00\u4e2a\u7c7b\u53ef\u4ee5\u6709\u5f88\u591a\u65b9\u6cd5.\u903b\u8f91\u8fd0\u7b97,\u6570\u636e\u4fee\u6539\u4ee5\u53ca\u6240\u6709\u52a8\u4f5c\u90fd\u5728\u65b9\u6cd5\u5185\u5b9e\u73b0\\n* \u5b9e\u4f8b\u53d8\u91cf \u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6709\u72ec\u7279\u7684\u5b9e\u4f8b\u53d8\u91cf,\u5bf9\u8c61\u7684\u72b6\u6001\u7531\u8fd9\u4e9b\u5b9e\u4f8b\u53d8\u91cf\u7684\u503c\u51b3\u5b9a\\n\x3c!-- truncate --\x3e\\n\\n```java \\npublic class HelloWorld {\\n    public static void main(String[] args){\\n        System.out.println(\\"Hello World\\");\\n    }\\n}\\n```\\n\\n## java \u5173\u952e\u5b57\\n\\n| \u7c7b\u522b           | \u5173\u952e\u5b57          | \u8bf4\u660e               |\\n|--------------|--------------|------------------|\\n| \u8bbf\u95ee\u63a7\u5236         | private      | \u79c1\u6709               |\\n|              | protectd     | \u53d7\u4fdd\u62a4              |\\n|              | public       | \u516c\u5171\u7684              |\\n| \u7c7b,\u65b9\u6cd5\u548c\u53d8\u91cf\u4fee\u9970\u7b26   | abstract     | \u58f0\u660e\u62bd\u8c61             |\\n|              | class        | \u7c7b                |\\n|              | final        | \u6700\u7ec8\u503c,\u4e0d\u53ef\u6539\u53d8         |\\n|              | implements   | \u5b9e\u73b0\u63a5\u53e3             |\\n|              | native       | \u672c\u5730 \u539f\u751f\u65b9\u6cd5          |\\n|              | new          | \u521b\u5efa               |\\n|              | static       | \u9759\u6001               |\\n|              | strictfp     | \u4e25\u683c\u6d6e\u70b9,\u7cbe\u51c6\u6d6e\u70b9        |\\n|              | synchronized | \u7ebf\u7a0b\u3001\u540c\u6b65            |\\n|              | transient    | \u77ed\u6682               |\\n|              | volatile     | \u6613\u5931               |\\n| \u7a0b\u5e8f\u63a7\u5236\u8bed\u53e5\\t      | break        | \u8df3\u51fa\u5faa\u73af             |\\n| \\t            | case         | \u5b9a\u4e49\u4e00\u4e2a\u503c\u4ee5\u4f9bswitch \u9009\u62e9 |\\n| \\t            | continue     | \u7ee7\u7eed               |\\n| \\t            | do           | \u8fd0\u884c               |\\n| \\t            | else         | \u5426\u5219               |\\n| \\t            | for          | \u5faa\u73af               |\\n| \\t            | if           | \u5982\u679c               |\\n| \\t            | instanceof   | \u5b9e\u4f8b               |\\n| \\t            | return       | \u8fd4\u56de               |\\n| \\t            | switch       | \u6839\u636e\u503c\u8fd4\u56de            |\\n| \\t            | while        | \u5faa\u73af               |\\n| \\t  \u9519\u8bef\u5904\u7406      | assert       | \u65ad\u8a00\u8868\u8fbe\u5f0f\u662f\u5426\u4e3a\u771f        |\\n| \\t            | catch        | \u6355\u6349\u5f02\u5e38             |\\n| \\t            | finally      | \u6709\u6ca1\u6709\u5f02\u5e38\u90fd\u6267\u884c         |\\n| \\t            | throw        | \u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61         |\\n| \\t            | throws       | \u58f0\u660e\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61         |\\n| \\t            | try          | \u6355\u83b7\u5f02\u5e38             |\\n| \\t    \u5305\u76f8\u5173     | import       | \u5f15\u5165               |\\n| \\t            | package      | \u5305                |\\n| \\t     \u57fa\u672c\u7c7b\u578b   | boolean      | \u5e03\u5c14\u7c7b\u578b             |\\n| \\t            | byte         | \u5b57\u8282\u578b              |\\n| \\t            | char         | \u5b57\u7b26\u578b              |\\n| \\t            | double       | \u53cc\u7cbe\u5ea6\u6d6e\u70b9            |\\n| \\t            | float        | \u5355\u7cbe\u5ea6\u6d6e\u70b9            |\\n| \\t            | int          | \u6574\u578b               |\\n| \\t            | long         | \u957f\u6574\u578b              |\\n| \\t            | short        | \u77ed\u6574\u578b              |\\n| \\t    \u53d8\u91cf\u5f15\u7528    | super        | \u7236\u7c7b,\u8d85\u7c7b            |\\n| \\t            | this         | \u672c\u7c7b               |\\n| \\t            | void         | \u65e0\u8fd4\u56de\u503c             |\\n| \\t      \u4fdd\u7559\u5173\u952e\u5b57 | goto         | \u662f\u5173\u952e\u5b57,\u4f46\u4e0d\u80fd\u4f7f\u7528       |\\n| \\t            | const        | \u662f\u5173\u952e\u5b57,\u4f46\u4e0d\u80fd\u4f7f\u7528       |\\n\\n\\n\\n## \u5bf9\u8c61 \u548c \u7c7b\\n* \u591a\u6001\\n* \u7ee7\u627f\\n* \u5c01\u88c5\\n* \u62bd\u8c61\\n* \u7c7b\\n* \u5bf9\u8c61\\n* \u5b9e\u4f8b\\n* \u65b9\u6cd5\\n* \u91cd\u8f7d\\n* \u5bf9\u8c61 \u5bf9\u8c61\u662f\u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b,\u6709\u72b6\u6001\u548c\u884c\u4e3a\\n* \u7c7b \u7c7b\u662f\u4e00\u4e2a\u6a21\u677f,\u5b83\u63cf\u8ff0\u4e00\u7c7b\u5bf9\u8c61\u7684\u884c\u4e3a\u548c\u72b6\u6001\\n\\n## \u57fa\u672c\u6570\u636e\u7c7b\u578b\\n\\n### \u5185\u7f6e\u6570\u636e\u7c7b\u578b\\n\\n* `byte` byte\u6570\u636e\u7c7b\u578b\u662f8\u4f4d,\u6709\u7b26\u53f7\u7684,\u4ee5\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u7684\u6574\u6570 \u6700\u5c0f\u503c -128 \u6700\u5927\u503c 127 \u9ed8\u8ba4\u662f0 \\n* `short` short \u6570\u636e\u7c7b\u578b\u662f16\u4f4d \u6709\u7b26\u53f7\u7684\u4ee5\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u7684\u6574\u6570 \u6700\u5c0f\u503c -32788(-2^15) \u6700\u5927\u503c32767(2^15) \u9ed8\u8ba4\u503c 0\\n* `int` int \u6570\u636e\u7c7b\u578b\u662f32\u4f4d,\u6709\u7b26\u53f7\u7684\u4ee5\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u7684\u6574\u6570, \u6700\u5c0f\u503c(-2^31) \u6700\u5927\u503c(2^31) \u4e00\u822c\u6574\u6570\u7c7b\u578b\u662fint \u9ed8\u8ba4\u503c0\\n* `long` long \u6570\u636e\u7c7b\u578b\u662f64 \u4f4d \u6709\u7b26\u53f7\u7684\u4e8c\u8fdb\u5236\u8865\u7801\u8868\u793a\u7684\u6574\u6570 \u6700\u5c0f\u503c(-2^63) \u6700\u5927\u503c(2^63) \u5e38\u7528\u4e8e\u8f83\u5927\u7684\u6574\u6570\u7cfb\u7edf\u4e0a\\n* `float` float \u6570\u636e\u7c7b\u578b\u662f\u5355\u7cbe\u5ea6 32\u4f4d float \u5728\u50a8\u5b58\u5927\u578b\u6d6e\u70b9\u6570\u53ef\u7701\u5185\u5b58\u7a7a\u95f4 \u9ed8\u8ba4\u503c 0.0f \u6d6e\u70b9\u6570\u4e0d\u80fd\u6765\u8868\u793a\u7cbe\u51c6\u7684\u503c \u4f8b\u5982\u8d27\u5e01\\n* `double` double \u6570\u636e\u7c7b\u578b\u662f\u53cc\u7cbe\u5ea6,64\u4f4d \u6d6e\u70b9\u6570\u9ed8\u8ba4\u662fdouble\u7c7b\u578b \u9ed8\u8ba4\u503c 0.0d \\n* `boolean` boolean \u6570\u636e\u7c7b\u578b\u8868\u793a\u4e00\u4f4d\u7684\u4fe1\u606f \u53ea\u6709\u4e24\u4e2a\u53d6\u503c true\u548cfalse \u9ed8\u8ba4\u503c false\\n* `char` \u7c7b\u578b\u662f\u4e00\u4e2a\u5355\u4e00\u768416\u4f4d unicode \u5b57\u7b26\\n\\n### \u5f15\u7528\u7c7b\u578b\\n\\n* \u5f15\u7528\u7c7b\u578b \u7c7b\u4f3c\u6307\u9488\\n* \u5bf9\u8c61,\u6570\u7ec4\u90fd\u662f\u5f15\u7528\u7c7b\u578b\\n* \u6240\u6709\u5f15\u7528\u7c7b\u578b\u7684\u9ed8\u8ba4\u503c\u90fd\u662fnull\\n* \u4e00\u4e2a\u5f15\u7528\u7c7b\u578b\u53ef\u4ee5\u7528\u6765 \u5f15\u7528\u4efb\u4f55\u4e0e\u4e4b\u517c\u5bb9\u7684\u7c7b\u578b\\n\\n### java \u5e38\u91cf\\n\\n\u5728java \u4e2d\u4f7f\u7528 final \u5173\u952e\u5b57\u4fee\u9970\u5e38\u91cf \u58f0\u660e\u65b9\u5f0f\u548c\u53d8\u91cf\u7c7b\u4f3c\\n\\n\\n| \u7b26\u53f7    | \u5b57\u7b26\u542b\u4e49               |\\n|-------|--------------------|\\n| \\\\n    | \u6362\u884c(0x0a)           |\\n| \\\\r    | \u56de\u8f66(0x0d)           |\\n| \\\\f    | \u6362\u9875\u7b26(0x0c)          |\\n| \\\\b    | \u9000\u683c(0x08)           |\\n| \\\\0    | \u7a7a\u5b57\u7b26(0x0)           |\\n| \\\\s    | \u7a7a\u683c(0x20)           |\\n| \\\\t    | \u5236\u8868\u7b26                |\\n| \\\\\\"    | \u53cc\u5f15\u53f7                |\\n| \\\\\'    | \u5355\u5f15\u53f7                |\\n| \\\\\\\\    | \u53cd\u659c\u6760                |\\n| \\\\ddd  | \u516b\u8fdb\u5236\u5b57\u7b26              |\\n| \\\\uxxx | 16\u8fdb\u5236unicode\u5b57\u7b26(xxx) |\\n\\n## \u53d8\u91cf\u7c7b\u578b\\n\\n\\n### \u8bbf\u95ee\u63a7\u5236\u4fee\u9970\u7b26\\n\\n* default (\u9ed8\u8ba4) \u540c\u7c7b\u53ef\u89c1\\n* private \u540c\u4e00\u4e2a\u7c7b\u53ef\u89c1\\n* public \u5bf9\u6240\u6709\u7c7b\u53ef\u89c1\\n* protected \u540c\u4e00\u5305\u5185\u548c\u6240\u6709\u5b50\u7c7b\u53ef\u89c1\\n\\n### \u975e\u8bbf\u95ee\u4fee\u9970\u7b26\\n\\n* static \\n    - \u9759\u6001\u53d8\u91cf\\n    - \u9759\u6001\u65b9\u6cd5\\n  \\n* final \u4fee\u9970\u7b26\\n    - final \u53d8\u91cf\\n    - final \u65b9\u6cd5 (\u53ef\u4ee5\u88ab\u5b50\u7c7b\u7ee7\u627f\u4e0d\u80fd\u88ab\u91cd\u5199)\\n\\n* abstract\\n    - \u62bd\u8c61\u7c7b\u4e0d\u80fd\u7528\u6765\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u58f0\u660e\u62bd\u8c61\u7c7b\u7684\u552f\u4e00\u76ee\u7684\u662f\u4e3a\u4e86\u5c06\u6765\u5bf9\u8be5\u7c7b\u8fdb\u884c\u6269\u5145\u3002\\n    - \u62bd\u8c61\u65b9\u6cd5\u662f\u4e00\u79cd\u6ca1\u6709\u4efb\u4f55\u5b9e\u73b0\u7684\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0\u7531\u5b50\u7c7b\u63d0\u4f9b\u3002"},{"id":"/2023/10/01/goland","metadata":{"permalink":"/blog/2023/10/01/goland","source":"@site/blog/2023/10/01/goland.md","title":"goland \u4f7f\u7528\u6280\u5de7","description":"goland \u4f7f\u7528\u6280\u5de7,\u5982\u4f55\u5de7\u5999\u4f7f\u7528 goland \u9ad8\u6548\u4f7f\u7528goland\u7f16\u8f91\u5668","date":"2023-10-01T00:00:00.000Z","formattedDate":"2023\u5e7410\u67081\u65e5","tags":[{"label":"goland","permalink":"/blog/tags/goland"}],"readingTime":0.07,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"goland \u4f7f\u7528\u6280\u5de7","tags":["goland"],"authors":"ahKevinXy","description":"goland \u4f7f\u7528\u6280\u5de7,\u5982\u4f55\u5de7\u5999\u4f7f\u7528 goland \u9ad8\u6548\u4f7f\u7528goland\u7f16\u8f91\u5668","image":"https://source.unsplash.com/random?people&52"},"unlisted":false,"prevItem":{"title":"\u4e00\u5929\u5b66\u4f1aJava \u8bed\u8a00","permalink":"/blog/2023/10/07/onedayjava"},"nextItem":{"title":"CSS flex \u5e03\u5c40","permalink":"/blog/2023/10/01/layout"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u5207\u7247\\n\\n```text\\n\\nitem := make([]int,10)\\nitem.aa\\n\\nitem.len \\nitem.for \\n\\n```"},{"id":"/2023/10/01/layout","metadata":{"permalink":"/blog/2023/10/01/layout","source":"@site/blog/2023/10/01/layout.md","title":"CSS flex \u5e03\u5c40","description":"css \u5e03\u5c40 \u5982\u4f55\u5e03\u5c40css","date":"2023-10-01T00:00:00.000Z","formattedDate":"2023\u5e7410\u67081\u65e5","tags":[{"label":"css","permalink":"/blog/tags/css"}],"readingTime":5.85,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"CSS flex \u5e03\u5c40","tags":["css"],"authors":"ahKevinXy","description":"css \u5e03\u5c40 \u5982\u4f55\u5e03\u5c40css","image":"https://source.unsplash.com/random?people&53"},"unlisted":false,"prevItem":{"title":"goland \u4f7f\u7528\u6280\u5de7","permalink":"/blog/2023/10/01/goland"},"nextItem":{"title":"gem  \u8bbe\u7f6e \u4e2d\u56fd\u6e90","permalink":"/blog/2023/09/25/gem"}},"content":"\x3c!-- truncate --\x3e\\n\\n## flex \u57fa\u672c\u6982\u5ff5\\n\u91c7\u7528Flex\u5e03\u5c40\u7684\u5143\u7d20\uff0c\u79f0\u4e3aFlex\u5bb9\u5668\uff08flex container\uff09\uff0c\u7b80\u79f0\u201d\u5bb9\u5668\u201d\u3002\u5b83\u7684\u6240\u6709\u5b50\u5143\u7d20\u81ea\u52a8\u6210\u4e3a\u5bb9\u5668\u6210\u5458\uff0c\u79f0\u4e3aFlex\u9879\u76ee\uff08flex item)\\n\\n\u5bb9\u5668\u7684\u5c5e\u6027\\n\\n* flex-direction\\n* flex-wrap\\n* flex-flow\\n* justify-content\\n* align-items\\n* align-content\\n\\n###  flex-direction\u5c5e\u6027\\nflex-direction\u5c5e\u6027\u51b3\u5b9a\u4e3b\u8f74\u7684\u65b9\u5411\uff08\u5373\u9879\u76ee\u7684\u6392\u5217\u65b9\u5411\uff09\u3002\\n```css\\n.box {\\n  flex-direction: row | row-reverse | column | column-reverse;\\n}\\n```\\n\\n```markdown\\nrow\uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u4e3b\u8f74\u4e3a\u6c34\u5e73\u65b9\u5411\uff0c\u8d77\u70b9\u5728\u5de6\u7aef\u3002\\nrow-reverse\uff1a\u4e3b\u8f74\u4e3a\u6c34\u5e73\u65b9\u5411\uff0c\u8d77\u70b9\u5728\u53f3\u7aef\u3002\\ncolumn\uff1a\u4e3b\u8f74\u4e3a\u5782\u76f4\u65b9\u5411\uff0c\u8d77\u70b9\u5728\u4e0a\u6cbf\u3002\\ncolumn-reverse\uff1a\u4e3b\u8f74\u4e3a\u5782\u76f4\u65b9\u5411\uff0c\u8d77\u70b9\u5728\u4e0b\u6cbf\u3002\\n```\\n\\n### flex-wrap\u5c5e\u6027\\n\\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u90fd\u6392\u5728\u4e00\u6761\u7ebf\uff08\u53c8\u79f0\u201d\u8f74\u7ebf\u201d\uff09\u4e0a\u3002flex-wrap\u5c5e\u6027\u5b9a\u4e49\uff0c\u5982\u679c\u4e00\u6761\u8f74\u7ebf\u6392\u4e0d\u4e0b\uff0c\u5982\u4f55\u6362\u884c\u3002\\n\\n```css\\n.box{\\n  flex-wrap: nowrap | wrap | wrap-reverse;\\n}\\n```\\n\\n```markdown\\n\uff081\uff09nowrap\uff08\u9ed8\u8ba4\uff09\uff1a\u4e0d\u6362\u884c\u3002\\n\uff082\uff09wrap\uff1a\u6362\u884c\uff0c\u7b2c\u4e00\u884c\u5728\u4e0a\u65b9\u3002\\n\uff083\uff09wrap-reverse\uff1a\u6362\u884c\uff0c\u7b2c\u4e00\u884c\u5728\u4e0b\u65b9\u3002\\n```\\n### flex-flow\\nflex-flow\u5c5e\u6027\u662fflex-direction\u5c5e\u6027\u548cflex-wrap\u5c5e\u6027\u7684\u7b80\u5199\u5f62\u5f0f\uff0c\u9ed8\u8ba4\u503c\u4e3arow nowrap\u3002\\n\\n```css\\n.box {\\n  flex-flow: <flex-direction> <flex-wrap>;\\n}\\n```\\n### justify-content\u5c5e\u6027\\n\\n```css\\n.box {\\n  justify-content: flex-start | flex-end | center | space-between | space-around;\\n}\\n```\\n\\n```markdown\\nflex-start\uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u5de6\u5bf9\u9f50\\nflex-end\uff1a\u53f3\u5bf9\u9f50\\ncenter\uff1a \u5c45\u4e2d\\nspace-between\uff1a\u4e24\u7aef\u5bf9\u9f50\uff0c\u9879\u76ee\u4e4b\u95f4\u7684\u95f4\u9694\u90fd\u76f8\u7b49\u3002\\nspace-around\uff1a\u6bcf\u4e2a\u9879\u76ee\u4e24\u4fa7\u7684\u95f4\u9694\u76f8\u7b49\u3002\u6240\u4ee5\uff0c\u9879\u76ee\u4e4b\u95f4\u7684\u95f4\u9694\u6bd4\u9879\u76ee\u4e0e\u8fb9\u6846\u7684\u95f4\u9694\u5927\u4e00\u500d\u3002\\n```\\n### align-items\u5c5e\u6027\\n\\n```css\\n.box {\\n  align-items: flex-start | flex-end | center | baseline | stretch;\\n}\\n```\\n\\n```markdown\\nflex-start\uff1a\u4ea4\u53c9\u8f74\u7684\u8d77\u70b9\u5bf9\u9f50\u3002\\nflex-end\uff1a\u4ea4\u53c9\u8f74\u7684\u7ec8\u70b9\u5bf9\u9f50\u3002\\ncenter\uff1a\u4ea4\u53c9\u8f74\u7684\u4e2d\u70b9\u5bf9\u9f50\u3002\\nbaseline: \u9879\u76ee\u7684\u7b2c\u4e00\u884c\u6587\u5b57\u7684\u57fa\u7ebf\u5bf9\u9f50\u3002\\nstretch\uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u5982\u679c\u9879\u76ee\u672a\u8bbe\u7f6e\u9ad8\u5ea6\u6216\u8bbe\u4e3aauto\uff0c\u5c06\u5360\u6ee1\u6574\u4e2a\u5bb9\u5668\u7684\u9ad8\u5ea6\u3002\\n```\\n\\n### align-content\u5c5e\u6027\\n```css\\n.box {\\n  align-content: flex-start | flex-end | center | space-between | space-around | stretch;\\n}\\n```\\n```markdown\\nflex-start\uff1a\u4e0e\u4ea4\u53c9\u8f74\u7684\u8d77\u70b9\u5bf9\u9f50\u3002\\nflex-end\uff1a\u4e0e\u4ea4\u53c9\u8f74\u7684\u7ec8\u70b9\u5bf9\u9f50\u3002\\ncenter\uff1a\u4e0e\u4ea4\u53c9\u8f74\u7684\u4e2d\u70b9\u5bf9\u9f50\u3002\\nspace-between\uff1a\u4e0e\u4ea4\u53c9\u8f74\u4e24\u7aef\u5bf9\u9f50\uff0c\u8f74\u7ebf\u4e4b\u95f4\u7684\u95f4\u9694\u5e73\u5747\u5206\u5e03\u3002\\nspace-around\uff1a\u6bcf\u6839\u8f74\u7ebf\u4e24\u4fa7\u7684\u95f4\u9694\u90fd\u76f8\u7b49\u3002\u6240\u4ee5\uff0c\u8f74\u7ebf\u4e4b\u95f4\u7684\u95f4\u9694\u6bd4\u8f74\u7ebf\u4e0e\u8fb9\u6846\u7684\u95f4\u9694\u5927\u4e00\u500d\u3002\\nstretch\uff08\u9ed8\u8ba4\u503c\uff09\uff1a\u8f74\u7ebf\u5360\u6ee1\u6574\u4e2a\u4ea4\u53c9\u8f74\u3002\\n```\\n### flex \u5c5e\u6027\\n\\n```markdown\\norder\\nflex-grow\\nflex-shrink\\nflex-basis\\nflex\\nalign-self\\n```\\n* order\u5c5e\u6027\u5b9a\u4e49\u9879\u76ee\u7684\u6392\u5217\u987a\u5e8f\u3002\u6570\u503c\u8d8a\u5c0f\uff0c\u6392\u5217\u8d8a\u9760\u524d\uff0c\u9ed8\u8ba4\u4e3a0\u3002\\n* flex-grow\u5c5e\u6027\u5b9a\u4e49\u9879\u76ee\u7684\u653e\u5927\u6bd4\u4f8b\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u5982\u679c\u5b58\u5728\u5269\u4f59\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u653e\u5927\u3002\\n* flex-shrink\u5c5e\u6027\u5b9a\u4e49\u4e86\u9879\u76ee\u7684\u7f29\u5c0f\u6bd4\u4f8b\uff0c\u9ed8\u8ba4\u4e3a1\uff0c\u5373\u5982\u679c\u7a7a\u95f4\u4e0d\u8db3\uff0c\u8be5\u9879\u76ee\u5c06\u7f29\u5c0f\u3002\\n* flex-basis\u5c5e\u6027\u5b9a\u4e49\u4e86\u5728\u5206\u914d\u591a\u4f59\u7a7a\u95f4\u4e4b\u524d\uff0c\u9879\u76ee\u5360\u636e\u7684\u4e3b\u8f74\u7a7a\u95f4\uff08main size\uff09\u3002\u6d4f\u89c8\u5668\u6839\u636e\u8fd9\u4e2a\u5c5e\u6027\uff0c\u8ba1\u7b97\u4e3b\u8f74\u662f\u5426\u6709\u591a\u4f59\u7a7a\u95f4\u3002\u5b83\u7684\u9ed8\u8ba4\u503c\u4e3aauto\uff0c\u5373\u9879\u76ee\u7684\u672c\u6765\u5927\u5c0f\u3002\\n* flex\u5c5e\u6027\u662fflex-grow, flex-shrink \u548c flex-basis\u7684\u7b80\u5199\uff0c\u9ed8\u8ba4\u503c\u4e3a0 1 auto\u3002\u540e\u4e24\u4e2a\u5c5e\u6027\u53ef\u9009\u3002\\n* align-self\u5c5e\u6027\u5141\u8bb8\u5355\u4e2a\u9879\u76ee\u6709\u4e0e\u5176\u4ed6\u9879\u76ee\u4e0d\u4e00\u6837\u7684\u5bf9\u9f50\u65b9\u5f0f\uff0c\u53ef\u8986\u76d6align-items\u5c5e\u6027\u3002\u9ed8\u8ba4\u503c\u4e3aauto\uff0c\u8868\u793a\u7ee7\u627f\u7236\u5143\u7d20\u7684align-items\u5c5e\u6027\uff0c\u5982\u679c\u6ca1\u6709\u7236\u5143\u7d20\uff0c\u5219\u7b49\u540c\u4e8estretch\u3002\\n\\n\\n\\n\\n\\n\\n## \u5bfc\u822a\u680f\u5e03\u5c40\\n\\n```typescript jsx live\\nfunction App(){\\n    \\n    const inputStyle ={\\n        outline:\'none\',\\n        border:\'none\',\\n       flexGrow:1\\n    }\\n    const headerStyle ={\\n        display:\'flex\',\\n        justifyContent:\'space-between\'\\n    }\\n    const leftContent = {\\n        display:\'flex\',\\n        alignItems:\'center\',\\n        flexShrink:\'0\'\\n     \\n    }\\n    const leftContentItem={\\n        marginLeft:\'20px\'\\n    }\\n    const searchContent={\\n        display: \'flex\',\\n        alignItems: \'center\',\\n        maxWidth:\'60%\',\\n        minWidth:\'20%\',\\n        justifyContent: \'space-between\'\\n    }\\n    const rightContent = {\\n        display:\'flex\',\\n        alignItems:\'center\'\\n    }\\n    const  rightContentItem ={\\n \\n        marginLeft:\'20px\'\\n    }\\n    return <> \\n        \\n        <div style={headerStyle}>\\n            \\n            <div style={leftContent}>\\n                <div style={leftContentItem}> \u9996\u9875</div>\\n                <div style={leftContentItem}> \u535a\u5ba2</div>\\n                <div style={leftContentItem}> \u65b0\u95fb</div>\\n                <div style={leftContentItem}> \u5b66\u4e60</div>\\n            </div>\\n          \\n            \\n            <div style={searchContent}>  \\n                <input style={inputStyle} />\\n            </div>\\n            \\n            <div style={rightContent}>\\n                <div style={rightContentItem}>\ud83d\udc64</div>\\n                <div style={rightContentItem}>github</div>\\n                <div style={rightContentItem}>\u2600\ufe0f</div>\\n            </div>\\n        </div>\\n    \\n    </>\\n}\\n```\\n\\n## \u5e03\u5c40 alignItem\\n\\n```typescript jsx live\\n\\nfunction App(){\\n    const content1 = {\\n        display:\'flex\',\\n        alignItems:\'flex-center\',\\n        // justifyContent:\'flex-end\'\\n         justifyContent:\'space-between\'\\n    }\\n    const item1 = {\\n        flexShrink:\'1\',\\n        flexBasis:\'0px\',\\n        border:\'1px solid red\',\\n        margin:\' auto 2px\'\\n    }\\n    return <> \\n        <div style={content1}>\\n            <div style={item1}>1</div>\\n            <div style={item1}>2</div>\\n            <div style={item1}>3</div>\\n            <div style={item1}>4</div>\\n            <div style={item1}>5</div>\\n            <div style={item1}>6</div>\\n        </div>\\n    </>\\n}\\n```\\n\\n## \u5e03\u5c40 flexShrink\\n\\n```typescript jsx live\\n\\nfunction App(){\\n    const content1 = {\\n        display:\'flex\'\\n    }\\n    const item1 = {\\n        flexShrink:\'1\',\\n        flexBasis:\'0px\',\\n        border:\'1px solid red\',\\n        margin:\' auto 2px\'\\n    }\\n    return <> \\n        <div style={content1}>\\n            <div style={item1}>1</div>\\n            <div style={item1}>2</div>\\n            <div style={item1}>3</div>\\n            <div style={item1}>4</div>\\n            <div style={item1}>5</div>\\n            <div style={item1}>6</div>\\n        </div>\\n    </>\\n}\\n```\\n\\n\\n## \u5e03\u5c40 flexBasis\\n\\n```typescript jsx live\\n\\nfunction App(){\\n    const content1 = {\\n        display:\'flex\'\\n    }\\n    const item1 = {\\n        flexBasis:\'0px\',\\n        flexGrow:1,\\n        border:\'1px solid red\',\\n        margin:\' auto 2px\'\\n    }\\n    return <> \\n        <div style={content1}>\\n            <div style={item1}>1</div>\\n            <div style={item1}>2</div>\\n            <div style={item1}>3</div>\\n            <div style={item1}>4</div>\\n            <div style={item1}>5</div>\\n            <div style={item1}>6</div>\\n        </div>\\n    </>\\n}\\n```\\n\\n##  \u5e03\u5c40\\n\\n```typescript jsx live\\nfunction  app(){\\n    const bodyContent = {\\n        width:\'100%\',\\n      \\n        border:\'1px solid red\',\\n        margin:\'30px auto 0px\'\\n    }\\n    const column1 ={\\n        width: \'70%\',\\n        height: \'100px\',\\n        float:\'left\',\\n        backgroundColor:\'red\'\\n    }\\n    const column2 = {\\n        // border: \'1px solid #000\',\\n        width:\'28%\',\\n        backgroundColor: \'yellow\',\\n        float: \'right\',\\n        height:\'100px\'\\n    }\\n   \\n    return <> \\n        <div style={bodyContent}>\\n             <div>\\n                 <div style={column1}></div>\\n                 <div style={column2}></div>\\n                 <div style={{\\n                     clear:\'both\'\\n                 }}>\\n                     \\n                 </div>\\n             </div>\\n        </div>\\n    </>\\n}\\n```\\n\\n## \u7011\u5e03\u6d41\u5e03\u5c40\\n\\n```typescript jsx\\nfunction  app (){\\n    \\n    return <>\\n        \\n    </>\\n}\\n```\\n\\n## flex \u5e03\u5c40\\n\\n\\n```typescript jsx live\\n\\nfunction app(){\\n    const constStyle ={\\n        // flex:\'1 1 150px\',\\n        backgroundColor:\'red\',\\n        marginLeft:\'20px\'\\n    }\\n    return <>\\n        <div style={{\\n           display:\'flex\',\\n           flexWrap:\'warp\',\\n           justifyContent:\'center\' \\n        }}>\\n            <div style={constStyle}>\\n                1\\n            </div>\\n            <div style={constStyle}>\\n                2\\n            </div>\\n            <div style={constStyle}>\\n                3\\n            </div>\\n        </div>\\n    \\n    </>\\n}\\n```"},{"id":"/2023/09/25/gem","metadata":{"permalink":"/blog/2023/09/25/gem","source":"@site/blog/2023/09/25/gem.md","title":"gem  \u8bbe\u7f6e \u4e2d\u56fd\u6e90","description":"gem \u8bbe\u7f6e\u4e2d\u56fd\u6e90 gem \u8bbe\u7f6e \u6e05\u534e\u5927\u5b66\u955c\u50cf\u6e90","date":"2023-09-25T00:00:00.000Z","formattedDate":"2023\u5e749\u670825\u65e5","tags":[{"label":"gem","permalink":"/blog/tags/gem"}],"readingTime":0.44,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"gem  \u8bbe\u7f6e \u4e2d\u56fd\u6e90","tags":["gem"],"authors":"ahKevinXy","description":"gem \u8bbe\u7f6e\u4e2d\u56fd\u6e90 gem \u8bbe\u7f6e \u6e05\u534e\u5927\u5b66\u955c\u50cf\u6e90","image":"https://source.unsplash.com/random?people&51"},"unlisted":false,"prevItem":{"title":"CSS flex \u5e03\u5c40","permalink":"/blog/2023/10/01/layout"},"nextItem":{"title":"pods","permalink":"/blog/2023/09/25/pods"}},"content":"## gem\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u66ff\u6362 gems \u9ed8\u8ba4\u6e90\\n\\n\\n```bash\\n# \u6dfb\u52a0\u955c\u50cf\u6e90\u5e76\u79fb\u9664\u9ed8\u8ba4\u6e90\\n\\n    gem sources --add https://mirrors.tuna.tsinghua.edu.cn/rubygems/ --remove https://rubygems.org/\\n# \u5217\u51fa\u5df2\u6709\u6e90\\ngem sources -l\\n# \u5e94\u8be5\u53ea\u6709\u955c\u50cf\u6e90\u4e00\u4e2a\\n```\\n\\n\u6216\u8005\uff0c\u7f16\u8f91 `~/.gemrc`\uff0c\u5c06\\n\\n```bash \\nhttps://mirrors.tuna.tsinghua.edu.cn/rubygems/\\n\\n```\\n\u52a0\u5230 `sources` \u5b57\u6bb5\u3002\\n\\n## bundler\\n\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u66ff\u6362 bundler \u9ed8\u8ba4\u6e90\\n\\n```bash \\nbundle config mirror.https://rubygems.org https://mirrors.tuna.tsinghua.edu.cn/rubygems\\n\\n```"},{"id":"/2023/09/25/pods","metadata":{"permalink":"/blog/2023/09/25/pods","source":"@site/blog/2023/09/25/pods.md","title":"pods","description":"iOS \u5f00\u53d1\u4e4b Pods \u5165\u95e8,\u5982\u4f55\u4f7f\u7528pods","date":"2023-09-25T00:00:00.000Z","formattedDate":"2023\u5e749\u670825\u65e5","tags":[{"label":"iOS","permalink":"/blog/tags/i-os"}],"readingTime":0.015,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"pods","tags":["iOS"],"authors":"ahKevinXy","description":"iOS \u5f00\u53d1\u4e4b Pods \u5165\u95e8,\u5982\u4f55\u4f7f\u7528pods","image":"https://source.unsplash.com/random?people&51"},"unlisted":false,"prevItem":{"title":"gem  \u8bbe\u7f6e \u4e2d\u56fd\u6e90","permalink":"/blog/2023/09/25/gem"},"nextItem":{"title":"Go  \u8bbe\u8ba1\u6a21\u5f0f","permalink":"/blog/2023/09/17/design"}},"content":"\x3c!-- truncate --\x3e"},{"id":"/2023/09/17/design","metadata":{"permalink":"/blog/2023/09/17/design","source":"@site/blog/2023/09/17/design.md","title":"Go  \u8bbe\u8ba1\u6a21\u5f0f","description":"\u5982\u4f55\u4f7f\u7528go\u8bbe\u8ba1\u6a21\u5f0f","date":"2023-09-17T00:00:00.000Z","formattedDate":"2023\u5e749\u670817\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"\u8bbe\u8ba1\u6a21\u5f0f","permalink":"/blog/tags/\u8bbe\u8ba1\u6a21\u5f0f"}],"readingTime":0.67,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go  \u8bbe\u8ba1\u6a21\u5f0f","tags":["go","\u8bbe\u8ba1\u6a21\u5f0f"],"authors":"ahKevinXy","description":"\u5982\u4f55\u4f7f\u7528go\u8bbe\u8ba1\u6a21\u5f0f","image":"https://source.unsplash.com/random?people&39"},"unlisted":false,"prevItem":{"title":"pods","permalink":"/blog/2023/09/25/pods"},"nextItem":{"title":"\u524d\u7aef FontSize \u5bf9\u6bd4","permalink":"/blog/2023/09/17/front"}},"content":"\x3c!-- truncate --\x3e\\n\\n\\n**\u8bbe\u8ba1\u6a21\u5f0f\u7684\u539f\u5219**\\n\\n1. \u5355\u4e00\u804c\u8d23\u539f\u5219\\n2. \u5f00\u95ed\u539f\u5219\\n3. \u91cc\u6c0f\u4ee3\u6362\u539f\u5219\\n4. \u4f9d\u8d56\u5012\u8f6c\u539f\u5219\\n5. \u63a5\u53e3\u9694\u79bb\u539f\u5219\\n6. \u5408\u6210\u590d\u7528\u539f\u5219\\n7. \u8fea\u7c73\u7279\u6cd5\u5219\\n\\n\\n\\n## \u521b\u9020\u6027\u6a21\u578b\\n\\n###  \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\\n\\n\\n```go\\npackage main\\n\\ntype Fruit interface {\\n\\tShow()\\n}\\n\\ntype AppleFactory struct {\\n\\tFruit\\n}\\ntype BalanceFactory struct {\\n\\tFruit\\n}\\ntype Factory struct {\\n\\t\\n}\\n\\nfunc (f *Factory)CreateFactory(kind string) Fruit {\\n\\tswitch kind {\\n\\tcase \\"apple\\":\\n\\t\\treturn new(AppleFactory)\\n\\tcase \\"balance\\":\\n\\t\\treturn  new(BalanceFactory)\\n        \\n\\t}\\n\\t\\n\\treturn nil\\n}\\n\\nfunc main()  {\\n    f := new(Factory)\\n\\tapple := f.CreateFactory(\\"apple\\")\\n\\tapple.Show()\\n}\\n```\\n\\n### \u62bd\u8c61\u5de5\u5382\\n\\n\\n\\n```go\\n\\n```"},{"id":"/2023/09/17/front","metadata":{"permalink":"/blog/2023/09/17/front","source":"@site/blog/2023/09/17/front.md","title":"\u524d\u7aef FontSize \u5bf9\u6bd4","description":"\u524d\u7aef\u5b57\u4f53\u5927\u5c0f\u5bf9\u6bd4 \u5982\u4f55\u8bc6\u522b\u5199\u597d\u524d\u7aef\u5b57\u4f53\u5927\u5c0f","date":"2023-09-17T00:00:00.000Z","formattedDate":"2023\u5e749\u670817\u65e5","tags":[{"label":"\u524d\u7aef","permalink":"/blog/tags/\u524d\u7aef"},{"label":"\u57fa\u7840","permalink":"/blog/tags/\u57fa\u7840"}],"readingTime":0.385,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u524d\u7aef FontSize \u5bf9\u6bd4","tags":["\u524d\u7aef","\u57fa\u7840"],"authors":"ahKevinXy","description":"\u524d\u7aef\u5b57\u4f53\u5927\u5c0f\u5bf9\u6bd4 \u5982\u4f55\u8bc6\u522b\u5199\u597d\u524d\u7aef\u5b57\u4f53\u5927\u5c0f","image":"https://source.unsplash.com/random?people&38"},"unlisted":false,"prevItem":{"title":"Go  \u8bbe\u8ba1\u6a21\u5f0f","permalink":"/blog/2023/09/17/design"},"nextItem":{"title":"\u524d\u7aef margin \u5bf9\u6bd4","permalink":"/blog/2023/09/17/margin"}},"content":"\x3c!-- truncate --\x3e\\n## \u5c3a\u5bf8\\n\\n```jsx live\\n\\n\\nfunction FontSize(props) {\\n    let  arrList = [\\n      \\n    ]\\n    for (let i =10;i <100;i ++){\\n        arrList = [...arrList,{\\n            fontSize: {\\n                fontSize: i+\'px\'\\n            },\\n            i :i \\n        }]\\n    }\\n    const concatPx = (item)=>{\\n        \\n        return item +\'px\'\\n    }\\n    const [listSize,setListSize] = useState([])\\n    useEffect(() => {\\n         for (let i=10;i <100;i ++){\\n             setListSize(...listSize,i)\\n         }\\n         \\n         \\n    }, [])\\n    return <div style={{cursor:\'pointer\'}}>\\n      \\n        {\\n            arrList.map(item=>{\\n                return <p key={item.i} style={item.fontSize} title={concatPx(item.i)}  > \u6b63 <sup>{concatPx(item.i)} </sup></p>\\n            })\\n        }\\n    </div>\\n}\\n\\n\\n```"},{"id":"/2023/09/17/margin","metadata":{"permalink":"/blog/2023/09/17/margin","source":"@site/blog/2023/09/17/margin.md","title":"\u524d\u7aef margin \u5bf9\u6bd4","description":"\u524d\u7aef\u5e03\u5c40 margin \u5c5e\u6027","date":"2023-09-17T00:00:00.000Z","formattedDate":"2023\u5e749\u670817\u65e5","tags":[{"label":"\u524d\u7aef","permalink":"/blog/tags/\u524d\u7aef"},{"label":"\u57fa\u7840","permalink":"/blog/tags/\u57fa\u7840"}],"readingTime":0.79,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u524d\u7aef margin \u5bf9\u6bd4","tags":["\u524d\u7aef","\u57fa\u7840"],"authors":"ahKevinXy","description":"\u524d\u7aef\u5e03\u5c40 margin \u5c5e\u6027","image":"https://source.unsplash.com/random?people&39"},"unlisted":false,"prevItem":{"title":"\u524d\u7aef FontSize \u5bf9\u6bd4","permalink":"/blog/2023/09/17/front"},"nextItem":{"title":"go\u5b66\u4e60","permalink":"/blog/2023/09/09/go"}},"content":"\x3c!-- truncate --\x3e\\n## \u5c3a\u5bf8\\n\\n\\n## margin top \\n```jsx live\\n\\n\\nfunction MarginTop(props) {\\n    let  arrList = [\\n      \\n    ]\\n    for (let i =0;i <100;i ++){\\n        arrList = [...arrList,{\\n            marginTop: {\\n                marginTop: i+\'px\',\\n                padding:0\\n            },\\n            i :i \\n        }]\\n    }\\n    const concatPx = (item)=>{\\n        \\n        return \'margin top \'+item +\'px\'\\n    }\\n    const [listSize,setListSize] = useState([])\\n    useEffect(() => {\\n         for (let i=10;i <100;i ++){\\n             setListSize(...listSize,i)\\n         }\\n         \\n         \\n    }, [])\\n    return <div style={{cursor:\'pointer\'}}>\\n      \\n        {\\n            arrList.map(item=>{\\n                return <div key={item.i} style={item.marginTop} title={concatPx(item.i)}  > \u6b63 <sup>{concatPx(item.i)} </sup></div>\\n            })\\n        }\\n    </div>\\n}\\n\\n\\n```\\n\\n## margin right\\n\\n\\n```jsx live\\n\\n\\nfunction MarginRight(props) {\\n    let  arrList = [\\n      \\n    ]\\n    for (let i =0;i <100;i ++){\\n        arrList = [...arrList,{\\n            marginTop: {\\n                marginRight: i+\'px\',\\n                padding:0\\n            },\\n            i :i \\n        }]\\n    }\\n    const concatPx = (item)=>{\\n        \\n        return \'margin right \'+item +\'px\'\\n    }\\n    const [listSize,setListSize] = useState([])\\n    useEffect(() => {\\n         for (let i=10;i <100;i ++){\\n             setListSize(...listSize,i)\\n         }\\n         \\n         \\n    }, [])\\n    return <div style={{cursor:\'pointer\'}}>\\n      \\n        {\\n            arrList.map(item=>{\\n                return <span key={item.i} style={item.marginTop} title={concatPx(item.i)}  > \u6b63 </span>\\n            })\\n        }\\n    </div>\\n}\\n\\n\\n```"},{"id":"/2023/09/09/go","metadata":{"permalink":"/blog/2023/09/09/go","source":"@site/blog/2023/09/09/go.md","title":"go\u5b66\u4e60","description":"\u5982\u4f55\u5b66\u4e60Go \u4f60\u4e0d\u77e5\u9053\u7684\u54ea\u4e9b\u4e8b\u60c5 \u5982\u4f55\u4f7f\u7528go\u5f00\u53d1\u5927\u578b\u9879\u76ee,\u5982\u4f55\u6210\u4e3agolang\u67b6\u6784\u5e08","date":"2023-09-09T00:00:00.000Z","formattedDate":"2023\u5e749\u67089\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"}],"readingTime":38.905,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"go\u5b66\u4e60","tags":["go"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5b66\u4e60Go \u4f60\u4e0d\u77e5\u9053\u7684\u54ea\u4e9b\u4e8b\u60c5 \u5982\u4f55\u4f7f\u7528go\u5f00\u53d1\u5927\u578b\u9879\u76ee,\u5982\u4f55\u6210\u4e3agolang\u67b6\u6784\u5e08","image":"https://source.unsplash.com/random?people&37"},"unlisted":false,"prevItem":{"title":"\u524d\u7aef margin \u5bf9\u6bd4","permalink":"/blog/2023/09/17/margin"},"nextItem":{"title":"MySQL\u5b66\u4e60","permalink":"/blog/2023/09/05/mysql"}},"content":"[\u4ee3\u7801\u89c4\u8303](https://github.com/uber-go/guide/blob/master/style.md)\\n\x3c!-- truncate --\x3e\\n## go \u7684\u4e00\u4e9b\u547d\u4ee4\u884c\u5de5\u5177\\n\\n* go  bug \u6253\u5f00\u6d4f\u89c8\u5668,\u62a5\u544a\u9519\u8bef\u4fe1\u606f\\n* go build \u7f16\u8bd1\u6e90\u4ee3\u7801\\n* go clean \u79fb\u9664\u76ee\u6807\u6587\u4ef6\u548c\u7f13\u5b58\u6587\u4ef6\\n* go env \u6253\u5370 go \u73af\u5883\u4fe1\u606f\\n* go fix \u65e7\u7248\u672c\u4ee3\u7801\u4fee\u6b63\u4e3a\u65b0\u7684\u7248\u672c\\n* go fmt \u683c\u5f0f\u5316\u6e90\u6587\u4ef6\\n* go generate \u626b\u63cf\u7279\u6b8a\u6ce8\u91ca,\u7528\u4e8e\u81ea\u52a8\u751f\u6210go \u6587\u4ef6\\n* go get \u6dfb\u52a0\u6307\u5b9a\u7248\u672c\u7684\u4f9d\u8d56\\n* go list \u5217\u51fa\u6307\u5b9a\u4ee3\u7801\u5305\u7684\u4fe1\u606f\\n* go mod \u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\\n* go  run \u7f16\u8bd1\u8fd0\u884c\u6e90\u4ee3\u7801\\n* go test  \u6d4b\u8bd5\u4ee3\u7801\\n* go  tool \u8fd0\u884c\u7279\u6b8a\u7684go \u5de5\u5177\\n* go version \u67e5\u770bgo \u7248\u672c\\n* go vet \u9759\u6001\u626b\u63cf\u4ee3\u7801,\u62a5\u544a\u4ee3\u7801\u4e2d\u53ef\u80fd\u7684\u95ee\u9898\\n\\n## \u8868\u8fbe\u5f0f\u4e0e\u8fd0\u7b97\u7b26\\n\\n* \u7b97\u672f\u8fd0\u7b97\u7b26\uff1b\\n* \u5173\u7cfb\u8fd0\u7b97\u7b26\uff1b\\n* \u903b\u8f91\u8fd0\u7b97\u7b26\uff1b\\n* \u4f4d\u8fd0\u7b97\u7b26\uff1b\\n* \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1b\\n* \u5730\u5740\u8fd0\u7b97\u7b26\u3002\\n```markdown\\n  \u4f18\u5148\u7ea7(\u7531\u9ad8\u5230\u4f4e)              \u64cd\u4f5c\u7b26\\n    5                *  /  %  <<  >>  &  &^\\n    4                +  -  |  ^\\n    3                ==  !=  <  <=  >  >=\\n    2                &&\\n    1                ||\\n```\\n\\n##  go \u57fa\u7840\u77e5\u8bc6\\n\\n### defer\\ndefer \u662f Go \u8bed\u8a00\u4e2d\u7684\u5173\u952e\u5b57\uff0c\u4e5f\u662f Go \u8bed\u8a00\u7684\u91cd\u8981\u7279\u6027\u4e4b\u4e00\uff0cdefer \u5728\u8d44\u6e90\u91ca\u653e\u3001panic \u6355\u83b7\u7b49\u573a\u666f\u4e2d\u7684\u5e94\u7528\u975e\u5e38\u5e7f\\n\\n\u7279\u6027\\n\\n1. \u5ef6\u8fdf\u6267\u884c\\n2. \u53c2\u6570\u9884\u8ba1\u7b97\\n3. LIFO \u6267\u884c\u987a\u5e8f\\n\\n### \u5e76\u53d1\u7f16\u7a0b\\n\\n* `\u8fdb\u7a0b` `\u534f\u7a0b`  `\u7ebf\u7a0b` \u8fdb\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u5143,\u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d,\u534f\u7a0b\u662f\u7528\u6237\u6001,\u662f\u5728\u7ebf\u7a0b\u57fa\u7840\u4e0a\u6784\u5efa\u7684\u8f7b\u91cf\u7ea7\u522b\u7684\u8c03\u5ea6\u5355\u4f4d\\n* `\u5e76\u53d1` `\u5e76\u884c` \u5e76\u884c\u6307\u7684\u662f\u540c\u65f6\u505a\u5f88\u591a\u4e8b\u60c5,\u5e76\u53d1\u662f\u6307\u540c\u65f6\u7ba1\u7406\u5f88\u591a\u4e8b\u60c5\\n* `\u4e3b\u534f\u7a0b` `\u5b50\u534f\u7a0b` `main` \u51fd\u6570\u662f\u7279\u6b8a\u7684\u4e3b\u534f\u7a0b,\u5b83\u9000\u51fa\u4e4b\u540e\u6574\u4e2a\u7a0b\u5e8f\u90fd\u4f1a\u9000\u51fa,\u800c\u5176\u5b83\u7684\u534f\u7a0b\u90fd\u662f\u5b50\u534f\u7a0b,\u5b50\u534f\u7a0b\u9000\u51fa\u4e0d\u5f71\u54cd\u4e3b\u7a0b\u5e8f\\n\\nGo \u8bed\u8a00\u8fd0\u884c\u65f6\u4e3a\u6211\u4eec\u6258\u7ba1\u4e86\u534f\u7a0b\u7684\u542f\u52a8\u4e0e\u8c03\u5ea6\u5de5\u4f5c\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u91cd\u70b9\u53ea\u8981\u653e\u5728\u5982\u4f55\u4f18\u96c5\u5b89\u5168\u5730\u5173\u95ed\u534f\u7a0b\uff0c\u4ee5\u53ca\u5982\u4f55\u8fdb\u884c\u534f\u7a0b\u95f4\u7684\u901a\u4fe1\u5c31\u53ef\u4ee5\u4e86\u3002\\n\\n* \u901a\u9053\u58f0\u660e\u4e0e\u521d\u59cb\u5316\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\tch := make(chan int, 10)\\n\\n\\tfmt.Println(ch)\\n\\n}\\n```\\n\\n* \u901a\u9053\u5199\u5165\u4fe1\u606f\\n\\n```go\\n\\nch := make(chan int, 10)\\n\\nch <-5\\n```\\n\\n* \u901a\u9053\u8bfb\u53d6\u6570\u636e\\n```go\\ndata := <-c \\n```\\n\\n* \u901a\u9053\u5173\u95ed\\n\\n```go\\nclose(ch)\\n```\\n\\n* \u901a\u9053\u4f5c\u4e3a\u53c2\u6570\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\n\\n\\nfunc work(id int, c chan int) {\\n\\n\\tfor n := range c {\\n\\t\\tfmt.Println(n,id)\\n\\t}\\n}\\n```\\n\\n* \u901a\u9053\u4f5c\u4e3a\u8fd4\u56de\u503c\uff08\u4e00\u822c\u7528\u4e8e\u521b\u5efa\u901a\u9053\u7684\u9636\u6bb5)\\n\\n\\n* \u5355\u65b9\u5411\u7684\u901a\u9053\uff0c\u7528\u4e8e\u53ea\u8bfb\u548c\u53ea\u5199\u573a\u666f\\n\\n\\n* select \u76d1\u542c\u591a\u4e2a\u901a\u9053\u5b9e\u73b0\u591a\u8def\u590d\u7528\u3002\u5f53 case \u4e2d\u591a\u4e2a\u901a\u9053\u72b6\u6001\u51c6\u5907\u5c31\u7eea\u65f6\uff0cselect \u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5206\u652f\u8fdb\u884c\u6267\u884c\\n\\n* \u4f20\u7edf\u7684\u540c\u6b65\u539f\u8bed\uff1a\u539f\u5b50\u9501\u3002Go \u63d0\u4f9b\u4e86 atomic \u5305\u7528\u4e8e\u5904\u7406\u539f\u5b50\u64cd\u4f5c\u3002\\n\\n* \u4f20\u7edf\u7684\u540c\u6b65\u539f\u8bed\uff1a\u4e92\u65a5\u9501\u3002\\n\\n\\n\\n* \u4f20\u7edf\u7684\u540c\u6b65\u539f\u8bed\uff1a\u8bfb\u5199\u9501\u3002\u9002\u5408\u591a\u8bfb\u5c11\u5199\u573a\u666f\u3002\\n\\n* \u9664\u6b64\u4e4b\u5916\uff0cGo \u8bed\u8a00\u5728\u4f20\u7edf\u7684\u540c\u6b65\u539f\u8bed\u57fa\u7840\u4e0a\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u6709\u7528\u7684\u540c\u6b65\u5de5\u5177\uff0c\u5305\u62ec sync.Once\u3001sync.Cond\u3001sync.WaitGroup\\n\\n\\n### \u5de5\u5177\\n\\n* go  doc \\n\\ngo doc \u5de5\u5177\u53ef\u4ee5\u751f\u6210\u548c\u9605\u8bfb\u4ee3\u7801\u7684\u6587\u6863\u8bf4\u660e\u3002\u6587\u6863\u662f\u4f7f\u8f6f\u4ef6\u53ef\u8bbf\u95ee\u548c\u53ef\u7ef4\u62a4\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\u3002\u5f53\u7136\uff0c\u5b83\u9700\u8981\u5199\u5f97\u597d\u4e14\u51c6\u786e\uff0c\u4e5f\u9700\u8981\u6613\u4e8e\u7f16\u5199\u548c\u7ef4\u62a4\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u6587\u6863\u6ce8\u91ca\u5e94\u8be5\u4e0e\u4ee3\u7801\u672c\u8eab\u8026\u5408\uff0c\u4ee5\u4fbf\u6587\u6863\u4e0e\u4ee3\u7801\u4e00\u8d77\u53d1\u5c55\\n\\n\\n\\n* golangci-lint\\n\\n* go race\\n\\nGo 1.1 \u540e\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u68c0\u67e5\u5de5\u5177 race\uff0c\u5b83\u53ef\u4ee5\u6392\u67e5\u6570\u636e\u4e89\u7528\u95ee\u9898\u3002race \u53ef\u4ee5\u7528\u5728\u591a\u4e2a Go \u6307\u4ee4\u4e2d\\n\\n\u5f53\u68c0\u6d4b\u5668\u5728\u7a0b\u5e8f\u4e2d\u53d1\u73b0\u6570\u636e\u4e89\u7528\u65f6\uff0c\u5c06\u6253\u5370\u62a5\u544a\u3002\u8fd9\u4efd\u62a5\u544a\u5305\u542b\u53d1\u751f race \u51b2\u7a81\u7684\u534f\u7a0b\u6808\uff0c\u4ee5\u53ca\u6b64\u65f6\u6b63\u5728\u8fd0\u884c\u7684\u534f\u7a0b\u6808\u3002\\n\\n* gops\\n\\n  gops \u662f\u8c37\u6b4c\u63a8\u51fa\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u8bca\u65ad\u7cfb\u7edf\u5f53\u524d\u8fd0\u884c\u7684 Go \u8fdb\u7a0b\u3002gops \u53ef\u4ee5\u663e\u793a\u51fa\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u7684 Go \u8fdb\u7a0b\uff0c\u5e76\u53ef\u4ee5\u67e5\u770b\u7279\u5b9a\u8fdb\u7a0b\u7684\u5806\u6808\u4fe1\u606f\u3001\u5185\u5b58\u4fe1\u606f\u7b49\u3002\\n\\n\\n### GMP  \\n\\n\\nG \u4ee3\u8868\u7684\u662f Go \u8bed\u8a00\u4e2d\u7684\u534f\u7a0b\uff08Goroutine\uff09\uff0cM \u4ee3\u8868\u7684\u662f\u5b9e\u9645\u7684\u7ebf\u7a0b\uff0c\u800c P \u4ee3\u8868\u7684\u662f Go \u903b\u8f91\u5904\u7406\u5668\uff08Process\uff09\u3002Go \u8bed\u8a00\u4e3a\u4e86\u65b9\u4fbf\u534f\u7a0b\u8c03\u5ea6\u4e0e\u7f13\u5b58\uff0c\u62bd\u8c61\u51fa\u4e86\u903b\u8f91\u5904\u7406\u5668\u7684\u6982\u5ff5\u3002\u5728\u4efb\u4e00\u65f6\u523b\uff0c\u4e00\u4e2a P \u53ef\u80fd\u5728\u672c\u5730\u5305\u542b\u591a\u4e2a G\uff0c\u540c\u65f6\uff0c\u4e00\u4e2a P \u5728\u4efb\u4e00\u65f6\u523b\u53ea\u80fd\u7ed1\u5b9a\u4e00\u4e2a M\u3002\\n\\n\u5168\u5c40\u5171\u4eab\u7684\u5168\u5c40\u8fd0\u884c\u961f\u5217\u3001\u672c\u5730\u8fd0\u884c\u961f\u5217\u53ef\u4ee5\u83b7\u53d6\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e2d\u7684\u534f\u7a0b\uff0c\u5168\u5c40\u8fd0\u884c\u961f\u5217\u4e5f\u53ef\u4ee5\u63a5\u6536\u672c\u5730\u8fd0\u884c\u961f\u5217\u4e2d\u7684\u534f\u7a0b\u3002\\n\\n\\n\\n## \u5927\u578bGo \u9879\u76ee\u7684\u5f00\u53d1 \u6d41\u7a0b\\n\\n**\u7011\u5e03\u6a21\u5f0f** vs **\u654f\u6377\u6a21\u5f0f**\\n\\n\\n**\u7011\u5e03\u6a21\u5f0f**\\n\\n* \u9700\u6c42\u5728\u89c4\u5212\u548c\u8bbe\u8ba1\u9636\u6bb5\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\uff0c\u800c\u4e14\u5728\u9879\u76ee\u5f00\u53d1\u5468\u671f\u5185\uff0c\u9700\u6c42\u6ca1\u6709\u6216\u6781\u5c11\u6709\u53d8\u5316\u3002\u4f8b\u5982\u822a\u7a7a\u822a\u5929\u6216\u8005\u91d1\u878d\u6838\u5fc3\u7cfb\u7edf\u7b49\\n* \u56e2\u961f\u5bf9\u8fd9\u4e00\u6280\u672f\u9886\u57df\u5f88\u719f\u6089\uff0c\u98ce\u9669\u4f4e\u3001\u89c4\u6a21\u5c0f\u3002\\n* \u5408\u540c\u5f0f\u7684\u5408\u4f5c\u65b9\u5f0f\u3002\u9879\u76ee\u7684\u5f00\u53d1\u4e25\u683c\u4f9d\u636e\u8bf4\u660e\uff0c\u5ba2\u6237\u9700\u6c42\u660e\u786e\u4e14\u4e0d\u53c2\u4e0e\u8f6f\u4ef6\u5b9e\u73b0\u8fc7\u7a0b\u3002\\n\\n\\n**\u654f\u6377\u6a21\u5f0f**\\n\u654f\u6377\u5f00\u53d1\u7684\u6838\u5fc3\u601d\u60f3\u662f\u62e5\u62b1\u53d8\u5316\uff0c\u5f3a\u8c03\u5bf9\u4e8e\u53d8\u5316\u7684\u9002\u5e94\u6027\uff0c\u66f4\u5f3a\u8c03\u5f00\u53d1\u8005\u4e0e\u4e1a\u52a1\u4e13\u5bb6\u3001\u5ba2\u6237\u4e4b\u95f4\u7684\u4e92\u52a8\uff0c\u5f3a\u8c03\u6301\u7eed\u6539\u8fdb\u548c\u6301\u7eed\u4ea4\u4e92\u4ea7\u54c1\uff0c\u6301\u7eed\u63d0\u9ad8\u5ba2\u6237\u6ee1\u610f\u5ea6\u3002\\n\\n\u654f\u6377\u5f00\u53d1\u662f\u589e\u91cf\u6784\u5efa\u7684\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u6ee1\u8db3\u603b\u9700\u6c42\u7684\u4e00\u90e8\u5206\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u4e00\u6b21\u6027\u4ea4\u4ed8\u6240\u6709\u529f\u80fd\u3002\u8fd9\u4f7f\u65b0\u529f\u80fd\u7684\u4ef7\u503c\u53ef\u4ee5\u5f97\u5230\u5feb\u901f\u9a8c\u8bc1\u3002\\n\u6709\u591a\u79cd\u5b9e\u73b0\u4e86\u654f\u6377\u5f00\u53d1\u601d\u60f3\u7684\u6846\u67b6\u4f9b\u6211\u4eec\u4f7f\u7528\uff0c\u6bd4\u8f83\u77e5\u540d\u7684 Scrum\u3001\u770b\u677f\uff08Kanban\uff09\u3001\u6781\u9650\u7f16\u7a0b\uff08XP\uff09\u3001\u7cbe\u76ca\u8f6f\u4ef6\u5f00\u53d1\uff08Lean Software Development\uff09\\n\\n1. \u4ea7\u54c1\u7ecf\u7406\u57fa\u4e8e\u9879\u76ee\u7684\u613f\u666f\uff08Vision\uff09\uff0c\u6536\u96c6\u4ea7\u54c1\u5f85\u529e\u4e8b\u9879\u6e05\u5355\uff08Product Backlog\uff09\u5e76\u786e\u5b9a\u4f18\u5148\u7ea7\u3002\\n2. \u56e2\u961f\u6210\u5458\u6839\u636e\u9636\u6bb5\u6027\u7684\u6210\u679c\u5c06\u9879\u76ee\u9636\u6bb5\u62c6\u5206\u4e3a\u4e00\u4e2a\u4e2a\u7684 Sprint\uff0c\u5373\u51b2\u523a\u5468\u671f\u6216\u5f00\u53d1\u5468\u671f\u3002\u6bcf\u4e00\u4e2a Sprint \u5f00\u59cb\u7684\u65f6\u5019\uff0c\u9700\u8981\u5f00\u4e00\u4e2a Sprint \u4f1a\u8bae\uff0c\u628a\u4ea7\u54c1\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u91cc\u7684\u4e8b\u9879\u6dfb\u52a0\u5230\u5f53\u524d Sprint \u4e2d\u3002\u6dfb\u52a0\u7684\u539f\u5219\u662f\uff0c\u9700\u8981\u8003\u8651 Sprint \u7684\u4ea4\u4ed8\u4ef7\u503c\u4ee5\u53ca\u4e8b\u9879\u7684\u4f18\u5148\u7ea7\u3002\u5f53\u524d Sprint \u6e05\u5355\u91cc\u9762\u7684\u5f85\u529e\u4e8b\u9879\u4e5f\u88ab\u79f0\u4e3a Sprint Backlog\\n3. Sprint Backlog \u53ef\u4ee5\u7531\u56e2\u961f\u6210\u5458\u62c6\u5206\uff0c\u5e76\u7ec6\u5316\u4e3a\u6bcf\u4e00\u4e2a\u6210\u5458\u6bcf\u5929\u5177\u4f53\u7684\u5de5\u4f5c\u4efb\u52a1\u3002\u6210\u5458\u4eec\u53ef\u4ee5\u6839\u636e\u4efb\u52a1\u8fdb\u5ea6\u53bb\u770b\u677f\u4e0a\u66f4\u65b0\u4efb\u52a1\u7684\u72b6\u6001\\n4. \u5728\u5f53\u524d Sprint \u8fd0\u884c\u65f6\uff0c\u56e2\u961f\u6210\u5458\u8981\u53c2\u52a0\u6bcf\u65e5\u7ad9\u7acb\u4f1a\u8bae\uff08Daily Scrum Meeting\uff09\uff0c\u6bcf\u6b21\u4f1a\u8bae\u65f6\u95f4\u63a7\u5236\u5728 15 \u5206\u949f\u5185\u3002\u4f1a\u4e0a\u6210\u5458\u8981\u6839\u636e\u770b\u677f\u7684\u5185\u5bb9\u9010\u4e2a\u8fdb\u884c\u53d1\u8a00\uff0c\u5411\u6240\u6709\u6210\u5458\u6c47\u62a5\u6628\u5929\u5df2\u5b8c\u6210\u3001\u4eca\u5929\u5f85\u5b8c\u6210\u7684\u4e8b\u9879\uff0c\u4ea4\u6d41\u4e0d\u80fd\u89e3\u51b3\u7684\u95ee\u9898\u3002\u4f1a\u8bae\u7ed3\u675f\u540e\uff0c\u8981\u53ca\u65f6\u66f4\u65b0\u9879\u76ee\u7684\u71c3\u5c3d\u56fe\uff08Burn Down Chart\uff09\uff0c\u4ee5\u4fbf\u8ddf\u8e2a\u9879\u76ee\u8fdb\u5ea6\\n5. Sprint \u7ed3\u675f\u540e\uff0c\u56e2\u961f\u6210\u5458\u4e00\u8d77\u8bc4\u5ba1\uff08Sprint Review\uff09\u672c\u6b21 Sprint \u7684\u4ea7\u51fa\u3002\u8fd9\u4e2a\u4ea7\u51fa\u7269\uff08release\uff09\u53ef\u80fd\u662f\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684\u8f6f\u4ef6\uff0c\u4e5f\u53ef\u80fd\u662f\u4e00\u4e2a\u53ef\u5c55\u793a\u7684\u529f\u80fd\u3002\u6bcf\u4e2a\u4eba\u90fd\u53ef\u4ee5\u81ea\u7531\u53d1\u8868\u770b\u6cd5\uff0c\u534f\u52a9\u4ea7\u54c1\u8d1f\u8d23\u4eba\u5bf9\u672a\u6765\u5de5\u4f5c\u505a\u51fa\u6700\u7ec8\u51b3\u5b9a\u3002\u5e76\u6839\u636e\u5b9e\u9645\u60c5\u51b5\uff0c\u9002\u5ea6\u8c03\u6574\u4ea7\u54c1\u5f85\u529e\u4e8b\u9879\u5217\u8868\\n6. Sprint \u7ed3\u675f\u540e\uff0c\u5927\u5bb6\u805a\u5728\u4e00\u8d77\u5f00\u4e00\u6b21\u56de\u987e\u4f1a\uff08Sprint Retrospective\uff09\uff0c\u56de\u987e\u4e00\u4e0b\u56e2\u961f\u5728\u6d41\u7a0b\u548c\u6c9f\u901a\u7b49\u65b9\u9762\u7684\u6210\u6548\u3002\u4e00\u8d77\u8ba8\u8bba\u54ea\u91cc\u5b8c\u6210\u5f97\u597d\uff0c\u54ea\u91cc\u8fd8\u9700\u6539\u8fdb\\n\\n\\n**\u5927\u578b\u4e92\u8054\u7f51\u4ea7\u54c1\u7684\u7814\u53d1\u6d41\u7a0b**\\n\\n \u9700\u6c42\u9636\u6bb5\\n\\n1. \u5546\u4e1a\u9700\u6c42\\n2. \u529f\u80fd\u9700\u6c42\\n3. \u975e\u529f\u80fd\u9700\u6c42\\n\\n\u8bbe\u8ba1\u9636\u6bb5\\n\\n* UI \u8bbe\u8ba1\u5e08\\n* \u4ea4\u4e92\u8bbe\u8ba1\u5e08 \u4e86\u89e3\u7528\u6237\u7684\u601d\u7ef4\u65b9\u5f0f\u548c\u884c\u4e3a\u4e60\u60ef \u8bbe\u8ba1\u4ea4\u4e92\u6d41\u7a0b\\n* \u7cfb\u7edf\u67b6\u6784\u5e08\u5bf9\u7cfb\u7edf\u67b6\u6784\u8fdb\u884c\u8bbe\u8ba1,\u5bf9\u6280\u672f\u8fdb\u884c\u9009\u578b\u4f8b\u5982 \u5982\u4f55\u62c6\u5206\u5fae\u670d\u52a1,\u5982\u4f55\u4fdd\u8bc1\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u4e00\u81f4\u6027,\u9009\u62e9\u54ea\u4e00\u79cd\u8bed\u97f3,\u6846\u67b6,\u4e2d\u95f4\u4ef6\u548c\u6570\u636e\u5e93\\n* \u7814\u53d1\u5de5\u7a0b\u5e08\u9700\u8981\u8bbe\u8ba1\u6280\u672f\u65b9\u6848,\u68b3\u7406\u529f\u80fd\u6d41\u7a0b,\u660e\u786e\u63a5\u53e3\u5b9a\u4e49\u548c\u4e0a\u4e0b\u6e38\u7684\u8c03\u5ea6\u6d41\u7a0b,\u5982\u4f55\u9009\u62e9\u5408\u9002\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u4ee5\u4fdd\u8bc1\u7a0b\u5e8f\u7684\u6548\u7387\u548c\u76ee\u6807\\n* \u6d4b\u8bd5\u5de5\u7a0b\u5e08 \u4e3a\u4e86\u9a8c\u8bc1\u67d0\u4e2a\u9700\u6c42\u662f\u5426\u5b9e\u73b0,\u662f\u5426\u5b58\u5728\u7f3a\u9677,\u5728\u6d4b\u8bd5\u4e4b\u524d\u4f1a\u8bbe\u8ba1\u4e00\u5957\u8be6\u7ec6\u7684\u6d4b\u8bd5\u65b9\u6848\u548c\u6d4b\u8bd5\u96c6\\n\\n\u660e\u786e\u8bbe\u8ba1\u65b9\u6848\u4e4b\u540e,\u5c31\u8981\u5bf9\u9700\u6c42\u8fdb\u884c\u6392\u671f,\u5305\u62ec\u786e\u5b9a\u597d\u5f00\u653e\u65f6\u95f4,\u8054\u8c03\u65f6\u95f4,QA\u6d4b\u8bd5\u65f6\u95f4,\u4ee5\u53ca\u4e0a\u7ebf\u65f6\u95f4\\n\\n\\n\\n## \u5f00\u53d1\u6d41\u7a0b\u89c4\u8303\\n\\n\u7814\u53d1\u5b9e\u73b0\u9636\u6bb5\\n\\n\u9700\u8981\u9075\u5faa\u591a\u79cd\u5f00\u53d1\u89c4\u8303\uff0c\u5305\u62ec\u7f16\u7801\u89c4\u8303\u3001\u63a5\u53e3\u89c4\u8303\u3001\u65e5\u5fd7\u89c4\u8303\u3001\u6d4b\u8bd5\u89c4\u8303\u3001Commit \u89c4\u8303\u3001\u7248\u672c\u63a7\u5236\u89c4\u8303\u3001\u53d1\u5e03\u89c4\u8303\u7b49\u7b49\u3002\\n\\n**\u7f16\u7801\u89c4\u8303**\\n\\n* \u6574\u6d01\\n* \u9ad8\u6548\\n* \u5065\u58ee\\n* \u53ef\u6269\u5c55\u6027\\n\\n**\u63a5\u53e3\u89c4\u8303**\\n\u670d\u52a1\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u6700\u5e38\u7528\u7684\u662f HTTP\u3001Thrift \u548c gRPC \u534f\u8bae\u3002\u4ee5\u4f7f\u7528\u6700\u591a\u7684 HTTP \u534f\u8bae\u4e3a\u4f8b\uff0c\u5927\u591a\u6570 Web \u670d\u52a1\u4f7f\u7528\u4e86 RESTful \u98ce\u683c\u7684 API\u3002RESTful \u89c4\u8303\u4e86\u8d44\u6e90\u8bbf\u95ee\u7684 URL\uff0c\u89c4\u5b9a\u4e86\u4f7f\u7528\u6807\u51c6\u7684 HTTP \u65b9\u6cd5\uff0c\u4f8b\u5982 GET\u3001POST\u3001PUT\u3001DELETE \u7b49\uff0c\u5e76\u4e14\u660e\u786e\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u5bf9\u5e94\u7684\u8bed\u4e49\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u63a5\u53e3\u89c4\u8303\u8fd8\u9700\u8981\u5b9a\u4e49\u72b6\u6001\u7801\u5982\u4f55\u8d4b\u503c\u3001\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u5411\u540e\u517c\u5bb9\u7b49\u4e00\u7cfb\u5217\u95ee\u9898\\n\\n\u5355\u72ec\u7ba1\u7406 API \u63a5\u53e3\uff0c\u751a\u81f3\u4f1a\u6709\u4e00\u5957\u4e13\u95e8\u63cf\u8ff0\u8f6f\u4ef6\u7ec4\u4ef6\u63a5\u53e3\u7684\u8ba1\u7b97\u673a\u8bed\u8a00\uff0c\u88ab\u79f0\u4e3a IDL\uff08\u63a5\u53e3\u63cf\u8ff0\u8bed\u8a00\uff0cInterface description language\uff09\\n\\nIDL \u901a\u8fc7\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u65b9\u5f0f\u6765\u63cf\u8ff0\u63a5\u53e3\uff0c\u6bcf\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u90fd\u4f1a\u6839\u636e IDL \u751f\u6210\u4e00\u5957\u81ea\u5df1\u8bed\u8a00\u7684 SDK\u3002\u5373\u4fbf\u662f\u76f8\u540c\u7684\u8bed\u8a00\uff0c\u4e5f\u53ef\u80fd\u751f\u6210\u4e0d\u540c\u534f\u8bae\uff08\u4f8b\u5982 HTTP \u534f\u8bae \u3001gRPC \u534f\u8bae\uff09\u7684 SDK\u3002\u4f7f\u7528 IDL \u6709\u4e0b\u9762\u51e0\u4e2a\u597d\u5904\uff1a\\n\\n* \u4f5c\u4e3a\u63a5\u53e3\u8bf4\u660e\u6587\u6863\uff0cIDL \u7edf\u4e00\u89c4\u8303\u4e86\u63a5\u53e3\u5b9a\u4e49\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u4e0d\u540c\u4f7f\u7528\u65b9\u4e0d\u7528\u53cd\u590d\u6c9f\u901a\u63a5\u53e3\u7684\u4f7f\u7528\u65b9\u6cd5\uff1b\\n* \u4e0d\u540c\u8bed\u8a00\u7f16\u5199\u7684\u7a0b\u5e8f\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u76f8\u4e92\u901a\u4fe1\uff0c\u5c4f\u853d\u4e86\u5f00\u53d1\u8bed\u8a00\u4e0a\u7684\u5dee\u5f02\uff1b\\n* \u751f\u6210\u7684 SDK \u53ef\u4ee5\u63d0\u4f9b\u901a\u7528\u7684\u80fd\u529b\uff0c\u4f8b\u5982\u7194\u65ad\u3001\u91cd\u8bd5\u3001\u8bb0\u5f55\u8c03\u7528\u8017\u65f6\u7b49\uff0c\u53ef\u4ee5\u5927\u5927\u8282\u7701\u6210\u672c\uff0c\u6bd5\u7adf\u5982\u679c\u8fd9\u4e9b\u529f\u80fd\u8981\u5728\u6bcf\u4e00\u4e2a\u670d\u52a1\u7aef\u90fd\u5b9e\u73b0\u4e00\u904d\uff0c\u662f\u4e00\u79cd\u6210\u672c\u7684\u6d6a\u8d39\u3002\\n\\n**\u65e5\u5fd7\u89c4\u8303**\\n\\n1. \u6253\u5370\u8c03\u8bd5\uff1a\u6253\u5370\u8c03\u8bd5\u7684\u610f\u601d\u662f\u7528\u65e5\u5fd7\u6765\u8bb0\u5f55\u53d8\u91cf\u6216\u8005\u67d0\u4e00\u6bb5\u903b\u8f91\uff0c\u8bb0\u5f55\u7a0b\u5e8f\u8fd0\u884c\u7684\u6d41\u7a0b\u3002\u867d\u7136\u7528\u65e5\u5fd7\u6765\u8c03\u8bd5\u901a\u5e38\u4f1a\u88ab\u4eba\u5632\u7b11\u4e3a\u6280\u672f\u624b\u6bb5\u843d\u540e\uff0c\u4f46\u5b83\u786e\u5b9e\u80fd\u591f\u89e3\u51b3\u67d0\u4e9b\u96be\u9898\\n2. \u95ee\u9898\u5b9a\u4f4d\uff1a\u6709\u65f6\u5019\uff0c\u7cfb\u7edf\u6216\u8005\u4e1a\u52a1\u51fa\u73b0\u95ee\u9898\uff0c\u9700\u8981\u5feb\u901f\u6392\u67e5\u539f\u56e0\uff0c\u8fd9\u65f6\u6211\u4eec\u5c31\u8981\u7528\u5230\u65e5\u5fd7\u7684\u529f\u80fd\u4e86\\n3. \u7528\u6237\u884c\u4e3a\u5206\u6790\uff1a\u65e5\u5fd7\u7684\u5927\u91cf\u6570\u636e\u53ef\u4ee5\u4f5c\u4e3a\u5927\u6570\u636e\u5206\u6790\u7684\u57fa\u7840\uff0c\u4f8b\u5982\u7528\u6237\u7684\u884c\u4e3a\u504f\u597d\u7b49\\n4. \u76d1\u63a7\uff1a\u65e5\u5fd7\u6570\u636e\u901a\u8fc7\u6d41\u5904\u7406\u751f\u6210\u7684\u8fde\u7eed\u6307\u6807\u6570\u636e\uff0c\u53ef\u5b58\u50a8\u8d77\u6765\u5e76\u5bf9\u63a5\u76d1\u63a7\u544a\u8b66\u5e73\u53f0\uff0c\u8fd9\u6709\u52a9\u4e8e\u6211\u4eec\u5feb\u901f\u53d1\u73b0\u7cfb\u7edf\u7684\u5f02\u5e38\u3002\u76d1\u63a7\u7684\u6307\u6807\u53ef\u80fd\u5305\u62ec\uff1a\u6838\u5fc3\u63a5\u53e3\u8c03\u7528\u91cf\u662f\u5426\u7a81\u7136\u4e0b\u964d\u6216\u4e0a\u5347\u3001\u6838\u5fc3\u7684\u4e1a\u52a1\u6307\u6807\u53d8\u5316\\n\\n**\u7248\u672c\u63a7\u5236\u89c4\u8303**\\n\\n> Git \u4e0e\u5de5\u4f5c\u6d41\\n\\nGit \u8ba9\u4f60\u80fd\u591f\u57fa\u4e8e\u9879\u76ee\u7684\u7a33\u5b9a\u4ee3\u7801\u5e93\u5f00\u8f9f\u65b0\u7684\u5206\u652f\uff0c\u548c\u56e2\u961f\u6210\u5458\u5e76\u884c\u5de5\u4f5c\u3002\u8fd8\u53ef\u4ee5\u786e\u4fdd\u65b0\u7684\u7279\u6027\u6216\u5b9e\u9a8c\u6027\u4ee3\u7801\u5b9e\u73b0\u3002\u521b\u5efa\u201c\u5206\u652f\u201d\u662f\u4e00\u79cd\u975e\u5e38\u5e38\u89c1\u7684\u505a\u6cd5\uff0c\u5b83\u53ef\u4ee5\u786e\u4fdd\u4e3b\u5f00\u53d1\u7ebf\u7684\u5b8c\u6574\u6027\uff0c\u907f\u514d\u4efb\u4f55\u610f\u5916\u7684\u66f4\u6539\u7834\u574f\u4e3b\u5206\u652f\u3002\\n\\nGit \u7684\u7279\u6027\u50ac\u751f\u4e86\u57fa\u4e8e Git \u7684\u591a\u79cd\u5de5\u4f5c\u6d41\u6a21\u5f0f\uff0c\u5305\u62ec\uff1a\\n\\n* \u96c6\u4e2d\u5f0f\u5de5\u4f5c\u6d41\\n* Git Flow \u5de5\u4f5c\u6d41\\n* GitHub Flow \u5de5\u4f5c\u6d41\\n* GitLab Flow \u5de5\u4f5c\\n\\nGitflow \u5de5\u4f5c\u6d41\uff08Gitflow Workflow\uff09\\n\\n* `Master` \u5206\u652f\uff1a\u4f5c\u4e3a\u552f\u4e00\u4e00\u4e2a\u6b63\u5f0f\u5bf9\u5916\u53d1\u5e03\u7684\u5206\u652f\uff0c\u662f\u6240\u6709\u5206\u652f\u91cc\u6700\u7a33\u5b9a\u7684\\n* `Develop` \u5206\u652f\uff1a\u662f\u6839\u636e Master \u5206\u652f\u521b\u5efa\u51fa\u6765\u7684\u3002Develop \u5206\u652f\u4f5c\u4e3a\u4e00\u79cd\u96c6\u6210\u5206\u652f (Integration Branch)\uff0c\u4e13\u95e8\u7528\u6765\u96c6\u6210\u5df2\u7ecf\u5f00\u53d1\u5b8c\u7684\u5404\u79cd\u7279\u6027\u3002\\n* `Feature` \u5206\u652f\uff1a\u6839\u636e Develop \u5206\u652f\u521b\u5efa\u51fa\u6765\u3002Gitflow \u5de5\u4f5c\u6d41\u91cc\u7684\u6bcf\u4e2a\u65b0\u7279\u6027\u90fd\u6709\u81ea\u5df1\u7684 Feature \u5206\u652f\u3002\u5f53\u7279\u6027\u5f00\u53d1\u7ed3\u675f\u4ee5\u540e\uff0c\u8fd9\u4e9b\u5206\u652f\u4e0a\u7684\u5de5\u4f5c\u4f1a\u88ab\u5408\u5e76\u5230 Develop \u5206\u652f\\n* `Release` \u5206\u652f\uff1a\u5f53\u79ef\u7d2f\u4e86\u8db3\u591f\u591a\u7684\u5df2\u5b8c\u6210\u7279\u6027\uff0c\u6216\u8005\u9884\u5b9a\u7684\u7cfb\u7edf\u53d1\u5e03\u5468\u671f\u4e34\u8fd1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4f1a\u4ece Develop \u5206\u652f\u521b\u5efa\u51fa\u4e00\u4e2a Release \u5206\u652f\uff0c\u4e13\u95e8\u505a\u548c\u5f53\u524d\u7248\u672c\u53d1\u5e03\u6709\u5173\u7684\u5de5\u4f5c\u3002Release \u5206\u652f\u4e00\u65e6\u521b\u5efa\uff0c\u5c31\u4e0d\u5141\u8bb8\u518d\u6709\u65b0\u7684\u7279\u6027\u88ab\u52a0\u5165\u5230\u8fd9\u4e2a\u5206\u652f\u4e86\uff0c\u53ea\u6709\u4fee\u590d Bug \u6216\u8005\u7f16\u8f91\u6587\u6863\u4e4b\u7c7b\u7684\u5de5\u4f5c\u624d\u80fd\u591f\u8fdb\u5165\u8be5\u5206\u652f\u3002Release \u5206\u652f\u4e0a\u7684\u5185\u5bb9\u6700\u7ec8\u4f1a\u88ab\u5408\u5e76\u5230 Master \u5206\u652f\\n* `Hotfix` \u5206\u652f\uff1a\u76f4\u63a5\u6839\u636e Master \u5206\u652f\u521b\u5efa\uff0c\u76ee\u7684\u662f\u7ed9\u8fd0\u884c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u7684\u7cfb\u7edf\u5feb\u901f\u63d0\u4f9b\u8865\u4e01\u3002\u5f53 Hotfix \u5206\u652f\u4e0a\u7684\u5de5\u4f5c\u5b8c\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u5408\u5e76\u5230 Master \u5206\u652f\u3001Develop \u5206\u652f\u4ee5\u53ca\u5f53\u524d\u7684 Release \u5206\u652f\u3002\u5982\u679c\u6709\u7248\u672c\u7684\u66f4\u65b0\uff0c\u4e5f\u53ef\u4ee5\u4e3a Master \u5206\u652f\u6253\u4e0a\u76f8\u5e94\u7684 Tag\u3002\\n\\n\u5728 GitHub Flow \u5de5\u4f5c\u6d41\\n\\n* \u9879\u76ee\u7ef4\u62a4\u8005\u5c06\u4ee3\u7801\u63a8\u9001\u5230\u4e3b\u4ed3\u5e93\u3002\\n* \u5f00\u53d1\u8005\u514b\u9686\uff08Fork\uff09\u6b64\u4ed3\u5e93\uff0c\u505a\u51fa\u4fee\u6539\u3002\\n* \u5f00\u53d1\u8005\u5c06\u4fee\u6539\u540e\u7684\u4e34\u65f6\u4ee3\u7801\u5206\u652f\u63a8\u9001\u5230\u81ea\u5df1\u7684\u516c\u5f00\u4ed3\u5e93\u3002\\n* \u5f00\u53d1\u8005\u521b\u5efa\u4e00\u4e2a\u5408\u5e76\u8bf7\u6c42\uff08Pull Request\uff09\uff0c\u5305\u542b\u8fdb\u884c\u672c\u6b21\u66f4\u6539\u6709\u5173\u7684\u4fe1\u606f\uff08\u4f8b\u5982\u76ee\u6807\u4ed3\u5e93\u3001\u76ee\u6807\u5206\u652f\u3001\u5173\u8054\u8981\u4fee\u590d\u7684 issue \u95ee\u9898\uff09\uff0c\u4ee5\u4fbf\u7ef4\u62a4\u8005\u8fdb\u884c\u4ee3\u7801\u8bc4\u5ba1\u3002\\n* RP \u901a\u8fc7\u540e\uff0c\u4e34\u65f6\u4ee3\u7801\u5206\u652f\u5c06\u88ab\u5408\u5e76\u5230\u6307\u5b9a\u7684\u5206\u652f\uff0c\u5408\u5e76\u524d\u53ef\u80fd\u6709\u4e00\u4e9b\u9700\u8981\u89e3\u51b3\u7684\u4ee3\u7801\u51b2\u7a81\u3002\u5408\u5e76\u5b8c\u6210\u540e\uff0cGitHub \u5728\u5408\u5e76\u5206\u652f\u7684 commit \u8bb0\u5f55\u4e2d\u53ef\u4ee5\u8fde\u63a5\u5230\u4e4b\u524d PR \u7684\u9875\u9762\uff0c\u5e2e\u52a9\u6211\u4eec\u4e86\u89e3\u66f4\u6539\u7684\u5386\u53f2\u3001\u80cc\u666f\u548c\u8bc4\u8bba\u3002\\n* \u5408\u5e76\u62c9\u53d6\u8bf7\u6c42\u540e\uff0c\u7ef4\u62a4\u8005\u53ef\u4ee5\u5220\u9664\u4e34\u65f6\u4ee3\u7801\u5206\u652f\u3002\u8fd9\u8868\u660e\u8be5\u5206\u652f\u4e0a\u7684\u5de5\u4f5c\u5df2\u7ecf\u5b8c\u6210\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u9632\u6b62\u5176\u4ed6\u4eba\u610f\u5916\u4f7f\u7528\u65e7\u5206\u652f\u3002\\n\\n\\n**Commit \u89c4\u8303**\\n\\n1. \u683c\u5f0f\u7edf\u4e00\uff0c\u5185\u5bb9\u66f4\u52a0\u6e05\u6670\u548c\u6613\u8bfb\uff1b \\n2. \u53ef\u4ee5\u901a\u8fc7\u63d0\u4ea4\u8bb0\u5f55\u6765\u4e86\u89e3\u672c\u6b21\u63d0\u4ea4\u7684\u76ee\u7684\uff0c\u66f4\u597d\u5730 CR \u548c\u91cd\u6784\uff1b\\n3. \u66f4\u5bb9\u6613\u4e86\u89e3\u53d8\u66f4\u3001\u5b9a\u4f4d\u548c\u53d1\u73b0\u95ee\u9898\uff1b\\n4. \u7531\u4e8e\u6bcf\u4e2a\u63d0\u4ea4\u63cf\u8ff0\u90fd\u662f\u7ecf\u8fc7\u601d\u8003\u7684\uff0c\u8fd9\u5c31\u53ef\u4ee5\u6539\u5584\u63d0\u4ea4\u7684\u8d28\u91cf\u3002\\n\\n\\n### \u6d4b\u8bd5\u9636\u6bb5\\n\\n* \u4ee3\u7801\u89c4\u8303\u6d4b\u8bd5\uff1a\u5305\u62ec\u5bf9\u4ee3\u7801\u98ce\u683c\u3001\u547d\u540d\u7b49\u7684\u68c0\u6d4b\uff0c\u4e3b\u8981\u5de5\u5177\u6709 gofmt\u3001goimport\u3001golangci-lint \u7b49\u3002\\n* \u4ee3\u7801\u8d28\u91cf\u6d4b\u8bd5\uff1a\u5305\u62ec\u4ee3\u7801\u7684\u8986\u76d6\u7387\u3002\u4e3b\u8981\u5de5\u5177\u6709 go tool cover \u7b49\u3002\\n* \u4ee3\u7801\u903b\u8f91\u6d4b\u8bd5\uff1a\u5305\u62ec\u5e76\u53d1\u9519\u8bef\u6d4b\u8bd5\u3001\u65b0\u589e\u529f\u80fd\u6d4b\u8bd5\u3002\u4e3b\u8981\u5de5\u5177\u6709 race\u3001\u5355\u5143\u6d4b\u8bd5\u7b49\u3002\\n* \u6027\u80fd\u6d4b\u8bd5\uff1a\u5305\u62ec Benchmark \u6d4b\u8bd5\u3001\u6027\u80fd\u5bf9\u6bd4\u3002\u4e3b\u8981\u5de5\u5177\u6709 Benchmark\u3001ab\u3001pprof\u3001trace \u7b49\u3002\\n* \u670d\u52a1\u6d4b\u8bd5\uff1a\u6d4b\u8bd5\u670d\u52a1\u63a5\u53e3\u7684\u529f\u80fd\u4e0e\u51c6\u786e\u6027\uff0c\u4ee5\u53ca\u670d\u52a1\u7684\u53ef\u7528\u6027\u6d4b\u8bd5\u3002\\n* \u7cfb\u7edf\u6d4b\u8bd5\uff1a\u5305\u62ec\u7aef\u5230\u7aef\u6d4b\u8bd5\uff0c\u786e\u4fdd\u4e0a\u4e0b\u6e38\u63a5\u53e3\u4e0e\u53c2\u6570\u4f20\u9012\u7684\u51c6\u786e\u6027\u3001\u786e\u4fdd\u4ea7\u54c1\u529f\u80fd\u7b26\u5408\u9884\u671f\u3002\\n\\n### \u4e0a\u7ebf\u90e8\u7f72\u9636\u6bb5\\n\\n* \u4e0a\u7ebf\u907f\u5f00\u9ad8\u5cf0\u671f\u4e0a\u7ebf\uff0c\u5c3d\u91cf\u4e0d\u8981\u5728\u8282\u5047\u65e5\u4e4b\u524d\u4e0a\u7ebf\u53d8\u66f4\u8f83\u5927\u7684\u7248\u672c\uff0c\u4e0d\u5728\u4e1a\u52a1\u91cf\u5927\u7684\u65f6\u671f\u505a\u4efb\u4f55\u53d8\u66f4\u64cd\u4f5c\u3002\\n* \u63d0\u524d\u901a\u62a5\u5229\u76ca\u76f8\u5173\u8005\uff0c\u4f8b\u5982\u9879\u76ee\u7ec4\u6210\u5458\u3001\u7ec4\u5185\u6210\u5458\u3001\u6709\u5f71\u54cd\u7684\u4e0a\u4e0b\u6e38\u3002\\n* \u4e25\u683c\u89c4\u8303\u4e0a\u7ebf\u6267\u884c\u6b65\u9aa4\u3001\u786e\u5b9a\u68c0\u67e5\u6e05\u5355\u4e0e\u56de\u6eda\u65b9\u6848\u3002\\n* \u7070\u5ea6\u53d1\u5e03\uff0c\u5e76\u4e14\u5bf9\u4e8e\u8981\u53d8\u66f4\u7684\u529f\u80fd\uff0c\u91c7\u53d6\u9010\u6b65\u653e\u91cf\u7684\u65b9\u5f0f\u3002\u4f8b\u5982\u53ea\u653e\u91cf A \u57ce\u5e02 M \u54c1\u7c7b 30% \u7684\u6d41\u91cf\uff0c\u8fd9\u6837 A \u57ce\u5e02 M \u54c1\u7c7b 30% \u7684\u7528\u6237\u624d\u4f1a\u4f53\u9a8c\u5230\u65b0\u529f\u80fd\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u53d8\u66f4\u65f6\u5019\u7684\u98ce\u9669\u3002\u501f\u52a9\u7070\u5ea6\u53d1\u5e03\u4e5f\u80fd\u8fdb\u884c A/B \u5b9e\u9a8c\uff0c\u8fd9\u6837\u53ef\u4ee5\u89c2\u5bdf\u4e0d\u540c\u7b56\u7565\u4e0b\u7528\u6237\u7684\u884c\u4e3a\uff0c\u4ece\u800c\u505a\u51fa\u79d1\u5b66\u7684\u51b3\u7b56\\n* \u5206\u7ea7\u53d1\u5e03\uff0c\u9075\u5faa\u5148\u5c11\u91cf\uff0c\u518d\u90e8\u5206\uff0c\u6700\u540e\u5168\u91cf\u7684\u539f\u5219\uff1b\u4e25\u683c\u63a7\u5236\u6bcf\u4e00\u6b21\u90e8\u7f72\u7684\u65f6\u95f4\u95f4\u9694\u3002\u901a\u5e38\u5927\u516c\u53f8\u8fd8\u6709\u63a5\u8fd1\u7ebf\u4e0a\u73af\u5883\u7684\u9884\u53d1\u73af\u5883\uff0c\u9996\u5148\u5728\u9884\u53d1\u73af\u5883\u4e2d\u90e8\u7f72\u670d\u52a1\u5e76\u9a8c\u8bc1\u670d\u52a1\u7684\u68c0\u67e5\u6e05\u5355\u3002\u5bf9\u4e8e\u6838\u5fc3\u670d\u52a1\u6765\u8bf4\uff0c\u4e0a\u5343\u4e2a\u5bb9\u5668\u662f\u5f88\u5e38\u89c1\u7684\u4e8b\u60c5\uff0c\u5206\u7ea7\u53d1\u5e03\u6709\u52a9\u4e8e\u51cf\u5c11\u95ee\u9898\u51fa\u73b0\u65f6\u7684\u5f71\u54cd\u9762\uff0c\u56e0\u4e3a\u5927\u90e8\u5206\u95ee\u9898\u90fd\u662f\u670d\u52a1\u7684\u53d8\u66f4\u5f15\u8d77\u7684\u3002\\n* \u53e6\u5916\uff0c\u5728\u4e0a\u7ebf\u65f6\u8fdb\u884c\u68c0\u67e5\uff0c\u89c2\u5bdf\u5f53\u524d\u670d\u52a1\u6307\u6807\u662f\u5426\u5f02\u5e38\uff0c\u5982\u53d1\u73b0\u5f02\u5e38\u5e94\u5c3d\u5feb\u56de\u6eda\uff0c\u6b62\u635f\u540e\u518d\u67e5\u660e\u95ee\u9898\u539f\u56e0\u3002\u90e8\u7f72\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u89c2\u5bdf\u7a0b\u5e8f\u7684\u6838\u5fc3\u6307\u6807\uff0c\u5305\u62ec\u7cfb\u7edf\u6307\u6807\uff08\u4e0a\u4e0b\u6e38\u8c03\u7528\u9519\u8bef\u7387\u3001\u63a5\u53e3\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u548c P99 \u54cd\u5e94\u65f6\u95f4\u3001CPU\u3001\u5185\u5b58\u3001\u78c1\u76d8\u7684\u5229\u7528\u7387\u7b49\uff09\u548c\u4e1a\u52a1\u6307\u6807\uff08\u670d\u52a1\u9519\u8bef\u7387\u3001\u6838\u5fc3\u63a5\u53e3\u8bf7\u6c42\u91cf\u7b49\uff09\u3002\u4ee5\u6253\u8f66\u4e1a\u52a1\u4e3a\u4f8b\uff0c\u76d1\u63a7\u7684\u6307\u6807\u5305\u62ec\uff1a\u662f\u5426\u51fa\u73b0\u5929\u4ef7\u8d26\u5355\u3001\u7279\u5b9a\u8d39\u7528\u9879\uff08\u5982\u65f6\u957f\u8d39\u3001\u52a8\u6001\u8c03\u8282\u8d39\uff09\u662f\u5426\u51fa\u73b0\u5927\u7684\u6ce2\u52a8\uff0c\u5e73\u53f0\u662f\u5426\u62bd\u6210\u8fc7\u9ad8\u7b49\u95ee\u9898\u3002\\n* \u6700\u540e\uff0c\u5728\u4e0a\u7ebf\u8fc7\u7a0b\u4e2d\u8fd8\u8981\u53ca\u65f6\u5173\u6ce8\u62a5\u8b66\u7fa4\uff0c\u5173\u6ce8\u4e0a\u4e0b\u6e38\u7684\u53cd\u9988\uff0c\u6536\u96c6\u9519\u8bef\u65e5\u5fd7\uff0c\u5e76\u6293\u53d6 case \u67e5\u770b\u3002\\n\\n\u670d\u52a1\u90e8\u7f72\u5b8c\u6210\u540e\uff0c\u4e00\u4e9b\u91cd\u8981\u53d8\u66f4\u8fd8\u9700\u8981 QA \u5de5\u7a0b\u5e08\u8fdb\u884c\u56de\u5f52\u6d4b\u8bd5\uff0c\u9a8c\u8bc1\u670d\u52a1\u5728\u7ebf\u4e0a\u662f\u5426\u7b26\u5408\u9884\u671f\u3002\\n\\n### \u8fd0\u7ef4\u9636\u6bb5\\n\\nSRE \u5de5\u7a0b\u5e08\u65e5\u5e38\u4f1a\u6d89\u53ca\u5230\u5f00\u53d1\u5de5\u4f5c\uff0c\u4ed6\u4eec\u7528\u7cfb\u7edf\u6765\u7ef4\u62a4\u7cfb\u7edf\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u3001\u5de5\u5177\u5316\u7b49\u624b\u6bb5\u63d0\u5347\u670d\u52a1\u7ba1\u7406\u6548\u7387\uff0c\u786e\u4fdd\u96c6\u7fa4\u7684\u53ef\u89c2\u6d4b\u6027\u3001\u7a33\u5b9a\u6027\u3001\u53ef\u7528\u6027\u3002\u4e0b\u56fe\u662f\u817e\u8baf\u7684 SRE \u7a33\u5b9a\u6027\u5efa\u8bbe\u7684\u5168\u666f\u56fe\u3002\\n\\nSRE \u5de5\u7a0b\u5e08\u901a\u5e38\u662f\u56f4\u7ed5\u7740\u7f29\u51cf\u4e0b\u9762\u7684\u51e0\u4e2a\u65f6\u95f4\u6765\u63d0\u9ad8\u6574\u4e2a\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u6c34\u5e73\uff1a\\n\\n* MTTI \uff08Mean Time To ldentify\uff09\u5e73\u5747\u6545\u969c\u53d1\u73b0\u65f6\u95f4\\n* MTTA\uff08Mean Time To Acknowledge\uff09\u5e73\u5747\u6545\u969c\u786e\u8ba4\u65f6\u95f4\\n* MTTL \uff08Mean Time To Location\uff09\u5e73\u5747\u6545\u969c\u5b9a\u4f4d\u65f6\u95f4\\n* MTTT \uff08Mean Time To Troubleshooting\uff09\u5e73\u5747\u6545\u969c\u89e3\u51b3\u65f6\u95f4\\n* MTTV \uff08Mean Time To Verify\uff09\u5e73\u5747\u6545\u969c\u9a8c\u8bc1\u65f6\u95f4\\n\\nGoogle \u63d0\u51fa\u4e86\u4e0b\u9762\u8fd9\u5957 VALET \u6cd5\\n* Volume\uff08\u5bb9\u91cf\uff09\uff1a\u670d\u52a1\u627f\u8bfa\u7684\u6700\u5927\u5bb9\u91cf\u3002\u6bd4\u5982\u5e38\u89c1\u7684 QPS\u3001TPS\u3001\u4f1a\u8bdd\u6570\u3001\u541e\u5410\u91cf\u4ee5\u53ca\u6d3b\u52a8\u8fde\u63a5\u6570\u7b49\u7b49\u3002\\n* Availablity\uff08\u53ef\u7528\u6027\uff09\uff1a\u670d\u52a1\u662f\u5426\u6b63\u5e38 / \u7a33\u5b9a\u3002\u6bd4\u5982\u8bf7\u6c42\u8c03\u7528 HTTP 200 \u72b6\u6001\u7684\u6210\u529f\u7387\uff0c\u4efb\u52a1\u6267\u884c\u6210\u529f\u7387\u7b49\u3002\\n* Latency\uff08\u65f6\u5ef6\uff09\uff1a\u670d\u52a1\u54cd\u5e94\u901f\u5ea6\u3002\u6709\u65f6\u6211\u4eec\u9700\u8981\u5224\u65ad\u65f6\u5ef6\u662f\u5426\u7b26\u5408\u6b63\u6001\u5206\u5e03\uff0c\u6216\u8005\u6307\u5b9a\u4e0d\u540c\u7684\u533a\u95f4\uff0c\u6bd4\u5982\u5e38\u89c1\u7684 P90\u3001P95\u3001P99 \u7b49\u3002\\n* Error\uff08\u9519\u8bef\u7387\uff09\uff1a\u670d\u52a1\u9519\u8bef\u7387\uff0c\u6bd4\u5982 5XX\u30014XX\uff0c\u4ee5\u53ca\u81ea\u5b9a\u4e49\u7684\u72b6\u6001\u7801\u3002\\n* Ticket\uff08\u4eba\u5de5\u5e72\u9884\uff09\uff1a\u670d\u52a1\u662f\u5426\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u9762\u5bf9\u4e00\u4e9b\u590d\u6742\u7684\u6545\u969c\u573a\u666f\uff0c\u5c31\u9700\u8981\u4eba\u5de5\u4ecb\u5165\u6765\u6062\u590d\u670d\u52a1\u3002\\n\\n\\n\\n## go \u8bed\u8a00\u89c4\u8303\\n\\n\\n### \u683c\u5f0f\u5316\\n\\n**\u4ee3\u7801\u957f\u5ea6**\\n`\u5f3a\u5236 lll`\u4e00\u884c\u5185\u4e0d\u8d85\u8fc7 120 \u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u5e94\u5f53\u907f\u514d\u523b\u610f\u65ad\u884c\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e00\u884c\u592a\u957f\u4e86\uff0c\u8981\u4e48\u6539\u540d\uff0c\u8981\u4e48\u8c03\u6574\u8bed\u4e49\uff0c\u5f80\u5f80\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\u4e86\\n\\n`\u5f3a\u5236 funlen` \u5355\u4e2a\u51fd\u6570\u7684\u884c\u6570\u4e0d\u8d85\u8fc7 40 \u884c\uff0c\u8fc7\u957f\u5219\u8868\u793a\u51fd\u6570\u529f\u80fd\u4e0d\u4e13\u4e00\u3001\u5b9a\u4e49\u4e0d\u660e\u786e\u3001\u7a0b\u5e8f\u7ed3\u6784\u4e0d\u5408\u7406\uff0c\u4e0d\u6613\u4e8e\u7406\u89e3\u3002\u5f53\u51fd\u6570\u8fc7\u957f\u65f6\uff0c\u53ef\u4ee5\u63d0\u53d6\u51fd\u6570\u4ee5\u4fdd\u6301\u6b63\u6587\u5c0f\u4e14\u6613\u8bfb\u3002\\n\\n`\u5f3a\u5236` \u5355\u4e2a\u6587\u4ef6\u4e0d\u8d85\u8fc7 2000 \u884c\uff0c\u8fc7\u957f\u8bf4\u660e\u5b9a\u4e49\u4e0d\u660e\u786e\uff0c\u7a0b\u5e8f\u7ed3\u6784\u5212\u5206\u4e0d\u5408\u7406\uff0c\u4e0d\u5229\u4e8e\u7ef4\u62a4\u3002\\n\\n\\n**\u4ee3\u7801\u5e03\u5c40**\\n\\n`\u5efa\u8bae` Go \u6587\u4ef6\u63a8\u8350\u6309\u4ee5\u4e0b\u987a\u5e8f\u8fdb\u884c\u5e03\u5c40\u3002\\n\\n1. \u5305\u6ce8\u91ca\uff1a\u5bf9\u6574\u4e2a\u6a21\u5757\u548c\u529f\u80fd\u7684\u5b8c\u6574\u63cf\u8ff0\uff0c\u5199\u5728\u6587\u4ef6\u5934\u90e8\u3002\\n2. Package\uff1a\u5305\u540d\u79f0\\n3. Constants\uff1a\u5e38\u91cf\u5b9a\u4e49\\n4. Typedefs\uff1a\u7c7b\u578b\u5b9a\u4e49\\n5. Functions\uff1a\u51fd\u6570\u5b9e\u73b0\u3002\\n\\n\u6bcf\u4e2a\u90e8\u5206\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u884c\u5206\u5272\u3002\u6bcf\u4e2a\u90e8\u5206\u6709\u591a\u4e2a\u7c7b\u578b\u5b9a\u4e49\u6216\u8005\u6709\u591a\u4e2a\u51fd\u6570\u65f6\uff0c\u4e5f\u7528\u4e00\u4e2a\u7a7a\u884c\u5206\u5272\\n\\n\\n**\u7a7a\u683c\u4e0e\u7f29\u8fdb**\\n\\n\\n`\u5f3a\u5236 gofmt` \u6ce8\u91ca\u548c\u58f0\u660e\u5e94\u8be5\u5bf9\u9f50\\n`\u5f3a\u5236 gofmt` \u5c0f\u62ec\u53f7 ()\u3001\u4e2d\u62ec\u53f7[]\u3001\u5927\u62ec\u53f7{} \u5185\u4fa7\u90fd\u4e0d\u52a0\u7a7a\u683c\u3002\\n`\u5f3a\u5236 gofmt` \u9017\u53f7\u3001\u5192\u53f7\uff08slice \u4e2d\u5192\u53f7\u9664\u5916\uff09\u524d\u90fd\u4e0d\u52a0\u7a7a\u683c\uff0c\u540e\u9762\u52a0 1 \u4e2a\u7a7a\u683c\u3002\\n`\u5f3a\u5236 gofmt` \u6240\u6709\u4e8c\u5143\u8fd0\u7b97\u7b26\u524d\u540e\u5404\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u65f6\u9664\u5916\\n`\u5f3a\u5236 gofmt` \u4f7f\u7528 Tab \u800c\u4e0d\u662f\u7a7a\u683c\u8fdb\u884c\u7f29\u8fdb\u3002\\n`\u5f3a\u5236 nlreturn` return \u524d\u65b9\u9700\u8981\u52a0\u4e00\u4e2a\u7a7a\u884c\uff0c\u8ba9\u4ee3\u7801\u903b\u8f91\u66f4\u6e05\u6670\u3002\\n`\u5f3a\u5236 gofmt` \u5224\u65ad\u8bed\u53e5\u3001for \u8bed\u53e5\u9700\u8981\u7f29\u8fdb 1 \u4e2a Tab\uff0c\u5e76\u4e14\u53f3\u5927\u62ec\u53f7}\u4e0e\u5bf9\u5e94\u7684 if \u5173\u952e\u5b57\u5782\u76f4\u5bf9\u9f50\\n`\u5f3a\u5236 goimports` \u5f53 import \u591a\u4e2a\u5305\u65f6\uff0c\u5e94\u8be5\u5bf9\u5305\u8fdb\u884c\u5206\u7ec4\u3002\u540c\u4e00\u7ec4\u7684\u5305\u4e4b\u95f4\u4e0d\u9700\u8981\u6709\u7a7a\u884c\uff0c\u4e0d\u540c\u7ec4\u4e4b\u95f4\u7684\u5305\u9700\u8981\u4e00\u4e2a\u7a7a\u884c\u3002\u6807\u51c6\u5e93\u7684\u5305\u5e94\u8be5\u653e\u5728\u7b2c\u4e00\u7ec4\u3002\u8fd9\u540c\u6837\u9002\u7528\u4e8e\u5e38\u91cf\u3001\u53d8\u91cf\u548c\u7c7b\u578b\u58f0\u660e\uff1a\\n`\u63a8\u8350` \u907f\u514d else \u8bed\u53e5\u4e2d\u5904\u7406\u9519\u8bef\u8fd4\u56de\uff0c\u907f\u514d\u6b63\u5e38\u7684\u903b\u8f91\u4f4d\u4e8e\u7f29\u8fdb\u4e2d\u3002\u5982\u4e0b\u4ee3\u7801\u5b9e\u4f8b\uff0celse \u4e2d\u8fdb\u884c\u9519\u8bef\u5904\u7406\uff0c\u4ee3\u7801\u903b\u8f91\u9605\u8bfb\u8d77\u6765\u6bd4\u8f83\u8d39\u52b2\u3002\\n`\u63a8\u8350` \u51fd\u6570\u5185\u4e0d\u540c\u7684\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u5efa\u8bae\u7528\u5355\u4e2a\u7a7a\u884c\u52a0\u4ee5\u5206\u5272\u3002\\n`\u63a8\u8350` \u6ce8\u91ca\u4e4b\u524d\u7684\u7a7a\u884c\u901a\u5e38\u6709\u52a9\u4e8e\u63d0\u9ad8\u53ef\u8bfb\u6027\u2014\u2014\u65b0\u6ce8\u91ca\u7684\u5f15\u5165\u8868\u660e\u65b0\u601d\u60f3\u7684\u5f00\u59cb\u3002\\n\\n**\u547d\u540d**\\n* \u77ed\u5bb9\u6613\u62fc\u5199\\n* \u4fdd\u6301\u4e00\u81f4\u6027\\n* \u610f\u601d\u51c6\u786e,\u5bb9\u6613\u7406\u89e3 \u6ca1\u6709\u865a\u5047\u548c\u65e0\u610f\u4e49\u7684\u4fe1\u606f \\n\\n`\u5f3a\u5236 revive` Go \u4e2d\u7684\u547d\u540d\u7edf\u4e00\u4f7f\u7528\u9a7c\u5cf0\u5f0f\u3001\u4e0d\u8981\u52a0\u4e0b\u5212\u7ebf\u3002\\n`\u5f3a\u5236 revive` \u7f29\u5199\u7684\u4e13\u6709\u540d\u8bcd\u5e94\u8be5\u5927\u5199\uff0c\u4f8b\u5982\uff1a ServeHTTP\u3001IDProcessor\u3002\\n`\u5f3a\u5236` \u533a\u5206\u53d8\u91cf\u540d\u5e94\u8be5\u7528\u6709\u610f\u4e49\u7684\u540d\u5b57\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u963f\u62c9\u4f2f\u6570\u5b57\uff1aa1, a2, \u2026 aN\u3002\\n`\u5f3a\u5236` \u4e0d\u8981\u5728\u53d8\u91cf\u540d\u79f0\u4e2d\u5305\u542b\u4f60\u7684\u7c7b\u578b\u540d\u79f0\u3002\\n`\u5efa\u8bae` \u53d8\u91cf\u7684\u4f5c\u7528\u57df\u8d8a\u5927\uff0c\u540d\u5b57\u5e94\u8be5\u8d8a\u957f\u3002\\n\\n**\u5305\u540d**\\n\\n\u5305\u540d\u5e94\u8be5\u7b80\u77ed\u800c\u6e05\u6670\u3002\\n\\n`\u5f3a\u5236` \u4f7f\u7528\u7b80\u77ed\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u4e0d\u9700\u8981\u4e0b\u5212\u7ebf\u6216\u6df7\u5408\u5927\u5199\u5b57\u6bcd\u3002\\n`\u5efa\u8bae` \u5408\u7406\u4f7f\u7528\u7f29\u5199\\n`\u5f3a\u5236` \u907f\u514d\u65e0\u610f\u4e49\u7684\u5305\u540d\uff0c\u4f8b\u5982 util\uff0ccommon\uff0cbase \u7b49\u3002\\n\\n**\u63a5\u53e3\u547d\u540d**\\n\\n\\n`\u5efa\u8bae`\u5355\u65b9\u6cd5\u63a5\u53e3\u7531\u65b9\u6cd5\u540d\u79f0\u52a0\u4e0a -er \u540e\u7f00\u6216\u7c7b\u4f3c\u4fee\u9970\u6765\u547d\u540d\u3002\u4f8b\u5982\uff1aReader, Writer, Formatter, CloseNotifier \uff0c\u5f53\u4e00\u4e2a\u63a5\u53e3\u5305\u542b\u591a\u4e2a\u65b9\u6cd5\u65f6\uff0c\u8bf7\u9009\u62e9\u4e00\u4e2a\u80fd\u591f\u51c6\u786e\u63cf\u8ff0\u5176\u7528\u9014\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff1anet.Conn\u3001http.ResponseWriter\u3001io.ReadWriter\uff09\u3002\\n\\n**\u672c\u5730\u53d8\u91cf\u547d\u540d**\\n`\u5efa\u8bae` \u5982\u679c\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u5df2\u7ecf\u80fd\u591f\u770b\u51fa\u53c2\u6570\u7684\u542b\u4e49\uff0c\u90a3\u4e48\u51fd\u6570\u53c2\u6570\u7684\u547d\u540d\u5e94\u8be5\u5c3d\u91cf\u7b80\u77ed\uff1a\\n`\u5efa\u8bae`\u5982\u679c\u51fd\u6570\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u80fd\u8868\u8fbe\u53c2\u6570\u7684\u542b\u4e49\uff0c\u90a3\u4e48\u51fd\u6570\u53c2\u6570\u7684\u547d\u540d\u5e94\u8be5\u5c3d\u91cf\u51c6\u786e\\n\\n**\u51fd\u6570\u8fd4\u56de\u503c\u547d\u540d**\\n`\u5efa\u8bae` \u5bf9\u4e8e\u516c\u5f00\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u5177\u6709\u6587\u6863\u610f\u4e49\uff0c\u5e94\u8be5\u51c6\u786e\u8868\u8fbe\u542b\u4e49\\n\\n**\u53ef\u5bfc\u51fa\u7684\u53d8\u91cf\u540d**\\n`\u5efa\u8bae` \u7531\u4e8e\u4f7f\u7528\u53ef\u5bfc\u51fa\u7684\u53d8\u91cf\u65f6\u4f1a\u5e26\u4e0a\u5b83\u6240\u5728\u7684\u5305\u540d\uff0c\u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u5bf9\u53d8\u91cf\u91cd\u590d\u547d\u540d\u3002\u4f8b\u5982 bytes \u5305\u4e2d\u7684 ByteBuffer \u66ff\u6362\u4e3a Buffer\uff0c\u8fd9\u6837\u5728\u4f7f\u7528\u65f6\u5c31\u662f bytes.Buffer\uff0c\u663e\u5f97\u66f4\u7b80\u6d01\u3002\u7c7b\u4f3c\u7684\u8fd8\u6709\u628a strings.StringReader \u4fee\u6539\u4e3a strings.Reader\uff0c\u628a errors.NewError \u4fee\u6539\u4e3a errors.New\u3002\\n\\n\\n**Error \u503c\u547d\u540d**\\n\\n`\u5efa\u8bae` \u9519\u8bef\u7c7b\u578b\u5e94\u8be5\u4ee5 Error \u7ed3\u5c3e\u3002\\n`\u5efa\u8bae` Error \u53d8\u91cf\u540d\u5e94\u8be5\u4ee5 Err \u5f00\u5934\u3002\\n\\n**\u51fd\u6570**\\n`\u5f3a\u5236 cyclop` \u5708\u590d\u6742\u5ea6\uff08Cyclomatic complexity\uff09< 10\u3002\\n`\u5f3a\u5236 gochecknoinits` \u907f\u514d\u4f7f\u7528 init \u51fd\u6570\u3002\\n`\u5f3a\u5236 revive` Context \u5e94\u8be5\u4f5c\u4e3a\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002\\n`\u5f3a\u5236` \u7981\u6b62 return \u88f8\u8fd4\u56de\\n`\u5f3a\u5236` \u4e0d\u8981\u5728\u5faa\u73af\u91cc\u9762\u4f7f\u7528 defer\uff0c\u9664\u975e\u4f60\u771f\u7684\u786e\u5b9a defer \u7684\u5de5\u4f5c\u6d41\u7a0b\u3002\\n`\u5efa\u8bae` \u51fd\u6570\u8fd4\u56de\u503c\u5927\u4e8e 3 \u4e2a\u65f6\uff0c\u5efa\u8bae\u901a\u8fc7 struct \u8fdb\u884c\u5305\u88c5\u3002\\n`\u5efa\u8bae` \u51fd\u6570\u53c2\u6570\u4e0d\u5efa\u8bae\u8d85\u8fc7 3 \u4e2a\uff0c\u5927\u4e8e 3 \u4e2a\u65f6\u5efa\u8bae\u901a\u8fc7 struct \u8fdb\u884c\u5305\u88c5\u3002\\n\\n**\u63a7\u5236\u7ed3\u6784**\\n`\u5f3a\u5236` \u7981\u6b62\u4f7f\u7528 goto\u3002\\n`\u5f3a\u5236 gosimple` \u5f53\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4e3a bool \u7c7b\u578b\u65f6\uff0c\u5e94\u8be5\u4f7f\u7528 expr \u6216 !expr \u5224\u65ad\uff0c\u7981\u6b62\u4f7f\u7528 == \u6216 != \u4e0e true / false \u6bd4\u8f83\u3002\\n`\u5f3a\u5236 nestif` if \u5d4c\u5957\u6df1\u5ea6\u4e0d\u5927\u4e8e 5\u3002\\n\\n**\u65b9\u6cd5**\\n`\u5f3a\u5236 revive` receiver \u7684\u547d\u540d\u8981\u4fdd\u6301\u4e00\u81f4\uff0c\u5982\u679c\u4f60\u5728\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u5c06\u63a5\u6536\u5668\u547d\u540d\u4e3a \u201cc\u201d\uff0c\u90a3\u4e48\u5728\u5176\u4ed6\u65b9\u6cd5\u4e2d\u4e0d\u8981\u628a\u5b83\u547d\u540d\u4e3a \u201ccl\u201d\u3002\\n`\u5f3a\u5236` receiver \u7684\u540d\u5b57\u8981\u5c3d\u91cf\u7b80\u77ed\u5e76\u6709\u610f\u4e49\uff0c\u7981\u6b62\u4f7f\u7528 this\u3001self \u7b49\u3002\\n\\n**\u6ce8\u91ca**\\n\\nGo \u63d0\u4f9b C \u98ce\u683c\u7684\u6ce8\u91ca\u3002\u6709 /**/ \u7684\u5757\u6ce8\u91ca\u548c // \u7684\u5355\u884c\u6ce8\u91ca\u4e24\u79cd\u6ce8\u91ca\u98ce\u683c\u3002\u6ce8\u91ca\u4e3b\u8981\u6709\u4e0b\u9762\u51e0\u4e2a\u7528\u5904\u3002\\n1. \u6ce8\u91ca\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u63d0\u4f9b\u5177\u4f53\u7684\u903b\u8f91\u7ec6\u8282\uff0c\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u4ee3\u7801\u80cc\u540e\u7684\u610f\u56fe\u548c\u51b3\u7b56\u3002\\n2. \u5e2e\u52a9\u6f84\u6e05\u4e00\u4e9b\u6666\u6da9\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u542b\u4e49\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u5c3d\u91cf\u627e\u5230\u4e00\u79cd\u65b9\u6cd5\u8ba9\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u540d\u5b57\u672c\u8eab\u5c31\u662f\u6e05\u6670\u7684\u3002\u4f46\u662f\u5f53\u5b83\u662f\u6807\u51c6\u5e93\u7684\u4e00\u90e8\u5206\u65f6\uff0c\u6216\u8005\u5728\u4f60\u65e0\u6cd5\u66f4\u6539\u7684\u7b2c\u4e09\u65b9\u5e93\u4e2d\uff0c\u4e00\u4e2a\u6e05\u6670\u7684\u6ce8\u91ca\u4f1a\u975e\u5e38\u6709\u7528\u3002\\n3. \u5f3a\u8c03\u67d0\u4e00\u4e2a\u91cd\u8981\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u63d0\u9192\u5f00\u53d1\u8005\u4fee\u6539\u4e86\u8fd9\u4e00\u5904\u4ee3\u7801\u5fc5\u987b\u8fde\u5e26\u4fee\u6539\u53e6\u4e00\u5904\u4ee3\u7801\u3002\\n\\n`\u5f3a\u5236` \u65e0\u7528\u6ce8\u91ca\u76f4\u63a5\u5220\u9664\uff0c\u65e0\u7528\u7684\u4ee3\u7801\u4e0d\u5e94\u8be5\u6ce8\u91ca\u800c\u5e94\u8be5\u76f4\u63a5\u5220\u9664\u3002\u5373\u4f7f\u65e5\u540e\u9700\u8981\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7 Git \u5feb\u901f\u627e\u5230\u3002\\n`\u5f3a\u5236` \u7edf\u4e00\u4f7f\u7528\u4e2d\u6587\u6ce8\u91ca\uff0c\u4e2d\u82f1\u6587\u5b57\u7b26\u4e4b\u95f4\u4e25\u683c\u4f7f\u7528\u7a7a\u683c\u5206\u9694\u3002\\n`\u5f3a\u5236` \u6ce8\u91ca\u4e0d\u9700\u8981\u989d\u5916\u7684\u683c\u5f0f\uff0c\u4f8b\u5982\u661f\u53f7\u6a2a\u5e45\u3002\\n`\u5f3a\u5236` \u5305\u3001\u51fd\u6570\u3001\u65b9\u6cd5\u548c\u7c7b\u578b\u7684\u6ce8\u91ca\u8bf4\u660e\u90fd\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u53e5\u5b50\uff0c\u4ee5\u88ab\u63cf\u8ff0\u7684\u5bf9\u8c61\u4e3a\u4e3b\u8bed\u5f00\u5934\u3002Go \u6e90\u7801\u4e2d\u90fd\u662f\u8fd9\u6837\u7684\u3002\\n`\u5f3a\u5236` Go \u8bed\u8a00\u63d0\u4f9b\u4e86\u6587\u6863\u6ce8\u91ca\u5de5\u5177 go doc\uff0c\u53ef\u4ee5\u751f\u6210\u6ce8\u91ca\u548c\u5bfc\u51fa\u51fd\u6570\u7684\u6587\u6863\u3002\u6587\u6863\u6ce8\u91ca\u7684\u5199\u6cd5\u53ef\u4ee5\u53c2\u8003\u6587\u7a3f\u4e2d\u7684\u94fe\u63a5\u3002\\n`\u5f3a\u5236 godot` \u6ce8\u91ca\u6700\u540e\u5e94\u8be5\u4ee5\u53e5\u53f7\u7ed3\u5c3e\u3002\\n`\u5efa\u8bae` \u5f53\u67d0\u4e2a\u90e8\u5206\u7b49\u5f85\u5b8c\u6210\u65f6\uff0c\u53ef\u7528  TODO:  \u5f00\u5934\u7684\u6ce8\u91ca\u6765\u63d0\u9192\u7ef4\u62a4\u4eba\u5458\u3002\\n`\u5efa\u8bae` \u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u4f7f\u7528\u884c\u6ce8\u91ca\u3002\u5757\u6ce8\u91ca\u4e3b\u8981\u7528\u5728\u5305\u7684\u6ce8\u91ca\u4e0a\uff0c\u4e0d\u8fc7\u5757\u6ce8\u91ca\u5728\u8868\u8fbe\u5f0f\u4e2d\u6216\u7981\u7528\u5927\u91cf\u4ee3\u7801\u65f6\u5f88\u6709\u7528\u3002\\n`\u5efa\u8bae` \u5f53\u67d0\u4e2a\u90e8\u5206\u5b58\u5728\u5df2\u77e5\u95ee\u9898\u9700\u8981\u4fee\u590d\u6216\u6539\u8fdb\u65f6\uff0c\u53ef\u7528  FIXME:  \u5f00\u5934\u7684\u6ce8\u91ca\u6765\u63d0\u9192\u7ef4\u62a4\u4eba\u5458\u3002\\n`\u5efa\u8bae` \u9700\u8981\u7279\u522b\u8bf4\u660e\u67d0\u4e2a\u95ee\u9898\u65f6\uff0c\u53ef\u7528  NOTE:  \u5f00\u5934\u7684\u6ce8\u91ca\u3002\\n\\n**\u7ed3\u6784\u4f53**\\n`\u5f3a\u5236` \u4e0d\u8981\u5c06 Context \u6210\u5458\u6dfb\u52a0\u5230 Struct \u7c7b\u578b\u4e2d\u3002\\n\\n**\u9ad8\u6548**\\n`\u5f3a\u5236` Map \u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u6307\u5b9a\u957f\u5ea6make(map[T1]T2, hint)\u3002\\n`\u5f3a\u5236` Slice \u5728\u521d\u59cb\u5316\u65f6\u9700\u8981\u6307\u5b9a\u957f\u5ea6\u548c\u5bb9\u91cfmake([]T, length, capacity)\u3002\\n`\u5f3a\u5236` time.After() \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4f1a\u53d1\u751f\u6cc4\u9732\uff0c\u66ff\u6362\u4e3a\u4f7f\u7528 Timer\u3002\\n`\u5f3a\u5236` \u6570\u5b57\u4e0e\u5b57\u7b26\u4e32\u8f6c\u6362\u65f6\uff0c\u4f7f\u7528 strconv\uff0c\u800c\u4e0d\u662f fmt\u3002\\n`\u5f3a\u5236` \u8bfb\u5199\u78c1\u76d8\u65f6\uff0c\u4f7f\u7528\u8bfb\u5199 buffer\u3002\\n`\u5efa\u8bae` \u8c28\u614e\u4f7f\u7528 Slice \u7684\u622a\u65ad\u64cd\u4f5c\u548c append \u64cd\u4f5c\uff0c\u9664\u975e\u4f60\u77e5\u9053\u4e0b\u9762\u7684\u4ee3\u7801\u8f93\u51fa\u4ec0\u4e48\\n`\u5efa\u8bae` \u4efb\u4f55\u4e66\u5199\u7684\u534f\u7a0b\uff0c\u90fd\u9700\u8981\u660e\u786e\u534f\u7a0b\u4ec0\u4e48\u65f6\u5019\u9000\u51fa\u3002\\n`\u5efa\u8bae` \u70ed\u70b9\u4ee3\u7801\u4e2d\uff0c\u5185\u5b58\u5206\u914d\u590d\u7528\u5185\u5b58\u53ef\u4ee5\u4f7f\u7528 sync.Pool \u63d0\u901f\u3002\\n`\u5efa\u8bae` \u5c06\u9891\u7e41\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\u64cd\u4f5c\uff08+=\uff09\uff0c\u66ff\u6362\u4e3a StringBuffer \u6216 StringBuilder\u3002\\n`\u5efa\u8bae` \u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u91cd\u590d\u5339\u914d\u65f6\uff0c\u5229\u7528 Compile \u63d0\u524d\u7f16\u8bd1\u63d0\u901f\u3002\\n`\u5efa\u8bae` \u5f53\u7a0b\u5e8f\u4e25\u91cd\u4f9d\u8d56 Map \u65f6\uff0cMap \u7684 Key \u4f7f\u7528 int \u800c\u4e0d\u662f string \u5c06\u63d0\u901f\u3002\\n`\u5efa\u8bae` \u591a\u8bfb\u5c11\u5199\u7684\u573a\u666f\uff0c\u4f7f\u7528\u8bfb\u5199\u9501\u800c\u4e0d\u662f\u5199\u9501\u5c06\u63d0\u901f\u3002\\n\\n**\u5065\u58ee\u6027**\\n`\u5f3a\u5236` \u9664\u975e\u51fa\u73b0\u4e0d\u53ef\u6062\u590d\u7684\u7a0b\u5e8f\u9519\u8bef\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528 panic \u6765\u5904\u7406\u5e38\u89c4\u9519\u8bef\uff0c\u4f7f\u7528 error \u548c\u591a\u8fd4\u56de\u503c\u3002\\n`\u5f3a\u5236 revive` \u9519\u8bef\u4fe1\u606f\u4e0d\u5e94\u8be5\u9996\u5b57\u6bcd\u5927\u5199\uff08\u9664\u4e13\u6709\u540d\u8bcd\u548c\u7f29\u5199\u8bcd\u5916\uff09\uff0c\u4e5f\u4e0d\u5e94\u8be5\u4ee5\u6807\u70b9\u7b26\u53f7\u7ed3\u675f\u3002\u56e0\u4e3a\u9519\u8bef\u4fe1\u606f\u901a\u5e38\u5728\u5176\u4ed6\u4e0a\u4e0b\u6587\u4e2d\u88ab\u6253\u5370\u3002\\n`\u5f3a\u5236 errcheck` \u4e0d\u8981\u4f7f\u7528 _ \u53d8\u91cf\u6765\u4e22\u5f03 error\u3002\u5982\u679c\u51fd\u6570\u8fd4\u56de error\uff0c\u5e94\u8be5\u5f3a\u5236\u68c0\u67e5\u3002\\n`\u5efa\u8bae` \u5728\u5904\u7406\u9519\u8bef\u65f6\uff0c\u5982\u679c\u6211\u4eec\u9010\u5c42\u8fd4\u56de\u76f8\u540c\u7684\u9519\u8bef\uff0c\u90a3\u4e48\u5728\u6700\u540e\u65e5\u5fd7\u6253\u5370\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\u4ee3\u7801\u4e2d\u95f4\u7684\u6267\u884c\u8def\u5f84\u3002\u4f8b\u5982\u627e\u4e0d\u5230\u6587\u4ef6\u65f6\u6253\u5370\u7684No such file or directory\uff0c\u8fd9\u4f1a\u51cf\u6162\u6211\u4eec\u6392\u67e5\u95ee\u9898\u7684\u901f\u5ea6\u3002\u56e0\u6b64\uff0c\u5728\u4e2d\u95f4\u5904\u7406 err \u65f6\uff0c\u9700\u8981\u4f7f\u7528 fmt.Errorf \u6216\u7b2c\u4e09\u65b9\u5305\u7ed9\u9519\u8bef\u6dfb\u52a0\u989d\u5916\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002\u50cf\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5728 fmt.Errorf \u4e2d\uff0c\u9664\u4e86\u5b9e\u9645\u62a5\u9519\u7684\u4fe1\u606f\uff0c\u8fd8\u52a0\u4e0a\u4e86\u6388\u6743\u9519\u8bef\u4fe1\u606fauthenticate failed \uff1a\\n`\u5f3a\u5236` \u5229\u7528 recover \u6355\u83b7 panic \u65f6\uff0c\u9700\u8981\u7531 defer \u51fd\u6570\u76f4\u63a5\u8c03\u7528\u3002\\n`\u5f3a\u5236` \u4e0d\u7528\u91cd\u590d\u4f7f\u7528 recover\uff0c\u53ea\u9700\u8981\u5728\u6bcf\u4e00\u4e2a\u534f\u7a0b\u7684\u6700\u4e0a\u5c42\u51fd\u6570\u62e6\u622a\u5373\u53ef\u3002recover \u53ea\u80fd\u591f\u6355\u83b7\u5f53\u524d\u534f\u7a0b\uff0c\u800c\u4e0d\u80fd\u8de8\u534f\u7a0b\u6355\u83b7 panic\uff0c\u4e0b\u4f8b\u4e2d\u7684 panic \u5c31\u662f\u65e0\u6cd5\u88ab\u6355\u83b7\u7684\u3002\\n`\u5f3a\u5236` \u6709\u4e9b\u7279\u6b8a\u7684\u9519\u8bef\u662f recover \u4e0d\u4f4f\u7684\uff0c\u4f8b\u5982 Map \u7684\u5e76\u53d1\u8bfb\u5199\u51b2\u7a81\u3002\u8fd9\u79cd\u9519\u8bef\u53ef\u4ee5\u901a\u8fc7 race \u5de5\u5177\u6765\u68c0\u67e5\u3002\\n\\n**\u6269\u5c55\u6027**\\n`\u5efa\u8bae` \u5229\u7528\u63a5\u53e3\u5b9e\u73b0\u6269\u5c55\u6027\u3002\u63a5\u53e3\u7279\u522b\u9002\u7528\u4e8e\u8bbf\u95ee\u5916\u90e8\u7ec4\u4ef6\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\u8bbf\u95ee\u6570\u636e\u5e93\u3001\u8bbf\u95ee\u4e0b\u6e38\u670d\u52a1\u3002\u53e6\u5916\uff0c\u63a5\u53e3\u53ef\u4ee5\u65b9\u4fbf\u6211\u4eec\u8fdb\u884c\u529f\u80fd\u6d4b\u8bd5\u3002\u5173\u4e8e\u63a5\u53e3\u7684\u6700\u4f73\u5b9e\u8df5\uff0c\u9700\u8981\u5355\u72ec\u8bba\u8ff0\u3002\\n`\u5efa\u8bae` \u4f7f\u7528\u529f\u80fd\u9009\u9879\u6a21\u5f0f\u5bf9\u4e00\u4e9b\u516c\u5171 API \u7684\u6784\u9020\u51fd\u6570\u8fdb\u884c\u6269\u5c55\uff0c\u5927\u91cf\u7b2c\u4e09\u65b9\u5e93\u4f8b\u5982 gomicro\u3001zap \u7b49\u90fd\u4f7f\u7528\u4e86\u8fd9\u79cd\u7b56\u7565\u3002\\n\\n**\u5de5\u5177**\\ngolangci-lint \u662f\u5f53\u524d\u5927\u591a\u6570\u516c\u53f8\u91c7\u7528\u7684\u9759\u6001\u4ee3\u7801\u5206\u6790\u5de5\u5177\uff0c\u8bcd\u8bed Linter \u6307\u7684\u662f\u4e00\u79cd\u5206\u6790\u6e90\u4ee3\u7801\u4ee5\u6b64\u6807\u8bb0\u7f16\u7a0b\u9519\u8bef\u3001\u4ee3\u7801\u7f3a\u9677\u3001\u98ce\u683c\u9519\u8bef\u7684\u5de5\u5177\u3002\\n\u800c golangci-lint \u662f\u96c6\u5408\u591a\u79cd Linter \u7684\u5de5\u5177\u3002\u8981\u67e5\u770b\u652f\u6301\u7684 Linter \u5217\u8868\u4ee5\u53ca\u542f\u7528 / \u7981\u7528\u4e86\u54ea\u4e9b Linter\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\uff1a\\n```bash\\ngolangci-lint help linters\\n```\\n> Pre-Commit\\n\\n\u5728\u4ee3\u7801\u901a\u8fc7 Git Commit \u63d0\u4ea4\u5230\u4ee3\u7801\u4ed3\u5e93\u4e4b\u524d\uff0cgit \u63d0\u4f9b\u4e86\u4e00\u79cd pre-commit \u7684 hook \u80fd\u529b\uff0c\u7528\u4e8e\u6267\u884c\u4e00\u4e9b\u524d\u7f6e\u811a\u672c\u3002\u5728\u811a\u672c\u4e2d\u52a0\u5165\u68c0\u67e5\u7684\u4ee3\u7801\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u62e6\u622a\u4f4f\u4e00\u4e9b\u4e0d\u7b26\u5408\u89c4\u8303\u7684\u4ee3\u7801\uff0c\u907f\u514d\u9891\u7e41\u89e6\u53d1 CI \u6216\u8005\u6d6a\u8d39\u65f6\u95f4\u3002pre-commit \u7684\u914d\u7f6e\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u53ef\u4ee5\u53c2\u8003TiDB\u3002\\n\\n\u5e76\u53d1\u68c0\u6d4b race\\nGo 1.1 \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u68c0\u67e5\u5de5\u5177 race \u6765\u6392\u67e5\u6570\u636e\u4e89\u7528\u95ee\u9898\u3002race \u53ef\u4ee5\u7528\u5728\u591a\u4e2a Go \u6307\u4ee4\u4e2d\uff0c\u4e00\u65e6\u68c0\u6d4b\u5668\u5728\u7a0b\u5e8f\u4e2d\u627e\u5230\u6570\u636e\u4e89\u7528\uff0c\u5c31\u4f1a\u6253\u5370\u62a5\u544a\u3002\u8fd9\u4efd\u62a5\u544a\u5305\u542b\u53d1\u751f race \u51b2\u7a81\u7684\u534f\u7a0b\u6808\uff0c\u4ee5\u53ca\u6b64\u65f6\u6b63\u5728\u8fd0\u884c\u7684\u534f\u7a0b\u6808\u3002\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u6267\u884c race\\n\\n**\u8986\u76d6\u7387**\\n\u4e00\u822c\u6211\u4eec\u4f1a\u4f7f\u7528\u4ee3\u7801\u8986\u76d6\u7387\u6765\u5224\u65ad\u4ee3\u7801\u4e66\u5199\u7684\u8d28\u91cf\uff0c\u8bc6\u522b\u65e0\u6548\u4ee3\u7801\u3002go tool cover \u662f go \u8bed\u8a00\u63d0\u4f9b\u7684\u8bc6\u522b\u4ee3\u7801\u8986\u76d6\u7387\u7684\u5de5\u5177\uff0c\u5728\u540e\u9762\u7684\u8bfe\u7a0b\u4e2d\u8fd8\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002"},{"id":"/2023/09/05/mysql","metadata":{"permalink":"/blog/2023/09/05/mysql","source":"@site/blog/2023/09/05/mysql.md","title":"MySQL\u5b66\u4e60","description":"\u5982\u4f55\u5b66\u4e60MySQL \u4f60\u4e0d\u77e5\u9053\u7684\u54ea\u4e9b\u4e8b\u60c5","date":"2023-09-05T00:00:00.000Z","formattedDate":"2023\u5e749\u67085\u65e5","tags":[{"label":"\u57fa\u7840","permalink":"/blog/tags/\u57fa\u7840"}],"readingTime":14.685,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"MySQL\u5b66\u4e60","tags":["\u57fa\u7840"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5b66\u4e60MySQL \u4f60\u4e0d\u77e5\u9053\u7684\u54ea\u4e9b\u4e8b\u60c5","image":"https://source.unsplash.com/random?people&37"},"unlisted":false,"prevItem":{"title":"go\u5b66\u4e60","permalink":"/blog/2023/09/09/go"},"nextItem":{"title":"\u5982\u4f55\u505a\u597d\u4e00\u4efd\u5c5e\u4e8e\u81ea\u5df1\u7684ppt","permalink":"/blog/2023/09/05/ppt"}},"content":"\x3c!-- truncate --\x3e\\n\\n\\n## SQL\u67e5\u8be2\u662f\u5982\u4f55\u6267\u884c\u7684\\n\\nMySQL \u53ef\u4ee5\u5206\u6210server \u548c\u5b58\u50a8\u5f15\u64ce\u4e24\u4e2a\u90e8\u5206\\n\\n* `Server` \u5305\u62ec\u8fde\u63a5\u5668,\u67e5\u8be2\u7f13\u5b58,\u5206\u6790\u5668,\u4f18\u5316\u5668,\u6267\u884c\u5668,\u4ee5\u53ca\u6240\u6709\u7684\u5185\u7f6e\u51fd\u6570,\u6240\u6709\u8de8\u50a8\u5b58\u5f15\u64ce\\n\\n* `\u50a8\u5b58\u5c42` \u8d1f\u8d23\u6570\u636e\u7684\u50a8\u5b58\u548c\u63d0\u53d6,\u5176\u67b6\u6784\u662f\u63d2\u4ef6\u5f0f \u652f\u6301 InnoDB,MyISAM,Memory \\n\\n**\u8fde\u63a5\u5668**\\n\u7528\u4e8e\u6570\u636e\u5e93\u8fde\u63a5\\n\\n**\u67e5\u8be2\u7f13\u5b58**\\n\\n**\u5206\u6790\u5668**\\n\\n\u8bed\u6cd5\u5206\u6790\\n\\n**\u4f18\u5316\u5668**\\n\\n\u8868\u91cc\u9762\u6709\u591a\u4e2a\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1b\u6216\u8005\u5728\u4e00\u4e2a\u8bed\u53e5\u6709\u591a\u8868\u5173\u8054\uff08join\uff09\u7684\u65f6\u5019\uff0c\u51b3\u5b9a\u5404\u4e2a\u8868\u7684\u8fde\u63a5\u987a\u5e8f\\n\\n\\n**\u6267\u884c\u5668**\\n1. \u5224\u65ad\u662f\u5426\u6709\u6743\u9650\\n\\n\\n\\n## SQL\u66f4\u65b0\u8bed\u53e5\u5982\u4f55\u6267\u884c\\n\\n`\u91cd\u8981\u7684\u65e5\u5fd7\u6a21\u5757`\uff1aredo log\\n\\n\\n`\u91cd\u8981\u7684\u65e5\u5fd7\u6a21\u5757`\uff1abinlog\\n\\n1. redo log \u662f InnoDB \u5f15\u64ce\u7279\u6709\u7684\uff1bbinlog \u662f MySQL \u7684 Server \u5c42\u5b9e\u73b0\u7684\uff0c\u6240\u6709\u5f15\u64ce\u90fd\u53ef\u4ee5\u4f7f\u7528\u3002\\n2. redo log \u662f\u7269\u7406\u65e5\u5fd7\uff0c\u8bb0\u5f55\u7684\u662f\u201c\u5728\u67d0\u4e2a\u6570\u636e\u9875\u4e0a\u505a\u4e86\u4ec0\u4e48\u4fee\u6539\u201d\uff1bbinlog \u662f\u903b\u8f91\u65e5\u5fd7\uff0c\u8bb0\u5f55\u7684\u662f\u8fd9\u4e2a\u8bed\u53e5\u7684\u539f\u59cb\u903b\u8f91\uff0c\u6bd4\u5982\u201c\u7ed9 ID=2 \u8fd9\u4e00\u884c\u7684 c \u5b57\u6bb5\u52a0 1 \u201d\u3002\\n3. redo log \u662f\u5faa\u73af\u5199\u7684\uff0c\u7a7a\u95f4\u56fa\u5b9a\u4f1a\u7528\u5b8c\uff1bbinlog \u662f\u53ef\u4ee5\u8ffd\u52a0\u5199\u5165\u7684\u3002\u201c\u8ffd\u52a0\u5199\u201d\u662f\u6307 binlog \u6587\u4ef6\u5199\u5230\u4e00\u5b9a\u5927\u5c0f\u540e\u4f1a\u5207\u6362\u5230\u4e0b\u4e00\u4e2a\uff0c\u5e76\u4e0d\u4f1a\u8986\u76d6\u4ee5\u524d\u7684\u65e5\u5fd7\u3002\\n\\n\\n\\n## \u4e8b\u52a1\\n\\n**\u9694\u79bb\u6027\u548c\u9694\u79bb\u7ea7\u522b**\\n\\nACID (Atomicity,Consistency,Isolation,Durability)\\n1. \u539f\u5b50\u6027 \\n2. \u4e00\u81f4\u6027\\n3. \u9694\u79bb\u6027\\n4. \u6301\u4e45\u6027\\n\\n\u9694\u79bb \\n1. \u8bfb\u672a\u63d0\u4ea4 (read uncommitted) \u4e00\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u63d0\u4ea4\u65f6\uff0c\u5b83\u505a\u7684\u53d8\u66f4\u5c31\u80fd\u88ab\u522b\u7684\u4e8b\u52a1\u770b\u5230\\n2. \u8bfb\u63d0\u4ea4(read committed) \u4e00\u4e2a\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\uff0c\u5b83\u505a\u7684\u53d8\u66f4\u624d\u4f1a\u88ab\u5176\u4ed6\u4e8b\u52a1\u770b\u5230\\n3. \u53ef\u91cd\u590d\u8bfb (repeatable read) \u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u8fc7\u7a0b\u4e2d\u770b\u5230\u7684\u6570\u636e\uff0c\u603b\u662f\u8ddf\u8fd9\u4e2a\u4e8b\u52a1\u5728\u542f\u52a8\u65f6\u770b\u5230\u7684\u6570\u636e\u662f\u4e00\u81f4\u7684\\n4. \u4e32\u884c (serializable) \u987e\u540d\u601d\u4e49\u662f\u5bf9\u4e8e\u540c\u4e00\u884c\u8bb0\u5f55\uff0c\u201c\u5199\u201d\u4f1a\u52a0\u201c\u5199\u9501\u201d\uff0c\u201c\u8bfb\u201d\u4f1a\u52a0\u201c\u8bfb\u9501\u201d\u3002\u5f53\u51fa\u73b0\u8bfb\u5199\u9501\u51b2\u7a81\u7684\u65f6\u5019\uff0c\u540e\u8bbf\u95ee\u7684\u4e8b\u52a1\u5fc5\u987b\u7b49\u524d\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u5b8c\u6210\uff0c\u624d\u80fd\u7ee7\u7eed\u6267\u884c\\n\\n\\nMySQL \u7684\u9694\u79bb\u7ea7\u522b\u8bbe\u7f6e\u4e3a`\u8bfb\u63d0\u4ea4`\\n\\n\\n**\u4e8b\u52a1\u7684\u542f\u52a8\u65b9\u5f0f**\\n\\n1. \u663e\u793a\u542f\u52a8\u4e8b\u52a1\u8bed\u53e5 `begin` `start transaction` \u5f00\u59cb\u4e8b\u52a1 `commit` \u63d0\u4ea4 `rollback` \u56de\u6eda\\n2. set autocommit=0\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5c06\u8fd9\u4e2a\u7ebf\u7a0b\u7684\u81ea\u52a8\u63d0\u4ea4\u5173\u6389\u3002\u610f\u5473\u7740\u5982\u679c\u4f60\u53ea\u6267\u884c\u4e00\u4e2a select \u8bed\u53e5\uff0c\u8fd9\u4e2a\u4e8b\u52a1\u5c31\u542f\u52a8\u4e86\uff0c\u800c\u4e14\u5e76\u4e0d\u4f1a\u81ea\u52a8\u63d0\u4ea4\u3002\u8fd9\u4e2a\u4e8b\u52a1\u6301\u7eed\u5b58\u5728\u76f4\u5230\u4f60\u4e3b\u52a8\u6267\u884c commit \u6216 rollback \u8bed\u53e5\uff0c\u6216\u8005\u65ad\u5f00\u8fde\u63a5\u3002\\n\\nset autocommit=1, \u901a\u8fc7\u663e\u5f0f\u8bed\u53e5\u7684\u65b9\u5f0f\u6765\u542f\u52a8\u4e8b\u52a1\\n\\n**\u4e8b\u52a1\u9694\u79bb\u7684\u5b9e\u73b0**\\n\\n\u6570\u636e\u5e93\u7684\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff08MVCC)\\n\\n## \u7d22\u5f15\u7684\u5e38\u89c1\u6a21\u578b\\n\\n### \u6570\u636e\u7ed3\u6784\\n\\n1. `\u54c8\u5e0c\u8868`   \u662f\u4e00\u79cd\u4ee5\u952e-\u503c \u50a8\u5b58\u6570\u636e\u7684\u7ed3\u6784 \u54c8\u5e0c\u8868\u8fd9\u79cd\u7ed3\u6784\u9002\u7528\u4e8e\u53ea\u6709\u7b49\u503c\u67e5\u8be2\u7684\u573a\u666f\\n2. `\u6709\u5e8f\u6570\u7ec4`   \u6709\u5e8f\u6570\u7ec4\u7d22\u5f15\u53ea\u9002\u7528\u4e8e\u9759\u6001\u5b58\u50a8\u5f15\u64ce  \u6709\u5e8f\u6570\u7ec4\u5728\u7b49\u503c\u67e5\u8be2\u548c\u8303\u56f4\u67e5\u8be2\u573a\u666f\u4e2d\u7684\u6027\u80fd\u5c31\u90fd\u975e\u5e38\u4f18\u79c0\\n3. `\u641c\u7d22\u6811` \\n\\n\\n:::info \\n\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7279\u70b9\u662f:  \u7236\u8282\u70b9\u5de6\u5b50\u6811\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5c0f\u4e8e\u7236\u8282\u70b9\u7684\u503c\uff0c\u53f3\u5b50\u6811\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5927\u4e8e\u7236\u8282\u70b9\u7684\u503c\u3002\u8fd9\u6837\u5982\u679c\u4f60\u8981\u67e5 ID_card_n2 \u7684\u8bdd\uff0c\u6309\u7167\u56fe\u4e2d\u7684\u641c\u7d22\u987a\u5e8f\u5c31\u662f\u6309\u7167 UserA -> UserC -> UserF -> User2 \u8fd9\u4e2a\u8def\u5f84\u5f97\u5230\u3002\u8fd9\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(log(N))\u3002\\n:::\\n\\n### InnoDB \u7684\u7d22\u5f15\u6a21\u578b\\n\\n\u8868\u90fd\u662f\u6839\u636e\u4e3b\u952e\u987a\u5e8f\u4ee5\u7d22\u5f15\u7684\u5f62\u5f0f\u5b58\u653e\u7684\uff0c\u8fd9\u79cd\u5b58\u50a8\u65b9\u5f0f\u7684\u8868\u79f0\u4e3a\u7d22\u5f15\u7ec4\u7ec7\u8868\u3002\u53c8\u56e0\u4e3a\u524d\u9762\u6211\u4eec\u63d0\u5230\u7684\uff0cInnoDB \u4f7f\u7528\u4e86 B+ \u6811\u7d22\u5f15\u6a21\u578b\uff0c\u6240\u4ee5\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728 B+ \u6811\u4e2d\u7684\u3002\\n\\n\\n\u6bcf\u4e00\u4e2a\u7d22\u5f15\u5728 InnoDB \u91cc\u9762\u5bf9\u5e94\u4e00\u68f5 B+ \u6811\u3002\\n\\n\\n\\n\u6839\u636e\u53f6\u5b50\u8282\u70b9\u7684\u5185\u5bb9\uff0c\u7d22\u5f15\u7c7b\u578b\u5206\u4e3a\u4e3b\u952e\u7d22\u5f15\u548c\u975e\u4e3b\u952e\u7d22\u5f15\\n\\n\\n\u952e\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u5b58\u7684\u662f\u6574\u884c\u6570\u636e\u3002\u5728 InnoDB \u91cc\uff0c\u4e3b\u952e\u7d22\u5f15\u4e5f\u88ab\u79f0\u4e3a\u805a\u7c07\u7d22\u5f15\uff08clustered index\uff09\\n\\n\\n\u975e\u4e3b\u952e\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u5185\u5bb9\u662f\u4e3b\u952e\u7684\u503c\u3002\u5728 InnoDB \u91cc\uff0c\u975e\u4e3b\u952e\u7d22\u5f15\u4e5f\u88ab\u79f0\u4e3a\u4e8c\u7ea7\u7d22\u5f15\uff08secondary index\uff09\u3002\\n\\n**\u57fa\u4e8e\u4e3b\u952e\u7d22\u5f15\u548c\u666e\u901a\u7d22\u5f15\u7684\u67e5\u8be2\u6709\u4ec0\u4e48\u533a\u522b**\\n\\n* \u5982\u679c\u8bed\u53e5\u662f select * from T where ID=500\uff0c\u5373\u4e3b\u952e\u67e5\u8be2\u65b9\u5f0f\uff0c\u5219\u53ea\u9700\u8981\u641c\u7d22 ID \u8fd9\u68f5 B+ \u6811\uff1b\\n* \u5982\u679c\u8bed\u53e5\u662f select * from T where k=5\uff0c\u5373\u666e\u901a\u7d22\u5f15\u67e5\u8be2\u65b9\u5f0f\uff0c\u5219\u9700\u8981\u5148\u641c\u7d22 k \u7d22\u5f15\u6811\uff0c\u5f97\u5230 ID \u7684\u503c\u4e3a 500\uff0c\u518d\u5230 ID \u7d22\u5f15\u6811\u641c\u7d22\u4e00\u6b21\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u56de\u8868\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\uff0c\u57fa\u4e8e\u975e\u4e3b\u952e\u7d22\u5f15\u7684\u67e5\u8be2\u9700\u8981\u591a\u626b\u63cf\u4e00\u68f5\u7d22\u5f15\u6811\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5e94\u7528\u4e2d\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u4e3b\u952e\u67e5\u8be2\u3002\\n\\n\\n### \u7d22\u5f15\u7ef4\u62a4\\n\\nB+ \u6811\u4e3a\u4e86\u7ef4\u62a4\u7d22\u5f15\u6709\u5e8f\u6027\uff0c\u5728\u63d2\u5165\u65b0\u503c\u7684\u65f6\u5019\u9700\u8981\u505a\u5fc5\u8981\u7684\u7ef4\u62a4\u3002\u4ee5\u4e0a\u9762\u8fd9\u4e2a\u56fe\u4e3a\u4f8b\uff0c\u5982\u679c\u63d2\u5165\u65b0\u7684\u884c ID \u503c\u4e3a 700\uff0c\u5219\u53ea\u9700\u8981\u5728 R5 \u7684\u8bb0\u5f55\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u65b0\u8bb0\u5f55\u3002\u5982\u679c\u65b0\u63d2\u5165\u7684 ID \u503c\u4e3a 400\uff0c\u5c31\u76f8\u5bf9\u9ebb\u70e6\u4e86\uff0c\u9700\u8981\u903b\u8f91\u4e0a\u632a\u52a8\u540e\u9762\u7684\u6570\u636e\uff0c\u7a7a\u51fa\u4f4d\u7f6e\u3002\\n\\n\\n**\u4e3b\u952e\u957f\u5ea6\u8d8a\u5c0f\uff0c\u666e\u901a\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u5c31\u8d8a\u5c0f\uff0c\u666e\u901a\u7d22\u5f15\u5360\u7528\u7684\u7a7a\u95f4\u4e5f\u5c31\u8d8a\u5c0f\u3002**\\n\\n\\n### \u8986\u76d6\u7d22\u5f15\\n\u5982\u679c\u6267\u884c\u7684\u8bed\u53e5\u662f select ID from T where k between 3 and 5\uff0c\u8fd9\u65f6\u53ea\u9700\u8981\u67e5 ID \u7684\u503c\uff0c\u800c ID \u7684\u503c\u5df2\u7ecf\u5728 k \u7d22\u5f15\u6811\u4e0a\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u63d0\u4f9b\u67e5\u8be2\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u56de\u8868\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u8fd9\u4e2a\u67e5\u8be2\u91cc\u9762\uff0c\u7d22\u5f15 k \u5df2\u7ecf\u201c\u8986\u76d6\u4e86\u201d\u6211\u4eec\u7684\u67e5\u8be2\u9700\u6c42\uff0c\u6211\u4eec\u79f0\u4e3a\u8986\u76d6\u7d22\u5f15\\n\\n### \u6700\u5de6\u524d\u7f00\u539f\u5219\\n\\n`B+ \u6811`\u8fd9\u79cd\u7d22\u5f15\u7ed3\u6784\uff0c\u53ef\u4ee5\u5229\u7528\u7d22\u5f15\u7684`\u6700\u5de6\u524d\u7f00`\uff0c\u6765\u5b9a\u4f4d\u8bb0\\n\\n### \u7d22\u5f15\u4e0b\u63a8\\n\u4ee5\u5728\u7d22\u5f15\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u7d22\u5f15\u4e2d\u5305\u542b\u7684\u5b57\u6bb5\u5148\u505a\u5224\u65ad\uff0c\u76f4\u63a5\u8fc7\u6ee4\u6389\u4e0d\u6ee1\u8db3\u6761\u4ef6\u7684\u8bb0\u5f55\uff0c\u51cf\u5c11\u56de\u8868\u6b21\u6570\u3002\\n\\n\\n\\n## \u5168\u5c40\u9501\u548c\u8868\u9501\\n\\n\u6839\u636e\u52a0\u9501\u7684\u8303\u56f4\uff0cMySQL \u91cc\u9762\u7684\u9501\u5927\u81f4\u53ef\u4ee5\u5206\u6210`\u5168\u5c40\u9501`\u3001`\u8868\u7ea7\u9501`\u548c`\u884c\u9501`\u4e09\u7c7b\\n\\n### \u5168\u5c40\u9501\\n\\n> \u5168\u5c40\u9501\u5c31\u662f\u5bf9\u6574\u4e2a\u6570\u636e\u5e93\u5b9e\u4f8b\u52a0\u9501\\n\\nySQL \u63d0\u4f9b\u4e86\u4e00\u4e2a\u52a0\u5168\u5c40\u8bfb\u9501\u7684\u65b9\u6cd5\uff0c\u547d\u4ee4\u662f Flush tables with read lock (FTWRL)\\n\\n\\n\u5168\u5c40\u9501\u7684\u5178\u578b\u4f7f\u7528\u573a\u666f\u662f\uff0c\u505a\u5168\u5e93\u903b\u8f91\u5907\u4efd\u3002\u4e5f\u5c31\u662f\u628a\u6574\u5e93\u6bcf\u4e2a\u8868\u90fd select \u51fa\u6765\u5b58\u6210\u6587\u672c\u3002\\n\\n\u5f02\u5e38\u60c5\u51b5\\n1. \u5982\u679c\u4f60\u5728\u4e3b\u5e93\u4e0a\u5907\u4efd\uff0c\u90a3\u4e48\u5728\u5907\u4efd\u671f\u95f4\u90fd\u4e0d\u80fd\u6267\u884c\u66f4\u65b0\uff0c\u4e1a\u52a1\u57fa\u672c\u4e0a\u5c31\u5f97\u505c\u6446\uff1b\\n2. \u5982\u679c\u4f60\u5728\u4ece\u5e93\u4e0a\u5907\u4efd\uff0c\u90a3\u4e48\u5907\u4efd\u671f\u95f4\u4ece\u5e93\u4e0d\u80fd\u6267\u884c\u4e3b\u5e93\u540c\u6b65\u8fc7\u6765\u7684 binlog\uff0c\u4f1a\u5bfc\u81f4\u4e3b\u4ece\u5ef6\u8fdf\\n\\n\u65e2\u7136\u8981\u5168\u5e93\u53ea\u8bfb\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528 set global readonly=true \u7684\u65b9\u5f0f\u5462\uff1f\u786e\u5b9e readonly \u65b9\u5f0f\u4e5f\u53ef\u4ee5\u8ba9\u5168\u5e93\u8fdb\u5165\u53ea\u8bfb\u72b6\u6001\uff0c\u4f46\u6211\u8fd8\u662f\u4f1a\u5efa\u8bae\u4f60\u7528 FTWRL \u65b9\u5f0f\uff0c\u4e3b\u8981\u6709\u4e24\u4e2a\u539f\u56e0\uff1a\\n\\n* \u4e00\u662f\uff0c\u5728\u6709\u4e9b\u7cfb\u7edf\u4e2d\uff0creadonly \u7684\u503c\u4f1a\u88ab\u7528\u6765\u505a\u5176\u4ed6\u903b\u8f91\uff0c\u6bd4\u5982\u7528\u6765\u5224\u65ad\u4e00\u4e2a\u5e93\u662f\u4e3b\u5e93\u8fd8\u662f\u5907\u5e93\u3002\u56e0\u6b64\uff0c\u4fee\u6539 global \u53d8\u91cf\u7684\u65b9\u5f0f\u5f71\u54cd\u9762\u66f4\u5927\uff0c\u6211\u4e0d\u5efa\u8bae\u4f60\u4f7f\u7528\\n* \u4e8c\u662f\uff0c\u5728\u5f02\u5e38\u5904\u7406\u673a\u5236\u4e0a\u6709\u5dee\u5f02\u3002\u5982\u679c\u6267\u884c FTWRL \u547d\u4ee4\u4e4b\u540e\u7531\u4e8e\u5ba2\u6237\u7aef\u53d1\u751f\u5f02\u5e38\u65ad\u5f00\uff0c\u90a3\u4e48 MySQL \u4f1a\u81ea\u52a8\u91ca\u653e\u8fd9\u4e2a\u5168\u5c40\u9501\uff0c\u6574\u4e2a\u5e93\u56de\u5230\u53ef\u4ee5\u6b63\u5e38\u66f4\u65b0\u7684\u72b6\u6001\u3002\u800c\u5c06\u6574\u4e2a\u5e93\u8bbe\u7f6e\u4e3a readonly \u4e4b\u540e\uff0c\u5982\u679c\u5ba2\u6237\u7aef\u53d1\u751f\u5f02\u5e38\uff0c\u5219\u6570\u636e\u5e93\u5c31\u4f1a\u4e00\u76f4\u4fdd\u6301 readonly \u72b6\u6001\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u6574\u4e2a\u5e93\u957f\u65f6\u95f4\u5904\u4e8e\u4e0d\u53ef\u5199\u72b6\u6001\uff0c\u98ce\u9669\u8f83\u9ad8\u3002\\n\\n\u52a1\u7684\u66f4\u65b0\u4e0d\u53ea\u662f\u589e\u5220\u6539\u6570\u636e\uff08DML)\uff0c\u8fd8\u6709\u53ef\u80fd\u662f\u52a0\u5b57\u6bb5\u7b49\u4fee\u6539\u8868\u7ed3\u6784\u7684\u64cd\u4f5c\uff08DDL\uff09\u3002\u4e0d\u8bba\u662f\u54ea\u79cd\u65b9\u6cd5\uff0c\u4e00\u4e2a\u5e93\u88ab\u5168\u5c40\u9501\u4e0a\u4ee5\u540e\uff0c\u4f60\u8981\u5bf9\u91cc\u9762\u4efb\u4f55\u4e00\u4e2a\u8868\u505a\u52a0\u5b57\u6bb5\u64cd\u4f5c\uff0c\u90fd\u662f\u4f1a\u88ab\u9501\u4f4f\u7684\\n\\n\\n### \u8868\u7ea7\u9501\\n\\n\\n\u8868\u9501\u7684\u8bed\u6cd5\u662f lock tables \u2026 read/write\u3002\u4e0e FTWRL \u7c7b\u4f3c\uff0c\u53ef\u4ee5\u7528 unlock tables \u4e3b\u52a8\u91ca\u653e\u9501\uff0c\u4e5f\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u65ad\u5f00\u7684\u65f6\u5019\u81ea\u52a8\u91ca\u653e\u3002\u9700\u8981\u6ce8\u610f\uff0clock tables \u8bed\u6cd5\u9664\u4e86\u4f1a\u9650\u5236\u522b\u7684\u7ebf\u7a0b\u7684\u8bfb\u5199\u5916\uff0c\u4e5f\u9650\u5b9a\u4e86\u672c\u7ebf\u7a0b\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u5bf9\u8c61\\n\\n\u53e6\u4e00\u7c7b\u8868\u7ea7\u7684\u9501\u662f MDL\uff08metadata lock)\u3002MDL \u4e0d\u9700\u8981\u663e\u5f0f\u4f7f\u7528\uff0c\u5728\u8bbf\u95ee\u4e00\u4e2a\u8868\u7684\u65f6\u5019\u4f1a\u88ab\u81ea\u52a8\u52a0\u4e0a\u3002MDL \u7684\u4f5c\u7528\u662f\uff0c\u4fdd\u8bc1\u8bfb\u5199\u7684\u6b63\u786e\u6027\u3002\u4f60\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u4e00\u4e2a\u67e5\u8be2\u6b63\u5728\u904d\u5386\u4e00\u4e2a\u8868\u4e2d\u7684\u6570\u636e\uff0c\u800c\u6267\u884c\u671f\u95f4\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8fd9\u4e2a\u8868\u7ed3\u6784\u505a\u53d8\u66f4\uff0c\u5220\u4e86\u4e00\u5217\uff0c\u90a3\u4e48\u67e5\u8be2\u7ebf\u7a0b\u62ff\u5230\u7684\u7ed3\u679c\u8ddf\u8868\u7ed3\u6784\u5bf9\u4e0d\u4e0a\uff0c\u80af\u5b9a\u662f\u4e0d\u884c\u7684\u3002\\n\\n* \u8bfb\u9501\u4e4b\u95f4\u4e0d\u4e92\u65a5\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5bf9\u4e00\u5f20\u8868\u589e\u5220\u6539\u67e5\u3002\\n\\n* \u8bfb\u5199\u9501\u4e4b\u95f4\u3001\u5199\u9501\u4e4b\u95f4\u662f\u4e92\u65a5\u7684\uff0c\u7528\u6765\u4fdd\u8bc1\u53d8\u66f4\u8868\u7ed3\u6784\u64cd\u4f5c\u7684\u5b89\u5168\u6027\u3002\u56e0\u6b64\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u7ebf\u7a0b\u8981\u540c\u65f6\u7ed9\u4e00\u4e2a\u8868\u52a0\u5b57\u6bb5\uff0c\u5176\u4e2d\u4e00\u4e2a\u8981\u7b49\u53e6\u4e00\u4e2a\u6267\u884c\u5b8c\u624d\u80fd\u5f00\u59cb\u6267\u884c\u3002\\n\\n\\n## \u884c\u7ea7\u9501\\n\u5728 InnoDB \u4e8b\u52a1\u4e2d\uff0c\u884c\u9501\u662f\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u52a0\u4e0a\u7684\uff0c\u4f46\u5e76\u4e0d\u662f\u4e0d\u9700\u8981\u4e86\u5c31\u7acb\u523b\u91ca\u653e\uff0c\u800c\u662f\u8981\u7b49\u5230\u4e8b\u52a1\u7ed3\u675f\u65f6\u624d\u91ca\u653e\u3002\u8fd9\u4e2a\u5c31\u662f\u4e24\u9636\u6bb5\u9501\u534f\u8bae\\n\\n\\n### \u6b7b\u9501\u548c\u6b7b\u9501\u68c0\u6d4b\\n\\n\u4e8b\u52a1 A \u5728\u7b49\u5f85\u4e8b\u52a1 B \u91ca\u653e id=2 \u7684\u884c\u9501\uff0c\u800c\u4e8b\u52a1 B \u5728\u7b49\u5f85\u4e8b\u52a1 A \u91ca\u653e id=1 \u7684\u884c\u9501\u3002 \u4e8b\u52a1 A \u548c\u4e8b\u52a1 B \u5728\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u7684\u8d44\u6e90\u91ca\u653e\uff0c\u5c31\u662f\u8fdb\u5165\u4e86\u6b7b\u9501\u72b6\u6001\u3002\u5f53\u51fa\u73b0\u6b7b\u9501\u4ee5\u540e\uff0c\u6709\u4e24\u79cd\u7b56\u7565:\\n\\n1. \u4e00\u79cd\u7b56\u7565\u662f\uff0c\u76f4\u63a5\u8fdb\u5165\u7b49\u5f85\uff0c\u76f4\u5230\u8d85\u65f6\u3002\u8fd9\u4e2a\u8d85\u65f6\u65f6\u95f4\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570 innodb_lock_wait_timeout \u6765\u8bbe\u7f6e\\n2. \u53e6\u4e00\u79cd\u7b56\u7565\u662f\uff0c\u53d1\u8d77\u6b7b\u9501\u68c0\u6d4b\uff0c\u53d1\u73b0\u6b7b\u9501\u540e\uff0c\u4e3b\u52a8\u56de\u6eda\u6b7b\u9501\u94fe\u6761\u4e2d\u7684\u67d0\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8ba9\u5176\u4ed6\u4e8b\u52a1\u5f97\u4ee5\u7ee7\u7eed\u6267\u884c\u3002\u5c06\u53c2\u6570 innodb_deadlock_detect \u8bbe\u7f6e\u4e3a on\uff0c\u8868\u793a\u5f00\u542f\u8fd9\u4e2a\u903b\u8f91\\n   \u5728 InnoDB \u4e2d\uff0cinnodb_lock_wait_timeout \u7684\u9ed8\u8ba4\u503c\u662f 50s\uff0c\u610f\u5473\u7740\u5982\u679c\u91c7\u7528\u7b2c\u4e00\u4e2a\u7b56\u7565\uff0c\u5f53\u51fa\u73b0\u6b7b\u9501\u4ee5\u540e\uff0c\u7b2c\u4e00\u4e2a\u88ab\u9501\u4f4f\u7684\u7ebf\u7a0b\u8981\u8fc7 50s \u624d\u4f1a\u8d85\u65f6\u9000\u51fa\uff0c\u7136\u540e\u5176\u4ed6\u7ebf\u7a0b\u624d\u6709\u53ef\u80fd\u7ee7\u7eed\u6267\u884c\u3002\u5bf9\u4e8e\u5728\u7ebf\u670d\u52a1\u6765\u8bf4\uff0c\u8fd9\u4e2a\u7b49\u5f85\u65f6\u95f4\u5f80\u5f80\u662f\u65e0\u6cd5\u63a5\u53d7\u7684\u3002\\n\\n\u6211\u4eec\u53c8\u4e0d\u53ef\u80fd\u76f4\u63a5\u628a\u8fd9\u4e2a\u65f6\u95f4\u8bbe\u7f6e\u6210\u4e00\u4e2a\u5f88\u5c0f\u7684\u503c\uff0c\u6bd4\u5982 1s\u3002\u8fd9\u6837\u5f53\u51fa\u73b0\u6b7b\u9501\u7684\u65f6\u5019\uff0c\u786e\u5b9e\u5f88\u5feb\u5c31\u53ef\u4ee5\u89e3\u5f00\uff0c\u4f46\u5982\u679c\u4e0d\u662f\u6b7b\u9501\uff0c\u800c\u662f\u7b80\u5355\u7684\u9501\u7b49\u5f85\u5462\uff1f\u6240\u4ee5\uff0c\u8d85\u65f6\u65f6\u95f4\u8bbe\u7f6e\u592a\u77ed\u7684\u8bdd\uff0c\u4f1a\u51fa\u73b0\u5f88\u591a\u8bef\u4f24\\n\\n\\n\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u8fd8\u662f\u8981\u91c7\u7528\u7b2c\u4e8c\u79cd\u7b56\u7565\uff0c\u5373\uff1a\u4e3b\u52a8\u6b7b\u9501\u68c0\u6d4b\uff0c\u800c\u4e14 innodb_deadlock_detect \u7684\u9ed8\u8ba4\u503c\u672c\u8eab\u5c31\u662f on\u3002\u4e3b\u52a8\u6b7b\u9501\u68c0\u6d4b\u5728\u53d1\u751f\u6b7b\u9501\u7684\u65f6\u5019\uff0c\u662f\u80fd\u591f\u5feb\u901f\u53d1\u73b0\u5e76\u8fdb\u884c\u5904\u7406\u7684\uff0c\u4f46\u662f\u5b83\u4e5f\u662f\u6709\u989d\u5916\u8d1f\u62c5\u7684\\n\\n\\n### \u201c\u5feb\u7167\u201d\u5728 MVCC \u91cc\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff1f\\n\\n\\n\u5728\u53ef\u91cd\u590d\u8bfb\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1\u5728\u542f\u52a8\u7684\u65f6\u5019\u5c31\u201c\u62cd\u4e86\u4e2a\u5feb\u7167\u201d\u3002\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5feb\u7167\u662f\u57fa\u4e8e\u6574\u5e93\u7684\u3002\\n\\n\\n\u8fd9\u65f6\uff0c\u4f60\u4f1a\u8bf4\u8fd9\u770b\u4e0a\u53bb\u4e0d\u592a\u73b0\u5b9e\u554a\u3002\u5982\u679c\u4e00\u4e2a\u5e93\u6709 100G\uff0c\u90a3\u4e48\u6211\u542f\u52a8\u4e00\u4e2a\u4e8b\u52a1\uff0cMySQL \u5c31\u8981\u62f7\u8d1d 100G \u7684\u6570\u636e\u51fa\u6765\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5f97\u591a\u6162\u554a\u3002\u53ef\u662f\uff0c\u6211\u5e73\u65f6\u7684\u4e8b\u52a1\u6267\u884c\u8d77\u6765\u5f88\u5feb\u554a\u3002\\n\\n\\n\\n## \u666e\u901a\u7d22\u5f15\u548c\u552f\u4e00\u7d22\u5f15\\n\\n### \u67e5\u8be2\u8fc7\u7a0b\\n\\n### \u66f4\u65b0\u8fc7\u7a0b\\n\\n\\n### change buffer \u7684\u4f7f\u7528\u573a\\n\\n\\n### \u7d22\u5f15\u9009\u62e9\u548c\u5b9e\u8df5\\n\\n\\n**change buffer \u548c redo log**\\n\\nredo log \u4e3b\u8981\u8282\u7701\u7684\u662f\u968f\u673a\u5199\u78c1\u76d8\u7684 IO \u6d88\u8017\uff08\u8f6c\u6210\u987a\u5e8f\u5199\uff09\uff0c\u800c change buffer \u4e3b\u8981\u8282\u7701\u7684\u5219\u662f\u968f\u673a\u8bfb\u78c1\u76d8\u7684 IO \u6d88\u8017\u3002"},{"id":"/2023/09/05/ppt","metadata":{"permalink":"/blog/2023/09/05/ppt","source":"@site/blog/2023/09/05/ppt.md","title":"\u5982\u4f55\u505a\u597d\u4e00\u4efd\u5c5e\u4e8e\u81ea\u5df1\u7684ppt","description":"\u5982\u4f55\u5b66\u4e60iOS\u5f00\u53d1","date":"2023-09-05T00:00:00.000Z","formattedDate":"2023\u5e749\u67085\u65e5","tags":[{"label":"iOS","permalink":"/blog/tags/i-os"}],"readingTime":0.56,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u505a\u597d\u4e00\u4efd\u5c5e\u4e8e\u81ea\u5df1\u7684ppt","tags":["iOS"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5b66\u4e60iOS\u5f00\u53d1","image":"https://source.unsplash.com/random?people&36"},"unlisted":false,"prevItem":{"title":"MySQL\u5b66\u4e60","permalink":"/blog/2023/09/05/mysql"},"nextItem":{"title":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","permalink":"/blog/2023/09/05/struct"}},"content":"\x3c!-- truncate --\x3e\\n## \u57fa\u672c\u6280\u5de7\\n\\n1. shift (\u89c4\u5219\u952e) \u70b9\u51fb\u62d6\u653e \u56fe\u7247\u70b9\u51fb\u6309 \u9650\u5236\u6c34\u5e73\u5782\u76f4\u53cd\u5411\\n2. ctrl  (ctrl shift \u6c34\u5e73\u590d\u5236\u79fb\u52a8) (ctrl shift \u6309\u7167\u4e2d\u5fc3\u7f29\u653e)\\n3. ctrl + G  \u7ec4\u5408\u529f\u80fd (ctrl + shift + G \u89e3\u9664\u7ec4\u5408)\\n4. ctrl + Y \u91cd\u590d\u4e0a\u4e00\u6b65\u64cd\u4f5c\\n5. ctrl + Z \u64a4\u9500\u64cd\u4f5c\\n6. \u683c\u5f0f\u9009\u9879 (\u7a97\u53e3) `\u56fe\u5c42`\\n7. \u5f62\u72b6\u5e03\u5c14\u8ba1\u7b97 (\u5f62\u72b6\u683c\u5f0f)\\n8. \u56fe\u7247\u683c\u5f0f(\u5bf9\u9f50)"},{"id":"/2023/09/05/struct","metadata":{"permalink":"/blog/2023/09/05/struct","source":"@site/blog/2023/09/05/struct.md","title":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","description":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","date":"2023-09-05T00:00:00.000Z","formattedDate":"2023\u5e749\u67085\u65e5","tags":[{"label":"\u57fa\u7840","permalink":"/blog/tags/\u57fa\u7840"}],"readingTime":5.62,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","tags":["\u57fa\u7840"],"authors":"ahKevinXy","description":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","image":"https://source.unsplash.com/random?people&36"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u505a\u597d\u4e00\u4efd\u5c5e\u4e8e\u81ea\u5df1\u7684ppt","permalink":"/blog/2023/09/05/ppt"},"nextItem":{"title":"\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1","permalink":"/blog/2023/09/03/distributed"}},"content":"\u4e00\u4e2a\u597d\u7684\u67b6\u6784\u5fc5\u987b\u6ee1\u8db3\u4e24\u65b9\u9762\u6311\u6218\uff1a\u4e1a\u52a1\u590d\u6742\u6027\u548c\u6280\u672f\u590d\u6742\u6027\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n1. \u4e1a\u52a1\u67b6\u6784\\n2. \u5e94\u7528\u67b6\u6784\\n3. \u6280\u672f\u67b6\u6784\\n\\n\\n\\n\u4e1a\u52a1\u67b6\u6784\u5c31\u662f\u8bb2\u6e05\u695a\u6838\u5fc3\u4e1a\u52a1\u7684\u5904\u7406\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u5404\u4e2a\u4e1a\u52a1\u6a21\u5757\u7684\u76f8\u4e92\u5173\u7cfb\uff0c\u5b83\u4ece\u6982\u5ff5\u5c42\u9762\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u7cfb\u7edf\u9762\u4e34\u54ea\u4e9b\u95ee\u9898\u4ee5\u53ca\u5982\u4f55\u5904\u7406\uff1b\u800c\u5e94\u7528\u67b6\u6784\u5c31\u662f\u8bb2\u6e05\u695a\u7cfb\u7edf\u5185\u90e8\u662f\u600e\u4e48\u7ec4\u7ec7\u7684\uff0c\u6709\u54ea\u4e9b\u5e94\u7528\uff0c\u76f8\u4e92\u95f4\u662f\u600e\u4e48\u8c03\u7528\u7684\uff0c\u5b83\u4ece\u903b\u8f91\u5c42\u9762\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u7cfb\u7edf\u5185\u90e8\u662f\u5982\u4f55\u5206\u5de5\u4e0e\u534f\u4f5c\u7684\u3002\\n\\n\u6280\u672f\u67b6\u6784\u5c31\u662f\u8bb2\u6e05\u695a\u7cfb\u7edf\u7531\u54ea\u4e9b\u786c\u4ef6\u3001\u64cd\u4f5c\u7cfb\u7edf\u548c\u4e2d\u95f4\u4ef6\u7ec4\u6210\uff0c\u5b83\u4eec\u662f\u5982\u4f55\u548c\u6211\u4eec\u5f00\u53d1\u7684\u5e94\u7528\u4e00\u8d77\u914d\u5408\uff0c\u5e94\u5bf9\u5404\u79cd\u5f02\u5e38\u60c5\u51b5\uff0c\u4fdd\u6301\u7cfb\u7edf\u7684\u7a33\u5b9a\u53ef\u7528\u3002\u6240\u4ee5\uff0c\u6280\u672f\u67b6\u6784\u4ece\u7269\u7406\u5c42\u9762\u5e2e\u52a9\u6211\u4eec\u7406\u89e3\u7cfb\u7edf\u662f\u5982\u4f55\u6784\u9020\u7684\uff0c\u4ee5\u53ca\u5982\u4f55\u89e3\u51b3\u7a33\u5b9a\u6027\u7684\u95ee\u9898\u3002\\n\\n\\n## \u4ec0\u4e48\u662f\u67b6\u6784\u5e08\\n\\n1. \u6c9f\u901a\u5bb6\u91cc\\n2. \u62bd\u8c61\u601d\u7ef4\\n3. \u591a\u9886\u57df\u77e5\u8bc6\\n4. \u6280\u672f\u524d\u6cbf\u6027\\n5. \u5e73\u8861\u53d6\u820d\\n\\n\\n`\u4ea7\u54c1\u7ecf\u7406\u7684\u804c\u8d23`\u5c31\u662f\uff1a\u544a\u8bc9\u7528\u6237\uff0c\u7cfb\u7edf\u957f\u4ec0\u4e48\u6837\u5b50\uff1b\u544a\u8bc9\u5f00\u53d1\uff0c\u4ed6\u8981\u5b9e\u73b0\u4ec0\u4e48\u529f\u80fd\u3002\\n\\n\\n`\u4e1a\u52a1\u67b6\u6784\u5e08\u7684\u804c\u8d23` \\n\\n\\n\u67b6\u6784\u7684\u76ee\u6807\\n1. \u4e1a\u52a1\u7684\u53ef\u6269\u5c55\u6027\\n2. \u4e1a\u52a1\u7684\u53ef\u590d\u7528\u6027\\n\\n\\n\\n## \u5982\u4f55\u5b9e\u73b0\u4e1a\u52a1\u7684\u53ef\u6269\u5c55\u6027\\n\\n\\n**\u7cfb\u7edf\u7684\u6784\u6210:** \u6a21\u5757 + \u5173\u7cfb\\n\\n* \u6a21\u5757\\n\\n\u4ece\u4e1a\u52a1\u7684\u89d2\u5ea6\u770b\uff0c\u6bcf\u4e2a\u6a21\u5757\u90fd\u4ee3\u8868\u4e86\u67d0\u4e2a\u4e1a\u52a1\u6982\u5ff5\uff0c\u6216\u8005\u8bf4\u4e1a\u52a1\u9886\u57df\\n\\n\u6a21\u5757\u5185\u90e8\u7531\u6570\u636e\u548c\u4e1a\u52a1\u903b\u8f91\u7ec4\u6210\uff0c\u5176\u4e2d\u6570\u636e\u662f\u6838\u5fc3\uff0c\u4e1a\u52a1\u903b\u8f91\u56f4\u7ed5\u7740\u6570\u636e\uff0c\u5bf9\u6570\u636e\u505a\u8fdb\u4e00\u6b65\u52a0\u5de5\uff0c\u65b9\u4fbf\u5916\u90e8\u4f7f\u7528\u3002\\n\\n* \u4f9d\u8d56\u5173\u7cfb\\n\u4f9d\u8d56\u5173\u7cfb\u5b9e\u8d28\u4e0a\u4f53\u73b0\u7684\u662f\u6a21\u5757\u7684\u7ec4\u7ec7\u7ed3\u6784\u3002\\n\\n* MVC \u67b6\u6784\\n  - \u8868\u793a\u5c42 \u5bf9\u5e94\u7684\u524d\u7aef\u6a21\u5757\\n  - \u5e94\u7528\u5c42 \u5bf9\u5e94\u548c\u524d\u7aef\u8868\u793a\u5c42\u76f4\u63a5\u5173\u8054\u7684\u670d\u52a1\u7aef\\n  - \u805a\u5408\u670d\u52a1\u5c42\\n  - \u57fa\u7840\u670d\u52a1\u5c42\\n\\n\\n## \u67b6\u6784\u7684\u8f6c\u53d8\\n\\n1.  \u5355\u4f53\u67b6\u6784\\n2. \u5206\u5e03\u5f0f\u67b6\u6784\\n3. SOA\u67b6\u6784 \u9762\u5411\u670d\u52a1\u7684\u67b6\u6784\\n4. \u5fae\u670d\u52a1\u67b6\u6784\\n\\n\\n## \u7cfb\u7edf\u6545\u969c\\n1. \u8d44\u6e90\u4e0d\u53ef\u4ee5\\n2. \u8d44\u6e90\u4e0d\u8db3\\n3. \u8282\u70b9\u529f\u80fd\u5f02\u5e38\\n\\n\\n## \u5982\u4f55\u907f\u514d\u6545\u969c\\n\\n1. \u5197\u4f59\u65e0\u5355\u70b9\\n2. \u6c34\u5e73\u6269\u5c55\\n3. \u67d4\u6027\u4e8b\u52a1\\n4. \u7cfb\u7edf\u53ef\u964d\u7ea7\u6027 (\u9650\u6d41,\u964d\u7ea7,\u7194\u65ad,\u529f\u80fd\u7981\u7528)\\n5. \u7cfb\u7edf\u53ef\u76d1\u63a7\\n\\n## \u65e5\u6d3b\u767e\u4e07\u7cfb\u7edf\u5982\u4f55\u67b6\u6784\u8bbe\u8ba1\\n\\n### \u524d\u7aef\u6539\u9020\\n\\n*  web \u7aefcdn\u4f18\u5316\\n* nginx \u8d1f\u8f7d\u5747\u8861\\n* \u901a\u4fe1\u7ebf\u8def\u5907\u4efd (\u524d\u7f6e\u4ee3\u7406\u673a) \\n\\n###  \u5e94\u7528\u548c\u670d\u52a1\u7684\u6c34\u5e73\u6269\u5c55\\n* \u8ba2\u5355\u6c34\u5e73\u5206\u5e93\\n* \u5f02\u6b65\u5316\u5904\u7406\\n* \u4e3b\u52a8\u901a\u77e5 \u907f\u514d\u8f6e\u8be2\\n* \u7f13\u5b58\u7684\u4f7f\u7528\\n* \u4e00\u4f53\u5316\u76d1\u63a7\\n\\n## \u5982\u4f55\u505a\u597d\u7cfb\u7edf\u76d1\u63a7\\n\\n* `\u7528\u6237\u4f53\u9a8c` \u6307\u7684\u662f\u4ece\u524d\u7aef\u7528\u6237\u7684\u8bbf\u95ee\u901f\u5ea6\u51fa\u53d1\uff0c\u6765\u76d1\u6d4b\u7cfb\u7edf\u7684\u53ef\u7528\u6027\uff0c\u5305\u62ec\u9875\u9762\u80fd\u5426\u6253\u5f00\u3001\u5173\u952e\u63a5\u53e3\u7684\u54cd\u5e94\u65f6\u95f4\u7b49\u7b49\uff0c\u7528\u6237\u4f53\u9a8c\u76d1\u63a7\u4e00\u822c\u7ed3\u5408\u524d\u7aef\u7684\u57cb\u70b9\u6765\u5b9e\u73b0\u3002\\n* `\u4e1a\u52a1\u76d1\u63a7` \u4ece\u4e1a\u52a1\u7ed3\u679c\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6bd4\u5982\u8bf4\u8ba2\u5355\u6570\u3001\u4ea4\u6613\u91d1\u989d\u7b49\u7b49\uff0c\u4e1a\u52a1\u76d1\u63a7\u4e5f\u662f\u6700\u76f4\u89c2\u7684\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u4e1a\u52a1\u6570\u636e\u6ca1\u95ee\u9898\uff0c\u7cfb\u7edf\u6574\u4f53\u4e5f\u5c31\u6ca1\u6709\u95ee\u9898\\n* `\u5e94\u7528\u76d1\u63a7` \u6307\u7684\u662f\u5bf9\u81ea\u5df1\u5f00\u53d1\u7684\u4ee3\u7801\u8fdb\u884c\u76d1\u63a7\uff0c\u6bd4\u5982\u63a5\u53e3\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u7684\u8c03\u7528\u6b21\u6570\u3001\u54cd\u5e94\u65f6\u95f4\u3001\u51fa\u9519\u6b21\u6570\u7b49\u7b49\\n* `\u4e2d\u95f4\u4ef6\u76d1\u63a7` \u7684\u662f\u5bf9\u6807\u51c6\u4e2d\u95f4\u4ef6\u8fdb\u884c\u76d1\u63a7\uff0c\u5b83\u662f\u7b2c\u4e09\u65b9\u5f00\u53d1\u7684\u4ee3\u7801\uff0c\u6bd4\u5982\u6570\u636e\u5e93\u3001\u7f13\u5b58\u3001Tomcat \u7b49\u7b49\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u5bf9\u5e94\u7684\u662f\u7cfb\u7edf\u7684 PaaS \u5c42\\n* `\u57fa\u7840\u5e73\u53f0\u76d1\u63a7` (\u64cd\u4f5c\u7cfb\u7edf/\u670d\u52a1\u5668/\u7f51\u7edc) \u7684\u662f\u5bf9\u7cfb\u7edf\u5e95\u5c42\u8d44\u6e90\u8fdb\u884c\u76d1\u63a7\uff0c\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u8bbe\u5907\u7b49\u7b49\uff0c\u8fd9\u4e2a\u5c42\u6b21\u7684\u76d1\u63a7\u5bf9\u5e94\u7684\u662f\u7cfb\u7edf\u7684 IaaS \u5c42\\n\\n\\n\\n## \u5982\u4f55\u6253\u9020\u4e00\u4f53\u5316\u7684\u76d1\u63a7\u7cfb\u7edf\\n\\n* \u8282\u70b9\u4fe1\u606f\u91c7\u96c6\\n* \u63a5\u5165\u76d1\u63a7\u7cfb\u7edf\\n\\n\\n## \u5e38\u7528\u7cfb\u7edf\u53c2\u6570\\n\\n![pt](./\u57fa\u7840\u6570\u636e.png)\\n\\n\\n## \u5982\u4f55\u5206\u5e93\u5206\u8868\\n\\n\\n* `\u5782\u76f4\u5206\u5e93` \u5782\u76f4\u5206\u5e93\u5c31\u662f\u6570\u636e\u5e93\u91cc\u7684\u8868\u592a\u591a\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u5206\u6563\u5230\u591a\u4e2a\u6570\u636e\u5e93\\n* `\u6c34\u5e73\u5206\u5e93` \u5355\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u4e0d\u4e0b\uff0c\u6216\u8005\u6570\u636e\u5e93\u7684\u8bfb\u5199\u6027\u80fd\u6709\u538b\u529b\u3002\u901a\u8fc7\u6c34\u5e73\u5206\u5e93\uff0c\u6211\u4eec\u628a\u4e00\u5f20\u8868\u62c6\u6210\u591a\u5f20\u8868\uff0c\u6bcf\u5f20\u8868\u5b58\u653e\u90e8\u5206\u8bb0\u5f55\uff0c\u5206\u522b\u4fdd\u5b58\u5728\u4e0d\u540c\u7684\u6570\u636e\u5e93\u91cc\uff0c\u6c34\u5e73\u5206\u5e93\u9700\u8981\u5bf9\u5e94\u7528\u505a\u6bd4\u8f83\u5927\u7684\u6539\u9020\u3002\\n\\n### \u5206\u5e93\u7b56\u7565"},{"id":"/2023/09/03/distributed","metadata":{"permalink":"/blog/2023/09/03/distributed","source":"@site/blog/2023/09/03/distributed.md","title":"\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1","description":"\u5982\u4f55\u642d\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf","date":"2023-09-03T00:00:00.000Z","formattedDate":"2023\u5e749\u67083\u65e5","tags":[{"label":"\u6781\u5ba2\u65f6\u95f4","permalink":"/blog/tags/\u6781\u5ba2\u65f6\u95f4"}],"readingTime":0.035,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1","tags":["\u6781\u5ba2\u65f6\u95f4"],"authors":"ahKevinXy","description":"\u5982\u4f55\u642d\u5efa\u5206\u5e03\u5f0f\u7cfb\u7edf","image":"https://source.unsplash.com/random?people&34"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u6210\u4e3a\u4e00\u540d\u67b6\u6784\u5e08","permalink":"/blog/2023/09/05/struct"},"nextItem":{"title":"ios","permalink":"/blog/2023/09/03/ios"}},"content":"## shardingSphere\\n1. `Cassandra`\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2023/09/03/ios","metadata":{"permalink":"/blog/2023/09/03/ios","source":"@site/blog/2023/09/03/ios.md","title":"ios","description":"---","date":"2023-09-03T00:00:00.000Z","formattedDate":"2023\u5e749\u67083\u65e5","tags":[],"readingTime":2.64,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"\u5206\u5e03\u5f0f\u7cfb\u7edf\u8bbe\u8ba1","permalink":"/blog/2023/09/03/distributed"},"nextItem":{"title":"\u516b\u5c0f\u65f6Golang\u5b66\u4e60\u7b14\u8bb0\ud83d\udcd2","permalink":"/blog/2023/09/02/learn-go"}},"content":"---\\ntitle:  iOS \u5f00\u53d1\\n\\ntags: [iOS]\\nauthors: ahKevinXy\\ndescription: \u5982\u4f55\u5b66\u4e60iOS\u5f00\u53d1\\nimage: https://source.unsplash.com/random?people&35\\n\\n---\\n\\n# ios \u5f00\u53d1\u5165\u95e8\u5b66\u4e60 \\n\\n\x3c!-- truncate --\x3e\\n## \u8d44\u6e90  [AweSome](https://github.com/vsouza/awesome-ios)\\n\\n1. [\u6234\u94ed](https://ming1016.github.io/)\\n```text\\n//\u5d4c\u5957\u89c6\u56fe\u901a\u8fc7\u7b80\u5355\u7684 DSL \u4e5f\u80fd\u5f88\u597d\u5730\u8868\u73b0\u51fa\u6765\u3002\u8be6\u7ec6\u7684\u4f7f\u7528\u8bf4\u660e\u548c\u4ee3\u7801\u5b9e\u73b0\uff0c\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u67e5\u770b\\nhttps://github.com/ming1016/STMAssembleView\\n\\n```\\n\\n## \u67b6\u6784\u8bbe\u8ba1\u89c4\u8303\\n1. \u5355\u4e00\u529f\u80fd\u539f\u5219\uff1a\u5bf9\u8c61\u529f\u80fd\u8981\u5355\u4e00\uff0c\u4e0d\u8981\u5728\u4e00\u4e2a\u5bf9\u8c61\u91cc\u6dfb\u52a0\u5f88\u591a\u529f\u80fd\u3002\\n2. \u5f00\u95ed\u539f\u5219\uff1a\u6269\u5c55\u662f\u5f00\u653e\u7684\uff0c\u4fee\u6539\u662f\u5c01\u95ed\u7684\u3002\\n3. \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff1a\u5b50\u7c7b\u5bf9\u8c61\u662f\u53ef\u4ee5\u66ff\u4ee3\u57fa\u7c7b\u5bf9\u8c61\u7684\u3002\\n4. \u63a5\u53e3\u9694\u79bb\u539f\u5219\uff1a\u63a5\u53e3\u7684\u7528\u9014\u8981\u5355\u4e00\uff0c\u4e0d\u8981\u5728\u4e00\u4e2a\u63a5\u53e3\u4e0a\u6839\u636e\u4e0d\u540c\u5165\u53c2\u5b9e\u73b0\u591a\u4e2a\u529f\u80fd\u3002\\n5. \u4f9d\u8d56\u53cd\u8f6c\u539f\u5219\uff1a\u65b9\u6cd5\u5e94\u8be5\u4f9d\u8d56\u62bd\u8c61\uff0c\u4e0d\u8981\u4f9d\u8d56\u5b9e\u4f8b\u3002iOS \u5f00\u53d1\u5c31\u662f\u9ad8\u5c42\u4e1a\u52a1\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u534f\u8bae\u3002\\n\\n## LLVM\\nLLVM\u7684\u7f16\u8bd1\u8fc7\u7a0b\u975e\u5e38\u590d\u6742\u3002\u5982\u679c\u4f60\u6709\u5174\u8da3\u7684\u8bdd\uff0c\u53ef\u4ee5\u901a\u8fc7[\u5b98\u65b9\u624b\u518c](https://llvm.org/docs/)\u67e5\u770b\u5b8c\u6574\u7684\u7f16\u8bd1\u8fc7\u7a0b\u3002\\n\\n\\n## iOS\u5f00\u53d1\u5b66\u4e60\u8d44\u6599\u548c\u4e66\u5355\u63a8\u8350\\n\\niOS \u5f00\u53d1\u5f80\u5f80\u4f1a\u6d89\u53ca\u754c\u9762\u4ea4\u4e92\uff0c`iOS Examples`\u548c`Cocoa Controls`\u8fd9\u4e24\u4e2a\u7f51\u7ad9\u6536\u96c6\u4e86\u5927\u91cf\u7684\u5f00\u6e90\u7ec4\u4ef6\u548c\u5e93\uff0c\u5e76\u4e14\u8fdb\u884c\u4e86\u975e\u5e38\u7ec6\u81f4\u7684\u5206\u7c7b\uff0c\u4f60\u80fd\u591f\u975e\u5e38\u65b9\u4fbf\u5730\u627e\u5230\u9002\u5408\u81ea\u5df1\u7684\u201c\u8f6e\u5b50\u201d\u3002\\n\\n\\n\u4e0a\u7684`Open-Source iOS Apps`[\u9879\u76ee](https://github.com/dkhamsing/open-source-ios-apps)\u3002\u4f5c\u8005\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u6536\u5f55\u4e86\u5f88\u591a\u4f18\u79c0\u7684\u3001\u5b8c\u6574\u7684\u5f00\u6e90 iOS App\uff0c\u5e76\u505a\u4e86\u8be6\u7ec6\u5206\u7c7b\uff0c\u8fd8\u4e13\u95e8\u6807\u51fa\u4e86\u4e0a\u67b6\u4e86 App Store \u7684\u5f00\u6e90 iOS App\u3002\\n\\n`AFNetworking` \u548c `Alamofire` \u7684\u4f5c\u8005 Mattt \u7ef4\u62a4\u7740\u4e00\u4e2a NSHipster\u7684\u7f51\u7ad9\uff0c\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u4e00\u4e9b\u4e0d\u5e38\u7528\u7684 iOS \u77e5\u8bc6\u70b9\\n\\n`Raywenderlich`\u51fa\u7248\u7684\u56fe\u4e66\u8d28\u91cf\u90fd\u975e\u5e38\u4e0d\u9519\uff0c\u53ef\u4ee5\u4e00\u6b65\u4e00\u6b65\u6559\u4f60\u638c\u63e1\u4e00\u4e9b\u5f00\u53d1\u77e5\u8bc6\uff0c\u5185\u5bb9\u975e\u5e38\u5b9e\u7528\uff0c\u800c\u4e14\u8fd9\u4e9b\u56fe\u4e66\u7684\u6d89\u53ca\u9762\u5e7f\u3002\u6bd4\u5982\uff0c\u8fd9\u4e9b\u56fe\u4e66\u5305\u62ec\u6709 ARKit\u3001Swift \u670d\u52a1\u7aef\u7684 `Vapor` \u548c `Kitura`\u3001`Metal`\u3001\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684 Swift \u7248\u3001\u8bbe\u8ba1\u6a21\u5f0f\u3001Core Data\u3001iOS \u52a8\u753b\u3001Apple \u8c03\u8bd5\u548c\u9006\u5411\u5de5\u7a0b\u3001`RxSwift`\u3001`Realm`\u30012D \u548c 3D \u6e38\u620f\u5f00\u53d1\u7b49\u5404\u4e2a\u65b9\u9762\u3002"},{"id":"/2023/09/02/learn-go","metadata":{"permalink":"/blog/2023/09/02/learn-go","source":"@site/blog/2023/09/02/learn-go.md","title":"\u516b\u5c0f\u65f6Golang\u5b66\u4e60\u7b14\u8bb0\ud83d\udcd2","description":"go \u8bed\u8a00\u57fa\u7840  go\u8bed\u8a00\u664b\u7ea7 \u5982\u4f55\u5feb\u901f\u5165\u95e8 go \u8bed\u8a00","date":"2023-09-02T00:00:00.000Z","formattedDate":"2023\u5e749\u67082\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"}],"readingTime":3.075,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u516b\u5c0f\u65f6Golang\u5b66\u4e60\u7b14\u8bb0\ud83d\udcd2","tags":["go"],"authors":"ahKevinXy","description":"go \u8bed\u8a00\u57fa\u7840  go\u8bed\u8a00\u664b\u7ea7 \u5982\u4f55\u5feb\u901f\u5165\u95e8 go \u8bed\u8a00","image":"https://source.unsplash.com/random?people&33"},"unlisted":false,"prevItem":{"title":"ios","permalink":"/blog/2023/09/03/ios"},"nextItem":{"title":"jetbrains \u597d\u7528\u7684\u63d2\u4ef6","permalink":"/blog/2023/09/01/jetbrains"}},"content":"from [\u30108\u5c0f\u65f6\u8f6c\u804cGolang\u5de5\u7a0b\u5e08(\u5982\u679c\u4f60\u60f3\u4f4e\u6210\u672c\u5b66\u4e60Go\u8bed\u8a00)\u3011](https://www.bilibili.com/video/BV1gf4y1r79E?p=10&vd_source=a86822017d9569c1898827cc698926aa)\\n\\n## \u53d8\u91cf\u7684\u58f0\u660e\\n\x3c!-- truncate --\x3e\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\t// 1. \u4f7f\u7528 var \u58f0\u660e\\n\\tvar a int\\n\\tfmt.Println(a)\\n\\t// \u4f7f\u7528 b := \u6a21\u5f0f (\u53ea\u80fd\u5728\u51fd\u6570\u4f53\u5185\u4f7f\u7528)\\n\\tb :=1\\n\\tfmt.Println(b)\\n\\t\\n\\t// 3.\u6307\u5b9a\u9ed8\u8ba4\u503c\\n\\tvar c int = 10\\n\\tfmt.Println(c)\\n\\t\\n\\t// 4. var \u63a8\u65ad\u6a21\u5f0f (\u5168\u5c40\u53d8\u91cf\u901a\u5e38)\\n\\t\\n\\tvar d =4\\n\\tfmt.Println(d)\\n\\t\\n\\t// 5. \u591a\u4e2a\u53d8\u91cf\u58f0\u660e\\n\\tvar aa ,bb,cc int \\n\\t\\n\\tfmt.Println(aa,bb,cc)\\n\\tvar (\\n\\t\\t\\n    )\\n}\\n```\\n\\n## const \u4e0e iota\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\nconst (\\n\\tBj= 0\\n\\tSh=1\\n)\\nconst (\\n\\tCity = iota // iota \u9ed8\u8ba4\u4e3a\u96f6\\n\\tAh\\n\\tJs\\n\\tSz\\n)\\n\\nconst (\\n\\tB = 1 << (10*iota)\\n\\tKB\\n\\tMB\\n\\tGB\\n)\\n// error code \u9519\u8bef\u7801\u5e94\u7528\\nconst (\\n\\tUserAuthErrorCode = 20000+iota \\n\\tUserPasswordErrorCode \\n)\\nfunc main() {\\n\\tconst length = 1\\n\\tfmt.Println(length)\\n}\\n```\\n\\n## Golang \u4e2d\u51fd\u6570\u591a\u8fd4\u56de\u503c\u7684\u4e09\u79cd\u6a21\u5f0f\\n\\n```go\\npackage main\\n\\nfunc main() {\\n\\n}\\n\\nfunc HideName() (int, int) {\\n\\treturn 1, 2\\n}\\n\\n// HaveName \u4f1a\u521d\u59cb\u5316\u9ed8\u8ba4\u503c\\nfunc HaveName() (a int, b int) {\\n\\ta = 1\\n\\tb = 2\\n\\n\\treturn\\n}\\n```\\n\\n## defer \u8bed\u53e5\u8c03\u7528\u987a\u5e8f\\n\\n\u51fd\u6570\u7ed3\u675f\u524d\u7684\u6267\u884c\u7684\u7a0b\u5e8f\\n\\n\u6808\u6a21\u5f0f  `\u5148\u8fdb\u5148\u51fa`\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc a() {\\n\\tfmt.Println(a)\\n}\\nfunc b()  {\\n    fmt.Println(b)\\n}\\nfunc c()  {\\n    fmt.Println(c)\\n}\\nfunc main() {\\n\\n\\tdefer a()\\n\\tdefer b()\\n\\tdefer c()\\n}\\n\\n// c , b, a \\n```\\n\\n## \u6570\u7ec4\u4e0e\u52a8\u6001\u6570\u7ec4\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\tvar myArray1 [10]int\\n\\tmyArray2 := [10]int{1, 2, 3, 4}\\n\\tfmt.Println(myArray1)\\n\\tfmt.Println(myArray2)\\n}\\n```\\n\\n##  slice  \\n\\n1. cap \u5bb9\u91cf(\u81ea\u52a8\u6269\u5bb9)\\n2. len \u957f\u5ea6\\n3. copy \u590d\u5236\\n\\n\\n## map \u7684\u4e09\u79cd\u58f0\u660e\u5b9a\u4e49\u65b9\u5f0f\\n\\n> map \u662f\u5e76\u53d1\u4e0d\u5b89\u5168\u6a21\u5f0f\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\t//  \u58f0\u660e\u662f\u521d\u59cb\u5316 \u5fc5\u987b\u5f00\u8f9f\u7a7a\u95f4 \u4e0d\u7136\u7a7a\u6307\u9488\\n\\tvar mp1 map[string]string\\n\\n\\tfmt.Println(mp1) // nil\\n\\t\\n\\t// \u5f00\u8f9f\u7a7a\u95f4\\n\\tmp1 = make(map[string]string,10) //\u5f00\u8f9f\u521d\u59cb 10\u4e2a\u5bb9\u91cf\\n\\t\\n\\t// make \u76f4\u63a5\u751f\u6210\\n\\tmp2 := make(map[string]string)\\n\\tmp2[\\"1\\"]=\\"1\\"\\n\\tfmt.Println(mp2)\\n\\t\\n\\t// \u521d\u59cb\u8d4b\u503c\\n\\tmp3 := map[string]string{\\n\\t\\t\\"a\\":\\"1\\",\\n    }\\n\\tfmt.Println(mp3)\\n}\\n```\\n\\n##  \u653e\u5c04\u89e3\u6790\u7ed3\u6784\u4f53\u6807\u7b7e\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"reflect\\"\\n)\\n\\ntype Resume struct {\\n\\tName string `info:\\"name\\"`\\n\\tSex  string `info:\\"sex\\"`\\n}\\n\\nfunc findTag(str interface{}) {\\n\\tt := reflect.TypeOf(str).Elem()\\n\\tfor i := 0; i < t.NumField(); i++ {\\n\\t\\ttagsString := t.Field(i).Tag.Get(\\"info\\")\\n\\t\\tfmt.Println(tagsString)\\n\\t}\\n}\\nfunc main() {\\n    var tags Resume\\n\\tfindTag(tags)\\n}\\n```\\n\\n\\n## channel\u7684\u57fa\u672c\u5b9a\u4e49\u4e0e\u4f7f\u7528\\n\\n```go\\npackage main\\n\\nimport \\"fmt\\"\\n\\nfunc main() {\\n\\n\\t// \u65e0\u7f13\u51b2\u7ba1\u9053\\n\\tc := make(chan int)\\n\\tgo func() {\\n\\t\\tdefer fmt.Println(\\"stop channel\\")\\n\\t\\t// \u5199\u5165\u901a\u9053\\n\\t\\tc <- 666\\n\\t}()\\n\\t\\n\\t// \u8bfb\u53d6 \u963b\u585e\\n\\tnum := <-c\\n\\tdefer close(c)\\n\\tfmt.Println(num)\\n}\\n```\\n\\n## channel \u6709\u7f13\u51b2\u548c\u65e0\u7f13\u51b2\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"time\\"\\n)\\n\\nfunc main() {\\n\\tc := make(chan int, 3)\\n\\n\\t// \u83b7\u53d6\u5bb9\u91cf\u548c\u957f\u5ea6\\n\\tfmt.Printf(\\"%v %v\\", len(c), cap(c))\\n\\tgo func() {\\n\\t\\tfor i := 0; i < 30; i++ {\\n\\t\\t\\tc <- i\\n\\t\\t\\tfmt.Printf(\\"%d %d\\", len(c), cap(c))\\n\\t\\t}\\n\\t}()\\n\\ttime.Sleep(time.Second)\\n\\t\\n}\\n```"},{"id":"/2023/09/01/jetbrains","metadata":{"permalink":"/blog/2023/09/01/jetbrains","source":"@site/blog/2023/09/01/jetbrains.md","title":"jetbrains \u597d\u7528\u7684\u63d2\u4ef6","description":"jetbrains \u597d\u7528\u5230\u7206\u70b8\u7684\u63d2\u4ef6  jetbrains \u5fc5\u5907\u63d2\u4ef6 jetbrains\u63d2\u4ef6","date":"2023-09-01T00:00:00.000Z","formattedDate":"2023\u5e749\u67081\u65e5","tags":[{"label":"jetbrains","permalink":"/blog/tags/jetbrains"}],"readingTime":0.375,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"jetbrains \u597d\u7528\u7684\u63d2\u4ef6","tags":["jetbrains"],"authors":"ahKevinXy","description":"jetbrains \u597d\u7528\u5230\u7206\u70b8\u7684\u63d2\u4ef6  jetbrains \u5fc5\u5907\u63d2\u4ef6 jetbrains\u63d2\u4ef6","image":"https://source.unsplash.com/random?people&31"},"unlisted":false,"prevItem":{"title":"\u516b\u5c0f\u65f6Golang\u5b66\u4e60\u7b14\u8bb0\ud83d\udcd2","permalink":"/blog/2023/09/02/learn-go"},"nextItem":{"title":"\u5982\u4f55\u5b89\u88c5 go grpc protoc-gen-go-grpc protoc-gen-go","permalink":"/blog/2023/08/29/grpc"}},"content":"\x3c!-- truncate --\x3e\\n## Rainbow Brackets\\n\\n\u4ee3\u7801\u4e2d\u7684\u5339\u914d\u4e2d\u62ec\u53f7\u6dfb\u52a0\u989c\u8272\uff0c\u4f7f\u60a8\u66f4\u8f7b\u677e\u5730\u7406\u89e3\u5d4c\u5957\u7684\u5706\u62ec\u53f7\\n\\n\\n## One Dark Theme\\n \u597d\u7528\u7684\u4e3b\u9898\\n \\n\\n## Translation\\n\u7ffb\u8bd1\\n\\n## Atom Material Icons\\n\\n\\n## GitToolBox\\n\\nGitToolBox \u6269\u5c55\u4e86\u5185\u7f6e\u7684 Git \u96c6\u6210\\n\\n\\n## goanno\\n\\ngo \u8bed\u8a00 \u4f18\u79c0\u7684\u6ce8\u91ca\u63d2\u4ef6\\n\\n\\n##  [\u4e3b\u9898\u6392\u884c](https://plugins.jetbrains.com/search?orderBy=downloads&tags=Theme)"},{"id":"/2023/08/29/grpc","metadata":{"permalink":"/blog/2023/08/29/grpc","source":"@site/blog/2023/08/29/grpc.md","title":"\u5982\u4f55\u5b89\u88c5 go grpc protoc-gen-go-grpc protoc-gen-go","description":"\u5982\u4f55\u6307\u5b9a\u7248\u672c\u5b89\u88c5 protoc-gen-go   protoc-gen-go-grpc protoc-gen-go protoc","date":"2023-08-29T00:00:00.000Z","formattedDate":"2023\u5e748\u670829\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"}],"readingTime":0.435,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u5b89\u88c5 go grpc protoc-gen-go-grpc protoc-gen-go","tags":["go"],"authors":"ahKevinXy","description":"\u5982\u4f55\u6307\u5b9a\u7248\u672c\u5b89\u88c5 protoc-gen-go   protoc-gen-go-grpc protoc-gen-go protoc","image":"https://source.unsplash.com/random?nature&28"},"unlisted":false,"prevItem":{"title":"jetbrains \u597d\u7528\u7684\u63d2\u4ef6","permalink":"/blog/2023/09/01/jetbrains"},"nextItem":{"title":"React hook \u8be6\u89e3","permalink":"/blog/2023/08/26/react-hook"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u5b89\u88c5 protoc \\n\\n\u6253\u5f00 [\u4e0b\u8f7d\u5730\u5740protoc](https://github.com/protocolbuffers/protobuf/releases)\\n\u9009\u62e9\u9700\u8981\u7684\u7248\u672c\\n\\n\\n## \u5b89\u88c5 protoc-gen-go\\n\\n\u6253\u5f00 [\u5b98\u65b9\u7f51\u7ad9](https://pkg.go.dev/google.golang.org/protobuf@v1.25.0/cmd/protoc-gen-go)\\n\\n\u9009\u62e9\u9700\u8981\u7684\u7248\u672c\u5b89\u88c5\\n\\n```bash\\n# \u6700\u65b0\u7248\u672c\\n# go install google.golang.org/protobuf/cmd/protoc-gen-go@latest \\n\\n# \u6307\u5b9a\u7248\u672c\\n go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.25.0\\n\\n```\\n\\n\\n## \u5b89\u88c5protoc-gen-go-grpc\\n\\n\u6253\u5f00 [\u5b98\u7f51](https://google.golang.org/grpc/cmd/protoc-gen-go-grpc)\\n\\n```BASH\\n\\n## \u5b89\u88c5\u6700\u65b0\u7248\u672c\\ngo install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest\\n\\n# \u6307\u5b9a\u7248\u672c \\ngo install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.0.1\\n\\n```"},{"id":"/2023/08/26/react-hook","metadata":{"permalink":"/blog/2023/08/26/react-hook","source":"@site/blog/2023/08/26/react-hook.md","title":"React hook \u8be6\u89e3","description":"React hook \u5982\u4f55\u5de7\u5999\u4f7f\u7528","date":"2023-08-26T00:00:00.000Z","formattedDate":"2023\u5e748\u670826\u65e5","tags":[{"label":"react","permalink":"/blog/tags/react"}],"readingTime":0.9,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"React hook \u8be6\u89e3","tags":["react"],"authors":"ahKevinXy","description":"React hook \u5982\u4f55\u5de7\u5999\u4f7f\u7528","image":"https://source.unsplash.com/random?nature&27"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u5b89\u88c5 go grpc protoc-gen-go-grpc protoc-gen-go","permalink":"/blog/2023/08/29/grpc"},"nextItem":{"title":"html css \u57fa\u7840","permalink":"/blog/2023/08/18/website"}},"content":"Hook \u662freact `16.8` \u7684\u65b0\u589e\u7279\u6027\uff0c\u5b83\u53ef\u4ee5\u5728\u4e0d\u7f16\u5199class \u7684\u60c5\u51b5\u4e0b\u4f7f\u7528state \u4ee5\u53ca\u5176\u5b83react \u7279\u6027\\n\x3c!-- truncate --\x3e\\n\\n\\n## hook \u4f18\u52bf\\n\\n* hook \u5728\u65e0\u9700\u6539\u53d8\u7ec4\u4ef6\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\u590d\u7528\u72b6\u6001\u903b\u8f91\\n* hook \u5c06\u7ec4\u4ef6\u4e2d\u76f8\u4e92\u5173\u8054\u7684\u90e8\u5206\u62c6\u5206\u6210\u66f4\u5c0f\u7684\u51fd\u6570\\n* hook \u5728\u975eclass \u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f7f\u7528\u66f4\u591a\u7684react \u7279\u6027 \\n\\n## \u4f7f\u7528\u89c4\u5219\\n\\nHook \u5c31\u662f`javascript` \\n\\n1. \u53ea\u80fd\u5728\u51fd\u6570\u5916\u5c42\u8c03\u7528 hook,\u4e0d\u8981\u5728\u5faa\u73af\uff0c\u6761\u4ef6\u5224\u65ad\u6216\u5b50\u51fd\u6570\u4e2d\u8c03\u7528\\n2. \u53ea\u80fd\u5728react\u7684\u51fd\u6570\u7ec4\u4ef6\u548c\u81ea\u5b9a\u4e49hook\u4e2d\u8c03\u7528hook\\n\\n\\n\\n## useState\\n\\n`useState` \u7528\u4e8e\u5728\u51fd\u6570\u7ec4\u4ef6\u4e2d\u8c03\u7528\u7ed9\u7ec4\u4ef6\u6dfb\u52a0\u4e00\u4e9b\u5185\u90e8\u72b6\u6001`state`\\n\\n```jsx\\nconst [state,setState] = useState(initialState)\\n```"},{"id":"/2023/08/18/website","metadata":{"permalink":"/blog/2023/08/18/website","source":"@site/blog/2023/08/18/website.md","title":"html css \u57fa\u7840","description":"html css \u5165\u95e8 \u5982\u4f55\u4f7f\u7528css html","date":"2023-08-18T00:00:00.000Z","formattedDate":"2023\u5e748\u670818\u65e5","tags":[{"label":"\u57fa\u7840","permalink":"/blog/tags/\u57fa\u7840"}],"readingTime":1.95,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"html css \u57fa\u7840","tags":["\u57fa\u7840"],"authors":"ahKevinXy","description":"html css \u5165\u95e8 \u5982\u4f55\u4f7f\u7528css html","image":"https://source.unsplash.com/random?nature&25"},"unlisted":false,"prevItem":{"title":"React hook \u8be6\u89e3","permalink":"/blog/2023/08/26/react-hook"},"nextItem":{"title":"google  \u6d4f\u89c8\u5668\u5feb\u6377\u952e","permalink":"/blog/2023/08/12/chrome"}},"content":"\x3c!-- truncate --\x3e\\n\\n> [mdn](https://developer.mozilla.org/zh-CN/)\\n\\n## \u4e0d\u5e38\u7528\u6587\u672c\u6807\u7b7e\\n\\n\\n```html live\\n<html>\\n\\n<p>\\n    <cite> \u8fd9\u662f\u4e00\u4e2a\u4f5c\u54c1\u6807\u9898</cite>\\n</p>\\n\\n<p>\\n    <dfn> \u7279\u6b8a\u672f\u8bed</dfn>\\n</p>\\n\\n<p>\\n    <del>\u8fd9\u662f\u4e00\u4e2a\u5220\u9664\u6587\u672c</del> <ins>\u63d2\u5165\u6587\u672c</ins>\\n</p>\\n\\n<p>\\n    <code>cosole.log(\'\u6d4b\u8bd5\u4ee3\u7801\')</code>\\n</p>\\n<p>\\n    H<sub>2</sub>O\\n</p>\\n\\n<p>\\n    8<sup>3</sup>\\n</p>\\n<p>\\n    <abbr title=\\"\u8fd9\u662f\u4e00\u4e2a\u6807\u9898\\">\u5927\u65b0\u95fb</abbr> \u4eca\u5929\u662f2023\u5e7408\u670818\u65e5\\n</p>\\n<p>\\n    <small>\u9644\u5c5e\u7ec6\u5219</small> 2002\u5e74\u7684\u7b2c\u4e00\u573a\u96ea\\n</p>\\n</html>\\n\\n```\\n\\n\\n## \u8d85\u94fe\u63a5\\n\\n\\n1. \u8df3\u8f6c\u9875\u9762\\n2. \u8df3\u8f6c\u951a\u70b9\\n3. \u5524\u9192\u6307\u5b9a\u5e94\u7528\\n\\n\\n```html live\\n<html lang=\\"zh\\">\\n\\n\\n\\n<body>\\n<p>\\n    <a href=\\"http://ahKevinXy.github.io\\" target=\\"_blank\\">\u8df3\u8f6c\u81ea\u5df1blog</a>\\n</p>\\n<p>\\n    <a href=\\"#\u4e0d\u5e38\u7528\u6587\u672c\u6807\u7b7e\\">\u53bb\u5934\u90e8</a>\\n</p>\\n<p>\\n    <a href=\\"mailto:ahkevinxy.gmail.com\\">\u53bb\u53d1\u90ae\u4ef6</a>\\n</p>\\n<p>\\n    \\n</p>\\n</body>\\n</html>\\n```\\n\\n## \u5217\u8868\\n\\n\\n\\n```html live\\n\\n<div>\\n    <div>\\n        <span>\u65e0\u5e8f\u5217\u8868</span>\\n    <ul>\\n        <li>1</li>\\n        <li>2</li>\\n        <li>3</li>\\n    </ul>\\n    </div>\\n    <div>\\n        <span>\u6709\u5e8f\u5217\u8868</span>\\n    <ol>\\n        <li>1</li>\\n        <li>3</li>\\n        <li>4</li>\\n        <li>5</li>\\n    </ol>\\n    </div>\\n    <div>\\n        <span>\u81ea\u5b9a\u4e49\u5217\u8868</span>\\n        <dl>\\n            <dt>\ud83d\udcd2\u7b14\u8bb0</dt>\\n            <dd>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7b14\u8bb0</dd>\\n            <dd>\u4e5f\u53ef\u4ee5\u662f\u7535\u5b50\u7248\u4e5f\u662f\u7eb8\u8d28\u7248</dd>\\n            <dt>\u2708\ufe0f\u8d77\u98de</dt>\\n            <dd>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8d77\u98de</dd>\\n        </dl>\\n    </div>\\n</div>\\n```\\n\\n\\n\\n## \u8868\u683c\\n\\n\\n```html live\\n\\n<div>\\n    <table border=\\"10\\" >\\n        <caption>\u5b66\u751f\u4fe1\u606f</caption>\\n        <thead>\\n        <tr>\\n        <td>\u5e8f\u53f7</td>\\n        <td>\u59d3\u540d</td>\\n        <td>\u6027\u522b</td>\\n        <td>\u5e74\u9f84</td>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr>\\n            <td>1</td>\\n            <td>\u5f20\u4e09</td>\\n            <td>\u7537</td>\\n            <td>18</td>\\n        </tr>\\n        </tbody>\\n        <tr>\\n            <td></td>\\n            <td></td>\\n            <td></td>\\n           \\n          \\n            <td>\u603b\u8ba1: 1</td>\\n        </tr>\\n        <tfoot>\\n   \\n        </tfoot>\\n    </table>\\n</div>\\n\\n```\\n\\n\\n## html \u5b57\u7b26\u5b9e\u4f53\\n\\n* `&nbsp;` \u7a7a\u683c\\n* `&lt;` `<` \\n\\n## html \u5168\u5c40\u5c5e\u6027\\n\\n* `id`  \u7ed9\u6807\u7b7e\u6307\u5b9a\u552f\u4e00\u6807\u8bc6\\n* `class` \u53ef\u4ee5\u7136\u6807\u7b7e\u76f8\u5173\u8054\\n* `style` \u7ed9\u6807\u7b7e\u52a0\u6837\u5f0f\\n* `dir` \u5185\u5bb9\u65b9\u5411\\n* `title` \u7ed9\u6807\u7b7e\u8bbe\u7f6e\u6587\u5b57\u63d0\u793a \u56fe\u7247\u548c\u8d85\u94fe\u63a5 \u591a"},{"id":"/2023/08/12/chrome","metadata":{"permalink":"/blog/2023/08/12/chrome","source":"@site/blog/2023/08/12/chrome.md","title":"google  \u6d4f\u89c8\u5668\u5feb\u6377\u952e","description":"google \u6d4f\u89c8\u5668\u5feb\u6377\u952e\u5927\u5168 \u5982\u4f55\u4f7f\u7528\u8c37\u6b4c\u6d4f\u89c8\u5668","date":"2023-08-12T00:00:00.000Z","formattedDate":"2023\u5e748\u670812\u65e5","tags":[{"label":"google","permalink":"/blog/tags/google"}],"readingTime":3.83,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"google  \u6d4f\u89c8\u5668\u5feb\u6377\u952e","tags":["google"],"authors":"ahKevinXy","description":"google \u6d4f\u89c8\u5668\u5feb\u6377\u952e\u5927\u5168 \u5982\u4f55\u4f7f\u7528\u8c37\u6b4c\u6d4f\u89c8\u5668","image":"https://source.unsplash.com/random?nature&23"},"unlisted":false,"prevItem":{"title":"html css \u57fa\u7840","permalink":"/blog/2023/08/18/website"},"nextItem":{"title":"Electron \u5165\u95e8","permalink":"/blog/2023/08/12/electron"}},"content":"\x3c!-- truncate --\x3e\\n1. `Ctrl+N` \u6253\u5f00\u65b0\u7a97\u53e3\\n2. `Ctrl+T` \u6253\u5f00\u65b0\u6807\u7b7e\u9875\\n3. `Ctrl+Shift+N` \u5728\u9690\u8eab\u6a21\u5f0f\u4e0b\u6253\u5f00\u65b0\u7a97\u53e3\u3002\\n4. `Ctrl+O`\uff0c\u7136\u540e\u9009\u62e9\u6587\u4ef6\u3002 \u5728 Google Chrome \u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u8ba1\u7b97\u673a\u4e2d\u7684\u6587\u4ef6\u3002\\n5. `Ctrl+Shift+T` \u91cd\u65b0\u6253\u5f00\u4e0a\u6b21\u5173\u95ed\u7684\u6807\u7b7e\u9875\u3002Google Chrome \u6d4f\u89c8\u5668\u53ef\u8bb0\u4f4f\u6700\u8fd1\u5173\u95ed\u7684 10 \u4e2a\u6807\u7b7e\u9875\u3002\\n6. `Ctrl+1` \u5230 `Ctrl+8` \u5207\u6362\u5230\u6807\u7b7e\u680f\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7f16\u53f7\u6240\u5bf9\u5e94\u7684\u6807\u7b7e\u9875\u3002\\n7. `Ctrl+9` \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875\u3002\\n8. `Ctrl+Tab` \u6216 `Ctrl+PgDown` \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875\u3002\\n9. `Ctrl+Shift+Tab` \u6216 `Ctrl+PgUp` \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875\u3002\\n10. `Alt+F4` \u5173\u95ed\u5f53\u524d\u7a97\u53e3\u3002\\n11. `Ctrl+W` \u6216 `Ctrl+F4` \u5173\u95ed\u5f53\u524d\u6807\u7b7e\u9875\u6216\u5f39\u51fa\u7a97\u53e3\u3002\\n12. \u7528\u9f20\u6807\u4e2d\u952e(\u6216\u9f20\u6807\u6eda\u8f6e)\u70b9\u51fb\u6807\u7b7e\u9875\u3002 \u5173\u95ed\u6240\u70b9\u51fb\u7684\u6807\u7b7e\u9875\u3002\\n13. \u6309 `Backspace` \u952e\uff0c\u6216\u540c\u65f6\u6309 `Alt` \u548c\u5411\u5de6\u7bad\u5934\u952e\u3002 \u8f6c\u5230\u5f53\u524d\u6807\u7b7e\u9875\u7684\u4e0a\u4e00\u9875\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u3002\\n14. \u6309 `Shift+Backspace`\uff0c\u6216\u540c\u65f6\u6309 `Alt`\u548c\u5411\u53f3\u7bad\u5934\u952e\u3002 \u8f6c\u5230\u5f53\u524d\u6807\u7b7e\u9875\u7684\u4e0b\u4e00\u9875\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u3002\\n15. `Alt+Home` \u5728\u5f53\u524d\u7a97\u53e3\u6253\u5f00\u4e3b\u9875\u3002\\n16. `Ctrl+Shift+J` **\u6253\u5f00\u5f00\u53d1\u4eba\u5458\u5de5\u5177**\u3002\\n17. `Ctrl+Shift+Delete` **\u6253\u5f00\u201c\u6e05\u9664\u6d4f\u89c8\u6570\u636e\u201d\u5bf9\u8bdd\u6846**\u3002\\n18. \u6216 `Ctrl+L` \u6216 `Alt+D` \u7a81\u51fa\u663e\u793a\u7f51\u5740\u3002\\n19. `Ctrl+P` \u6253\u5370\u5f53\u524d\u7f51\u9875\u3002\\n20. `Ctrl+S` \u4fdd\u5b58\u5f53\u524d\u7f51\u9875\u3002\\n21. `F5` \u6216 `Ctrl+R` \u91cd\u65b0\u8f7d\u5165\u5f53\u524d\u7f51\u9875\u3002\\n22. `Esc` \u505c\u6b62\u8f7d\u5165\u5f53\u524d\u7f51\u9875\\n23. `Ctrl+F` \u6253\u5f00\u67e5\u627e\u680f\u3002\\n24. `Ctrl+G` \u6216 `F3` \u5728\u67e5\u627e\u680f\u4e2d\u67e5\u627e\u4e0b\u4e00\u6761\u4e0e\u8f93\u5165\u5185\u5bb9\u76f8\u5339\u914d\u7684\u5185\u5bb9\u3002\\n25. `Ctrl+Shift+G`\u3001`Shift+F3` \u6216`Shift+Enter` \u5728\u67e5\u627e\u680f\u4e2d\u67e5\u627e\u4e0a\u4e00\u6761\u4e0e\u8f93\u5165\u5185\u5bb9\u76f8\u5339\u914d\u7684\u5185\u5bb9\u3002\\n26. \u70b9\u51fb\u9f20\u6807\u4e2d\u952e(\u6216\u9f20\u6807\u6eda\u8f6e)\u3002 \u6fc0\u6d3b\u81ea\u52a8\u6eda\u52a8\u6a21\u5f0f\u3002\u5f53\u60a8\u79fb\u52a8\u9f20\u6807\u65f6\uff0c\u7f51\u9875\u4f1a\u6839\u636e\u9f20\u6807\u7684\u79fb\u52a8\u65b9\u5411\u81ea\u52a8\u6eda\u52a8\u3002\\n27. `Ctrl+F5` \u6216 `Shift+F5` \u91cd\u65b0\u8f7d\u5165\u5f53\u524d\u7f51\u9875\uff0c\u5ffd\u7565\u7f13\u5b58\u7684\u5185\u5bb9\\n28. \u6309\u4f4f `Alt` \u952e\uff0c\u7136\u540e\u70b9\u51fb\u94fe\u63a5\u3002 \u4e0b\u8f7d\u94fe\u63a5\u76ee\u6807\u3002\\n29. `Ctrl+U` \u6253\u5f00\u5f53\u524d\u7f51\u9875\u7684\u6e90\u4ee3\u7801\\n30. \u5c06\u94fe\u63a5\u62d6\u5230\u4e66\u7b7e\u680f\u4e2d \u5c06\u94fe\u63a5\u4fdd\u5b58\u4e3a\u4e66\u7b7e\u3002\\n31. `Ctrl+D` \u5c06\u5f53\u524d\u7f51\u9875\u4fdd\u5b58\u4e3a\u4e66\u7b7e\\n32. `Ctrl+Shift+D` \u5c06\u6240\u6709\u6253\u5f00\u7684\u7f51\u9875\u4ee5\u4e66\u7b7e\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728\u65b0\u6587\u4ef6\u5939\u4e2d\\n33. `Ctrl+C` \u5c06\u7a81\u51fa\u663e\u793a\u7684\u5185\u5bb9\u590d\u5236\u5230\u526a\u8d34\u677f\u4e2d\u3002 \\n34. `Ctrl+V` \u6216 `Shift+Insert` \u4ece\u526a\u8d34\u677f\u4e2d\u7c98\u8d34\u5185\u5bb9\u3002 \\n35. `Ctrl+Shift+V` \u4ece\u526a\u8d34\u677f\u4e2d\u7c98\u8d34\u5185\u5bb9(\u4e0d\u5e26\u683c\u5f0f)\u3002 \\n36. `Ctrl+X` `\u6216 Shift+Delete` \u5220\u9664\u7a81\u51fa\u663e\u793a\u7684\u5185\u5bb9\u5e76\u5c06\u5176\u590d\u5236\u5230\u526a\u8d34\u677f\u4e2d\u3002 \\n37. F11 \u5728\u5168\u5c4f\u6a21\u5f0f\u4e0b\u6253\u5f00\u7f51\u9875\u3002\u518d\u6309\u4e00\u6b21F11 \u53ef\u9000\u51fa\u5168\u5c4f\u6a21\u5f0f\u3002 \\n38. Ctrl++\uff0c\u6216\u8005\u6309\u4f4f Ctrl \u952e\u5e76\u4e14\u5411\u4e0a\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u3002 \u653e\u5927\u7f51\u9875\u4e0a\u7684\u6240\u6709\u5185\u5bb9\u3002 \\n39. Ctrl+-\uff0c\u6216\u8005\u6309\u4f4f Ctrl \u952e\u5e76\u4e14\u5411\u4e0b\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u3002 \u7f29\u5c0f\u7f51\u9875\u4e0a\u7684\u6240\u6709\u5185\u5bb9\u3002 \\n40. Ctrl+0 \u5c06\u7f51\u9875\u4e0a\u7684\u6240\u6709\u5185\u5bb9\u90fd\u6062\u590d\u5230\u6b63\u5e38\u5927\u5c0f\u3002 \\n41. \u7a7a\u683c\u952e \u5411\u4e0b\u6eda\u52a8\u7f51\u9875\u3002 \\n42. Home \u8f6c\u81f3\u7f51\u9875\u9876\u90e8\u3002 \\n43. End \u8f6c\u81f3\u7f51\u9875\u5e95\u90e8\u3002 \\n44. \u6309\u4f4f Shift \u952e\u7684\u540c\u65f6\u6eda\u52a8\u9f20\u6807\u6eda\u8f6e\u3002 \u5728\u7f51\u9875\u4e0a\u6a2a\u5411\u6eda\u52a8\u3002"},{"id":"/2023/08/12/electron","metadata":{"permalink":"/blog/2023/08/12/electron","source":"@site/blog/2023/08/12/electron.md","title":"Electron \u5165\u95e8","description":"\u5982\u4f55\u4f7f\u7528 electron \u6784\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684 \u684c\u9762\u5e94\u7528","date":"2023-08-12T00:00:00.000Z","formattedDate":"2023\u5e748\u670812\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":3.3,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Electron \u5165\u95e8","tags":["Go"],"authors":"ahKevinXy","description":"\u5982\u4f55\u4f7f\u7528 electron \u6784\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684 \u684c\u9762\u5e94\u7528","image":"https://source.unsplash.com/random?nature&23"},"unlisted":false,"prevItem":{"title":"google  \u6d4f\u89c8\u5668\u5feb\u6377\u952e","permalink":"/blog/2023/08/12/chrome"},"nextItem":{"title":"Go  File \u5904\u7406","permalink":"/blog/2023/08/08/go-file"}},"content":"Electron\u662f\u7531Github\u5f00\u53d1\u7684\u5f00\u6e90\u6846\u67b6\uff0c\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u4f7f\u7528Web\u6280\u672f\u6784\u5efa\u8de8\u5e73\u53f0\u7684\u684c\u9762\u5e94\u7528\u3002Electron=Chromium+Node.js+Native API\uff0c\u5176\u4e2dChromium\u4e3aElectron\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684UI\u80fd\u529b\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u517c\u5bb9\u6027\u7684\u60c5\u51b5\u4e0b\uff0c\u5229\u7528\u5f3a\u5927\u7684Web\u751f\u6001\u6765\u5f00\u53d1\u754c\u9762\uff1bNative API\u8ba9Electron\u6709\u4e86\u8de8\u5e73\u53f0\u548c\u684c\u9762\u7aef\u7684\u539f\u751f\u80fd\u529b\uff0c\u6bd4\u5982\u8bf4\u5b83\u6709\u7edf\u4e00\u7684\u539f\u751f\u754c\u9762\uff0c\u7a97\u53e3\u3001\u6258\u76d8\u8fd9\u4e9b\\n\x3c!-- truncate --\x3e\\n## electron \u5de5\u4f5c\u6d41\\n\\n\\n\\n```mermaid\\n\\nstateDiagram-v2\\n    Electron\\n    state Electron {\\n       \\n       \\n        RenderProcess --\x3e MainProcess:ipc\\n        MainProcess --\x3e RenderProcess:ipc\\n     \\n     \\n       \\n        state MainProcess{\\n            NativeApi\\n            state NativeApi{\\n            Linux MacOS Windows\\n            }  \\n        }\\n    }\\n    \\n    \\n\\n```\\n\\n## \u542f\u52a8\u6d41\u7a0b\\n\\n```mermaid\\nflowchart LR\\n\\n\u542f\u52a8APP --\x3e\\n\\n\u4e3b\u8fdb\u7a0b\u521b\u5efawindow --\x3e\\n\\nwind\u52a0\u8f7d\u754c\u9762 --\x3e\\n\\n\u751f\u6210\u5e94\u7528\u7a97\u53e3\\n\\n\\n\\n```\\n\\n\\n## \u76f8\u5173\u5c5e\u4e8e\u8bf4\u660e\\n\\n\u4e3b\u8fdb\u7a0b\\n\\n* `package.json` \u4e2d main \u5c5e\u6027\u5bf9\u5e94\u7684\u6587\u4ef6\\n* \u4e00\u4e2a\u5e94\u7528\u53ea\u4f1a\u6709\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\\n* \u53ea\u6709\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u8fdb\u884c gui\u7684api \u64cd\u4f5c \\n\\n\u6e32\u67d3\u8fdb\u7a0b\\n\\n* windows \u4e2d\u5c55\u793a\u7684\u754c\u9762\u63d0\u4f9b\u6e32\u67d3\u8fdb\u7a0b\u8868\u73b0\\n* \u4e00\u4e2a\u5e94\u7528\u53ef\u4ee5\u6709\u591a\u4e2a\u6e32\u67d3\u8fdb\u7a0b\\n\\n\\n## \u73af\u5883\u642d\u5efa\\n\\n> \u5de5\u5177\\n\\n1. vscode\\n2. \u547d\u4ee4\u884c\u5de5\u5177\\n3. git \\n4. node \\n```bash\\n\\n#\u5728x64\u673a\u5668\u4e0a\u5b89\u88c5ia32\u4f4d\u7248\u672c\\nnpm install --arch=ia32 electron\\n\\n# \u4f7f\u7528 --platform \u6765\u6307\u5b9a\u5f00\u53d1\u5e73\u53f0 (\u4f8b\u5982, win32\u3001linux \u7b49):\\n\\nnpm install --platform=win32 electron\\n\\n\\n```\\n\u8bbe\u7f6e \u4e2d\u56fd\u4ee3\u7406\\n\\n```bash\\nELECTRON_MIRROR=\\"https://npmmirror.com/mirrors/electron/\\"\\n\\n```\\n\u8df3\u8fc7 \u4e8c\u8fdb\u5236\u4e0b\u8f7d\\n\\n```bash\\nELECTRON_SKIP_BINARY_DOWNLOAD=1 yarn install\\n\\n\\n```\\n## Electron \u751f\u547d\u5468\u671f\\n\\n* ready:app \u521d\u59cb\u5316\u5b8c\u6210\\n* dom-ready \u4e00\u4e2a\u7a97\u53e3\u4e2d\u7684\u6587\u672c\u52a0\u8f7d\u5b8c\u6210\\n* did-finish-load \u5bfc\u822a\u5b8c\u6210\u65f6\u89e6\u53d1\\n* window-all-closed \u6240\u6709\u7a97\u53e3\u90fd\u88ab\u5173\u95ed\u65f6\u89e6\u53d1\\n* before-quit \u5728\u5173\u95ed\u7a97\u53e3\u4e4b\u524d\u89e6\u53d1\\n* will-quit \u5728\u7a97\u53e3\u5173\u95ed\u5e76\u4e14\u5e94\u7528\u9000\u51fa\u65f6\u89e6\u53d1\\n* quit \u5f53\u7a97\u53e3\u5173\u95ed\u65f6\u89e6\u53d1 \u6b64\u65f6\u5220\u9664\u7a97\u53e3\u5f15\u7528\\n\\n\\n## \u521b\u5efa\u9879\u76ee\\n\\n### \u521d\u59cb\u5316\u5e94\u7528\\n\\n```bash npm2yarn\\n\\n# npm \\nnpm init\\n\\n# yarn\\nyarn init\\n\\n\\n```\\n \u6dfb\u52a0 electron DEVDEPENDENCY\\n\\n:::info\\n \u5e94\u7528\u9700\u8981\u8fd0\u884c Electron API\uff0c\u56e0\u6b64\u8fd9\u542c\u4e0a\u53bb\u53ef\u80fd\u6709\u70b9\u53cd\u76f4\u89c9\u3002 \u5b9e\u9645\u4e0a\uff0c\u6253\u5305\u540e\u7684\u5e94\u7528\u672c\u8eab\u4f1a\u5305\u542b Electron \u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5c06 Electron \u4f5c\u4e3a\u751f\u4ea7\u73af\u5883\u4f9d\u8d56\u3002\\n\\n:::\\n```bash npm2yarn\\n\\n# npm \\nnpm install electron --save-dev\\n\\n# yarn \\n\\nyarn add electron --dev\\n\\n\\n```\\n\\n### \u5bfc\u5165\u6a21\u5757\\n\\n* app \u5e94\u7528\u7a0b\u5e8f\u7684\u4e8b\u4ef6\u751f\u547d\u5468\u671f\\n* BrowerWindow \u8d1f\u8d23\u521b\u5efa\u548c\u7ba1\u7406\u5e94\u7528\u7a97\u53e3\\n\\n\\n\\n## \u4f7f\u7528\u9884\u52a0\u8f7d\u811a\u672c\\n\\n### \u4ec0\u4e48\u662f\u9884\u52a0\u8f7d\u811a\u672c\\n\\nElectron \u7684\u4e3b\u8fdb\u7a0b\u662f \u4e00\u4e2a\u62e5\u6709\u7740\u5b8c\u5168\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\u6743\u9650\u7684 Node.js \u73af\u5883\u3002 \u9664\u4e86 Electron \u6a21\u7ec4 \u4e4b\u5916\uff0c\u60a8\u4e5f\u53ef\u4ee5\u8bbf\u95ee Node.js \u5185\u7f6e\u6a21\u5757 \u548c\u6240\u6709\u901a\u8fc7 npm \u5b89\u88c5\u7684\u5305\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0c\u6e32\u67d3\u8fdb\u7a0b\u9ed8\u8ba4\u8dd1\u5728\u7f51\u9875\u9875\u9762\u4e0a\uff0c\u800c\u5e76\u975e Node.js\u91cc\u3002\\n\\n### \u5728\u8fdb\u7a0b\u4e4b\u95f4\u901a\u4fe1\\n\\n \u53ef\u4ee5\u4f7f\u7528 Electron \u7684 ipcMain \u6a21\u5757\u548c ipcRenderer \u6a21\u5757\u6765\u8fdb\u884c\u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"id":"/2023/08/08/go-file","metadata":{"permalink":"/blog/2023/08/08/go-file","source":"@site/blog/2023/08/08/go-file.md","title":"Go  File \u5904\u7406","description":"go \u5982\u4f55\u8bfb\u53d6\u6587\u4ef6 \u5982\u4f55\u751f\u6210\u6587\u4ef6  go \u6587\u4ef6\u5904\u7406\u65b9\u6cd5\u5408\u96c6 go \u5982\u4f55\u5927\u6587\u4ef6\u8bfb\u53d6  \u5982\u4f55\u56fa\u5b9a\u957f\u5ea6\u8bfb\u53d6","date":"2023-08-08T00:00:00.000Z","formattedDate":"2023\u5e748\u67088\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":2.565,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go  File \u5904\u7406","tags":["Go"],"authors":"ahKevinXy","description":"go \u5982\u4f55\u8bfb\u53d6\u6587\u4ef6 \u5982\u4f55\u751f\u6210\u6587\u4ef6  go \u6587\u4ef6\u5904\u7406\u65b9\u6cd5\u5408\u96c6 go \u5982\u4f55\u5927\u6587\u4ef6\u8bfb\u53d6  \u5982\u4f55\u56fa\u5b9a\u957f\u5ea6\u8bfb\u53d6","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Electron \u5165\u95e8","permalink":"/blog/2023/08/12/electron"},"nextItem":{"title":"Go  json \u5904\u7406","permalink":"/blog/2023/08/08/go-json"}},"content":"![\u9884\u89c8\u56fe](https://source.unsplash.com/random?nature&21)\\n\x3c!-- truncate --\x3e\\n## `os.ReadFile` \u6307\u5b9a\u6587\u4ef6\u8bfb\u53d6\u6587\u4ef6\\n\\n````go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"os\\"\\n)\\n\\nfunc main() {\\n\\tfileName := \\"test.txt\\"\\n\\tcontent, err := os.ReadFile(fileName)\\n\\tif err != nil {\\n\\t\\treturn\\n\\t}\\n\\tfmt.Println(string(content))\\n}\\n````\\n\\n##  `ioutil.ReadFile` \u8bfb\u53d6\u6587\u4ef6\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"io/ioutil\\"\\n)\\n\\nfunc main() {\\n\\n\\tfileName := \\"test.txt\\"\\n\\tcontent, err := ioutil.ReadFile(fileName)\\n\\n\\tif err != nil {\\n\\t\\tfmt.Println(err)\\n\\t\\t\\n\\t\\treturn\\n\\t}\\n\\tfmt.Println(string(content))\\n}\\n```\\n\\n## `os.Open` \u901a\u8fc7\u53e5\u67c4\u6253\u5f00\u6587\u4ef6\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"io/ioutil\\"\\n\\t\\"os\\"\\n)\\n\\nfunc main() {\\n\\tfileName := \\"test.txt\\"\\n\\tfile, err := os.Open(fileName)\\n\\n\\tif err != nil {\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n\\t}\\n\\n\\tdefer file.Close()\\n\\n\\tcontent, err := ioutil.ReadAll(file)\\n\\t\\n\\tif err !=nil {\\n\\t\\t\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n    }\\n\\t\\n\\tfmt.Println(string(content))\\n}\\n```\\n\\n## `os.OpenFile` \u6253\u5f00\u6587\u4ef6\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"os\\"\\n)\\n\\nfunc main() {\\n\\tfileName := \\"test.txt\\"\\n\\t//  If the file does not exist, and the O_CREATE flag\\n\\t// flag\uff1a\u6587\u4ef6\u7684\u6253\u5f00\u65b9\u5f0f\uff0c\u5982\u53ea\u8bfb\u3001\u53ea\u5199\u3001\u8bfb\u5199\u7b49\\n\\t//\u6587\u4ef6\u7684\u8bfb\u5199\u6743\u9650 \\n\\tfile, err := os.OpenFile(fileName, os.O_RDONLY, 0)\\n\\n\\tif err != nil {\\n\\n\\t\\tfmt.Println(err)\\n\\t\\t\\n\\t\\treturn\\n\\t}\\n\\n\\tdefer file.Close()\\n\\n\\tcontent, err := ioutil.ReadAll(file)\\n\\n\\tif err !=nil {\\n\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n\\t}\\n\\n\\tfmt.Println(string(content))\\n\\n}\\n```\\n\\n## \u5207\u7247\u8bfb\u53d6\u6587\u4ef6 \u6309\u7167\u884c\u8bfb\u53d6\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"bufio\\"\\n\\t\\"fmt\\"\\n\\t\\"io\\"\\n\\t\\"os\\"\\n\\t\\"strings\\"\\n)\\n\\nfunc main() {\\n\\tfileName := \\"test.txt\\"\\n\\tfile, err := os.Open(fileName)\\n\\n\\tif err != nil {\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n\\t}\\n\\n\\tdefer file.Close()\\n\\t// \u89e3\u51b3 content \u6587\u4ef6\u8fc7\u5927\u5bfc\u81f4\\n\\t// content, err := ioutil.ReadAll(file)\\n\\n\\tr := bufio.NewReader(file)\\n\\tfor {\\n\\t\\tlineBytes, err := r.ReadBytes(\'\\\\n\')\\n\\t\\tline := strings.TrimSpace(string(lineBytes))\\n\\n\\t\\tif err != nil && err != io.EOF {\\n\\n\\t\\t\\treturn\\n\\t\\t}\\n\\t\\tif err == = io.EOF {\\n\\t\\t\\tbreak\\n\\t\\t}\\n\\n\\t\\tfmt.Println(line)\\n\\t}\\n\\n}\\n```\\n\\n\\n## \u6309\u7167\u56fa\u5b9a\u957f\u5ea6\u8bfb\u53d6\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"bufio\\"\\n\\t\\"fmt\\"\\n\\t\\"io\\"\\n\\t\\"os\\"\\n)\\n\\nfunc main() {\\n\\tfile, err := os.Open(\\"test.txt\\")\\n\\tif err != nil {\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n\\t}\\n\\n\\tr := bufio.NewReader(file)\\n\\n\\tbuf := make([]byte, 1024)\\n\\tfor {\\n\\t\\tn, err := r.Read(buf)\\n\\t\\tif err != nil && err != io.EOF {\\n\\t\\t\\tfmt.Println(err)\\n\\t\\t\\treturn\\n        }\\n\\t\\tif n ==0 {\\n\\t\\t\\tbreak\\n        }\\n\\t\\tfmt.Println(string(buf[:n]))\\n\\t\\t\\n\\t}\\n}\\n```\\n\\n\\n## \u4f7f\u7528`syscall` \u5e93\\n\\n\u4f1a\u6bcf\u6b21\u8bfb\u53d6  100 \u5b57\u8282\u7684\u6570\u636e\uff0c\u5e76\u53d1\u9001\u5230\u901a\u9053\u4e2d\uff0c\u7531\u53e6\u5916\u4e00\u4e2a\u534f\u7a0b\u8fdb\u884c\u8bfb\u53d6\u5e76\u6253\u5370\u51fa\u6765\\n```go\\npackage main\\n \\nimport (\\n    \\"fmt\\"\\n    \\"sync\\"\\n    \\"syscall\\"\\n)\\n \\nfunc main() {\\n    fd, err := syscall.Open(\\"christmas_apple.py\\", syscall.O_RDONLY, 0)\\n    if err != nil {\\n        fmt.Println(\\"Failed on open: \\", err)\\n    }\\n    defer syscall.Close(fd)\\n \\n    var wg sync.WaitGroup\\n    wg.Add(2)\\n    dataChan := make(chan []byte)\\n    go func() {\\n        wg.Done()\\n        for {\\n            data := make([]byte, 100)\\n            n, _ := syscall.Read(fd, data)\\n            if n == 0 {\\n                break\\n            }\\n            dataChan <- data\\n        }\\n        close(dataChan)\\n    }()\\n \\n    go func() {\\n        defer wg.Done()\\n        for {\\n            select {\\n            case data, ok := <-dataChan:\\n                if !ok {\\n                    return\\n                }\\n \\n                fmt.Printf(string(data))\\n            default:\\n \\n            }\\n        }\\n    }()\\n    wg.Wait()\\n}\\n```"},{"id":"/2023/08/08/go-json","metadata":{"permalink":"/blog/2023/08/08/go-json","source":"@site/blog/2023/08/08/go-json.md","title":"Go  json \u5904\u7406","description":"go \u5982\u4f55\u8bfb\u53d6json \u6587\u4ef6 \u5982\u4f55\u751f\u6210\u6587\u4ef6 \u5982\u4f55\u89e3\u6790json \u6587\u4ef6","date":"2023-08-08T00:00:00.000Z","formattedDate":"2023\u5e748\u67088\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":0.405,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go  json \u5904\u7406","tags":["Go"],"authors":"ahKevinXy","description":"go \u5982\u4f55\u8bfb\u53d6json \u6587\u4ef6 \u5982\u4f55\u751f\u6210\u6587\u4ef6 \u5982\u4f55\u89e3\u6790json \u6587\u4ef6","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Go  File \u5904\u7406","permalink":"/blog/2023/08/08/go-file"},"nextItem":{"title":"Go select \u5b66\u4e60","permalink":"/blog/2023/08/08/go-select"}},"content":"![\u9884\u89c8\u56fe](https://source.unsplash.com/random?nature&24)\\n\\n\\n\\n\x3c!-- truncate --\x3e\\ngo  json \u6587\u4ef6\u5904\u7406 \u751f\u6210json \u6587\u4ef6\\n```json\\n{\\n  \\"name\\": \\"\u5f20\u4e09\\"\\n}\\n```\\n\\n```go\\npackage main\\n\\nimport (\\n\\t\\"fmt\\"\\n\\t\\"os\\"\\n)\\n\\ntype UserInfo struct {\\n\\tName string `json:\\"name\\"`\\n}\\nfunc main() {\\n\\n\\t// \u8bfb\u53d6\u6587\u4ef6\\n\\tfile, err := os.ReadFile(\\"main.json\\")\\n\\n\\tif err != nil {\\n\\t\\tfmt.Println(err)\\n\\t\\treturn\\n\\t}\\n\\tvar u UserInfo\\n    // \u5e8f\u5217\u5316\u6587\u4ef6\\n\\tif err =json.Unmarshal(file,&u);err !=nil {\\n\\t\\tfmt.Println(err)\\n\\t\\treturn \\n    }\\n\\tfmt.Println(u.Name)\\n\\t\\n}\\n\\n```"},{"id":"/2023/08/08/go-select","metadata":{"permalink":"/blog/2023/08/08/go-select","source":"@site/blog/2023/08/08/go-select.md","title":"Go select \u5b66\u4e60","description":"\u5982\u4f55\u4f7f\u7528 go select","date":"2023-08-08T00:00:00.000Z","formattedDate":"2023\u5e748\u67088\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":3.805,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go select \u5b66\u4e60","tags":["Go"],"authors":"ahKevinXy","description":"\u5982\u4f55\u4f7f\u7528 go select","hide_table_of_contents":false,"image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Go  json \u5904\u7406","permalink":"/blog/2023/08/08/go-json"},"nextItem":{"title":"JVM\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2023/08/01/jvm-0801"}},"content":"![\u9884\u89c8\u56fe](https://source.unsplash.com/random?nature&22)\\n\u5728 Go \u8bed\u8a00\u5185 `select` \u662f\u4e00\u4e2a\u5173\u952e\u5b57,\u7528\u4e8e\u76d1\u542c \u548c`channel` \u6709\u5173\u7684IO \u64cd\u4f5c\\n\\n\u901a\u8fc7 `select` \u8bed\u53e5,\u53ef\u4ee5\u540c\u65f6\u76d1\u542c\u591a\u4e2achannel,\u5e76\u5728\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a`channel` \u5c31\u7eea\u65f6\u8fdb\u884c\u5904\u7406\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n## \u57fa\u672c\u8bed\u6cd5\\n\\n`select` \u8bed\u53e5\u57fa\u672c\u8bed\u6cd5:\\n\\n\\n````go\\nselect {\\ncase <-channel1:\\n\\t\\n\\t// do channel1 \u903b\u8f91\\ncase data:= <-channel2:\\n\\t// \u901a\u8fc7channel \u5c31\u7eea\u65f6\u5019\u5904\u7406\\ndefault:\\n\\t// \u6ca1\u6709\u4efb\u4f55\u901a\u9053\u5c31\u7eea\u65f6\u8fdb\u884c\u5904\u7406\\n}\\n````\\n\u8bed\u6cd5\u7c7b\u578b `switch` \u76f8\u8bc6\\n\\n`switch` \u7528\u4e8e\u6761\u4ef6\u5224\u65ad \u800c `select` \u7528\u4e8e\u901a\u9053\u64cd\u4f5c.\u4e0d\u80fd\u5728`select`\u8bed\u53e5\u4e2d\u4f7f\u7528\u4efb\u610f\u7c7b\u578b\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u53ea\u80fd\u5bf9\u901a\u9053\u8fdb\u884c\u64cd\u4f5c\\n\\n\\n\\n## \u4f7f\u7528\u89c4\u5219\\n\\n1. `select` \u8bed\u53e5\u53ea\u80fd\u4f7f\u7528\u8fc7\u7a0b\u4e2d,\u7528\u4e8e\u591a\u4e2a\u901a\u9053\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9,\u4ee5\u76d1\u542c\u901a\u9053\u7684\u5c31\u7eea\u6628\u5929,\u800c\u4e0d\u662f\u7528\u4e8e\u5176\u5b83\u7c7b\u578b\u7684\u6761\u4ef6\u5224\u65ad\\n2. `select` \u8bed\u53e5\u53ef\u4ee5\u4fdd\u62a4\u591a\u4e2a`case`\u8bed\u53e5,\u6bcf\u4e2a`case`\u5b50\u53e5\u5bf9\u5e94\u4e00\u4e2a\u901a\u9053\u64cd\u4f5c,\u5f53\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a\u901a\u9053\u5c31\u7eea\u65f6,\u76f8\u5e94\u7684`case` \u5b50\u53e5\u5c06\u4f1a\u6267\u884c\\n3. \u5982\u679c\u591a\u4e2a\u901a\u8def\u90fd\u5c31\u7eea,`select` \u8bed\u53e5\u4f1a\u968f\u673a\u4e00\u4e2a\u901a\u9053\u6267\u884c,\u8fd9\u6837\u4fdd\u8bc1\u591a\u4e2a\u901a\u9053\u516c\u5e73\u7ade\u4e89\\n4. `select` \u8bed\u53e5\u7684\u6267\u884c\u53ef\u80fd\u662f\u963b\u585e,\u4e5f\u53ef\u4ee5\u662f\u975e\u963b\u585e.\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u901a\u9053\u5c31\u7eea\u6ca1\u6709\u9ed8\u8ba4\u7684 `default` \u5b50\u53e5,`select` \u8bed\u53e5\u4f1a\u963b\u585e,\u76f4\u5230\u6709\u4e00\u4e2a\u901a\u9053\u6765\u6267\u884c,\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u4e2a\u901a\u9053\u5c31\u7eea\u4e14\u6ca1\u6709\u9ed8\u8ba4\u7684`default`\u5b50\u53e5,`select` \u8bed\u53e5\u4f1a\u963b\u585e,\u76f4\u5230\u4e00\u4e2a\u901a\u9053\u5c31\u7eea.\u5982\u679c\u6709`default` \u5b50\u53e5,\u4e14\u6ca1\u6709\u4efb\u4f55\u901a\u9053\u5c31\u7eea,\u90a3\u4e48`select` \u8bed\u53e5\u4f1a\u6267\u884c`default` \u5b50\u53e5\uff0c\u4ece\u800c\u907f\u514d\u963b\u585e\u3002\\n\\n\\n## \u591a\u8def\u590d\u7528\\n\\n`select` \u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\uff0c\u540c\u65f6\u76d1\u542c\u591a\u4e2a\u901a\u9053\uff0c\u5e76\u6839\u636e\u5b83\u4eec\u7684\u5c31\u7eea\u72b6\u6001\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc main() {\\n    c1 := make(chan string)\\n    c2 := make(chan string)\\n\\n    go func() {\\n        time.Sleep(3 * time.Second)\\n        c1 <- \\"one\\"\\n    }()\\n\\n    go func() {\\n        time.Sleep(3 * time.Second)\\n        c2 <- \\"two\\"\\n    }()\\n\\n    select {\\n    case msg := <-c1:\\n        fmt.Println(msg)\\n    case msg := <-c2:\\n        fmt.Println(msg)\\n    }\\n}\\n\\n```\\n\\n\u6267\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u7a0b\u5e8f\u4f1a\u968f\u673a\u6253\u5370 one \u6216\u8005 two\uff0c\u5982\u679c\u901a\u9053\u4e3a\u7a7a\u7684\u8bdd\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u4e00\u76f4\u963b\u585e\u5728\u90a3\u91cc\u3002\\n\\n## \u975e\u963b\u585e\u901a\u4fe1\\n\\n\\n\u5f53\u901a\u9053\u4e2d\u6ca1\u6709\u6570\u636e\u53ef\u8bfb\u6216\u8005\u6ca1\u6709\u7f13\u51b2\u7a7a\u95f4\u53ef\u5199\u65f6\uff0c\u666e\u901a\u7684\u8bfb\u5199\u64cd\u4f5c\u5c06\u4f1a\u963b\u585e\u3002\\n\\n\u4f46\u901a\u8fc7 `select` \u8bed\u53e5\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6ca1\u6709\u6570\u636e\u5c31\u7eea\u65f6\u6267\u884c\u9ed8\u8ba4\u7684\u903b\u8f91\uff0c\u907f\u514d\u7a0b\u5e8f\u9677\u5165\u65e0\u9650\u7b49\u5f85\u72b6\u6001\u3002\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n)\\n\\nfunc main() {\\n    channel := make(chan int)\\n\\n    select {\\n    case data := <-channel:\\n        fmt.Println(\\"Received:\\", data)\\n    default:\\n        fmt.Println(\\"No data available.\\")\\n    }\\n}\\n\\n```\\n\\n\u6267\u884c\u4e0a\u9762\u4ee3\u7801\uff0c\u7a0b\u5e8f\u4f1a\u6267\u884c default \u5206\u652f\u3002\\n\\n## \u8d85\u65f6\u5904\u7406\\n\\n\u901a\u8fc7\u7ed3\u5408 `select` \u548c `time.After` \u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6307\u5b9a\u65f6\u95f4\u5185\u7b49\u5f85\u901a\u9053\u5c31\u7eea\uff0c\u8d85\u8fc7\u65f6\u95f4\u540e\u6267\u884c\u76f8\u5e94\u7684\u903b\u8f91\u3002\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"time\\"\\n)\\n\\nfunc main() {\\n    channel := make(chan int)\\n\\n    select {\\n    case data := <-channel:\\n        fmt.Println(\\"Received:\\", data)\\n    case <-time.After(3 * time.Second):\\n        fmt.Println(\\"Timeout occurred.\\")\\n    }\\n}\\n\\n```\\n\\n\u6267\u884c\u4e0a\u9762\u4ee3\u7801\uff0c\u5982\u679c `channel` \u5728 3 \u79d2\u5185\u6ca1\u6709\u6570\u636e\u53ef\u8bfb\uff0c`select` \u4f1a\u6267\u884c `time.After` \u5206\u652f\u3002"},{"id":"/2023/08/01/jvm-0801","metadata":{"permalink":"/blog/2023/08/01/jvm-0801","source":"@site/blog/2023/08/01/jvm-0801.md","title":"JVM\u5e38\u7528\u547d\u4ee4","description":"JVM\u5e38\u7528\u547d\u4ee4","date":"2023-08-01T00:00:00.000Z","formattedDate":"2023\u5e748\u67081\u65e5","tags":[{"label":"JVM","permalink":"/blog/tags/jvm"}],"readingTime":1.055,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"JVM\u5e38\u7528\u547d\u4ee4","tags":["JVM"],"authors":"Flankx","description":"JVM\u5e38\u7528\u547d\u4ee4","image":"https://source.unsplash.com/random?people&30"},"unlisted":false,"prevItem":{"title":"Go select \u5b66\u4e60","permalink":"/blog/2023/08/08/go-select"},"nextItem":{"title":"Hash \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","permalink":"/blog/2023/07/27/hash-1"}},"content":"### JVM\u5e38\u7528\u547d\u4ee4\\n\\n![\u9884\u89c8\u56fe](https://source.unsplash.com/random?nature&19)\\n\x3c!-- truncate --\x3e\\n\\n+ lsof -i:8902  **\u67e5\u770b\u7aef\u53e38902\u5bf9\u5e94\u5e94\u7528\u7684pid**\\n+ jstat -class PID  **\u7c7b\u52a0\u8f7d\u7edf\u8ba1**\\n+ jstat -compiler PID   **\u7f16\u8bd1\u7edf\u8ba1**\\n+ jstat -gc PID **\u5783\u573e\u56de\u6536\u7edf\u8ba1**\\n+ jstat -gccapacity PID  **\u5806\u5185\u5b58\u7edf\u8ba1**\\n+ jstat -gcutil PID **\u67e5\u770b\u5806\u6bd4\u4f8b**\\n+ jstat -gccause PID **GC\u7684\u539f\u56e0**\\n+ jstat -gcnew PID **\u65b0\u751f\u4ee3\u5783\u573e\u56de\u6536\u7edf\u8ba1**\\n+ jstat -gcnewcapacity PID **\u65b0\u751f\u4ee3\u5185\u5b58\u7edf\u8ba1**\\n+ jstat -gcold PID **\u8001\u5e74\u4ee3\u5783\u573e\u56de\u6536\u7edf\u8ba1**\\n+ jstat -gcoldcapcacity PID **\u8001\u5e74\u4ee3\u5185\u5b58\u7edf\u8ba1**\\n+ jstat -gcmetacapacity PID **\u5143\u6570\u636e\u7a7a\u95f4\u7edf\u8ba1**\\n+ jstat -printcompilation PID **JVM\u7f16\u8bd1\u65b9\u6cd5\u7edf\u8ba1**\\n+ jmap -histo PID **\u67e5\u770b\u7c7b\u7684\u5b9e\u4f8b**\\n+ jmap -heap PID **\u67e5\u770b\u5806\u6808\u4fe1\u606f**\\n+ jmap -dump:live,format=b,file=/tmp/m.hprof PID **\u4fdd\u5b58\u5185\u5b58\u7684\u5806\u6808\u4e3a\u6587\u4ef6**\\n+ jhat -J-Xmx2048m -port 5000 /tmp/m.hprof **\u5728\u7ebf\u67e5\u770b\u5806\u6587\u4ef6\u7684\u7c7b\uff0c\u901f\u5ea6\u6bd4\u8f83\u6162**\\n+ jcmd PID GC.run **\u5f3a\u5236gc**"},{"id":"/2023/07/27/hash-1","metadata":{"permalink":"/blog/2023/07/27/hash-1","source":"@site/blog/2023/07/27/hash-1.md","title":"Hash \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","description":"Hash \u51b2\u7a81 java \u5982\u4f55\u89e3\u51b3 Hash\u51b2\u7a81","date":"2023-07-27T00:00:00.000Z","formattedDate":"2023\u5e747\u670827\u65e5","tags":[{"label":"Hash","permalink":"/blog/tags/hash"}],"readingTime":1.74,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Hash \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","tags":["Hash"],"authors":"Flankx","description":"Hash \u51b2\u7a81 java \u5982\u4f55\u89e3\u51b3 Hash\u51b2\u7a81","image":"https://source.unsplash.com/random?people&29"},"unlisted":false,"prevItem":{"title":"JVM\u5e38\u7528\u547d\u4ee4","permalink":"/blog/2023/08/01/jvm-0801"},"nextItem":{"title":"Transactional \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548\uff1f","permalink":"/blog/2023/07/25/spring-0725"}},"content":"### `Hash` \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5\\n\\n1. \u5f00\u653e\u5b9a\u5740\u6cd5\\n    \u8fd9\u79cd\u65b9\u6cd5\u4e5f\u79f0\u518d\u6563\u5217\u6cd5\uff0c\u5176\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5f53\u5173\u952e\u5b57key\u7684\u54c8\u5e0c\u5730\u5740p=H\uff08key\uff09\u51fa\u73b0\u51b2\u7a81\u65f6\uff0c\u4ee5p\u4e3a\u57fa\u7840\uff0c\u4ea7\u751f\u53e6\u4e00\u4e2a\u54c8\u5e0c\u5730\u5740p1\uff0c\u5982\u679cp1\u4ecd\u7136\u51b2\u7a81\uff0c\u518d\u4ee5p\u4e3a\u57fa\u7840\uff0c\u4ea7\u751f\u53e6\u4e00\u4e2a\u54c8\u5e0c\u5730\u5740p2\uff0c\u2026\uff0c\u76f4\u5230\u627e\u51fa\u4e00\u4e2a\u4e0d\u51b2\u7a81\u7684\u54c8\u5e0c\u5730\u5740pi\xa0\uff0c\u5c06\u76f8\u5e94\u5143\u7d20\u5b58\u5165\u5176\u4e2d\u3002\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e00\u4e2a\u901a\u7528\u7684\u518d\u6563\u5217\u51fd\u6570\u5f62\u5f0f\uff1a\\n        Hi=\uff08H\uff08key\uff09+di\uff09% m\xa0\xa0 i=1\uff0c2\uff0c\u2026\uff0cn\\n\\n2. \u518d\u54c8\u5e0c\u6cd5\\n    \u8fd9\u79cd\u65b9\u6cd5\u662f\u540c\u65f6\u6784\u9020\u591a\u4e2a\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570\uff1a\\n        Hi=RH1\uff08key\uff09\xa0 i=1\uff0c2\uff0c\u2026\uff0ck\\n    \u5f53\u54c8\u5e0c\u5730\u5740Hi=RH1\uff08key\uff09\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u518d\u8ba1\u7b97Hi=RH2\uff08key\uff09\u2026\u2026\uff0c\u76f4\u5230\u51b2\u7a81\u4e0d\u518d\u4ea7\u751f\u3002\u8fd9\u79cd\u65b9\u6cd5\u4e0d\u6613\u4ea7\u751f\u805a\u96c6\uff0c\u4f46\u589e\u52a0\u4e86\u8ba1\u7b97\u65f6\u95f4\\n\\n3. \u94fe\u5730\u5740\u6cd5\\n    \u8fd9\u79cd\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u6240\u6709\u54c8\u5e0c\u5730\u5740\u4e3ai\u7684\u5143\u7d20\u6784\u6210\u4e00\u4e2a\u79f0\u4e3a\u540c\u4e49\u8bcd\u94fe\u7684\u5355\u94fe\u8868\uff0c\u5e76\u5c06\u5355\u94fe\u8868\u7684\u5934\u6307\u9488\u5b58\u5728\u54c8\u5e0c\u8868\u7684\u7b2ci\u4e2a\u5355\u5143\u4e2d\uff0c\u56e0\u800c\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u4e3b\u8981\u5728\u540c\u4e49\u8bcd\u94fe\u4e2d\u8fdb\u884c\u3002\u94fe\u5730\u5740\u6cd5\u9002\u7528\u4e8e\u7ecf\u5e38\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u7684\u60c5\u51b5\\n\\n4. \u5efa\u7acb\u516c\u5171\u6ea2\u51fa\u533a\\n    \u8fd9\u79cd\u65b9\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5c06\u54c8\u5e0c\u8868\u5206\u4e3a\u57fa\u672c\u8868\u548c\u6ea2\u51fa\u8868\u4e24\u90e8\u5206\uff0c\u51e1\u662f\u548c\u57fa\u672c\u8868\u53d1\u751f\u51b2\u7a81\u7684\u5143\u7d20\uff0c\u4e00\u5f8b\u586b\u5165\u6ea2\u51fa\u8868"},{"id":"/2023/07/25/spring-0725","metadata":{"permalink":"/blog/2023/07/25/spring-0725","source":"@site/blog/2023/07/25/spring-0725.md","title":"Transactional \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548\uff1f","description":"Spring\u4e8b\u7269 Spring\u5982\u4f55\u89e3\u51b3\u4e8b\u52a1\u95ee\u9898","date":"2023-07-25T00:00:00.000Z","formattedDate":"2023\u5e747\u670825\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"}],"readingTime":0.585,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Transactional \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548\uff1f","tags":["Spring"],"authors":"Flankx","description":"Spring\u4e8b\u7269 Spring\u5982\u4f55\u89e3\u51b3\u4e8b\u52a1\u95ee\u9898","image":"https://source.unsplash.com/random?people&23"},"unlisted":false,"prevItem":{"title":"Hash \u51b2\u7a81\u89e3\u51b3\u65b9\u6cd5","permalink":"/blog/2023/07/27/hash-1"},"nextItem":{"title":"\u5982\u4f55\u4fdd\u8bc1 redis \u7f13\u5b58\u4e00\u81f4\u6027\uff1f","permalink":"/blog/2023/07/24/redis-4"}},"content":"* `@Transactional`\xa0\u6ce8\u89e3\u53ea\u6709\u4f5c\u7528\u5230 public \u65b9\u6cd5\u4e0a\u4e8b\u52a1\u624d\u751f\u6548\uff0c\u4e0d\u63a8\u8350\u5728\u63a5\u53e3\u4e0a\u4f7f\u7528\uff1b\\n* \u907f\u514d\u540c\u4e00\u4e2a\u7c7b\u4e2d\u8c03\u7528\xa0`@Transactional`\xa0\u6ce8\u89e3\u7684\u65b9\u6cd5\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u4e8b\u52a1\u5931\u6548\uff1b\\n* \u6b63\u786e\u7684\u8bbe\u7f6e\xa0`@Transactional`\xa0\u7684\xa0`rollbackFor`\xa0\u548c\xa0`propagation`\xa0\u5c5e\u6027\uff0c\u5426\u5219\u4e8b\u52a1\u53ef\u80fd\u4f1a\u56de\u6eda\u5931\u8d25;\\n* \u88ab\xa0`@Transactional`\xa0\u6ce8\u89e3\u7684\u65b9\u6cd5\u6240\u5728\u7684\u7c7b\u5fc5\u987b\u88ab `Spring` \u7ba1\u7406\uff0c\u5426\u5219\u4e0d\u751f\u6548\uff1b\\n* \u5e95\u5c42\u4f7f\u7528\u7684\u6570\u636e\u5e93\u5fc5\u987b\u652f\u6301\u4e8b\u52a1\u673a\u5236\uff0c\u5426\u5219\u4e0d\u751f\u6548\uff1b"},{"id":"/2023/07/24/redis-4","metadata":{"permalink":"/blog/2023/07/24/redis-4","source":"@site/blog/2023/07/24/redis-4.md","title":"\u5982\u4f55\u4fdd\u8bc1 redis \u7f13\u5b58\u4e00\u81f4\u6027\uff1f","description":"Redis\u4e00\u81f4\u6027 redis \u5982\u4f55\u4f7f\u7528\u5230\u7f13\u5b58\u4e00\u81f4\u6027","date":"2023-07-24T00:00:00.000Z","formattedDate":"2023\u5e747\u670824\u65e5","tags":[{"label":"Redis","permalink":"/blog/tags/redis"}],"readingTime":1.175,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"\u5982\u4f55\u4fdd\u8bc1 redis \u7f13\u5b58\u4e00\u81f4\u6027\uff1f","tags":["Redis"],"authors":"Flankx","description":"Redis\u4e00\u81f4\u6027 redis \u5982\u4f55\u4f7f\u7528\u5230\u7f13\u5b58\u4e00\u81f4\u6027","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Transactional \u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f1a\u5931\u6548\uff1f","permalink":"/blog/2023/07/25/spring-0725"},"nextItem":{"title":"Redis\u6570\u636e\u7ed3\u6784","permalink":"/blog/2023/07/23/redis-3"}},"content":"## \u65b9\u6848\u4e00\\n\\n### \u91c7\u7528\u5ef6\u65f6\u53cc\u5220\u7b56\u7565\\n\\n+ \u57fa\u672c\u601d\u8def\uff1a \u5728\u5199\u5e93\u524d\u540e\u90fd\u8fdb\u884c\u5220\u9664\u7f13\u5b58\u64cd\u4f5c\uff0c\u5e76\u4e14\u8bbe\u7f6e\u5408\u7406\u7684\u8d85\u65f6\u65f6\u95f4\\n+ \u57fa\u672c\u6b65\u9aa4\uff1a \u5148\u5220\u9664\u7f13\u5b58\u2013\u518d\u5199\u6570\u636e\u5e93\u2014\u4f11\u7720\u4e00\u6bb5\u65f6\u95f4\u2014\u518d\u6b21\u5220\u9664\u7f13\u5b58\\n  \u6ce8\uff1a\u4f11\u7720\u7684\u65f6\u95f4\u662f\u6839\u636e\u81ea\u5df1\u7684\u9879\u76ee\u7684\u8bfb\u6570\u636e\u4e1a\u52a1\u903b\u8f91\u7684\u8017\u65f6\u6765\u786e\u5b9a\u7684\u3002\u8fd9\u6837\u505a\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5728\u5199\u8bf7\u6c42\u4e4b\u524d\u786e\u4fdd\u8bfb\u8bf7\u6c42\u7ed3\u675f\uff0c\u5199\u8bf7\u6c42\u53ef\u4ee5\u5220\u9664\u8bfb\u8bf7\u6c42\u9020\u6210\u7684\u7f13\u5b58\u810f\u6570\u636e\u3002\\n+ \u8be5\u65b9\u6848\u7684\u5f0a\u7aef\uff1a \u96c6\u5408\u53cc\u5220\u7b56\u7565+\u7f13\u5b58\u8d85\u65f6\u7b56\u7565\u8bbe\u7f6e\uff0c\u8fd9\u6837\u6700\u5dee\u7684\u7ed3\u679c\u5c31\u662f\u5728\u8d85\u65f6\u65f6\u95f4\u5185\u6570\u636e\u5b58\u5728\u4e0d\u4e00\u81f4\uff0c\u53c8\u589e\u52a0\u4e86\u5199\u8bf7\u6c42\u7684\u8017\u65f6\u3002\\n\\n## \u65b9\u6848\u4e8c\\n\\n### \u4e00\u6b65\u66f4\u65b0\u7f13\u5b58\uff08\u57fa\u4e8e\u8ba2\u9605Binlog\u7684\u540c\u6b65\u673a\u5236\uff09\\n\\n+ \u57fa\u672c\u601d\u8def\uff1a `MySQL Binlog`\u589e\u5f3a\u8ba2\u9605\u6d88\u8d39 + \u6d88\u606f\u961f\u5217 + \u589e\u91cf\u6570\u636e\u66f4\u65b0\u5230`Redis`\u3002"},{"id":"/2023/07/23/redis-3","metadata":{"permalink":"/blog/2023/07/23/redis-3","source":"@site/blog/2023/07/23/redis-3.md","title":"Redis\u6570\u636e\u7ed3\u6784","description":"Redis\u6570\u636e\u7ed3\u6784 redis \u5e38\u7528\u6570\u636e\u5e93\u7ed3\u6784\u4e0e\u4f7f\u7528","date":"2023-07-23T00:00:00.000Z","formattedDate":"2023\u5e747\u670823\u65e5","tags":[{"label":"Redis","permalink":"/blog/tags/redis"}],"readingTime":0.245,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Redis\u6570\u636e\u7ed3\u6784","tags":["Redis"],"authors":"Flankx","description":"Redis\u6570\u636e\u7ed3\u6784 redis \u5e38\u7528\u6570\u636e\u5e93\u7ed3\u6784\u4e0e\u4f7f\u7528","image":"https://source.unsplash.com/random?people&29"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u4fdd\u8bc1 redis \u7f13\u5b58\u4e00\u81f4\u6027\uff1f","permalink":"/blog/2023/07/24/redis-4"},"nextItem":{"title":"Redis \u6dd8\u6c70\u673a\u5236","permalink":"/blog/2023/07/22/redis-2"}},"content":"### 5\u79cd\u57fa\u7840\u6570\u636e\u7ed3\u6784\\n\\n+ String\u5b57\u7b26\u4e32\\n+ List\u5217\u8868\\n+ Set\u96c6\u5408\\n+ Hash\u6563\u5217\\n+ Zset\u6709\u5e8f\u96c6\u5408\\n\\n### 3\u79cd\u7279\u6b8a\u6570\u636e\u7ed3\u6784\\n\\n+ HyperLogLogs\u57fa\u6570\u7edf\u8ba1\\n+ Bitmap\u4f4d\u5b58\u50a8\\n+ Geospatial\u5730\u7406\u4f4d\u7f6e"},{"id":"/2023/07/22/redis-2","metadata":{"permalink":"/blog/2023/07/22/redis-2","source":"@site/blog/2023/07/22/redis-2.md","title":"Redis \u6dd8\u6c70\u673a\u5236","description":"Redis \u6dd8\u6c70\u673a\u5236 redis\u5982\u4f55\u6dd8\u6c70","date":"2023-07-22T00:00:00.000Z","formattedDate":"2023\u5e747\u670822\u65e5","tags":[{"label":"Redis","permalink":"/blog/tags/redis"}],"readingTime":1.425,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Redis \u6dd8\u6c70\u673a\u5236","tags":["Redis"],"authors":"Flankx","description":"Redis \u6dd8\u6c70\u673a\u5236 redis\u5982\u4f55\u6dd8\u6c70","image":"https://source.unsplash.com/random?people&26"},"unlisted":false,"prevItem":{"title":"Redis\u6570\u636e\u7ed3\u6784","permalink":"/blog/2023/07/23/redis-3"},"nextItem":{"title":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","permalink":"/blog/2023/07/21/redis-1"}},"content":"### `Redis`\u63d0\u4f9b6\u79cd\u6570\u636e\u6dd8\u6c70\u7b56\u7565\\n\\n1. `volatile-lru`\uff08least recently used\uff09\uff1a\u4ece\u5df2\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u96c6\uff08server.db[i].expires\uff09\u4e2d\u6311\u9009\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684\u6570\u636e\u6dd8\u6c70\\n2. `volatile-ttl`\uff1a\u4ece\u5df2\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u96c6\uff08server.db[i].expires\uff09\u4e2d\u6311\u9009\u5c06\u8981\u8fc7\u671f\u7684\u6570\u636e\u6dd8\u6c70\\n3. `volatile-random`\uff1a\u4ece\u5df2\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u96c6\uff08server.db[i].expires\uff09\u4e2d\u4efb\u610f\u9009\u62e9\u6570\u636e\u6dd8\u6c70\\n4. `allkeys-lru`\uff08least recently used\uff09\uff1a\u5f53\u5185\u5b58\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u65b0\u5199\u5165\u6570\u636e\u65f6\uff0c\u5728\u952e\u7a7a\u95f4\u4e2d\uff0c\u79fb\u9664\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7684 key\uff08\u8fd9\u4e2a\u662f\u6700\u5e38\u7528\u7684\uff09\\n5. `allkeys-random`\uff1a\u4ece\u6570\u636e\u96c6\uff08server.db[i].dict\uff09\u4e2d\u4efb\u610f\u9009\u62e9\u6570\u636e\u6dd8\u6c70\\n6. `no-eviction`\uff1a\u7981\u6b62\u9a71\u9010\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u5185\u5b58\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u65b0\u5199\u5165\u6570\u636e\u65f6\uff0c\u65b0\u5199\u5165\u64cd\u4f5c\u4f1a\u62a5\u9519\u3002\u8fd9\u4e2a\u5e94\u8be5\u6ca1\u4eba\u4f7f\u7528\u5427\uff01\\n4.0 \u7248\u672c\u540e\u589e\u52a0\u4ee5\u4e0b\u4e24\u79cd\uff1a\\n7. `volatile-lfu`\uff08least frequently used\uff09\uff1a\u4ece\u5df2\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u7684\u6570\u636e\u96c6\uff08server.db[i].expires\uff09\u4e2d\u6311\u9009\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684\u6570\u636e\u6dd8\u6c70\\n8. `allkeys-lfu`\uff08least frequently used\uff09\uff1a\u5f53\u5185\u5b58\u4e0d\u8db3\u4ee5\u5bb9\u7eb3\u65b0\u5199\u5165\u6570\u636e\u65f6\uff0c\u5728\u952e\u7a7a\u95f4\u4e2d\uff0c\u79fb\u9664\u6700\u4e0d\u7ecf\u5e38\u4f7f\u7528\u7684 key\\n\\n### Redis\u6301\u4e45\u5316\u673a\u5236\\n\\n1. RDB\u5feb\u7167\\n2. AOF\u53ea\u8ffd\u52a0\u6587\u4ef6"},{"id":"/2023/07/21/redis-1","metadata":{"permalink":"/blog/2023/07/21/redis-1","source":"@site/blog/2023/07/21/redis-1.md","title":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","description":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","date":"2023-07-21T00:00:00.000Z","formattedDate":"2023\u5e747\u670821\u65e5","tags":[{"label":"Redis","permalink":"/blog/tags/redis"}],"readingTime":0.11,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","tags":["Redis"],"authors":"Flankx","description":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","image":"https://source.unsplash.com/random?people&25"},"unlisted":false,"prevItem":{"title":"Redis \u6dd8\u6c70\u673a\u5236","permalink":"/blog/2023/07/22/redis-2"},"nextItem":{"title":"\u9501\u7684\u72b6\u6001","permalink":"/blog/2023/07/20/lock-2"}},"content":"### `Redis` \u7f13\u5b58\u51fb\u7a7f\u3001\u7a7f\u900f\u3001\u96ea\u5d29\u7b49\u573a\u666f\u7684\u5904\u7406\u65b9\u5f0f\\n\x3c!-- truncate --\x3e\\n![Alt text](redis-1.png)"},{"id":"/2023/07/20/lock-2","metadata":{"permalink":"/blog/2023/07/20/lock-2","source":"@site/blog/2023/07/20/lock-2.md","title":"\u9501\u7684\u72b6\u6001","description":"java \u9501\u7684\u72b6\u6001 \u5982\u4f55\u4f7f\u7528java \u9501","date":"2023-07-20T00:00:00.000Z","formattedDate":"2023\u5e747\u670820\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.315,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"\u9501\u7684\u72b6\u6001","tags":["Java"],"authors":"Flankx","description":"java \u9501\u7684\u72b6\u6001 \u5982\u4f55\u4f7f\u7528java \u9501","image":"https://source.unsplash.com/random?people&23"},"unlisted":false,"prevItem":{"title":"Redis\u7f13\u5b58\u5f02\u5e38\u5904\u7406","permalink":"/blog/2023/07/21/redis-1"},"nextItem":{"title":"synchronized & ReentrantLock \u533a\u522b","permalink":"/blog/2023/07/19/lock-1"}},"content":"## \u9501\u72b6\u6001\uff1a\u65e0\u9501\u72b6\u6001\u3001\u504f\u5411\u9501\u72b6\u6001\u3001\u8f7b\u91cf\u7ea7\u9501\u72b6\u6001\u548c\u91cd\u91cf\u7ea7\u9501\u72b6\u6001\uff0c\u8fd9\u51e0\u4e2a\u72b6\u6001\u4f1a\u968f\u7740\u7ade\u4e89\u60c5\u51b5\u9010\u6e10\u5347\u7ea7\u3002\u9501\u53ef\u4ee5\u5347\u7ea7\u4f46\u4e0d\u80fd\u964d\u7ea7\\n\\n![Alt text](16315d056598e4c2~tplv-t2oaga2asx-zoom-in-crop-mark-3024-0-0-0.awebp.webp)\\n\\n## \u5404\u79cd\u9501\u7684\u6bd4\u8f83\\n\\n![Alt text](<lock-2.webp>)"},{"id":"/2023/07/19/lock-1","metadata":{"permalink":"/blog/2023/07/19/lock-1","source":"@site/blog/2023/07/19/lock-1.md","title":"synchronized & ReentrantLock \u533a\u522b","description":"Java \u9501\u7684\u533a\u522b \u5982\u4f55\u4f7f\u7528java \u9501","date":"2023-07-19T00:00:00.000Z","formattedDate":"2023\u5e747\u670819\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":0.86,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"synchronized & ReentrantLock \u533a\u522b","tags":["Java"],"authors":"Flankx","description":"Java \u9501\u7684\u533a\u522b \u5982\u4f55\u4f7f\u7528java \u9501","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"\u9501\u7684\u72b6\u6001","permalink":"/blog/2023/07/20/lock-2"},"nextItem":{"title":"SpringBoot\u81ea\u52a8\u914d\u7f6e\u5b9e\u73b0\u539f\u7406","permalink":"/blog/2023/07/18/autoconfig-1"}},"content":"| \u7c7b\u522b | synchronized | ReentrantLock |\\n|--|--|--|\\n| \u5b58\u5728\u5c42\u6b21 | Java\u7684\u5173\u952e\u5b57\uff0cJVM\u5c42\u9762 | \u662f\u4e00\u4e2a\u7c7b |\\n| \u9501\u7684\u91ca\u653e | 1.\u4ee5\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u6267\u884c\u540c\u6b65\u4ee3\u7801\uff0c\u91ca\u653e\u9501 2.\u7ebf\u7a0b\u6267\u884c\u53d1\u751f\u4e00\u6b21\uff0cJVM\u4f1a\u8ba9\u7ebf\u7a0b\u91ca\u653e\u9501|\u5728finally\u4e2d\u5fc5\u987b\u91ca\u653e\u9501\uff0c\u4e0d\u7136\u5bb9\u6613\u9020\u6210\u7ebf\u7a0b\u6b7b\u9501|\\n| \u9501\u7684\u83b7\u53d6 | \u52a0\u9501A\u7ebf\u7a0b\u83b7\u5f97\u9501\uff0cB\u7ebf\u7a0b\u7b49\u5f85\uff0c\u5982\u679cA\u963b\u585e\uff0cB\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u7b49\u5f85|\u5206\u60c5\u51b5\u800c\u5b9a\uff0cLock\u6709\u591a\u79cd\u9501\u7684\u83b7\u53d6\u65b9\u5f0f condition |\\n| \u9501\u72b6\u6001 |\u65e0\u6cd5\u5224\u65ad | \u53ef\u4ee5\u5224\u65ad|\\n| \u9501\u7c7b\u578b | \u53ef\u91cd\u5165\uff0c\u4e0d\u53ef\u5224\u65ad\uff0c\u975e\u516c\u5e73| \u53ef\u91cd\u5165\uff0c\u53ef\u5224\u65ad\uff0c\u53ef\u516c\u5e73|\\n| \u6027\u80fd | \u5c11\u91cf\u540c\u6b65 | \u5927\u91cf\u540c\u6b65 |"},{"id":"/2023/07/18/autoconfig-1","metadata":{"permalink":"/blog/2023/07/18/autoconfig-1","source":"@site/blog/2023/07/18/autoconfig-1.md","title":"SpringBoot\u81ea\u52a8\u914d\u7f6e\u5b9e\u73b0\u539f\u7406","description":"Spring boot \u5982\u4f55\u81ea\u52a8\u914d\u7f6e","date":"2023-07-18T00:00:00.000Z","formattedDate":"2023\u5e747\u670818\u65e5","tags":[{"label":"SpringBoot","permalink":"/blog/tags/spring-boot"}],"readingTime":1.395,"hasTruncateMarker":false,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"SpringBoot\u81ea\u52a8\u914d\u7f6e\u5b9e\u73b0\u539f\u7406","tags":["SpringBoot"],"authors":"Flankx","description":"Spring boot \u5982\u4f55\u81ea\u52a8\u914d\u7f6e","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"synchronized & ReentrantLock \u533a\u522b","permalink":"/blog/2023/07/19/lock-1"},"nextItem":{"title":"\u5982\u4f55\u5f00\u53d1\u4e00\u4e0b\u9002\u5408\u81ea\u5df1\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf","permalink":"/blog/2023/07/18/develop"}},"content":"`SpringBoot` \u5b9a\u4e49\u4e86\u4e00\u5957\u63a5\u53e3\u89c4\u8303\uff0c\u8fd9\u5957\u89c4\u8303\u89c4\u5b9a\uff1a`SpringBoot` \u5728\u542f\u52a8\u65f6\u4f1a\u626b\u63cf\u5916\u90e8\u5f15\u7528 jar \u5305\u4e2d\u7684 `META-INF/spring.factories` \u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u7c7b\u578b\u4fe1\u606f\u52a0\u8f7d\u5230 Spring \u5bb9\u5668\uff08\u6b64\u5904\u6d89\u53ca\u5230 JVM \u7c7b\u52a0\u8f7d\u673a\u5236\u4e0e `Spring` \u7684\u5bb9\u5668\u77e5\u8bc6\uff09\uff0c\u5e76\u6267\u884c\u7c7b\u4e2d\u5b9a\u4e49\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u5bf9\u4e8e\u5916\u90e8 jar \u6765\u8bf4\uff0c\u53ea\u9700\u8981\u6309\u7167 `SpringBoot` \u5b9a\u4e49\u7684\u6807\u51c6\uff0c\u5c31\u80fd\u5c06\u81ea\u5df1\u7684\u529f\u80fd\u88c5\u7f6e\u8fdb `SpringBoot`\\n+ `@SpringBootApplication` \u770b\u4f5c\u662f\xa0`@Configuration`\u3001`@EnableAutoConfiguration`\u3001`@ComponentScan`\xa0\u6ce8\u89e3\u7684\u96c6\u5408\\n+ `@EnableAutoConfiguration`\uff1a\u542f\u7528 `SpringBoot` \u7684\u81ea\u52a8\u914d\u7f6e\u673a\u5236\\n+ `@Configuration`\uff1a\u5141\u8bb8\u5728\u4e0a\u4e0b\u6587\u4e2d\u6ce8\u518c\u989d\u5916\u7684 bean \u6216\u5bfc\u5165\u5176\u4ed6\u914d\u7f6e\u7c7b\\n+ `@ComponentScan`\uff1a \u626b\u63cf\u88ab `@Component`\xa0(`@Service`,`@Controller`)\u6ce8\u89e3\u7684 bean\uff0c\u6ce8\u89e3\u9ed8\u8ba4\u4f1a\u626b\u63cf\u542f\u52a8\u7c7b\u6240\u5728\u7684\u5305\u4e0b\u6240\u6709\u7684\u7c7b \uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e0d\u626b\u63cf\u67d0\u4e9b bean\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5bb9\u5668\u4e2d\u5c06\u6392\u9664TypeExcludeFilter\u548cAutoConfigurationExcludeFilter\u3002\\n\\n\u603b\u7ed3\uff1a`SpringBoot` \u901a\u8fc7 `@EnableAutoConfiguration` \u5f00\u542f\u81ea\u52a8\u88c5\u914d\uff0c\u901a\u8fc7 `SpringFactoriesLoader` \u6700\u7ec8\u52a0\u8f7d `META-INF/spring.factories` \u4e2d\u7684\u81ea\u52a8\u914d\u7f6e\u7c7b\u5b9e\u73b0\u81ea\u52a8\u88c5\u914d\uff0c\u81ea\u52a8\u914d\u7f6e\u7c7b\u5176\u5b9e\u5c31\u662f\u901a\u8fc7`@Conditional` \u6309\u9700\u52a0\u8f7d\u7684\u914d\u7f6e\u7c7b\uff0c\u60f3\u8981\u5176\u751f\u6548\u5fc5\u987b\u5f15\u5165   `spring-boot-starter-xxx` \u5305\u5b9e\u73b0\u8d77\u6b65\u4f9d\u8d56"},{"id":"/2023/07/18/develop","metadata":{"permalink":"/blog/2023/07/18/develop","source":"@site/blog/2023/07/18/develop.md","title":"\u5982\u4f55\u5f00\u53d1\u4e00\u4e0b\u9002\u5408\u81ea\u5df1\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf","description":"umax-admin \u4ece\u96f6\u5f00\u53d1\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf","date":"2023-07-18T00:00:00.000Z","formattedDate":"2023\u5e747\u670818\u65e5","tags":[{"label":"React","permalink":"/blog/tags/react"},{"label":"admin","permalink":"/blog/tags/admin"}],"readingTime":0.235,"hasTruncateMarker":true,"authors":[{"name":"Easytooler","title":"\u7b80\u5355\u7684\u5de5\u5177\u4eba","url":"https://github.com/Easytooler","email":"ah_kevin_xy@126.com","imageURL":"https://avatars.githubusercontent.com/u/34731555","key":"Easytooler"}],"frontMatter":{"title":"\u5982\u4f55\u5f00\u53d1\u4e00\u4e0b\u9002\u5408\u81ea\u5df1\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf","tags":["React","admin"],"authors":"Easytooler","image":"https://source.unsplash.com/random?people&23","description":"umax-admin \u4ece\u96f6\u5f00\u53d1\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf"},"unlisted":false,"prevItem":{"title":"SpringBoot\u81ea\u52a8\u914d\u7f6e\u5b9e\u73b0\u539f\u7406","permalink":"/blog/2023/07/18/autoconfig-1"},"nextItem":{"title":"\u5982\u4f55\u4f7f\u7528 warp+\u768424PB \u6d41\u91cf\u8d26\u53f7","permalink":"/blog/2023/07/16/warp"}},"content":"\u5e02\u573a\u4e0a\u5f88\u591a gin vue admin \u7b49\u7ba1\u7406\u7cfb\u7edf \\n\\n\u76f8\u5bf9\u6765\u8bf4\u6ca1\u6709\u4e00\u4e2a\u5408\u9002\u7684 react admin \u7ba1\u7406\u540e\u53f0\\n\\n\\n\x3c!-- truncate --\x3e\\n##  \u6280\u672f\u9009\u9879\\n\\n\\n## \u65b9\u6848\u8bbe\u8ba1\\n\\n\\n\\n## \u6280\u672f\u8bbe\u8ba1\\n\\n\\n## \u603b\u7ed3"},{"id":"/2023/07/16/warp","metadata":{"permalink":"/blog/2023/07/16/warp","source":"@site/blog/2023/07/16/warp.md","title":"\u5982\u4f55\u4f7f\u7528 warp+\u768424PB \u6d41\u91cf\u8d26\u53f7","description":"\u5982\u4f55\u8f7b\u677e\u4f7f warp+ \u83b7\u53d6 24PB \u6d41\u91cf\u8d26\u53f7  1.1.1.1\u5982\u4f55\u83b7\u5f97\u514d\u8d39\u6d41\u91cf github \u52a0\u901f github \u901f\u5ea6\u63d0\u5347 \u65e0\u6cd5\u6253\u5f00github","date":"2023-07-16T21:48:40.000Z","formattedDate":"2023\u5e747\u670816\u65e5","tags":[{"label":"\u6559\u7a0b","permalink":"/blog/tags/\u6559\u7a0b"}],"readingTime":1.205,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u4f7f\u7528 warp+\u768424PB \u6d41\u91cf\u8d26\u53f7","tags":["\u6559\u7a0b"],"authors":"ahKevinXy","description":"\u5982\u4f55\u8f7b\u677e\u4f7f warp+ \u83b7\u53d6 24PB \u6d41\u91cf\u8d26\u53f7  1.1.1.1\u5982\u4f55\u83b7\u5f97\u514d\u8d39\u6d41\u91cf github \u52a0\u901f github \u901f\u5ea6\u63d0\u5347 \u65e0\u6cd5\u6253\u5f00github","hide_table_of_contents":true,"date":"2023-07-16T21:48:40.000Z"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u5f00\u53d1\u4e00\u4e0b\u9002\u5408\u81ea\u5df1\u540e\u53f0\u7ba1\u7406\u7cfb\u7edf","permalink":"/blog/2023/07/18/develop"},"nextItem":{"title":"Java\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","permalink":"/blog/2023/07/16/Java-1"}},"content":"github  \u65e0\u6cd5\u6253\u5f00\u95ee\u9898\u89e3\u51b3\\n\\n\u514d\u8d39\u9001\u768424PB \u6709\u624b\u5c31\u53ef\u4ee5\u9886\u53d6\u7684\u798f\u5229\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u4e0b\u8f7d warp \u5ba2\u6237\u7aef\\n\\n[\u4e0b\u8f7d\u5730\u5740](https://1.1.1.1/)\\n\\n## \u5b89\u88c5 warp\\n\\n\\n## \u83b7\u53d6\u6b65\u9aa4\\n\\n\\n### \u901a\u8fc7\u63a5\u53e3\u7684\u5f62\u5f0f\u83b7\u53d6 1\u4e2a G \u6d41\u91cf\\n\\n1. \u6253\u5f00\u8fd9\u4e2a\u9879\u76ee: https://replit.com/@misaka-blog/warp-key-generator \uff0c\u70b9\u51fb\u7eff\u8272\u7684\u201crun\u201d\u6309\u94ae\\n\\n![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/1.jpeg)\\n\\n\\n2. \u8f93\u5165\u751f\u6210\u7684\u5bc6\u94a5\u6570\u91cf\uff0c\u7136\u540e\u56de\u8f66\\n   ![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/2.jpeg)\\n3. \u751f\u6210\u7684\u5bc6\u94a5\u5c06\u4f1a\u663e\u793a\u5728\u63a7\u5236\u53f0\u4e0a\u9762\uff0c\u590d\u5236\u7c98\u8d34\u5907\u7528\\n\\n### \u83b7\u53d6 24PB \u6d41\u91cf\\n\\n1. \u6253\u5f00 [Telegram](https://web.telegram.org/)\\n\\n2. \u6253\u5f00\u8fd9\u4e2aTG\u9891\u9053\uff1a[@warpplus](https://t.me/warpplus)\uff0c\u627e\u5230\u9891\u9053\u6700\u65b0\u53d1\u5e03\u7684WARP+\u7684\u8d26\u6237\u5bc6\u94a5\\n   ![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/3.png)\\n3. \u4e5f\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2aTG Bot\uff1a[@generatewarpplusbot](https://t.me/generatewarpplusbot)\uff0c\u751f\u6210\u4e00\u4e2a\u81ea\u5df1\u72ec\u6709\u7684WARP+\u8d26\u6237\u5bc6\u94a5\\n   ![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/4.png)\\n4. \u6309\u7167\u4e0b\u65b9\u6b65\u9aa4\uff0c\u8f93\u5165\u9891\u9053\u6216\u8005\u662f\u673a\u5668\u4eba\u63d0\u4f9b\u7684WARP+\u5bc6\u94a5\\n5. \u8fd9\u5c31\u767d\u5ad6\u4e86\u4e00\u4e2aWARP+ 24PB\u6d41\u91cf\u7684\u8d26\u6237\u4e86\\n   ![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/5.png)\\n   ![\u67e5\u770b\u56fe\u7247](/img/blog/2023/07/16/6.png)"},{"id":"/2023/07/16/Java-1","metadata":{"permalink":"/blog/2023/07/16/Java-1","source":"@site/blog/2023/07/16/Java-1.md","title":"Java\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","description":"\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","date":"2023-07-16T00:00:00.000Z","formattedDate":"2023\u5e747\u670816\u65e5","tags":[{"label":"Java","permalink":"/blog/tags/java"}],"readingTime":1.395,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Java\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","tags":["Java"],"authors":"Flankx","description":"\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","image":"https://source.unsplash.com/random?people&23"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u4f7f\u7528 warp+\u768424PB \u6d41\u91cf\u8d26\u53f7","permalink":"/blog/2023/07/16/warp"},"nextItem":{"title":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","permalink":"/blog/2023/07/15/Spring-1 "}},"content":"## \u76f8\u540c\u70b9\\n\\n+ \uff081\uff09\u90fd\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\\n+ \uff082\uff09\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u6216\u62bd\u8c61\u7c7b\u7684\u5b50\u7c7b\u90fd\u53ea\u6709\u5b9e\u73b0\u4e86\u63a5\u53e3\u6216\u62bd\u8c61\u7c7b\u4e2d\u7684\u65b9\u6cd5\u540e\u624d\u80fd\u5b9e\u4f8b\u5316\u3002\\n\x3c!-- truncate --\x3e\\n## \u4e0d\u540c\u70b9\\n\\n+ \uff081\uff09\u63a5\u53e3\u53ea\u6709\u5b9a\u4e49\uff0c\u4e0d\u80fd\u6709\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0cjava 1.8\u4e2d\u53ef\u4ee5\u5b9a\u4e49default\u65b9\u6cd5\u4f53\uff0c\u800c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u6709\u5b9a\u4e49\u4e0e\u5b9e\u73b0\uff0c\u65b9\u6cd5\u53ef\u5728\u62bd\u8c61\u7c7b\u4e2d\u5b9e\u73b0\u3002\\n+ \uff082\uff09\u5b9e\u73b0\u63a5\u53e3\u7684\u5173\u952e\u5b57\u4e3aimplements\uff0c\u7ee7\u627f\u62bd\u8c61\u7c7b\u7684\u5173\u952e\u5b57\u4e3aextends\u3002\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0c\u4f46\u4e00\u4e2a\u7c7b\u53ea\u80fd\u7ee7\u627f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002\u6240\u4ee5\uff0c\u4f7f\u7528\u63a5\u53e3\u53ef\u4ee5\u95f4\u63a5\u5730\u5b9e\u73b0\u591a\u91cd\u7ee7\u627f\u3002\\n+ \uff083\uff09\u63a5\u53e3\u5f3a\u8c03\u7279\u5b9a\u529f\u80fd\u7684\u5b9e\u73b0\uff0c\u800c\u62bd\u8c61\u7c7b\u5f3a\u8c03\u6240\u5c5e\u5173\u7cfb\u3002\\n+ \uff084\uff09\u63a5\u53e3\u6210\u5458\u53d8\u91cf\u9ed8\u8ba4\u4e3apublic static final\uff0c\u5fc5\u987b\u8d4b\u521d\u503c\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539\uff1b\u5176\u6240\u6709\u7684\u6210\u5458\u65b9\u6cd5\u90fd\u662fpublic\u3001abstract\u7684\u3002\u62bd\u8c61\u7c7b\u4e2d\u6210\u5458\u53d8\u91cf\u9ed8\u8ba4default\uff0c\u53ef\u5728\u5b50\u7c7b\u4e2d\u88ab\u91cd\u65b0\u5b9a\u4e49\uff0c\u4e5f\u53ef\u88ab\u91cd\u65b0\u8d4b\u503c\uff1b\u62bd\u8c61\u65b9\u6cd5\u88ababstract\u4fee\u9970\uff0c\u4e0d\u80fd\u88abprivate\u3001static\u3001synchronized\u548cnative\u7b49\u4fee\u9970\uff0c\u5fc5\u987b\u4ee5\u5206\u53f7\u7ed3\u5c3e\uff0c\u4e0d\u5e26\u82b1\u62ec\u53f7\u3002"},{"id":"/2023/07/15/Spring-1 ","metadata":{"permalink":"/blog/2023/07/15/Spring-1 ","source":"@site/blog/2023/07/15/Spring-1 .md","title":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","description":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","date":"2023-07-15T00:00:00.000Z","formattedDate":"2023\u5e747\u670815\u65e5","tags":[{"label":"Spring","permalink":"/blog/tags/spring"}],"readingTime":3.235,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","tags":["Spring"],"authors":"Flankx","description":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Java\u63a5\u53e3\u4e0e\u62bd\u8c61\u7c7b\u7684\u533a\u522b","permalink":"/blog/2023/07/16/Java-1"},"nextItem":{"title":"\u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u8def\u7531\u5668","permalink":"/blog/2023/07/15/router"}},"content":"## \u4e00\u3001\u5b9e\u73b0\u65b9\u5f0f\\n\\n### 1. \u5b9e\u73b0 ServletContextListener \u7684 contextInitialized \u65b9\u6cd5\\n\x3c!-- truncate --\x3e\\n```Java\\nimport lombok.extern.slf4j.Slf4j;\\nimport org.springframework.stereotype.Component;\\n\\nimport javax.servlet.ServletContextEvent;\\nimport javax.servlet.ServletContextListener;\\n\\n@Slf4j\\n@Component\\npublic class ServletContextListenerDemo implements ServletContextListener {\\n    /**\\n     * web\u5e94\u7528\u7a0b\u5e8f\u521d\u59cb\u5316\u8fc7\u7a0b\u6b63\u5728\u542f\u52a8\u7684\u901a\u77e5\u3002\u5728\u521d\u59cb\u5316web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u4efb\u4f55\u8fc7\u6ee4\u5668\u6216servlet\u4e4b\u524d\u6267\u884c\\n     * @param sce\\n     */\\n    @Override\\n    public void contextInitialized(ServletContextEvent sce) {\\n        log.info(\\"\u542f\u52a8\u6267\u884c ServletContextListener \u7684 contextInitialized \u65b9\u6cd5\\");\\n    }\\n}\\n```\\n\\n### 2. \u9759\u6001\u4ee3\u7801\u5757\\n\\n```Java\\n@Slf4j\\n@Component\\npublic class TestDemo {\\n    static {\\n        log.info(\\"\u542f\u52a8\u6267\u884c\u9759\u6001\u4ee3\u7801\u5757\\");\\n    }\\n    public TestDemo() {\\n        log.info(\\"\u6784\u9020\u65b9\u6cd5\\");\\n    }\\n    @PostConstruct\\n    public void initial() {\\n        log.info(\\"\u6267\u884c PostConstruct \u6ce8\u89e3\u7684\u65b9\u6cd5\\");\\n    }\\n}\\n```\\n\\n### 3. \u6ce8\u89e3 @PostConstruct \u3010\u540c\u4e0a\u3011\\n\\n### 4. \u5b9e\u73b0 ServletContextAware \u7684 setServletContext \u65b9\u6cd5\\n\\n```Java\\nimport lombok.extern.slf4j.Slf4j;\\nimport org.springframework.stereotype.Component;\\nimport org.springframework.web.context.ServletContextAware;\\n\\nimport javax.servlet.ServletContext;\\n\\n@Slf4j\\n@Component\\npublic class ServletContextAwareDemo implements ServletContextAware {\\n    /**\\n     * \u5728\u586b\u5145\u666e\u901abean\u5c5e\u6027\u4e4b\u540e\uff0c\u4f46\u5728\u521d\u59cb\u5316\u56de\u8c03\uff08\u5982InitializingBean\u7684afterPropertiesSet\u6216\u81ea\u5b9a\u4e49init\u65b9\u6cd5\uff09\u4e4b\u524d\u8c03\u7528\u3002\\n     * \u5728ApplicationContextAware\u7684setApplicationContext\u4e4b\u540e\u8c03\u7528\u3002\\n     * @param servletContext\\n     */\\n    @Override\\n    public void setServletContext(ServletContext servletContext) {\\n        log.info(\\"\u542f\u52a8\u6267\u884c setServletContext \u65b9\u6cd5\\");\\n    }\\n}\\n```\\n\\n### 5. \u6ce8\u89e3 @EventListener\\n\\n```Java\\nimport lombok.extern.slf4j.Slf4j;\\nimport org.springframework.context.event.ContextRefreshedEvent;\\nimport org.springframework.context.event.EventListener;\\nimport org.springframework.stereotype.Component;\\n\\n@Slf4j\\n@Component\\npublic class EventListenerDemo {\\n\\n    @EventListener\\n    public void init(ContextRefreshedEvent event) {\\n        log.info(\\"\u542f\u52a8 EventListener \u4e8b\u4ef6\u4ea4\u7ed9 spring \u7ba1\u7406\\");\\n    }\\n}\\n```\\n\\n### 6. \u5b9e\u73b0 ApplicationRunner \u63a5\u53e3\u7684 run \u65b9\u6cd5\\n\\n```Java\\n@Slf4j\\n@Component\\npublic class ApplicationRunnerDemo implements ApplicationRunner {\\n    @Override\\n    public void run(ApplicationArguments args) throws Exception {\\n        log.info(\\"\u542f\u52a8 ApplicationRunner \u7684 run \u65b9\u6cd5\\");\\n        Set<String> optionNames = args.getOptionNames();\\n        for (String op: optionNames\\n             ) {\\n            log.info(\\"\u4f20\u5165\u7684\u53c2\u6570\u540d\\" + op);\\n        }\\n\\n        String[] sourceArgs = args.getSourceArgs();\\n        for (String arg:sourceArgs\\n             ) {\\n            log.info(\\"\u4f20\u5165\u7684\u539f\u59cb\u53c2\u6570\u3002\\" + arg);\\n        }\\n    }\\n}\\n```\\n\\n### 7. \u5b9e\u73b0 CommandLineRunner \u63a5\u53e3\u7684 run \u65b9\u6cd5\\n\\n```Java\\n@Slf4j\\n@Component\\npublic class CommandLineRunnerDemo implements CommandLineRunner {\\n    @Override\\n    public void run(String... args) throws Exception {\\n        log.info(\\"\u6267\u884c CommandLineRunner \u7684 run \u65b9\u6cd5\uff0c \u4f20\u5165\u53c2\u6570 \\", args);\\n    }\\n}\\n```\\n\\n## \u4e8c\u3001\u6267\u884c\u987a\u5e8f\\n\\n```log\\n22:03:25.688  INFO 21132 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\\n22:03:25.716  INFO 21132 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\\n22:03:25.716  INFO 21132 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.19]\\n22:03:25.808  INFO 21132 --- [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\\n22:03:25.809  INFO 21132 --- [main] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1200 ms\\n22:03:25.841  INFO 21132 --- [main] c.b.n.i.ServletContextListenerDemo       : \u542f\u52a8\u6267\u884c ServletContextListener \u7684 contextInitialized \u65b9\u6cd5\\n22:03:25.850  INFO 21132 --- [main] c.b.n.i.ServletContextAwareDemo          : \u542f\u52a8\u6267\u884c setServletContext \u65b9\u6cd5\\n22:03:25.851  INFO 21132 --- [main] com.bookman.notes.initmethod.TestDemo    : \u542f\u52a8\u6267\u884c\u9759\u6001\u4ee3\u7801\u5757\\n22:03:25.851  INFO 21132 --- [main] com.bookman.notes.initmethod.TestDemo    : \u6784\u9020\u65b9\u6cd5\\n22:03:25.852  INFO 21132 --- [main] com.bookman.notes.initmethod.TestDemo    : \u6267\u884c PostConstruct \u6ce8\u89e3\u7684\u65b9\u6cd5\\n22:03:25.983  INFO 21132 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService \'applicationTaskExecutor\'\\n22:03:26.121  INFO 21132 --- [main] c.b.notes.initmethod.EventListenerDemo   : \u542f\u52a8 EventListener \u4e8b\u4ef6\u4ea4\u7ed9 spring \u7ba1\u7406\\n22:03:26.150  INFO 21132 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path \'\'\\n22:03:26.155  INFO 21132 --- [main] com.bookman.notes.NotesApplication       : Started NotesApplication in 1.953 seconds (JVM running for 2.378)\\n22:03:26.156  INFO 21132 --- [main] c.b.n.initmethod.ApplicationRunnerDemo   : \u542f\u52a8 ApplicationRunner \u7684 run \u65b9\u6cd5\\n22:03:26.157  INFO 21132 --- [main] c.b.n.initmethod.ApplicationRunnerDemo   : \u4f20\u5165\u7684\u53c2\u6570\u540dfoo\\n22:03:26.157  INFO 21132 --- [main] c.b.n.initmethod.ApplicationRunnerDemo   : \u4f20\u5165\u7684\u539f\u59cb\u53c2\u6570\u3002--foo=debug\\n22:03:26.157  INFO 21132 --- [main] c.b.n.initmethod.CommandLineRunnerDemo   : \u6267\u884c CommandLineRunner \u7684 run \u65b9\u6cd5\uff0c \u4f20\u5165\u53c2\u6570  \\n```"},{"id":"/2023/07/15/router","metadata":{"permalink":"/blog/2023/07/15/router","source":"@site/blog/2023/07/15/router.md","title":"\u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u8def\u7531\u5668","description":"\u5982\u4f55 \u4f7f\u7528 Java \u6df1\u5165\u7406\u89e3\u8def\u7531\u5668\u6280\u672f,\u642d\u5efa\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u8def\u7531\u5668","date":"2023-07-15T00:00:00.000Z","formattedDate":"2023\u5e747\u670815\u65e5","tags":[{"label":"\u8def\u7531\u5668","permalink":"/blog/tags/\u8def\u7531\u5668"}],"readingTime":0.015,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u8def\u7531\u5668","tags":["\u8def\u7531\u5668"],"authors":"ahKevinXy","description":"\u5982\u4f55 \u4f7f\u7528 Java \u6df1\u5165\u7406\u89e3\u8def\u7531\u5668\u6280\u672f,\u642d\u5efa\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u8def\u7531\u5668","image":"https://source.unsplash.com/random?people&20"},"unlisted":false,"prevItem":{"title":"Spring \u542f\u52a8\u65f6\u6267\u884c\u6307\u5b9a\u65b9\u6cd5","permalink":"/blog/2023/07/15/Spring-1 "},"nextItem":{"title":"\u56fd\u5185\u82f9\u679c\u5f00\u53d1\u8005\u8d26\u53f7\u7533\u8bf7\u53ca\u4e0a\u7ebf","permalink":"/blog/2023/07/13/apple_develop"}},"content":"\x3c!-- truncate --\x3e"},{"id":"/2023/07/13/apple_develop","metadata":{"permalink":"/blog/2023/07/13/apple_develop","source":"@site/blog/2023/07/13/apple_develop.md","title":"\u56fd\u5185\u82f9\u679c\u5f00\u53d1\u8005\u8d26\u53f7\u7533\u8bf7\u53ca\u4e0a\u7ebf","description":"\u4f01\u4e1a\u5982\u4f55\u5728appstore \u4e0a\u67b6\u81ea\u5df1\u7684APP \u5df2\u7ecf\u66f4\u65b0\u8fed\u4ee3\u81ea\u5df1\u7684\u7248\u672c \u5982\u4f55\u7533\u8bf7\u9093\u767d\u6c0f\u7f16\u7801","date":"2023-07-13T00:00:00.000Z","formattedDate":"2023\u5e747\u670813\u65e5","tags":[{"label":"\u82f9\u679c","permalink":"/blog/tags/\u82f9\u679c"}],"readingTime":0.305,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u56fd\u5185\u82f9\u679c\u5f00\u53d1\u8005\u8d26\u53f7\u7533\u8bf7\u53ca\u4e0a\u7ebf","tags":["\u82f9\u679c"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&14","description":"\u4f01\u4e1a\u5982\u4f55\u5728appstore \u4e0a\u67b6\u81ea\u5df1\u7684APP \u5df2\u7ecf\u66f4\u65b0\u8fed\u4ee3\u81ea\u5df1\u7684\u7248\u672c \u5982\u4f55\u7533\u8bf7\u9093\u767d\u6c0f\u7f16\u7801"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4e00\u4e2a\u81ea\u5df1\u7684\u8def\u7531\u5668","permalink":"/blog/2023/07/15/router"},"nextItem":{"title":"\u5bfc\u51fa\u6587\u4ef6\u53ca\u538b\u7f29","permalink":"/blog/2023/07/13/export-1"}},"content":"\x3c!-- truncate --\x3e\\n## \u7b2c\u4e00\u6b65 \u6ce8\u518c\\n\\n\u6ce8\u518c \u82f9\u679c\u8d26\u53f7\\n\\n\u4e0b\u8f7d APP  Developer\\n\\n\u7533\u8bf7\u9093\u767d\u6c0f\u7f16\u7801\\n\\n[\u7533\u8bf7\u6ce8\u518c\u5730\u5740](https://www.dnbportal.cn/duns/apply) `\u5468\u671f\u57287\u5929`\\n\\nDeveloper \u63d0\u4ea4\u6ce8\u518c\u4f01\u4e1a\u8d26\u53f7($99/year) \u6298\u5408\u4eba\u6c11\u5e01(699/\u5e74) **\u4e0d\u80fd\u5f00\u53d1\u7968**"},{"id":"/2023/07/13/export-1","metadata":{"permalink":"/blog/2023/07/13/export-1","source":"@site/blog/2023/07/13/export-1.md","title":"\u5bfc\u51fa\u6587\u4ef6\u53ca\u538b\u7f29","description":"Java \u5bfc\u51fa\u6587\u4ef6 \u538b\u7f29 Java\u5982\u4f55\u5bfc\u51fa\u6587\u4ef6 Java\u5982\u4f55\u538b\u7f29\u6587\u4ef6","date":"2023-07-13T00:00:00.000Z","formattedDate":"2023\u5e747\u670813\u65e5","tags":[{"label":"\u5bfc\u51fa","permalink":"/blog/tags/\u5bfc\u51fa"}],"readingTime":1.285,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"\u5bfc\u51fa\u6587\u4ef6\u53ca\u538b\u7f29","tags":["\u5bfc\u51fa"],"authors":"Flankx","description":"Java \u5bfc\u51fa\u6587\u4ef6 \u538b\u7f29 Java\u5982\u4f55\u5bfc\u51fa\u6587\u4ef6 Java\u5982\u4f55\u538b\u7f29\u6587\u4ef6","image":"https://source.unsplash.com/random?people&17"},"unlisted":false,"prevItem":{"title":"\u56fd\u5185\u82f9\u679c\u5f00\u53d1\u8005\u8d26\u53f7\u7533\u8bf7\u53ca\u4e0a\u7ebf","permalink":"/blog/2023/07/13/apple_develop"},"nextItem":{"title":"\u5f00\u6e90\u7075\u5de5\u7cfb\u7edf","permalink":"/blog/2023/07/13/freelance"}},"content":"## 1 \u5bfc\u51fa\u6587\u4ef6\\n\x3c!-- truncate --\x3e\\n+ 1.1 \u8bbe\u7f6e\u8fd4\u56de\u7684\u8bf7\u6c42\u5934\\n\\n| Response Header     | Value                        | Desc                                                                                      |\\n| ------------------- | ---------------------------- | ----------------------------------------------------------------------------------------- |\\n| Content-type        | application/json             | [\u8d44\u6e90\u7684MIME\u7c7b\u578b](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Type)  |\\n| Content-Disposition | attachment;filename=xxx.json | [\u5c55\u793a\u5f62\u5f0f](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Content-Disposition) |\\n\\n+ 1.2 \u83b7\u53d6\u8bf7\u6c42\u5bfc\u51fa\u7684\u8d44\u6e90\u5e76\u5199\u5165\u8f93\u51fa\u6d41\\n\\n````java\\nresponse.setCharacterEncoding(\\"UTF-8\\");\\nresponse.setContentType(\\"application/json\\");\\nresponse.addHeader(\\"Content-Disposition\\", \\"attachment;filename=xxx.json\\");\\n    \\nString content = ...; // \u6b64\u5904\u5bfc\u51fa\u5b57\u7b26\u4e32\\ntry (ServletOutputStream outStr = response.getOutputStream();\\n    BufferedOutputStream buff = new BufferedOutputStream(outStr)) {\\n    buff.write(content.getBytes(StandardCharsets.UTF_8));\\n    buff.flush();\\n} catch (Exception e) {\\n    e.printStackTrace();\\n}\\n````\\n\\n## 2 \u5bfc\u51fa\u6587\u4ef6\u5e76\u538b\u7f29\\n\\n### 2.1 \u4f7f\u7528\u538b\u7f29\u5de5\u5177`Apache Commons Compress`\\n\\n+ \u5f15\u5165`POM`\u4f9d\u8d56\\n\\n````xml\\n\x3c!-- https://mvnrepository.com/artifact/org.apache.commons/commons-compress --\x3e\\n<dependency>\\n    <groupId>org.apache.commons</groupId>\\n    <artifactId>commons-compress</artifactId>\\n    <version>1.22</version>\\n</dependency>\\n````\\n\\n+ \u52a0\u5165`Zip`\u538b\u7f29\\n\\n````java\\nZipArchiveOutputStream zipOutput = ...;\\nZipArchiveEntry entry = new ZipArchiveEntry(name);\\nentry.setSize(size);\\nzipOutput.putArchiveEntry(entry);\\nzipOutput.write(contentOfEntry);\\nzipOutput.closeArchiveEntry();\\n````\\n\\n+ \u591a\u4e2a\u6587\u4ef6\u52a0\u5165`Zip`\u538b\u7f29\\n\\n````java\\nresponse.setCharacterEncoding(\\"UTF-8\\");\\nresponse.addHeader(\\"Content-Disposition\\", \\"attachment;filename=xxx.zip\\");\\nresponse.setContentType(\\"application/zip\\");\\n    \\nList<content> texts = ...; // \u6b64\u5904\u5bfc\u51fa\u5b57\u7b26\u4e32\u5217\u8868\\ntry (ServletOutputStream outStr = response.getOutputStream();\\n    ZipArchiveOutputStream zipOutput = new ZipArchiveOutputStream(outStr)) {\\n    for (int i = 0; i < texts.size(); i++) {\\n        byte[] content = texts.get(i).getBytes(StandardCharsets.UTF_8)\\n        String entryName = \\"xxx_\\" + i + \\".txt\\" \\n        ZipArchiveEntry entry = new ZipArchiveEntry (entryName);\\n        entry.setSize(content.length);\\n        zipOutput.putArchiveEntry(entry);\\n        zipOutput.write(content);\\n        zipOutput.closeArchiveEntry();\\n    }\\n} catch (IOException e) {\\n     e.printStackTrace();\\n}\\n````\\n\\n## 3 \u793a\u4f8b\u4ee3\u7801\\n\\n+ [README](https://github.com/flankx/flankdemo)"},{"id":"/2023/07/13/freelance","metadata":{"permalink":"/blog/2023/07/13/freelance","source":"@site/blog/2023/07/13/freelance.md","title":"\u5f00\u6e90\u7075\u5de5\u7cfb\u7edf","description":"\u529f\u80fd\u9f50\u5168\u7684\u7075\u6d3b\u7528\u6237\u5e73\u53f0Sass \u7248\u672c \u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u7075\u6d3b\u7528\u5de5\u7cfb\u7edf \u5982\u4f55\u89e3\u51b3\u7a0e\u52a1\u95ee\u9898","date":"2023-07-13T00:00:00.000Z","formattedDate":"2023\u5e747\u670813\u65e5","tags":[{"label":"\u5f00\u6e90","permalink":"/blog/tags/\u5f00\u6e90"}],"readingTime":6.735,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5f00\u6e90\u7075\u5de5\u7cfb\u7edf","tags":["\u5f00\u6e90"],"authors":"ahKevinXy","description":"\u529f\u80fd\u9f50\u5168\u7684\u7075\u6d3b\u7528\u6237\u5e73\u53f0Sass \u7248\u672c \u5982\u4f55\u642d\u5efa\u4e00\u4e2a\u7075\u6d3b\u7528\u5de5\u7cfb\u7edf \u5982\u4f55\u89e3\u51b3\u7a0e\u52a1\u95ee\u9898","image":"https://source.unsplash.com/random?people&17"},"unlisted":false,"prevItem":{"title":"\u5bfc\u51fa\u6587\u4ef6\u53ca\u538b\u7f29","permalink":"/blog/2023/07/13/export-1"},"nextItem":{"title":"\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","permalink":"/blog/2023/07/13/thread"}},"content":"## \u9879\u76ee\u80cc\u666f\\n\\n\u7075\u6d3b\u7528\u5de5\u672c\u8d28\u4e0a\u662f\u7a0e\u7b79\u7684\u4e00\u79cd\u843d\u5730\u65b9\u5f0f\uff0c\u800c\u4f01\u4e1a\u7684\u7a0e\u7b79\u89c4\u5212\u603b\u662f\u4ee5\u8282\u7a0e\u4e3a\u76ee\u7684\u3002\\n\\n\u4e00\u822c\u800c\u8a00\uff0c\u4f01\u4e1a\u7528\u5de5\u5f62\u5f0f\uff0c\u5927\u81f4\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u4e09\u7c7b\uff1a\\n\\n* \u6807\u51c6\u52b3\u52a8\u5173\u7cfb\uff0c\u5373\u5168\u65e5\u5236\u7528\u5de5\uff0c\u76f8\u5173\u6743\u76ca\u53d7\u300a\u52b3\u52a8\u6cd5\u300b\u548c\u300a\u52b3\u52a8\u5408\u540c\u6cd5\u300b\u4fdd\u62a4\uff1b\\n* \u975e\u6807\u51c6\u7684\u52b3\u52a8\u5173\u7cfb\uff0c\u5305\u62ec\u52b3\u52a1\u6d3e\u9063\u3001\u975e\u5168\u65e5\u5236\u7528\u5de5\uff08\u5c0f\u65f6\u5de5\u7b49\uff09\uff0c\u76f8\u5173\u6743\u76ca\u53d7\u300a\u52b3\u52a8\u6cd5\u300b\u548c\u300a\u52b3\u52a8\u5408\u540c\u6cd5\u300b\u4fdd\u62a4\uff1b\\n* \u7b2c\u4e09\u7c7b\u7528\u5de5\u5219\u4e0d\u5c5e\u4e8e\u52b3\u52a8\u5173\u7cfb\uff0c\u5305\u62ec\u52b3\u52a1\u5173\u7cfb\u3001\u4e1a\u52a1\u5916\u5305\u3001\u5b9e\u4e60\u3001\u9000\u4f11\u8fd4\u8058\u3001\u5c97\u4f4d\u5916\u5305\u3001\u5e73\u53f0\u7528\u5de5\u7b49\uff0c\u7531\u300a\u6c11\u6cd5\u901a\u5219\u300b\u548c\u300a\u5408\u540c\u6cd5\u300b\u4e88\u4ee5\u7ea6\u675f\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n**\u7075\u6d3b\u7528\u5de5\u5305\u542b\u51e0\u4e2a\u57fa\u672c\u7ec4\u6210**:\\n\\n1. \u7528\u5de5\u4f01\u4e1a\uff1a\u5982\u4e0a\u56fe\u6240\u793a\u7684\u884c\u4e1a\u4f01\u4e1a\uff0c\u4e00\u822c\u5b58\u5728\u77ed\u671f\u3001\u517c\u804c\u6216\u8005\u5176\u4ed6\u5f62\u5f0f\u7684\u7528\u5de5\u4eba\u5458\uff1b\\n\\n2. \u7ed3\u7b97\u516c\u53f8\uff08\u7a0e\u6e90\u5730\u843d\u6237\uff09\uff1a\u5f02\u5730\u7eb3\u7a0e\u3001\u59d4\u6258\u4ee3\u5f81\u3001\u6838\u5b9a\u5f81\u6536\uff0c\u4f9d\u6258\u5730\u65b9\u7a0e\u52a1\u653f\u7b56\u5b58\u5728\uff1b\\n\\n3. \u81ea\u7531\u804c\u4e1a\u8005\uff1a\u670d\u52a1\u4e8e\u7528\u5de5\u4f01\u4e1a\uff0c\u4f46\u662f\u901a\u8fc7\u7ed3\u7b97\u516c\u53f8\u83b7\u53d6\u62a5\u916c\u3002\\n\\n**\u7075\u6d3b\u7528\u5de5\u4f9d\u636e\u4ee5\u53ca\u98ce\u9669**:\\n\\n\\n1. \u9996\u5148\u9700\u8981\u660e\u786e\u7684\u662f\uff0c\u867d\u7136\u201c\u7075\u6d3b\u7528\u5de5\u201d\u5df2\u88ab\u5e02\u573a\u5e7f\u6cdb\u5e94\u7528\uff0c\u4f46\u5b83\u5e76\u975e\u662f\u4e00\u4e2a\u6cd5\u5f8b\u6982\u5ff5\uff0c\u6ca1\u6709\u660e\u786e\u7684\u6cd5\u5f8b\u6cd5\u89c4\u6765\u5b9a\u4e49\u5e76\u89e3\u91ca\u8fd9\u4e00\u6982\u5ff5\uff0c\u8fd9\u4e5f\u662f\u76ee\u524d\u7075\u6d3b\u7528\u5de5\u5e02\u573a\u6700\u5927\u7684\u4e0d\u786e\u5b9a\u6027\u6240\u5728\uff0c\u5f53\u7136\u6211\u4eec\u603b\u662f\u80fd\u4ece\u73b0\u884c\u6cd5\u5f8b\u6cd5\u89c4\u4e2d\u627e\u5230\u652f\u70b9\u3002\\n\\n2. \u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7a0e\u6536\u5f81\u6536\u7ba1\u7406\u6cd5\u5b9e\u65bd\u7ec6\u5219\u300b\u7b2c\u56db\u5341\u56db\u6761\uff0c\u660e\u786e\u4e86\u5730\u65b9\u7a0e\u52a1\u673a\u5173\u53ef\u4ee5\u201c\u59d4\u6258\u6709\u5173\u5355\u4f4d\u548c\u4eba\u5458\u4ee3\u5f81\u96f6\u661f\u5206\u6563\u548c\u5f02\u5730\u7f34\u7eb3\u7684\u7a0e\u6536\u5e76\u53d1\u7ed9\u59d4\u6258\u4ee3\u5f81\u8bc1\u4e66\u201d\uff1b\\n\\n3. \u300a\u59d4\u6258\u4ee3\u5f81\u7ba1\u7406\u529e\u6cd5\u300b\u7b2c\u4e94\u6761\uff0c\u660e\u786e\u4e86\u201c\u7a0e\u52a1\u673a\u5173\u786e\u5b9a\u7684\u4ee3\u5f81\u4eba\uff0c\u5e94\u5f53\u4e0e\u7eb3\u7a0e\u4eba\u6709\u4e0b\u5217\u5173\u7cfb\u4e4b\u4e00\uff1a\uff08\u4e8c\uff09\u4e0e\u7eb3\u7a0e\u4eba\u6709\u7ecf\u6d4e\u5f80\u6765\u5173\u7cfb\u201d\uff0c\u7b2c\u5341\u6761\uff0c\u660e\u786e\u4e86\u201c\u7a0e\u52a1\u673a\u5173\u5e94\u5f53\u4e0e\u4ee3\u5f81\u4eba\u7b7e\u8ba2\u300a\u59d4\u6258\u4ee3\u5f81\u534f\u8bae\u4e66\u300b\uff0c\u660e\u786e\u59d4\u6258\u4ee3\u5f81\u76f8\u5173\u4e8b\u5b9c\u201d\uff1b\\n\\n4. \u300a\u56fd\u5bb6\u7a0e\u52a1\u603b\u5c40\u4e2a\u4f53\u5de5\u5546\u6237\u4e2a\u4eba\u6240\u5f97\u7a0e\u8ba1\u7a0e\u529e\u6cd5\u300b\u7b2c\u4e09\u6761\uff0c\u660e\u786e\u4e86\u201c\u6240\u79f0\u4e2a\u4f53\u5de5\u5546\u6237\u5305\u62ec\uff1a\uff08\u4e09\uff09\u5176\u4ed6\u4ece\u4e8b\u4e2a\u4f53\u751f\u4ea7\u3001\u7ecf\u8425\u7684\u4e2a\u4eba\u201d\uff1b\\n\\n5. \u300a\u5730\u65b9\u56fd\u5bb6\u7a0e\u52a1\u5c40\u5173\u4e8e\u8c03\u6574\u4e2a\u4f53\u5de5\u5546\u6237\u4e2a\u4eba\u6240\u5f97\u7a0e\u9644\u5f81\u7387\u7684\u516c\u544a\u300b\u7ed9\u51fa\u4e86\u7a0e\u8d39\u81ea\u4e3b\u8c03\u8282\u7684\u4f9d\u636e\uff1b\\n\\n\u7075\u6d3b\u7528\u5de5\u4ece\u7a0e\u52a1\u4e0a\u8bf4\uff0c\u672c\u8d28\u662f\u5c06\u4e2a\u4eba\u89c6\u4f5c\u4e2a\u4f53\u6237\uff0c\u901a\u8fc7\u59d4\u6258\u4ee3\u5f81\u3001\u4e2a\u4f53\u6237\u767b\u8bb0\u3001\u4e2a\u4eba\u4e34\u65f6\u6027\u7ecf\u8425\u6027\u6240\u5f97\u767b\u8bb0\u7b49\u5f62\u5f0f\uff0c\u4ee5\u6838\u5b9a\u5f81\u6536\u6216\u4e2a\u4f53\u6237\u7ecf\u8425\u6240\u5f97\u7eb3\u7a0e\u53d6\u4ee3\u4e2a\u7a0e\u7533\u62a5\u7684\u4e00\u79cd\u8282\u7a0e\u65b9\u5f0f\u3002\\n\\n\u56e0\u6b64\u4ee5\u59d4\u6258\u4ee3\u5f81\u4e3a\u4e3b\u8981\u5f62\u5f0f\u7684\u7075\u6d3b\u7528\u5de5\u7ed3\u7b97\u5e73\u53f0\uff0c\u5176\u6240\u8c13\u7684\u6d41\u7a0b\u5408\u89c4\uff0c\u4e00\u822c\u4f1a\u5305\u62ec\uff1a\\n\\n1. \u59d4\u6258\u4ee3\u5f81\u8d44\u8d28\uff1b\\n2. \u4e2a\u4eba\u4e0e\u7ed3\u7b97\u5e73\u53f0\u7b7e\u8ba2\u7528\u5de5\u534f\u8bae\uff1b\\n3. \u4f9d\u636e\u7a0e\u6536\u6d3c\u5730\u653f\u7b56\uff0c\u6309\u71670%~1.5%\u6838\u5b9a\u5f81\u6536\uff1b\\n4. \u51fa\u5177\u7a0e\u52a1\u673a\u5173\u6c47\u603b\u7533\u62a5\u7684\u4e2a\u4eba\u5b8c\u7a0e\u8bc1\u660e\u3002\\n\\n**\u7075\u6d3b\u7528\u5de5\u7ed3\u7b97\u5e73\u53f0\u5982\u4f55\u83b7\u5229:**\\n\\n1. \u4f01\u4e1a\u901a\u8fc7\u7ed3\u7b97\u5e73\u53f0\u53d1\u751f\u7ed3\u7b97\u65f6\uff0c\u5411\u5e73\u53f0\u989d\u5916\u652f\u4ed86-8%\u7684\u7efc\u5408\u7a0e\u8d39+\u670d\u52a1\u8d39\uff0c\u800c\u5e73\u53f0\u672c\u8eab\u9664\u6b63\u5e38\u4eba\u529b\u652f\u51fa\u5916\uff0c\u8d22\u7a0e\u6210\u672c\u4e3b\u8981\u5728\u4e8e\u5f00\u51776%\u4e13\u7968\u8d39\u7528\u4ee5\u53ca\u4ee3\u6263\u4ee3\u7f34\u4e2a\u7a0e\u7684\u652f\u51fa\u3002\\n\\n2. \u9996\u5148\u7ed3\u7b97\u5e73\u53f0\u5411\u4f01\u4e1a\u5f00\u51776%\u7684\u589e\u503c\u7a0e\u53d1\u7968\u540e\uff0c\u5373\u9700\u7f34\u7eb36%\u7684\u589e\u503c\u7a0e\u4ee5\u53ca0.72%\u7684\u5404\u79cd\u9644\u52a0\u7a0e\uff0c\u5728\u4e0d\u8003\u8651\u62b5\u6263\u81ea\u8eab\u6210\u672c\u7684\u524d\u63d0\u4e0b\uff0c\u7a0e\u8d39\u6210\u672c\u4e3a6.72%\u3002\u4e00\u822c\u800c\u8a00\uff0c\u589e\u503c\u7a0e\u4e2d\u592e\u548c\u5730\u65b9\u7684\u7559\u5b58\u6bd4\u4f8b\u4e3a50:50\uff0c\u800c\u5730\u65b9\u7a0e\u52a1\u51fa\u5177\u76f8\u5e94\u7684\u7a0e\u6536\u4f18\u60e0\u653f\u7b56\u540e\uff0c\u5730\u65b9\u7559\u5b58\u7a0e\u8d39\u8fd4\u8fd8\u6bd4\u4f8b\u53ef\u8fbe50~90%\uff0c\u4ee5\u6bd4\u8f83\u5e38\u89c1\u768470%\u8ba1\u7b97\uff0c\u7ed3\u7b97\u5e73\u53f0\u7684\u5b9e\u9645\u5f00\u7968\u6210\u672c\u53ef\u4ee5\u505a\u5230\uff1a6.72%-6%*50%*70%=4.62%\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u822c\u7a0e\u6536\u6d3c\u5730\u7684\u8fd4\u8fd8\u653f\u7b56\u4f1a\u572870%\u5de6\u53f3\uff0c\u90e8\u5206\u7a0e\u6e90\u5730\u4f1a\u7ed9\u51fa\u66f4\u9ad8\u7684\u8fd4\u7a0e\u653f\u7b56\u6765\u5438\u5f15\u62db\u5546\u5165\u9a7b\uff0c\u5f53\u7136\u4e5f\u4f1a\u5728\u7a0e\u6536\u4f18\u60e0\u671f\u7ed3\u675f\u540e\u4f5c\u51fa\u7684\u8c03\u6574\u3002\\n\\n3. \u4ee3\u6263\u4ee3\u7f34\u4e2a\u7a0e\u65b9\u9762\uff0c\u5728\u5f53\u524d\u6838\u5b9a\u5f81\u6536\u653f\u7b56\u4e0b\uff0c\u6839\u636e\u884c\u4e1a\u4e0d\u540c\uff0c\u5730\u65b9\u7a0e\u52a1\u786e\u5b9a\u7684\u5f81\u6536\u7a0e\u7387\u53ef\u4ee5\u662f0%-1.5%\u3002\u56e0\u6b64\u5f53\u8fd4\u7a0e\u6bd4\u4f8b\u4e3a\u5730\u65b9\u7559\u5b58\u768470%\uff08\u53ef\u80fd\u66f4\u9ad8\uff09\uff0c\u4e14\u6838\u5b9a\u5f81\u6536\u7a0e\u7387\u5206\u522b\u4e3a0%\u30010.5%\u30011%\u30011.5%\u65f6\uff0c\u7ed3\u7b97\u5e73\u53f0\u53d1\u751f\u7ed3\u7b97\u7684\u7efc\u5408\u6210\u672c\u5373\u4e3a4.62%\u30015.12%\u30015.62%\u4ee5\u53ca6.12%\u3002\\n\\n4. \u6839\u636e\u4e0a\u8ff0\u8ba1\u7b97\uff0c\u53ef\u4ee5\u5f88\u663e\u7136\u7684\u770b\u51fa\uff0c\u5730\u65b9\u6838\u5b9a\u5f81\u6536\u53ca\u8fd4\u7a0e\u653f\u7b56\u51b3\u5b9a\u4e86\u4e00\u5bb6\u7ed3\u7b97\u5e73\u53f0\u7684\u56fa\u5b9a\u6210\u672c\uff0c\u8fd9\u4e5f\u662f\u76ee\u524d\u5e02\u573a\u4e0a\u7ed3\u7b97\u5e73\u53f0\u62a5\u4ef7\u6df7\u4e71\u7684\u6839\u672c\u539f\u56e0\uff0c\u4ece5.0%~8.0%\u90fd\u6709\u3002\\n\\n5. \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u8f83\u4f4e\u7684\u62a5\u4ef7\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f46\u8fd9\u662f\u57fa\u4e8e\u83b7\u53d6\u9ad8\u6bd4\u4f8b\u5730\u65b9\u7559\u5b58\u8fd4\u7a0e\u4ee5\u53ca\u964d\u4f4e\u4e2a\u4eba\u6838\u5b9a\u5f81\u6536\u6bd4\u4f8b\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e24\u8005\u5bf9\u4e8e\u5730\u65b9\u7a0e\u52a1\u800c\u8a00\u662f\u4e0d\u4e00\u5b9a\u662f\u6b63\u5e38\u6216\u957f\u4e45\u7684\uff0c\u4f1a\u968f\u7740\u5730\u65b9\u7a0e\u52a1\u7684\u653f\u7b56\u8c03\u6574\u800c\u53d8\u5316\uff0c\u5f53\u7136\u7ed3\u7b97\u5e73\u53f0\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u66f4\u6362\u7a0e\u6e90\u5730\u6765\u6301\u7eed\u8ddf\u8fdb\u66f4\u4f18\u60e0\u7684\u7a0e\u6536\u653f\u7b56\u3002"},{"id":"/2023/07/13/thread","metadata":{"permalink":"/blog/2023/07/13/thread","source":"@site/blog/2023/07/13/thread.md","title":"\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","description":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b \u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","date":"2023-07-13T00:00:00.000Z","formattedDate":"2023\u5e747\u670813\u65e5","tags":[{"label":"\u7ebf\u7a0b","permalink":"/blog/tags/\u7ebf\u7a0b"}],"readingTime":3.1,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","tags":["\u7ebf\u7a0b"],"authors":"Flankx","description":"\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b \u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","image":"https://source.unsplash.com/random?people&18"},"unlisted":false,"prevItem":{"title":"\u5f00\u6e90\u7075\u5de5\u7cfb\u7edf","permalink":"/blog/2023/07/13/freelance"},"nextItem":{"title":"Websocket\u4f7f\u7528","permalink":"/blog/2023/07/13/websocket-1"}},"content":"\x3c!-- truncate --\x3e\\n## 1\u3001\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\\n\\n- \u8fdb\u7a0b\uff1a\u8fdb\u7a0b\u662f\u8d44\u6e90(CPU\u3001\u5185\u5b58\u7b49)\u5206\u914d\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u5b83\u662f\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\\n- \u7ebf\u7a0b\uff1a\u7ebf\u7a0b\u662f\u4e00\u6761\u6267\u884c\u8def\u5f84\uff0c\u662f\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5b83\u662f\u8fdb\u7a0b\u7684\u4e00\u4e2a\u6267\u884c\u6d41\uff0c\u662fCPU\u8c03\u5ea6\u548c\u5206\u6d3e\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u7531\u5f88\u591a\u4e2a\u7ebf\u7a0b\u7ec4\u6210\uff0c\u7ebf\u7a0b\u95f4\u5171\u4eab\u8fdb\u7a0b\u7684\u6240\u6709\u8d44\u6e90\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\u548c\u5c40\u90e8\u53d8\u91cf\u3002\\n\\n## 2\u3001\u7ebf\u7a0b\u6c60\uff1aThreadPoolExecutor\\n\\n| \u7ebf\u7a0b\u6c60\u53c2\u6570           | \u7c7b\u578b                        | \u53c2\u6570\u7406\u89e3                                                                                            |\\n|-----------------|---------------------------|-------------------------------------------------------------------------------------------------|\\n| corePoolSize    | int                       | \u6838\u5fc3\u7ebf\u7a0b\u6570\u7ebf\u7a0b\u6570\u5b9a\u4e49\u4e86\u6700\u5c0f\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf                                                                        |\\n| maximumPoolSize | int                       | \u5f53\u961f\u5217\u4e2d\u5b58\u653e\u7684\u4efb\u52a1\u8fbe\u5230\u961f\u5217\u5bb9\u91cf\u7684\u65f6\u5019\uff0c\u5f53\u524d\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\u53d8\u4e3a\u6700\u5927\u7ebf\u7a0b\u6570\u3002                                                        |\\n| workQueue       | BlockingQueue`<Runnable>` | \u5f53\u65b0\u4efb\u52a1\u6765\u7684\u65f6\u5019\u4f1a\u5148\u5224\u65ad\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8fbe\u5230\u6838\u5fc3\u7ebf\u7a0b\u6570\uff0c\u5982\u679c\u8fbe\u5230\u7684\u8bdd\uff0c\u65b0\u4efb\u52a1\u5c31\u4f1a\u88ab\u5b58\u653e\u5728\u961f\u5217\u4e2d\u3002                                             |\\n| keepAliveTime   | long                      | \u5f53\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u91cf\u5927\u4e8e\xa0corePoolSize\xa0\u7684\u65f6\u5019\uff0c\u5982\u679c\u8fd9\u65f6\u6ca1\u6709\u65b0\u7684\u4efb\u52a1\u63d0\u4ea4\uff0c\u6838\u5fc3\u7ebf\u7a0b\u5916\u7684\u7ebf\u7a0b\u4e0d\u4f1a\u7acb\u5373\u9500\u6bc1\uff0c\u800c\u662f\u4f1a\u7b49\u5f85\uff0c\u76f4\u5230\u7b49\u5f85\u7684\u65f6\u95f4\u8d85\u8fc7\u4e86keepAliveTime\u624d\u4f1a\u88ab\u56de\u6536\u9500\u6bc1\u3002 |\\n| unit            | TimeUnit                  | keepAliveTime\xa0\u53c2\u6570\u7684\u65f6\u95f4\u5355\u4f4d\u3002                                                                          |\\n| threadFactory   | ThreadFactory             | executor \u521b\u5efa\u65b0\u7ebf\u7a0b\u7684\u65f6\u5019\u4f1a\u7528\u5230\u3002                                                                           |\\n| handler         | RejectedExecutionHandler  | \u9971\u548c\u7b56\u7565\u3002                                                                                           |\\n\\n## 3\u3001\u7ebf\u7a0b\u6c60\u5927\u5c0f\u7684\u786e\u5b9a\\n\\n- \u6709\u4e00\u4e2a\u7b80\u5355\u5e76\u4e14\u9002\u7528\u9762\u6bd4\u8f83\u5e7f\u7684\u516c\u5f0f\uff1a\\n- CPU \u5bc6\u96c6\u578b\u4efb\u52a1(N+1)\uff1a\xa0\u8fd9\u79cd\u4efb\u52a1\u6d88\u8017\u7684\u4e3b\u8981\u662f CPU \u8d44\u6e90\uff0c\u53ef\u4ee5\u5c06\u7ebf\u7a0b\u6570\u8bbe\u7f6e\u4e3a N\uff08CPU \u6838\u5fc3\u6570\uff09+1\uff0c\u6bd4 CPU \u6838\u5fc3\u6570\u591a\u51fa\u6765\u7684\u4e00\u4e2a\u7ebf\u7a0b\u662f\u4e3a\u4e86\u9632\u6b62\u7ebf\u7a0b\u5076\u53d1\u7684\u7f3a\u9875\u4e2d\u65ad\uff0c\u6216\u8005\u5176\u5b83\u539f\u56e0\u5bfc\u81f4\u7684\u4efb\u52a1\u6682\u505c\u800c\u5e26\u6765\u7684\u5f71\u54cd\u3002\u4e00\u65e6\u4efb\u52a1\u6682\u505c\uff0cCPU \u5c31\u4f1a\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u800c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u591a\u51fa\u6765\u7684\u4e00\u4e2a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u5145\u5206\u5229\u7528 CPU \u7684\u7a7a\u95f2\u65f6\u95f4\u3002\\n- I/O \u5bc6\u96c6\u578b\u4efb\u52a1(2N)\uff1a\xa0\u8fd9\u79cd\u4efb\u52a1\u5e94\u7528\u8d77\u6765\uff0c\u7cfb\u7edf\u4f1a\u7528\u5927\u90e8\u5206\u7684\u65f6\u95f4\u6765\u5904\u7406 I/O \u4ea4\u4e92\uff0c\u800c\u7ebf\u7a0b\u5728\u5904\u7406 I/O \u7684\u65f6\u95f4\u6bb5\u5185\u4e0d\u4f1a\u5360\u7528 CPU \u6765\u5904\u7406\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u5c06 CPU \u4ea4\u51fa\u7ed9\u5176\u5b83\u7ebf\u7a0b\u4f7f\u7528\u3002\u56e0\u6b64\u5728 I/O \u5bc6\u96c6\u578b\u4efb\u52a1\u7684\u5e94\u7528\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u591a\u914d\u7f6e\u4e00\u4e9b\u7ebf\u7a0b\uff0c\u5177\u4f53\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f 2N\u3002"},{"id":"/2023/07/13/websocket-1","metadata":{"permalink":"/blog/2023/07/13/websocket-1","source":"@site/blog/2023/07/13/websocket-1.md","title":"Websocket\u4f7f\u7528","description":"\u5982\u4f55\u4f7f\u7528 java Websocket \u4f7f\u7528\u65b9\u5f0f","date":"2023-07-13T00:00:00.000Z","formattedDate":"2023\u5e747\u670813\u65e5","tags":[{"label":"ws","permalink":"/blog/tags/ws"}],"readingTime":1.86,"hasTruncateMarker":true,"authors":[{"name":"flankx","title":"\u4f5c\u8005","url":"https://github.com/flankx","email":"137472591@qq.com","imageURL":"https://avatars.githubusercontent.com/u/30172229","key":"Flankx"}],"frontMatter":{"title":"Websocket\u4f7f\u7528","tags":["ws"],"authors":"Flankx","description":"\u5982\u4f55\u4f7f\u7528 java Websocket \u4f7f\u7528\u65b9\u5f0f","image":"https://source.unsplash.com/random?people&19"},"unlisted":false,"prevItem":{"title":"\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528","permalink":"/blog/2023/07/13/thread"},"nextItem":{"title":"\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0","permalink":"/blog/2023/07/11/opensource_network_freight"}},"content":"## \u65b9\u5f0f1\uff1a\u539f\u751f\u6ce8\u89e3\\n\\n+ \u76d1\u542c\u8def\u5f84\uff1a`@ServerEndpoint`\\n+ \u5efa\u7acb\u8fde\u63a5\uff1a`@OnOpen`\\n+ \u63a5\u6536\u6d88\u606f\uff1a`@OnMessage`\\n+ \u5173\u95ed\u8fde\u63a5\uff1a`@OnClose`\\n+ \u8fde\u63a5\u9519\u8bef\uff1a`@OnError`\\n\x3c!-- truncate --\x3e\\n### 1. \u5f15\u5165`POM`\u4f9d\u8d56\\n\\n````xml\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-websocket</artifactId>\\n</dependency>\\n````\\n\\n### 2. \u914d\u7f6e\u6587\u4ef6\\n\\n````java\\n@Configuration\\n@EnableWebSocket\\npublic class WebSocketConfig {\\n @Bean\\n public ServerEndpointExporter serverEndpointExporter() {\\n  return new ServerEndpointExporter();\\n }\\n}\\n````\\n\\n### 3. \u8fde\u63a5\u5904\u7406\\n\\n````java\\n@Slf4j\\n@ServerEndpoint(\\"/ws-demo\\")\\n@Component\\npublic class TestWSEndPoint {\\n private static ConcurrentHashMap<String, Session> map = new ConcurrentHashMap<>();\\n\\n @OnOpen\\n public void onOpen(Session session) {\\n  log.info(\\"\u63a5\u53d7\u8fde\u63a5: \\" + session);\\n  map.put(session.getId(), session);\\n }\\n\\n @OnMessage\\n public void onMessage(Session session, String message) throws IOException {\\n  session.getBasicRemote().sendText(\\"\u8fd4\u56de\u54cd\u5e94\uff1a\\" + message);\\n }\\n\\n @OnClose\\n public void onClose(Session session) {\\n  log.info(\\"\u5173\u95ed\u8fde\u63a5: \\" + session);\\n  map.remove(session.getId());\\n }\\n\\n @OnError\\n public void onError(Session session, Throwable throwable) throws Exception {\\n  log.error(\\"\u9519\u8bef\u8fde\u63a5: \\" + session + \\"throwable : \\" + throwable.getMessage());\\n }\\n\\n}\\n````\\n\\n## \u65b9\u5f0f2\uff1a\u4f7f\u7528`Spring`\u5c01\u88c5\\n\\n### 1. \u5f15\u5165`POM`\u4f9d\u8d56\\n\\n````xml\\n<dependency>\\n    <groupId>org.springframework.boot</groupId>\\n    <artifactId>spring-boot-starter-websocket</artifactId>\\n</dependency>\\n````\\n\\n### 2. \u7f16\u5199\u5904\u7406\u5668`WebsocketHandler`\\n\\n````java\\n@Component\\n@Slf4j\\npublic class WebsocketCustomHandler implements WebSocketHandler {\\n @Override\\n public void afterConnectionEstablished(WebSocketSession session) throws Exception {\\n  log.info(\\"\u63a5\u6536\u5230\u65b0\u7684\u8fde\u63a5\\" + session.getId());\\n }\\n\\n @Override\\n public void handleMessage(WebSocketSession session, WebSocketMessage<?> message) throws Exception {\\n  String text = \\"\u63a5\u6536\u5230\u6d88\u606f\uff1a\\" + message.toString() + \\"session = \\" + session.getId();\\n  log.info(text);\\n  session.sendMessage(new TextMessage(text));\\n  // session.sendMessage(new\\n  // BinaryMessage(text.getBytes(StandardCharsets.UTF_8)));\\n  // session.sendMessage(new PingMessage());\\n  // session.sendMessage(new PongMessage());\\n }\\n\\n @Override\\n public void handleTransportError(WebSocketSession session, Throwable exception) throws Exception {\\n  log.info(\\"\u8fde\u63a5\u9519\u8bef\\" + exception + \\"session =\\" + session.getId());\\n }\\n\\n @Override\\n public void afterConnectionClosed(WebSocketSession session, CloseStatus closeStatus) throws Exception {\\n  log.info(\\"\u5173\u95ed\u8fde\u63a5 = \\" + closeStatus.toString() + \\"session =\\" + session.getId());\\n }\\n\\n @Override\\n public boolean supportsPartialMessages() {\\n  // \u652f\u6301\u5206\u7247\\n  return false;\\n }\\n}\\n````\\n\\n### 3. \u6ce8\u518c`Handler`\\n\\n````java\\n@Configuration\\n@EnableWebSocket\\npublic class SpringWebsocketCofig implements WebSocketConfigurer {\\n\\n @Autowired\\n WebsocketCustomHandler websocketCustomHandler;\\n\\n @Override\\n public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {\\n  registry.addHandler(websocketCustomHandler, \\"/spring-ws\\").setAllowedOrigins(\\"*\\");\\n }\\n}\\n````\\n\\n## \u65b9\u5f0f3\uff1a\u4f7f\u7528`STOMP`\\n\\n## \u65b9\u5f0f4\uff1a\u4f7f\u7528`Netty` \u7b49\u5176\u4ed6\u65b9\u5f0f"},{"id":"/2023/07/11/opensource_network_freight","metadata":{"permalink":"/blog/2023/07/11/opensource_network_freight","source":"@site/blog/2023/07/11/opensource_network_freight.md","title":"\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0","description":"\u6700\u5168\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0,\u65e0\u8f66\u627f\u8fd0\u5e73\u53f0,\u7ed3\u7b97\u5e73\u53f0","date":"2023-07-11T00:00:00.000Z","formattedDate":"2023\u5e747\u670811\u65e5","tags":[{"label":"payment","permalink":"/blog/tags/payment"}],"readingTime":0.065,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0","tags":["payment"],"authors":"ahKevinXy","description":"\u6700\u5168\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0,\u65e0\u8f66\u627f\u8fd0\u5e73\u53f0,\u7ed3\u7b97\u5e73\u53f0","image":"https://source.unsplash.com/random?people&15"},"unlisted":false,"prevItem":{"title":"Websocket\u4f7f\u7528","permalink":"/blog/2023/07/13/websocket-1"},"nextItem":{"title":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","permalink":"/blog/2023/07/10/payment"}},"content":"## \u5e73\u53f0\u7aef\\n\\n\\n## \u62d6\u8fd0\u7aef\\n\\n\\n\\n## \u53f8\u673a\u7aef\\n\\n## \u8f66\u4e3b\u7aef"},{"id":"/2023/07/10/payment","metadata":{"permalink":"/blog/2023/07/10/payment","source":"@site/blog/2023/07/10/payment.md","title":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","description":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1 \u5982\u4f55\u5bf9\u63a5\u94f6\u884c \u5982\u4f55\u8bbe\u8ba1\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","date":"2023-07-10T00:00:00.000Z","formattedDate":"2023\u5e747\u670810\u65e5","tags":[{"label":"payment","permalink":"/blog/tags/payment"}],"readingTime":0.015,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","tags":["payment"],"authors":"ahKevinXy","description":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf\u67b6\u6784\u8bbe\u8ba1 \u5982\u4f55\u5bf9\u63a5\u94f6\u884c \u5982\u4f55\u8bbe\u8ba1\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","image":"https://source.unsplash.com/random?people&14"},"unlisted":false,"prevItem":{"title":"\u5f00\u6e90\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0","permalink":"/blog/2023/07/11/opensource_network_freight"},"nextItem":{"title":"\u6df1\u5165\u6d45\u51fa \u524d\u7aef layout","permalink":"/blog/2023/07/08/layout"}},"content":"\x3c!-- truncate --\x3e"},{"id":"/2023/07/08/layout","metadata":{"permalink":"/blog/2023/07/08/layout","source":"@site/blog/2023/07/08/layout.md","title":"\u6df1\u5165\u6d45\u51fa \u524d\u7aef layout","description":"\u5982\u4f55\u89e3\u51b3 \u524d\u7aef layout \u5e03\u5c40\u95ee\u9898,\u6df1\u5165\u5256\u6790 \u524d\u7aef\u5e03\u5c40\u95ee\u9898","date":"2023-07-08T00:00:00.000Z","formattedDate":"2023\u5e747\u67088\u65e5","tags":[{"label":"css","permalink":"/blog/tags/css"},{"label":"\u524d\u7aef","permalink":"/blog/tags/\u524d\u7aef"},{"label":"\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.355,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u6df1\u5165\u6d45\u51fa \u524d\u7aef layout","tags":["css","\u524d\u7aef","\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&14","description":"\u5982\u4f55\u89e3\u51b3 \u524d\u7aef layout \u5e03\u5c40\u95ee\u9898,\u6df1\u5165\u5256\u6790 \u524d\u7aef\u5e03\u5c40\u95ee\u9898"},"unlisted":false,"prevItem":{"title":"\u91d1\u878d\u652f\u4ed8\u7cfb\u7edf","permalink":"/blog/2023/07/10/payment"},"nextItem":{"title":"\u521d\u63a2 webvitals","permalink":"/blog/2023/07/08/webvitals"}},"content":"\u7ad9\u5728\u4e00\u4e2a\u540e\u7aef\u5f00\u53d1\u8005\u7684\u89d2\u5ea6,\u5199css \u5176\u5b9e\u662f\u4e00\u4e2a\u975e\u5e38\u75db\u70b9\u7684\u95ee\u9898 \\n\u5982\u4f55\u66f4\u597d\u7684\u4f7f\u7528css \u8fdb\u884c\u9875\u9762\u5e03\u5c40\u4e00\u76f4\u56f0\u6270\u7740\u6211\\n\u672c\u7bc7\u6587\u7ae0\u4e3b\u8981\u4ece\u524d\u7aef\u57fa\u672c\u7684layout \u5e03\u5c40\u8fdb\u884c\u6df1\u5165\u5b66\u4e60 css \\n\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2023/07/08/webvitals","metadata":{"permalink":"/blog/2023/07/08/webvitals","source":"@site/blog/2023/07/08/webvitals.md","title":"\u521d\u63a2 webvitals","description":"webvitals\u662f\u4ec0\u4e48 \u5982\u4f55\u5de7\u5999\u4f7f\u7528 webvitals","date":"2023-07-08T00:00:00.000Z","formattedDate":"2023\u5e747\u67088\u65e5","tags":[],"readingTime":1.795,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"\u521d\u63a2 webvitals","image":"https://source.unsplash.com/random?people&14","description":"webvitals\u662f\u4ec0\u4e48 \u5982\u4f55\u5de7\u5999\u4f7f\u7528 webvitals"},"unlisted":false,"prevItem":{"title":"\u6df1\u5165\u6d45\u51fa \u524d\u7aef layout","permalink":"/blog/2023/07/08/layout"},"nextItem":{"title":"Goland \u4f7f\u7528\u6280\u5de7","permalink":"/blog/2023/07/06/goland"}},"content":"web-vitals\u662fGoogle\u53d1\u8d77\u7684\uff0c\u65e8\u5728\u63d0\u4f9b\u5404\u79cd\u8d28\u91cf\u4fe1\u53f7\u7684\u7edf\u4e00\u6307\u5357\uff0c\u6211\u4eec\u76f8\u4fe1\u8fd9\u4e9b\u8d28\u91cf\u4fe1\u53f7\u5bf9\u63d0\u4f9b\u51fa\u8272\u7684\u7f51\u7edc\u7528\u6237\u4f53\u9a8c\u81f3\u5173\u91cd\u8981\u3002\u591a\u5e74\u6765\uff0cGoogle \u63d0\u4f9b\u4e86\u8bb8\u591a\u6027\u80fd\u6d4b\u91cf\u548c\u6027\u80fd\u62a5\u544a\u5de5\u5177\u3002\u4e00\u4e9b\u5f00\u53d1\u8005\u5bf9\u8fd9\u4e9b\u5de5\u5177\u7684\u4f7f\u7528\u5341\u5206\u5728\u884c\uff0c\u800c\u53e6\u4e00\u4e9b\u5f00\u53d1\u8005\u5219\u53d1\u73b0\u5927\u91cf\u7684\u5de5\u5177\u548c\u6307\u6807\u4ee4\u4eba\u5e94\u63a5\u4e0d\u6687\u3002\\n\\n\u603b\u4e4b\uff0cWeb Vitals\u5219\u662f\u5e0c\u671b\u63d0\u51fa\u4e00\u4e9b\u6807\u51c6\uff0c\u6765\u5e2e\u52a9\u5f00\u53d1\u8005\u53bb\u6d4b\u91cf\uff0c\u4f18\u5316\u9875\u9762\uff0c\u7ed9\u5230\u7528\u6237\u66f4\u597d\u7684\u4f53\u9a8c\u3002\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n## \u7b80\u5355\u4ecb\u7ecd\u516d\u4e2a\u6307\u6807\\n1. FCP-\u53cd\u6620\u7684\u662f\u4ece\u9875\u9762\u5f00\u59cb\u52a0\u8f7d\u5230\u9875\u9762\u89c6\u53e3\u4e0a\u6700\u5927\u7684\u56fe\u7247\u6216\u8005\u6587\u672c\u5757\u6e32\u67d3\u7684\u65f6\u95f4\u3002\\n2. TTI-\u53cd\u6620\u4ece\u9875\u9762\u52a0\u8f7d\u5f00\u59cb\u5230\u9875\u9762\u5904\u4e8e\u5b8c\u5168\u53ef\u4ea4\u4e92\u72b6\u6001\u6240\u82b1\u8d39\u7684\u65f6\u95f4\u3002\\n3. Speed Index-\u9875\u9762\u5185\u5bb9\u53ef\u89c1\u586b\u5145\u7684\u901f\u5ea6\u3002\\n4. TBT-\u6d4b\u91cf\u9996\u6b21\u5185\u5bb9\u7ed8\u5236 (FCP)\u9996\u6b21\u5185\u5bb9\u7ed8\u5236\u548c (TTI)\u4e4b\u95f4\u7684\u603b\u65f6\u95f4\uff0c\u8fd9\u671f\u95f4\uff0c\u4e3b\u7ebf\u7a0b\u88ab\u963b\u585e\u7684\u65f6\u95f4\u8fc7\u957f\uff0c\u65e0\u6cd5\u4f5c\u51fa\u8f93\u5165\u54cd\u5e94\u3002\\n5. LCP-\u6700\u5927\u5185\u5bb9\u7ed8\u5236\uff0c\u7528\u4e8e\u76d1\u63a7\u7f51\u9875\u53ef\u89c6\u533a\u5185\u201c\u7ed8\u5236\u9762\u79ef\u201d\u6700\u5927\u7684\u5143\u7d20\u5f00\u59cb\u5448\u73b0\u5728\u5c4f\u5e55\u4e0a\u7684\u65f6\u95f4\u70b9\u3002\\n6. CLS-\u53cd\u6620\u7f51\u9875\u5e03\u5c40\u5728\u52a0\u8f7d\u671f\u95f4\u7684\u504f\u79fb\u91cf\u3002\u5f97\u5206\u8303\u56f4\u662f 0\u20131\uff0c\u5176\u4e2d 0 \u8868\u793a\u6ca1\u6709\u504f\u79fb\uff0c1 \u8868\u793a\u6700\u5927\u504f\u79fb\u3002"},{"id":"/2023/07/06/goland","metadata":{"permalink":"/blog/2023/07/06/goland","source":"@site/blog/2023/07/06/goland.md","title":"Goland \u4f7f\u7528\u6280\u5de7","description":"Goland \u6700\u5f3a\u5b9e\u7528\u6280\u5de7,goland \u5feb\u6377\u952e goland \u5982\u4f55\u9ad8\u6548\u5f00\u53d1","date":"2023-07-06T00:00:00.000Z","formattedDate":"2023\u5e747\u67086\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"Goland","permalink":"/blog/tags/goland"}],"readingTime":0.015,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Goland \u4f7f\u7528\u6280\u5de7","tags":["go","Goland"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&13","description":"Goland \u6700\u5f3a\u5b9e\u7528\u6280\u5de7,goland \u5feb\u6377\u952e goland \u5982\u4f55\u9ad8\u6548\u5f00\u53d1"},"unlisted":false,"prevItem":{"title":"\u521d\u63a2 webvitals","permalink":"/blog/2023/07/08/webvitals"},"nextItem":{"title":"\u514d\u8d39\u4e2a\u4ebablog","permalink":"/blog/2023/07/05/blog"}},"content":"\x3c!-- truncate --\x3e"},{"id":"/2023/07/05/blog","metadata":{"permalink":"/blog/2023/07/05/blog","source":"@site/blog/2023/07/05/blog.md","title":"\u514d\u8d39\u4e2a\u4ebablog","description":"\u514d\u8d39blog \u6e05\u5355 \u5982\u4f55\u9009\u62e9\u5c5e\u4e8e\u81ea\u5df1\u7684blog blog\u5982\u4f55\u642d\u5efa\u4e0e\u9009\u62e9","date":"2023-07-05T00:00:00.000Z","formattedDate":"2023\u5e747\u67085\u65e5","tags":[{"label":"blog","permalink":"/blog/tags/blog"},{"label":"\u514d\u8d39","permalink":"/blog/tags/\u514d\u8d39"}],"readingTime":2.52,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u514d\u8d39\u4e2a\u4ebablog","tags":["blog","\u514d\u8d39"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&12","description":"\u514d\u8d39blog \u6e05\u5355 \u5982\u4f55\u9009\u62e9\u5c5e\u4e8e\u81ea\u5df1\u7684blog blog\u5982\u4f55\u642d\u5efa\u4e0e\u9009\u62e9"},"unlisted":false,"prevItem":{"title":"Goland \u4f7f\u7528\u6280\u5de7","permalink":"/blog/2023/07/06/goland"},"nextItem":{"title":"\u7f51\u7edc\u8d27\u8fd0\u7cfb\u7edf \u642d\u5efa\u603b\u7ed3","permalink":"/blog/2023/07/05/network_freight"}},"content":"\x3c!-- truncate --\x3e\\n\\n\\n## Gatsby\\n\\n\\nGatsby \u5305\u542b\u4e86\u5f88\u591a\u529f\u80fd\uff0c\u6709\u4e00\u4e2a\u4e30\u5bcc\u7684\u63d2\u4ef6\u751f\u6001\u7cfb\u7edf\uff0c\u5e76\u4e14\u80fd\u591f\u505aDocusaurus\u6240\u505a\u7684\u4e00\u5207\u3002 \u5f53\u7136\uff0c\u8fd9\u5e26\u6765\u4e86\u8f83\u9661\u7684\u5b66\u4e60\u66f2\u7ebf\u3002 Gatsby \u5728\u8bb8\u591a\u65b9\u9762\u505a\u5f97\u90fd\u5f88\u51fa\u8272\uff0c\u9002\u5408\u6784\u5efa\u8bb8\u591a\u7c7b\u578b\u7684\u7f51\u7ad9\u3002 \u53e6\u4e00\u65b9\u9762\uff0cDocusaurus \u529b\u56fe\u5c06\u4e00\u4ef6\u4e8b\u505a\u5230\u5c3d\u5584\u5c3d\u7f8e\u2014\u2014\u6210\u4e3a\u6700\u597d\u7684\u5185\u5bb9\u64b0\u5199\u4e0e\u53d1\u5e03\u5de5\u5177\u3002\\n\\nGraphQL \u662f Gatsby \u7684\u6838\u5fc3\uff0c\u4f46\u642d\u5efa Gatsby \u7f51\u7ad9\u4e0d\u4e00\u5b9a\u8981\u7528\u5230\u5b83\u3002 \u800c\u5728\u5927\u591a\u6570\u9759\u6001\u7f51\u7ad9\u4e2d\uff0c\u4f60\u66f4\u4e0d\u9700\u8981 GraphQL \u6240\u63d0\u4f9b\u7684\u7075\u6d3b\u6027\u3002\\n\\nDocusaurus 2 \u7684\u8bb8\u591a\u65b9\u9762\u90fd\u88ab Gatsby \u7684\u51fa\u8272\u4e4b\u5904\u6240\u542f\u53d1\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f18\u79c0\u7684\u66ff\u4ee3\u54c1\u3002\\n\\nDocz \u662f\u4e00\u6b3e\u7528\u4e8e\u6784\u5efa\u6587\u6863\u7f51\u7ad9\u7684Gatsby\u4e3b\u9898\u3002\\n\\n\\n## Next.js\\n\\n \u5b83\u53ef\u4ee5\u5e2e\u52a9\u4f60\u6784\u5efa\u51fa\u8272\u7684\u6587\u6863\u7f51\u7ad9\uff0c\u4f46\u5b83\u5e76\u4e0d\u7740\u91cd\u4e8e\u6587\u6863\u529f\u80fd\u672c\u8eab\uff0c\u800c\u4e14\u9700\u8981\u4f60\u624b\u52a8\u5b9e\u73b0 Docusaurus \u6240\u81ea\u5e26\u7684\u529f\u80fd\u3002\\n\\n\\n## VuePress\\n\\nVuePress \u662f Vue \u9a71\u52a8\u7684\uff0c\u800c Docusaurus \u5219\u662f React \u9a71\u52a8\u7684\u3002 \u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u57fa\u4e8e Vue \u7684\u89e3\u51b3\u65b9\u6848\uff0cVuePress \u662f\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\u3002\\n\\n\\n## MkDocs\\n\\nMkDocs is a popular Python static site generator with value propositions similar to Docusaurus.\\n\\n\u5982\u679c\u4f60\u4e0d\u9700\u8981\u5355\u9875\u5e94\u7528\uff0c\u4e5f\u4e0d\u6253\u7b97\u5229\u7528 React \u7684\u8bdd\uff0c\u8fd9\u662f\u4e2a\u597d\u9009\u62e9\u3002\\n\\nMaterial for MkDocs is a beautiful theme.\\n\\n## Docsify\\n\\nDocsify makes it easy to create a documentation website, but is not a static-site generator and is not SEO friendly.\\n\\n\\n\\n## Gitbook\\n\\nGitBook has a very clean design and has been used by many open source projects. \u4f46\u968f\u7740\u5b83\u628a\u91cd\u70b9\u9010\u6e10\u4ece\u5f00\u6e90\u5de5\u5177\u8f6c\u5411\u5546\u4e1a\u4ea7\u54c1\uff0c\u5b83\u4e0d\u518d\u7b26\u5408\u5f00\u6e90\u9879\u76ee\u6587\u6863\u7f51\u7ad9\u7684\u9700\u8981\u3002 \u7ed3\u679c\u5c31\u662f\uff0c\u8bb8\u591a\u9879\u76ee\u8f6c\u7528\u4e86\u5176\u4ed6\u4ea7\u54c1\u3002 You may read about Redux\'s switch to Docusaurus here.\\n\\n\u76ee\u524d\uff0cGitBook \u53ea\u5bf9\u5f00\u6e90\u548c\u975e\u8425\u5229\u56e2\u961f\u514d\u8d39\\n\\n\\n\\n## Jekyll\\n\\nJekyll is one of the most mature static site generators around and has been a great tool to use \u2014 in fact, before Docusaurus, most of Facebook\'s Open Source websites are/were built on Jekyll! \u5b83\u7684\u4e0a\u624b\u96be\u5ea6\u6781\u4f4e\u3002 \u5728\u9759\u6001\u7f51\u7ad9\u6784\u5efa\u65b9\u9762\uff0c\u6211\u4eec\u60f3\u8981\u4e3a\u4f60\u5e26\u6765\u548c Jekyll \u7c7b\u4f3c\u7684\u5f00\u53d1\u8005\u4f53\u9a8c\u3002"},{"id":"/2023/07/05/network_freight","metadata":{"permalink":"/blog/2023/07/05/network_freight","source":"@site/blog/2023/07/05/network_freight.md","title":"\u7f51\u7edc\u8d27\u8fd0\u7cfb\u7edf \u642d\u5efa\u603b\u7ed3","description":"\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u642d\u5efa\u5f00\u53d1 \u653f\u7b56\u6307\u5bfc \u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u5982\u4f55\u642d\u5efa \u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u5982\u4f55\u7533\u8bf7 \u7f51\u7edc\u8d27\u8fd0\u5982\u4f55\u9009\u62e9\u6280\u672f \u7f51\u7edc\u8d27\u8fd0\u662f\u4ec0\u4e48","date":"2023-07-05T00:00:00.000Z","formattedDate":"2023\u5e747\u67085\u65e5","tags":[{"label":"\u7f51\u7edc\u8d27\u8fd0","permalink":"/blog/tags/\u7f51\u7edc\u8d27\u8fd0"},{"label":"\u77e5\u8bc6","permalink":"/blog/tags/\u77e5\u8bc6"}],"readingTime":25.36,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u7f51\u7edc\u8d27\u8fd0\u7cfb\u7edf \u642d\u5efa\u603b\u7ed3","tags":["\u7f51\u7edc\u8d27\u8fd0","\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&12","description":"\u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u642d\u5efa\u5f00\u53d1 \u653f\u7b56\u6307\u5bfc \u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u5982\u4f55\u642d\u5efa \u7f51\u7edc\u8d27\u8fd0\u5e73\u53f0\u5982\u4f55\u7533\u8bf7 \u7f51\u7edc\u8d27\u8fd0\u5982\u4f55\u9009\u62e9\u6280\u672f \u7f51\u7edc\u8d27\u8fd0\u662f\u4ec0\u4e48"},"unlisted":false,"prevItem":{"title":"\u514d\u8d39\u4e2a\u4ebablog","permalink":"/blog/2023/07/05/blog"},"nextItem":{"title":"Saas IaaS Paas \u533a\u522b","permalink":"/blog/2023/07/04/saas"}},"content":"\u7f51\u7edc\u8d27\u8fd0\u662f\u5728\u5229\u7528\u4e92\u8054\u7f51\u6280\u672f\u5f00\u53d1\u7684\u8f66\u8d27\u5339\u914d\u5e73\u53f0\u7684\u57fa\u7840\u4e0a\u53d1\u5c55\u8d77\u6765\u7684\uff0c\u901a\u8fc7\u4e92\u8054\u7f51\u5e73\u53f0\u52a0\u6570\u5b57\u5316\u6280\u672f\u5f15\u7528\uff0c\u5728\u5927\u6570\u636e\u7684\u4ecb\u5165\u4e0b\uff0c\u4fc3\u4f7f\u8d27\u8fd0\u5168\u7f51\u4e92\u8054\u4e92\u901a\uff0c\u501f\u52a9\u667a\u6167\u7269\u6d41\u6a21\u5f0f\u8fdb\u884c\u884c\u4e1a\u5347\u7ea7\u3002\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n## \u7f51\u7edc\u5e73\u53f0\u670d\u52a1\u529f\u80fd\\n\\n### \u7ebf\u4e0a\u670d\u52a1\u80fd\u529b\u8981\u6c42\\n\\n1. \u53d6\u5f97\u589e\u503c\u7535\u4fe1\u4e1a\u52a1\u8bb8\u53ef\u8bc1(**\u516c\u53f8\u540d\u79f0\u4e0e\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u7533\u8bf7\u4eba\u540d\u79f0\u4e00\u81f4**)\\n2. \u7b26\u5408\u56fd\u5bb6\u5173\u4e8e\u4fe1\u606f\u7cfb\u7edf\u5b89\u5168\u7b49\u7ea7\u4fdd\u62a4\u7684\u8981\u6c42(**\u5355\u4f4d\u540d\u79f0\u4e0e\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u7533\u8bf7\u4eba\u540d\u79f0\u4e00\u81f4**)\\n3. \u7f51\u7edc\u5e73\u53f0\u63a5\u5165\u7701\u7ea7\u7f51\u7edc\u8d27\u8fd0\u4fe1\u606f\u76d1\u6d4b\u5e73\u53f0(\u7b54\u8fa9\u540e\u8fdb\u884c\u63a5\u5165)\\n4. \u6ee1\u8db3\u529f\u80fd\u8981\u6c42\\n\\n### \u529f\u80fd\u8981\u6c42\\n\\n#### \u4fe1\u606f\u53d1\u5e03\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4f9d\u6258\u7f51\u7edc\u5e73\u53f0\u4e3a\u6258\u8fd0\u4eba\u3001\u5b9e\u9645\u627f\u8fd0\u4eba\u63d0\u4f9b\u771f\u5b9e\u3001\u6709\u6548\u7684\u8d27\u6e90\u53ca\u8fd0\u529b\u4fe1\u606f\uff0c\u5e76\u5bf9\u8d27\u6e90\u53ca\u8f66\u6e90\u4fe1\u606f\u8fdb\u884c\u7ba1\u7406\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u4fe1\u606f\u53d1\u5e03\u3001\u7b5b\u9009\u3001\u4fee\u6539\u3001\u63a8\u9001\u3001\u64a4\u56de\u7b49\u529f\u80fd\\n\\n#### \u7ebf\u4e0a\u4ea4\u6613\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u901a\u8fc7\u7f51\u7edc\u5e73\u53f0\u5728\u7ebf\u7ec4\u7ec7\u8fd0\u529b\uff0c\u8fdb\u884c\u8d27\u6e90\u3001\u8fd0\u529b\u8d44\u6e90\u7684\u6709\u6548\u6574\u5408\uff0c\u5b9e\u73b0\u4fe1\u606f\u7cbe\u51c6\u914d\u7f6e\uff0c\u751f\u6210\u7535\u5b50\u8fd0\u5355\uff0c\u5b8c\u6210\u7ebf\u4e0a\u4ea4\u6613\u3002\\n\\n#### \u5168\u7a0b\u76d1\u63a7\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u81ea\u884c\u6216\u8005\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e73\u53f0\u5bf9\u8fd0\u8f93\u5730\u70b9\u3001\u8f68\u8ff9\u3001\u72b6\u6001\u8fdb\u884c\u52a8\u6001\u76d1\u63a7\uff0c\u5177\u5907\u5bf9\u88c5\u8d27\u3001\u5378\u8d27\u3001\u7ed3\u7b97\u7b49\u8fdb\u884c\u6709\u6548\u7ba1\u63a7\u7684\u529f\u80fd\u548c\u7269\u6d41\u4fe1\u606f\u5168\u6d41\u7a0b\u8ddf\u8e2a\u3001\u8bb0\u5f55\u3001\u5b58\u50a8\u3001\u5206\u6790\u80fd\u529b\uff1b\u5e94\u8bb0\u5f55\u542b\u6709\u65f6\u95f4\u548c\u5730\u7406\u4f4d\u7f6e\u4fe1\u606f\u7684\u5b9e\u65f6\u884c\u9a76\u8f68\u8ff9\u6570\u636e\uff1b\u5b9c\u5b9e\u65f6\u5c55\u793a\u5b9e\u9645\u627f\u8fd0\u9a7e\u9a76\u5458\u3001\u8f66\u8f86\u8fd0\u8f93\u8f68\u8ff9\uff0c\u5e76\u5b9e\u73b0\u5b9e\u9645\u627f\u8fd0\u4eba\u76f8\u5173\u8d44\u683c\u8bc1\u4ef6\u5230\u671f\u9884\u8b66\u63d0\u793a\u3001\u8fdd\u89c4\u884c\u4e3a\u62a5\u8b66\u7b49\u529f\u80fd\u3002\\n\\n\\n#### \u91d1\u878d\u652f\u4ed8\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u5177\u5907\u6838\u9500\u5bf9\u8d26\u3001\u4ea4\u6613\u660e\u7ec6\u67e5\u8be2\u3001\u751f\u6210\u8d44\u91d1\u6d41\u6c34\u5355\u7b49\u529f\u80fd\uff0c\u5b9c\u5177\u5907\u5728\u7ebf\u652f\u4ed8\u529f\u80fd\u3002\\n\\n#### \u54a8\u8be2\u6295\u8bc9\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u5177\u5907\u54a8\u8be2\u3001\u4e3e\u62a5\u6295\u8bc9\u3001\u7ed3\u679c\u53cd\u9988\u7b49\u529f\u80fd\u3002\\n\\n#### \u5728\u7ebf\u8bc4\u4ef7\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u5177\u5907\u5bf9\u6258\u8fd0\u3001\u5b9e\u9645\u627f\u8fd0\u4eba\u8fdb\u884c\u4fe1\u7528\u6253\u5206\u53ca\u8bc4\u7ea7\u7684\u529f\u80fd\\n\\n#### \u67e5\u8be2\u7edf\u8ba1\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u5177\u5907\u4fe1\u606f\u67e5\u8be2\u529f\u80fd\uff0c\u5305\u62ec\u8fd0\u5355\u3001\u8d44\u91d1\u6d41\u6c34\u3001\u8fd0\u8f93\u8f68\u8ff9\u3001\u4fe1\u7528\u8bb0\u5f55\u3001\u6295\u8bc9\u5904\u7406\u7b49\u4fe1\u606f\u5206\u7c7b\u5206\u6237\u67e5\u8be2\u4ee5\u53ca\u6570\u636e\u7edf\u8ba1\u5206\u6790\u7684\u529f\u80fd\\n\\n#### \u6570\u636e\u8c03\u53d6\\n\\n\u7f51\u7edc\u5e73\u53f0\u5e94\u5177\u5907\u4ea4\u901a\u8fd0\u8f93\u3001\u7a0e\u52a1\u7b49\u76f8\u5173\u90e8\u95e8\u4f9d\u6cd5\u8c03\u53d6\u6570\u636e\u7684\u6761\u4ef6\\n\\n\\n### \u670d\u52a1\u6d41\u7a0b\u53ca\u8981\u6c42\\n\\n#### \u4fe1\u606f\u5ba1\u6838\\n\\n##### \u6258\u8fd0\u4eba\u4fe1\u606f\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5728\u5e73\u53f0\u4e0a\u767b\u8bb0\u5e76\u6838\u5bf9\u6258\u8fd0\u4eba\u4fe1\u606f\uff1a\u6258\u8fd0\u4eba\u4e3a\u6cd5\u4eba\u7684\uff0c\u4fe1\u606f\u5305\u62ec\u6258\u8fd0\u5355\u4f4d\u53ca\u6cd5\u4eba\u4ee3\u8868\u540d\u79f0\u3001\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801\u3001\u8054\u7cfb\u4eba\u3001\u8054\u7cfb\u65b9\u5f0f\u3001\u901a\u4fe1\u5730\u5740\u7b49\u57fa\u672c\u4fe1\u606f\uff0c\u7559\u5b58\u8425\u4e1a\u6267\u7167\u626b\u63cf\u4ef6\uff1b\u6258\u8fd0\u4eba\u4e3a\u81ea\u7136\u4eba\u7684\uff0c\u4fe1\u606f\u5305\u62ec\u6258\u8fd0\u4eba\u59d3\u540d\u3001\u6709\u6548\u8bc1\u4ef6\u53f7\u7801\u3001\u8054\u7cfb\u65b9\u5f0f\uff0c\u7559\u5b58\u6709\u6548\u8bc1\u4ef6\u626b\u63cf\u4ef6\u3002\\n\\n##### \u5b9e\u9645\u627f\u8fd0\u4eba\u4fe1\u606f\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u8981\u6c42\u5b9e\u9645\u627f\u8fd0\u4eba\u5728\u7f51\u7edc\u5e73\u53f0\u6ce8\u518c\u767b\u8bb0\u5e76\u6838\u5bf9\u4ee5\u4e0b\u4fe1\u606f\uff1a\u5b9e\u9645\u627f\u8fd0\u4eba\u540d\u79f0\u3001\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u53f7\u3001\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801\uff08\u6216\u8eab\u4efd\u8bc1\u53f7\uff09\u7b49\u57fa\u672c\u4fe1\u606f\uff1b\u9a7e\u9a76\u5458\u59d3\u540d\u3001\u8eab\u4efd\u8bc1\u53f7\u3001\u8054\u7cfb\u65b9\u5f0f\u3001\u9053\u8def\u8fd0\u8f93\u4ece\u4e1a\u8d44\u683c\u8bc1\u53f7\u3001\u673a\u52a8\u8f66\u9a7e\u9a76\u8bc1\u53f7\uff1b\u8f66\u8f86\u724c\u7167\u53f7\u3001\u8f66\u724c\u989c\u8272\u3001\u8f66\u8f86\u9053\u8def\u8fd0\u8f93\u8bc1\u53f7\u3001\u8f66\u8f86\u884c\u9a76\u8bc1\u6863\u6848\u7f16\u53f7\u3001\u8f66\u8f86\u603b\u8d28\u91cf\u3001\u6838\u5b9a\u8f7d\u8d28\u91cf\u3001\u5916\u5ed3\u5c3a\u5bf8\uff084.5\u5428\u53ca\u4ee5\u4e0b\u666e\u901a\u9053\u8def\u8d27\u7269\u8fd0\u8f93\u8f66\u8f86\u4ece\u4e8b\u666e\u901a\u9053\u8def\u8d27\u7269\u8fd0\u8f93\u7ecf\u8425\u7684\uff0c\u65e0\u9700\u767b\u8bb0\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u53f7\u3001\u9053\u8def\u8fd0\u8f93\u8bc1\u53f7\u3001\u9a7e\u9a76\u5458\u4ece\u4e1a\u8d44\u683c\u8bc1\u53f7\uff09\u3002\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u7559\u5b58\u4ee5\u4e0b\u6709\u6548\u8bc1\u4ef6\u626b\u63cf\u4ef6\uff1a\u5b9e\u9645\u627f\u8fd0\u4eba\u8425\u4e1a\u6267\u7167\u3001\u8eab\u4efd\u8bc1\u7b49\u626b\u63cf\u4ef6\uff1b\u9a7e\u9a76\u5458\u8eab\u4efd\u8bc1\u3001\u673a\u52a8\u8f66\u9a7e\u9a76\u8bc1\u3001\u9053\u8def\u8fd0\u8f93\u4ece\u4e1a\u8d44\u683c\u8bc1\uff1b\u8f66\u8f86\u884c\u9a76\u8bc1\u3001\u9053\u8def\u8fd0\u8f93\u8bc1\uff08\u6302\u8f66\u30014.5\u5428\u53ca\u4ee5\u4e0b\u666e\u901a\u9053\u8def\u8d27\u7269\u8fd0\u8f93\u8f66\u8f86\u4ece\u4e8b\u666e\u901a\u9053\u8def\u8d27\u7269\u8fd0\u8f93\u7ecf\u8425\u7684\uff0c\u65e0\u9700\u4e0a\u4f20\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u3001\u9053\u8def\u8fd0\u8f93\u8bc1\u3001\u9a7e\u9a76\u5458\u4ece\u4e1a\u8d44\u683c\u8bc1\uff09\u3002\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5bf9\u5b9e\u9645\u627f\u8fd0\u4eba\u8d44\u8d28\u4fe1\u606f\u8fdb\u884c\u5ba1\u6838\uff0c\u901a\u8fc7\u5ba1\u6838\u540e\u65b9\u80fd\u59d4\u6258\u5176\u627f\u62c5\u8fd0\u8f93\u4e1a\u52a1\u3002\\n\\n\\n#### \u7b7e\u8ba2\u5408\u540c\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u6309\u7167\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u5408\u540c\u6cd5\u300b\u7684\u8981\u6c42\uff0c\u5206\u522b\u4e0e\u6258\u8fd0\u4eba\u548c\u5b9e\u9645\u627f\u8fd0\u4eba\u7b7e\u8ba2\u8fd0\u8f93\u5408\u540c\uff0c\u4e3b\u8981\u5185\u5bb9\u5e94\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a\\n1. \u5f53\u4e8b\u4eba\u4fe1\u606f\uff1a\u5305\u62ec\u6258\u8fd0\u4eba\u3001\u6536\u8d27\u4eba\u3001\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u3001\u5b9e\u9645\u627f\u8fd0\u4eba\u7684\u540d\u79f0\u3001\u8054\u7cfb\u65b9\u5f0f\\n2. \u670d\u52a1\u5185\u5bb9\uff1a\u5305\u62ec\u8d27\u7269\u4fe1\u606f\u3001\u8fd0\u8f93\u65b9\u5f0f\u3001\u8d77\u8bab\u5730\u3001\u8fd0\u8f93\u4ef7\u683c\u3001\u65f6\u6548\u8981\u6c42\u7b49\\n3. \u5f53\u4e8b\u4eba\u6743\u5229\u4e49\u52a1\u5173\u7cfb\\n4. \u5408\u540c\u4fdd\u5b58\u65f6\u95f4\u81ea\u7b7e\u8ba2\u4e4b\u65e5\u8d77\u4e0d\u5c11\u4e8e3\u5e74\u3002\\n\\n\\n#### \u8fd0\u8f93\u8fc7\u7a0b\u76d1\u63a7\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5728\u751f\u6210\u8fd0\u5355\u53f7\u7801\u540e\uff0c\u5b9e\u65f6\u91c7\u96c6\u5b9e\u9645\u627f\u8fd0\u8f66\u8f86\u8fd0\u8f93\u8f68\u8ff9\u7684\u52a8\u6001\u4fe1\u606f\uff0c\u5e76\u5728\u8d27\u7269\u8d77\u8fd0\u548c\u786e\u8ba4\u9001\u8fbe\u65f6\uff0c\u7ecf\u9a7e\u9a76\u5458\u6388\u6743\u540c\u610f\u540e\uff0c\u5b9e\u65f6\u91c7\u96c6\u548c\u4e0a\u4f20\u9a7e\u9a76\u5458\u5730\u7406\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5b9e\u73b0\u4ea4\u6613\u3001\u8fd0\u8f93\u3001\u7ed3\u7b97\u7b49\u5404\u73af\u8282\u5168\u8fc7\u7a0b\u900f\u660e\u5316\u52a8\u6001\u7ba1\u7406\u3002\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4f7f\u752812\u5428\u53ca\u4ee5\u4e0a\u7684\u91cd\u578b\u666e\u901a\u8f7d\u8d27\u6c7d\u8f66\u548c\u534a\u6302\u7275\u5f15\u8f66\u627f\u62c5\u8fd0\u8f93\u4efb\u52a1\u65f6\uff0c\u5e94\u7763\u4fc3\u5b9e\u9645\u627f\u8fd0\u4eba\u4fdd\u6301\u8f66\u8f7d\u536b\u661f\u5b9a\u4f4d\u88c5\u7f6e\u5728\u7ebf\u3002\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u786e\u4fdd\u7ebf\u4e0a\u63d0\u4f9b\u670d\u52a1\u7684\u8f66\u8f86\u548c\u9a7e\u9a76\u5458\u4e0e\u7ebf\u4e0b\u5b9e\u9645\u63d0\u4f9b\u670d\u52a1\u7684\u8f66\u8f86\u548c\u9a7e\u9a76\u5458\u4e00\u81f4\u3002\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4e0d\u5f97\u865a\u6784\u8fd0\u8f93\u4ea4\u6613\u76f8\u4e92\u59d4\u6258\u8fd0\u8f93\u670d\u52a1\u3002\\n\\n\\n#### \u4ea4\u4ed8\u9a8c\u6536\\n\\n##### \u4ea4\u63a5\u88c5\u8d27\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5f53\u5728\u8bb8\u53ef\u7684\u7ecf\u8425\u8303\u56f4\u5185\u4ece\u4e8b\u7ecf\u8425\u6d3b\u52a8\uff0c\u4e0d\u5f97\u8fdd\u89c4\u627f\u8fd0\u5371\u9669\u8d27\u7269\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4ece\u4e8b\u96f6\u62c5\u8d27\u7269\u8fd0\u8f93\u7684\uff0c\u5e94\u5f53\u6309\u7167\u300a\u96f6\u62c5\u8d27\u7269\u9053\u8def\u8fd0\u8f93\u670d\u52a1\u89c4\u8303\u300b\u7684\u76f8\u5173\u8981\u6c42\uff0c\u5bf9\u6258\u8fd0\u4eba\u8eab\u4efd\u8fdb\u884c\u67e5\u9a8c\u767b\u8bb0\uff0c\u7763\u4fc3\u5b9e\u9645\u627f\u8fd0\u4eba\u5bf9\u8d27\u7269\u8fdb\u884c\u5b89\u5168\u68c0\u67e5\u6216\u8005\u5f00\u5c01\u9a8c\u89c6\u3002\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u63a5\u5230\u5b9e\u9645\u627f\u8fd0\u4eba\u6709\u5173\u53d1\u73b0\u8fdd\u7981\u7269\u54c1\u3001\u53ef\u7591\u7269\u54c1\u6216\u7792\u62a5\u5371\u9669\u7269\u54c1\u62a5\u544a\u7684\uff0c\u5e94\u5411\u516c\u5b89\u673a\u5173\u6216\u6709\u5173\u90e8\u95e8\u53ca\u65f6\u62a5\u544a\u3002\\n\\n#####  \u4ea4\u4ed8\u5378\u8d27\\n\\n\\n\u6536\u8d27\u4eba\u786e\u8ba4\u6536\u8d27\u540e\uff0c\u5b9e\u9645\u627f\u8fd0\u4eba\u5e94\u53ca\u65f6\u5c06\u4ea4\u4ed8\u4fe1\u606f\u4e0a\u4f20\u81f3\u8d27\u8fd0\u7ecf\u8425\u8005\u7f51\u7edc\u5e73\u53f0\u3002\\n\\n\\n\u8d27\u7269\u4ea4\u4ed8\u65f6\u5b58\u5728\u5f02\u8bae\u7684\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u53ca\u65f6\u5904\u7406\u3002\\n\\n\\n#### \u8fd0\u8d39\u7ed3\u7b97\\n\\n#####  \u7ed3\u7b97\u6d41\u7a0b\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u6309\u7167\u5408\u540c\u7ea6\u5b9a\u53ca\u65f6\u5411\u5b9e\u9645\u627f\u8fd0\u4eba\u652f\u4ed8\u8fd0\u8d39\\n\\n##### \u652f\u4ed8\u65b9\u5f0f\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5b9c\u4e0e\u94f6\u884c\u7b49\u91d1\u878d\u673a\u6784\u3001\u7b2c\u4e09\u65b9\u652f\u4ed8\u5e73\u53f0\u5408\u4f5c\uff0c\u901a\u8fc7\u7535\u5b50\u652f\u4ed8\u5b9e\u73b0\u4ea4\u6613\u7559\u75d5\\n\\n\\n#### \u4fe1\u606f\u4e0a\u4f20\\n\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u6309\u7167\u300a\u90e8\u7f51\u7edc\u8d27\u8fd0\u4fe1\u606f\u4ea4\u4e92\u7cfb\u7edf\u63a5\u5165\u6307\u5357\u300b\u7684\u8981\u6c42\uff0c\u5728\u6536\u8d27\u4eba\u786e\u8ba4\u6536\u8d27\u540e\uff0c\u5b9e\u65f6\u5c06\u8fd0\u5355\u6570\u636e\u4e0a\u4f20\u81f3\u7701\u7ea7\u7f51\u7edc\u8d27\u8fd0\u4fe1\u606f\u76d1\u6d4b\u7cfb\u7edf\u3002\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5728\u7ed3\u7b97\u5b8c\u6210\u540e\uff0c\u5b9e\u65f6\u5c06\u8d44\u91d1\u6d41\u6c34\u5355\u4fe1\u606f\u4e0a\u4f20\u81f3\u7701\u7ea7\u7f51\u7edc\u8d27\u8fd0\u4fe1\u606f\u76d1\u6d4b\u7cfb\u7edf\u3002\\n\\n#### \u4fdd\u9669\u7406\u8d54\\n\\n\u9f13\u52b1\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u91c7\u7528\u6295\u4fdd\u7f51\u7edc\u5e73\u53f0\u9053\u8def\u8d27\u7269\u8fd0\u8f93\u627f\u8fd0\u4eba\u8d23\u4efb\u9669\u7b49\u63aa\u65bd\uff0c\u4fdd\u969c\u6258\u8fd0\u4eba\u5408\u6cd5\u6743\u76ca\u3002\\n\\n\\n#### \u6295\u8bc9\u5904\u7406\\n\\n1. \u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5efa\u7acb\u4fbf\u6377\u6709\u6548\u7684\u6295\u8bc9\u4e3e\u62a5\u673a\u5236\uff0c\u516c\u5f00\u6295\u8bc9\u4e3e\u62a5\u65b9\u5f0f\u7b49\u4fe1\u606f\uff0c\u5305\u62ec\u670d\u52a1\u7535\u8bdd\u3001\u6295\u8bc9\u65b9\u5f0f\u3001\u5904\u7406\u6d41\u7a0b\u7b49\u3002\u9f13\u52b1\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5efa\u7acb\u6295\u8bc9\u4e3e\u62a5\u5728\u7ebf\u89e3\u51b3\u673a\u5236\u3002\\n2. \u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5728\u63a5\u5230\u6295\u8bc9\u4e3e\u62a5\u540e24\u5c0f\u65f6\u5185\u7ed9\u4e88\u6709\u6548\u54cd\u5e94\uff0c\u53ca\u65f6\u5904\u7406\u5e76\u5c06\u7ed3\u679c\u544a\u77e5\u6295\u8bc9\u65b9\u3002\\n3. \u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u52a0\u5f3a\u5bf9\u4e3e\u62a5\u3001\u6295\u8bc9\u5904\u7406\u76f8\u5173\u4fe1\u606f\u7684\u6c47\u603b\u5206\u6790\uff0c\u5728\u7f51\u7edc\u5e73\u53f0\u516c\u793a\u6295\u8bc9\u5904\u7406\u6ee1\u610f\u7387\u3002\u53ca\u65f6\u67e5\u627e\u7ba1\u7406\u4e0d\u8db3\u548c\u6f0f\u6d1e\uff0c\u5236\u5b9a\u6539\u8fdb\u63aa\u65bd\uff0c\u4e0d\u65ad\u63d0\u9ad8\u670d\u52a1\u8d28\u91cf\u3002\\n\\n\\n#### \u4fe1\u7528\u8bc4\u4ef7\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5efa\u7acb\u5bf9\u5b9e\u9645\u627f\u8fd0\u4eba\u516c\u5e73\u516c\u6b63\u7684\u4fe1\u7528\u8bc4\u4ef7\u4f53\u7cfb\uff0c\u56f4\u7ed5\u8fd0\u8f93\u6548\u7387\u3001\u8fd0\u8f93\u5b89\u5168\u3001\u670d\u52a1\u8d28\u91cf\u3001\u5ba2\u6237\u6ee1\u610f\u5ea6\u7b49\u65b9\u9762\u8fdb\u884c\u7efc\u5408\u8003\u6838\u8bc4\u4ef7\uff0c\u8bc4\u4ef7\u7ed3\u679c\u5728\u7f51\u7edc\u5e73\u53f0\u4e0a\u516c\u793a\u3002\u6839\u636e\u4fe1\u7528\u8bc4\u4ef7\u7ed3\u679c\u5efa\u7acb`\u5b9e\u9645\u627f\u8fd0\u4eba\u9000\u51fa\u673a\u5236`\\n\\n\\n\\n\\n### \u5b89\u5168\u53ca\u98ce\u9669\u7ba1\u63a7\u8981\u6c42\\n\\n#### \u5b89\u5168\u751f\u4ea7\u5904\u7406\\n\\n##### \u5b89\u5168\u751f\u4ea7\u7ba1\u7406\u5236\u5ea6\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5efa\u7acb\u5065\u5168\u9002\u5408\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u7279\u70b9\u7684\u5b89\u5168\u751f\u4ea7\u8d23\u4efb\u5236\u5ea6\u3001\u5b89\u5168\u751f\u4ea7\u4e1a\u52a1\u64cd\u4f5c\u89c4\u7a0b\u3001\u9a7e\u9a76\u5458\u548c\u8f66\u8f86\u8d44\u8d28\u767b\u8bb0\u67e5\u9a8c\u5236\u5ea6\u3001\u6258\u8fd0\u4eba\u8eab\u4efd\u67e5\u9a8c\u767b\u8bb0\u5236\u5ea6\u7b49\uff0c\u8bbe\u7acb\u76f8\u5e94\u7684\u5b89\u5168\u751f\u4ea7\u7ba1\u7406\u90e8\u95e8\u6216\u8005\u914d\u5907\u4e13\u804c\u5b89\u5168\u7ba1\u7406\u4eba\u5458\u3002\\n\\n##### \u5e94\u6025\u7ba1\u7406\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5236\u5b9a\u5b89\u5168\u751f\u4ea7\u4e8b\u6545\u5e94\u6025\u6551\u63f4\u9884\u6848\u3002\u53d1\u751f\u4e8b\u6545\u6216\u4e0d\u53ef\u6297\u529b\u4e8b\u4ef6\u65f6\uff0c\u7b2c\u4e00\u65f6\u95f4\u542f\u52a8\u5e94\u6025\u9884\u6848\uff0c\u7ec4\u7ec7\u5b9e\u9645\u627f\u8fd0\u4eba\u8fdb\u884c\u5e94\u6025\u5904\u7f6e\uff0c\u5e76\u79ef\u6781\u914d\u5408\u76f8\u5173\u90e8\u95e8\u5f00\u5c55\u5e94\u6025\u6551\u63f4\u3002\\n\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u8ddf\u8e2a\u4e86\u89e3\u884c\u4e1a\u52a8\u6001\u548c\u5404\u65b9\u8bc9\u6c42\uff0c\u53ca\u65f6\u5316\u89e3\u548c\u758f\u5bfc\u77db\u76fe\uff0c\u5e76\u5411\u6709\u5173\u90e8\u95e8\u62a5\u544a\u3002\\n\\n##### \u5b89\u5168\u4eba\u5458\u8003\u6838\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u7684\u4e3b\u8981\u8d1f\u8d23\u4eba\u548c\u5b89\u5168\u751f\u4ea7\u7ba1\u7406\u4eba\u5458\u5e94\u5f53\u7531\u53bf\u7ea7\u4ee5\u4e0a\u4ea4\u901a\u8fd0\u8f93\u4e3b\u7ba1\u90e8\u95e8\u5bf9\u5176\u5b89\u5168\u751f\u4ea7\u77e5\u8bc6\u548c\u7ba1\u7406\u80fd\u529b\u8003\u6838\u5408\u683c\\n\\n\\n#### \u4fe1\u606f\u5b89\u5168\u7ba1\u7406\\n\\n##### \u5efa\u7acb\u4fe1\u606f\u5b89\u5168\u7ba1\u7406\u5236\u5ea6\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u6309\u7167\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u7f51\u7edc\u5b89\u5168\u6cd5\u300b\u7b49\u6709\u5173\u6cd5\u5f8b\u6cd5\u89c4\u7684\u8981\u6c42\uff0c\u91c7\u53d6\u6709\u6548\u63aa\u65bd\u9632\u75c5\u6bd2\u3001\u9632\u653b\u51fb\u3001\u9632\u6cc4\u5bc6\uff0c\u843d\u5b9e\u7f51\u7edc\u5b89\u5168\u7ba1\u7406\u8d23\u4efb\u3002\\n\\n##### \u52a0\u5f3a\u4fe1\u606f\u4f7f\u7528\u7ba1\u7406\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u6309\u7167\u5408\u6cd5\u3001\u6b63\u5f53\u3001\u5fc5\u8981\u7684\u539f\u5219\uff0c\u91c7\u96c6\u4e0e\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u76f8\u5173\u7684\u6570\u636e\u4fe1\u606f\uff0c\u91c7\u96c6\u7684\u4fe1\u606f\u672a\u7ecf\u88ab\u91c7\u96c6\u8005\u540c\u610f\uff0c\u4e0d\u5f97\u7528\u4e8e\u7f51\u7edc\u8d27\u8fd0\u4ee5\u5916\u7684\u5176\u4ed6\u7528\u9014\uff0c\u4e0d\u5f97\u8f6c\u8ba9\u7ed9\u7b2c\u4e09\u65b9\u3002\\n\\n#### \u53f8\u673a\u6743\u76ca\u4fdd\u62a4\\n\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4e0d\u5f97\u5229\u7528\u5e02\u573a\u5784\u65ad\u5730\u4f4d\u6392\u9664\u3001\u9650\u5236\u7ade\u4e89\uff0c\u968f\u610f\u538b\u4f4e\u8fd0\u4ef7\uff0c\u635f\u5bb3\u8d27\u8f66\u53f8\u673a\u6743\u76ca\uff1b\u5e94\u6309\u7167\u5408\u540c\u7ea6\u5b9a\u53ca\u65f6\u652f\u4ed8\u8fd0\u8d39\uff0c\u4e0d\u5f97\u62d6\u6b20\u8fd0\u8d39\uff1b\u4e0d\u5f97\u63d0\u4f9b\u865a\u5047\u4fe1\u606f\u3001\u6270\u4e71\u5e02\u573a\u79e9\u5e8f\uff1b\u5e94\u5408\u7406\u5b89\u6392\u8fd0\u8f93\u8ba1\u5212\u3001\u4fdd\u969c\u8d27\u8f66\u53f8\u673a\u5408\u7406\u4f11\u606f\uff0c\u907f\u514d\u75b2\u52b3\u9a7e\u9a76\u3002\\n\\n\\n\\n## \u7f51\u7edc\u8d27\u8fd0\u4fe1\u606f\u4ea4\u4e92\u7cfb\u7edf\u63a5\u5165\u6307\u5357\\n\\n### \u63a5\u5165\u8981\u6c42\\n\\n#### \u6570\u636e\u52a0\u5bc6\u8981\u6c42\\n\\n\u6839\u636e\u300a\u4fe1\u606f\u5b89\u5168\u6280\u672f\u4fe1\u606f\u7cfb\u7edf\u5b89\u5168\u7b49\u7ea7\u4fdd\u62a4\u57fa\u672c\u8981\u6c42\u300b\uff08GB/T 22239\uff09\u76f8\u5173\u89c4\u5b9a\uff0c\u5404\u7701\u4ea4\u901a\u8fd0\u8f93\u4e3b\u7ba1\u90e8\u95e8\u5e94\u786e\u4fdd\u6570\u636e\u4f20\u8f93\u7684\u5b89\u5168\u6027\u3002\u90e8\u4ea4\u4e92\u7cfb\u7edf\u548c\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362\uff0c\u5e94\u901a\u8fc7\u56fd\u5bc6\u52a0\u5bc6\u7b97\u6cd5\u5bf9\u62a5\u6587\u8fdb\u884c\u52a0\u5bc6\\n\\n#### \u65f6\u6548\u8d28\u91cf\u8981\u6c42\\n\\n\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u5e94\u5728\u8fd0\u5355\u3001\u8d44\u91d1\u6d41\u6c34\u5355\u5b8c\u6210\u540e\u5b9e\u65f6\u4e0a\u4f20\u6570\u636e\u81f3\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\uff0c\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u5e94\u5728\u63a5\u6536\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u8fd0\u5355\u3001\u8d44\u91d1\u6d41\u6c34\u5355\u3001\u8f66\u8f86\u53ca\u9a7e\u9a76\u5458\u57fa\u672c\u4fe1\u606f\u540e\uff0c\u53ca\u65f6\u4e0a\u4f20\u81f3\u90e8\u4ea4\u4e92\u7cfb\u7edf\u3002\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u5e94\u5bf9\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4e0a\u4f20\u7684\u5355\u636e\u683c\u5f0f\u8fdb\u884c\u6821\u9a8c\uff0c\u786e\u4fdd\u5355\u636e\u63a5\u5165\u6b63\u5e38\u3002\\n\\n\\n### \u63a5\u53e3\u6280\u672f\u89c4\u8303\\n\\n\\n#### \u62a5\u6587\u5c5e\u6027\\n\\n| \u5e8f\u53f7  | \u5c5e\u6027\u540d\u79f0    | \u8bf4\u660e                                                                                                                                    |\\n|-----|---------|---------------------------------------------------------------------------------------------------------------------------------------|\\n| 1   | \u62a5\u6587\u5c42     | \u6807\u8bc6\u6570\u636e\u5143\u5728\u62a5\u6587\u7ed3\u6784\u4e2d\u7684\u4f4d\u7f6e\u548c\u5c42\u6b21\u5173\u7cfb                                                                                                                   |\\n| 2   | \u82f1\u6587\u540d\u79f0    | \u6570\u636e\u5143\u548c\u6bb5\u7ec4\u7684\u82f1\u6587\u6807\u8bb0\u540d,\u53ef\u7528\u4f5c\u4e3a\u6269\u5c55\u6807\u8bb0\u8bed\u8a00(XML)                                                                                                          |\\n| 3   | \u4e2d\u6587\u540d\u79f0    | \u5bf9\u6570\u636e\u5143\u7684\u4e2d\u6587\u63cf\u8ff0                                                                                                                             |\\n| 4   | \u7ea6\u675f/\u51fa\u73b0\u6b21\u6570 | \u6570\u636e\u5143\u5728\u62a5\u6587\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u6b21\u6570 <br/> 1. 0..1\u2014\u2014\u6570\u636e\u5143\u503c\u57df\u53ef\u586b\uff0c\u4e14\u51fa\u73b0\u4e00\u6b21 <br/> 2. 0..n\u2014\u2014\u6570\u636e\u5143\u503c\u57df\u53ef\u586b\uff0c\u4e14\u53ef\u51fa\u73b0\u591a\u6b21 <br/> 3.  1..1\u2014\u2014\u6570\u636e\u5143\u503c\u57df\u5fc5\u586b\uff0c\u4e14\u51fa\u73b0\u4e00\u6b21 <br/> 4. 1..n\u2014\u2014\u6570\u636e\u5143\u503c\u57df\u5fc5\u586b\uff0c\u4e14\u53ef\u51fa\u73b0\u591a\u6b21 |\\n| 5   | \u6570\u636e\u683c\u5f0f    |                                                                                                                                       |\\n| 6   | \u5f15\u7528\u6587\u4ef6    | \u4ee3\u7801\u578b\u6570\u636e\u5143\u503c\u57df\u5f15\u7528\u7684\u6807\u51c6\u3002                                                                                                                        |\\n| 7   | \u8bf4\u660e      | \u5bf9\u6570\u636e\u5143\u7684\u7b80\u8981\u89e3\u91ca\u548c\u5e94\u7528\u8bf4\u660e                                                                                                                        |\\n|     |         |                                                                                                                                       |\\n|     |         |                                                                                                                                       |\\n\\n\\n#### \u7f51\u7edc\u8d27\u8fd0\u5355\u636e\u62a5\u6587\u683c\u5f0f\\n\\n\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u4e0a\u4f20\u5355\u636e\u63a5\u53e3\u62a5\u6587\u683c\u5f0f\u5982\u4e0b\uff1a\\n\u88682.2 \u7f51\u7edc\u8d27\u8fd0\u5355\u636e\u62a5\u6587\u683c\u5f0f\\n\\n| \u5e8f\u53f7  | \\t\u62a5\u6587\u5c42 | \\t\u82f1\u6587\u540d\u79f0\\t                  | \u4e2d\u6587\u540d\u79f0\\t     | \u7ea6\u675f/\u51fa\u73b0\u6b21\u6570 | \\t\u6570\u636e\u683c\u5f0f                            | \\t\u8bf4\u660e                                      |\\n|-----|------|-------------------------|-----------|---------|----------------------------------|------------------------------------------|\\n| 1\\t  | 1\\t   | Root                    | \\t\u6839\\t       | 1..1\\t\\t  |                                  |\\n| 2\\t  | 2\\t   | Header\\t                 | \u62a5\u6587\u5934\\t      | 1..1\\t   |                                  |\\n| 3\\t  | 3    | \\tMessageReferenceNumber | \\t\u62a5\u6587\u53c2\u8003\u53f7    | \\t1..1\\t  | an..35                           | \\t\u5fc5\u586b\uff0c\u62a5\u6587\u7684\u552f\u4e00\u6807\u8bc6\u7b26\uff0c\u7531\u7cfb\u7edf\u6309GUID\u89c4\u5219\u81ea\u52a8\u4ea7\u751f\u3002             |\\n| 4\\t  | 3    | \\tDocumentName           | \\t\u62a5\u6587\u540d\u79f0     | \\t1..1   | \\tan..35\\t                         | \u5fc5\u586b\uff0c\u62a5\u6587\u4e2d\u6587\u540d\u79f0\uff1a\u7535\u5b50\u8fd0\u5355\u3001\u4f4d\u7f6e\u4fe1\u606f\u5355\u3001\u8d44\u91d1\u6d41\u6c34\u5355\u3001\u8f66\u8f86\u4fe1\u606f\u5355\u3001\u9a7e\u9a76\u5458\u4fe1\u606f\u5355\u3002 |\\n| 5\\t  | 3    | \\tDocumentVersionNumber  | \\t\u62a5\u6587\u7248\u672c\u53f7    | \\t1..1   | \\tan..17                          |\\n| 6\\t  | 3    | \\tSenderCode             | \\t\u53d1\u9001\u65b9\u4ee3\u7801\\t   | 1..1    | \\tan..20                          | \\t\u5fc5\u586b\uff0c\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u4ea4\u6362\u4ee3\u7801\u3002                          |\\n| 7\\t  | 3\\t   | MessageSendingDateTime  | \\t\u53d1\u9001\u65e5\u671f\u65f6\u95f4   | \\t1..1   | \\tn14\\t\u5fc5\u586b\uff0c\u62a5\u6587\u53d1\u9001\u7684\u65e5\u671f\u65f6\u95f4\u3002YYYYMMDDhhmmss |\\n| 8   | \\t3\\t  | IPCType                 | \\t\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801   | \\t1..1   | \\tan..16                          |                                          |\\n| 9\\t  | 3\\t   | Token                   | \\t\u4ee4\u724c\\t      | 1..1    | \\tan..200                         |                                          |\\n| 10  | \\t2\\t  | Body                    | \\t\u62a5\u6587\u4f53      | \\t1..1\\t  |                                  |\\n| 11\\t | 3    | \\tEncryptedCode          | \\t\u5bf9\u79f0\u5bc6\u94a5\u52a0\u5bc6\u4e32\\t | 1..1    | \\tan..128                         | \\t\u5fc5\u586b\uff0c\u7528\u56fd\u5bc6SM2\u52a0\u5bc6\u968f\u673a\u751f\u6210KEY\u540e\u7684\u52a0\u5bc6\u5b57\u7b26\u4e32\u3002              |\\n| 12  | \\t3   | \\tEncryptedContent       | \\t\u8fd0\u5355\u5185\u5bb9\u52a0\u5bc6\u4e32\\t | 1..1    | \\tan..8192                        | \\t\u5fc5\u586b\uff0c\u91c7\u7528\u56fd\u5bc6SM4\u901a\u8fc7\u968f\u673a\u751f\u6210\u7684KEY\u52a0\u5bc6\u8fd0\u5355\u5185\u5bb9\u540e\u7684\u52a0\u5bc6\u5b57\u7b26\u4e32\u3002      |\\n\\n\\n\\n#### \u4e0a\u4f20\u8fd0\u5355\u63a5\u53e3\\n\\n\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801\uff1aWLHY_YD1001\uff0c\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u901a\u8fc7\u6b64\u63a5\u53e3\u5411\u90e8\u4ea4\u4e92\u7cfb\u7edf\u4e0a\u62a5\u4f01\u4e1a\u7684\u8fd0\u5355\u6570\u636e\uff0c\u8fd0\u5355\u62a5\u6587\u683c\u5f0f\u5982\u4e0b\uff1a\\n\\n##### \u8fd0\u5355\u5185\u5bb9\\n\\n| \u5e8f\u53f7  | \u62a5\u6587\u5c42 | \\t\u82f1\u6587\u540d\u79f0                          | \\t\u4e2d\u6587\u540d\u79f0                | \\t\u7ea6\u675f/\u51fa\u73b0\u6b21\u6570\\t | \u6570\u636e\u683c\u5f0f\\t       | \u8bf4\u660e                                                                                                         |\\n|-----|-----|--------------------------------|----------------------|-----------|-------------|------------------------------------------------------------------------------------------------------------|\\n| 1   | \\t1  | \\tOriginalDocumentNumber        | \\t\u539f\u59cb\u5355\u53f7                | \\t1..1     | \\tan..35\\t    | \u5fc5\u586b\uff0c\u4e0a\u6e38\u4f01\u4e1a\u59d4\u6258\u8fd0\u8f93\u5355\u53f7\u3002                                                                                             |\\n| 2\\t  | 1   | \\tShippingNoteNumber\\t           | \u6258\u8fd0\u5355\u53f7                 | \\t1..1     | \\tan..20\\t    | \u5fc5\u586b\uff0c\u672c\u8fd0\u5355\u5355\u53f7\u3002                                                                                                  |\\n| 3\\t  |     | \\tSendToProDateTime             | \\t\u8fd0\u5355\u4e0a\u4f20\u65f6\u95f4              | \\t1..1\\t    | n14\\t        | \u5fc5\u586b\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4e0a\u4f20\u8fd0\u5355\u5230\u7701\u7ea7\u76d1\u6d4b\u7cfb\u7edf\u7684\u65f6\u95f4\u3002YYYYMMDDhhmmss                                                                    |\\n| 4   | \\t1  | \\tCarrier                       | \\t\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u540d\u79f0\\t          | 1..1      | \\tan..512    | \\t\u5fc5\u586b\u3002                                                                                                       |                                                                          \\n| 5   | \\t1  | \\tUnifiedSocialCreditIdentifier | \\t\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801            | \\t1..1     | \\tan18       | \\t\u5fc5\u586b\u3002                                                                                                       |\\n| 6   | 1\\t  | PermitNumber                   | \\t\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u7f16\u53f7\\t        | 1..1      | \\tan..50\\t    | \u5fc5\u586b\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u7684\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u7f16\u53f7\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u6574\u5408\u8f66\u8f86\u5168\u90e8\u4e3a\u603b\u8d28\u91cf4.5\u5428\u53ca\u4ee5\u4e0b\u666e\u901a\u8d27\u8fd0\u8f66\u8f86\u7684\uff0c\u53ef\u586b\u201c\u4f01\u4e1a\u6240\u5728\u5730\u884c\u653f\u533a\u5212\u4ee3\u7801+000000\u201d\u3002                             |\\n| 7   | 1   | \\tConsignmentDateTime           | \\t\u8fd0\u5355\u751f\u6210\u65f6\u95f4              | \\t1..1     | \\tn14\\t       |                                                                                                            | \u5fc5\u586b\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u4fe1\u606f\u7cfb\u7edf\u6b63\u5f0f\u6210\u4ea4\u751f\u6210\u8fd0\u5355\u7684\u65e5\u671f\u65f6\u95f4\u3002YYYYMMDDhhmmss                                                                 |                                   |\\n| 8   | 1\\t  | BusinessTypeCode               | \\t\u4e1a\u52a1\u7c7b\u578b\u4ee3\u7801              | \\t1..1\\t    | an..7\\t      | \u5fc5\u586b\uff0c\u4ee3\u7801\u96c6\u53c2\u89c1wlhy.mot.gov.cn\u3002                                                                                   |\\n| 9   | 1   | \\tDespatchActualDateTime        | \\t\u53d1\u8d27\u65e5\u671f\u65f6\u95f4\\t             | 1..1\\t     | n14         |                                                                                                            |                                                                                       |\\t\u5fc5\u586b\uff0c\u8d27\u7269\u88c5\u8f66\u540e\u7684\u53d1\u8f66\u65f6\u95f4\u3002YYYYMMDDhhmmss   |                                                                        |\\n| 10  | \\t1  | \\tGoodsReceiptDateTime          | \\t\u6536\u8d27\u65e5\u671f\u65f6\u95f4              | \\t1..1     | \\tn14        | \\t\u5fc5\u586b\uff0c\u8d27\u7269\u8fd0\u5230\u540e\u7684\u7b7e\u6536\u65f6\u95f4\u3002YYYYMMDDhhmmss                                                                              |                                             |\\n| 11\\t | 1   | \\tConsignorInfo                 | \\t\u6258\u8fd0\u4eba\u4fe1\u606f               | \\t1..1     | \\t\\t          |                                                                                                            |                                                                          |\\n| 12  | \\t2\\t | Consignor                      | \\t\u6258\u8fd0\u4eba\u540d\u79f0\\t              | 1..1      | \\tan..512    | \\t\u5fc5\u586b\u3002                                                                                                       |\\n| 13  | \\t2\\t | ConsignorID                    | \\t\u6258\u8fd0\u4eba\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801\u6216\u4e2a\u4eba\u8bc1\u4ef6\u53f7\\t  | 1..1      | \\tan..35     | \\t\u5fc5\u586b\u3002                                                                                                       |\\n| 14  | \\t2\\t | PlaceOfLoading                 | \\t\u88c5\u8d27\u5730\u5740                | \\t0..1     | \\tan..256    | \\t\u9009\u586b\uff0c\u5b9e\u9645\u88c5\u8d27\u7684\u5730\u70b9\u3002                                                                                               |\\n| 15  | \\t2\\t | CountrySubdivisionCode         | \\t\u88c5\u8d27\u5730\u70b9\u7684\u56fd\u5bb6\u884c\u653f\u533a\u5212\u4ee3\u7801       | \\t1..1     | \\tan..12\\t    | \u5fc5\u586b\uff0c\u53c2\u7167\u6700\u65b0\u7248\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u884c\u653f\u533a\u5212\u4ee3\u7801\u300b\uff08GB/T 2260-2017\uff09\uff0c\u7cbe\u786e\u5230\u533a\u53bf\u3002                                                             |\\n| 16  | \\t1\\t | ConsigneeInfo                  | \\t\u6536\u8d27\u65b9\u4fe1\u606f               | \\t1..1\\t    | \\t           |\\n| 17  | \\t2\\t | Consignee                      | \\t\u6536\u8d27\u65b9\u540d\u79f0\\t              | 1..1\\t     | an..512\\t\u5fc5\u586b\u3002 |\\n| 18  | \\t2\\t | ConsigneeID                    | \\t\u6536\u8d27\u65b9\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801\u6216\u4e2a\u4eba\u8bc1\u4ef6\u53f7\u7801  | \\t1..1     | \\tan..35\\t    | \u5fc5\u586b\u3002                                                                                                        |                                                                                                 \\n| 19  | \\t2\\t | GoodsReceiptPlace              | \\t\u6536\u8d27\u5730\u5740                | \\t0..1\\t    | an..256\\t    | \u9009\u586b\u3002                                                                                                        |\\n| 20  | \\t2\\t | CountrySubdivisionCode\\t        | \u6536\u8d27\u5730\u70b9\u7684\u56fd\u5bb6\u884c\u653f\u533a\u5212\u4ee3\u7801        | \\t1..1     | \\tan..12\\t    | \u5fc5\u586b\uff0c\u53c2\u7167\u6700\u65b0\u7248\u300a\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u884c\u653f\u533a\u5212\u4ee3\u7801\u300b\uff08GB/T 2260-2017\uff09\uff0c\u7cbe\u786e\u5230\u533a\u53bf\u3002                                                             |\\n| 21  | \\t1\\t | TotalMonetaryAmount            | \\t\u8fd0\u8d39\u91d1\u989d                | \\t1..1     | \\tn..18,3\\t   | \u5fc5\u586b\uff0c\u6258\u8fd0\u4eba\u4e0e\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u7b7e\u8ba2\u8fd0\u8f93\u5408\u540c\u786e\u5b9a\u7684\u8fd0\u8d39\u91d1\u989d\uff0c\u8d27\u5e01\u5355\u4f4d\u4e3a\u4eba\u6c11\u5e01\uff08\u5143\uff09\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5982\u6574\u6570\u7684\u8bdd\uff0c\u4ee5.000\u586b\u5145\u3002\u5982\u662f\u4e00\u7b14\u4e1a\u52a1\u5206\u51e0\u8f86\u8f66\u8fd0\uff0c\u9700\u5c06\u6258\u8fd0\u4eba\u9488\u5bf9\u8fd9\u7b14\u4e1a\u52a1\u4ed8\u7ed9\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u7684\u8fd0\u8f93\u8d39\u7528\u5206\u644a\u5230\u6bcf\u8f86\u8f66\u4e0a\u3002 |\\n| 22  | \\t1\\t | VehicleInfo                    | \\t\u8f66\u8f86\u4fe1\u606f\\t               | 1..1\\t     | \\t           |\\n| 23  | \\t2\\t | VehiclePlateColorCode\\t         | \u8f66\u724c\u989c\u8272\u4ee3\u7801\\t              | 1..1\\t     | an..2       | \\t\u5fc5\u586b\uff0c\u4ee3\u7801\u96c6\u53c2\u89c1wlhy.mot.gov.cn\u3002                                                                                  |\\n| 24  | \\t2\\t | VehicleNumber                  | \\t\u8f66\u8f86\u724c\u7167\u53f7\\t              | 1..1      | \\tan..35\\t    | \u5fc5\u586b\u3002                                                                                                        |\\n| 25  | \\t2\\t | Driver                         | \\t\u9a7e\u9a76\u5458                 | \\t1..n     | \\t           | \\t                                                                                                          |\u5fc5\u586b\uff0c\u5982\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u6709\u591a\u4e2a\u9a7e\u9a76\u5458\uff0c\u53ef\u5faa\u73af\u3002|\\n| 26  | \\t3\\t | DriverName\\t                    | \u59d3\u540d                   | \\t1..1     | \\tan..30\\t    | \u5fc5\u586b\uff0c\u9a7e\u9a76\u5458\u59d3\u540d\u3002                                                                                                  |\\n| 27  | \\t3\\t | DrivingLicense                 | \\t\u673a\u52a8\u8f66\u9a7e\u9a76\u8bc1\u7f16\u53f7            | \\t1..1     | \\tan..18\\t    | \u5fc5\u586b\uff0c\u6839\u636e\u673a\u52a8\u8f66\u9a7e\u9a76\u8bc1\u586b\u5199\u3002                                                                                             |\\n| 28  | \\t2\\t | GoodsInfo                      | \\t\u8d27\u7269\u4fe1\u606f                | \\t1..n     | \\t\\t          | \u5982\u4e00\u8f66\u8d27\u6709\u4e0d\u540c\u8d27\u7269\uff0c\u5219\u53ef\u5faa\u73af\u3002                                                                                            |\\n| 29  | \\t3\\t | DescriptionOfGoods\\t            | \u8d27\u7269\u540d\u79f0                 | \\t1..1     | \\tan..512\\t   | \u5fc5\u586b\u3002                                                                                                        |\\n| 30  | \\t3\\t | CargoTypeClassificationCode    | \\t\u8d27\u7269\u7c7b\u578b \u5206\u7c7b\u4ee3\u7801\\t          | 1..1\\t     | an..3       | \\t\u5fc5\u586b\uff0c\u4ee3\u7801\u96c6\u53c2\u89c1wlhy.mot.gov.cn\u3002                                                                                  |\\n| 31  | \\t3\\t | GoodsItemGrossWeight           | \\t\u8d27\u7269\u9879\u6bdb\u91cd\\t              | 1..1\\t     | n..14,3     | \\t\u5fc5\u586b\uff0c\u91cd\u91cf\u5355\u4f4d\u4ee5KGM\u5343\u514b\u586b\u5199\u6570\u503c\uff0c\u4fdd\u75593\u4f4d\u5c0f\u6570\uff0c\u5982\u6574\u6570\u7684\u8bdd\uff0c\u4ee5.000\u586b\u5145\u3002\u5c0f\u6570\u70b9\u4e0d\u8ba1\u5165\u603b\u957f\u3002\u5982\u662f\u8f7b\u6ce1\u8d27\u7b49\u8d27\u7269\uff0c\u8bf7\u4f30\u7b97\u91cd\u91cf\u3002\u5982\u4e00\u7b14\u4e1a\u52a1\u5206\u51e0\u8f86\u8f66\u8fd0\uff0c\u9700\u62a5\u9001\u6bcf\u8f86\u8f66\u5b9e\u9645\u8fd0\u8f93\u7684\u8d27\u7269\u91cd\u91cf\u3002                |\\n| 32  | \\t3\\t | Cube\\t                          | \u4f53\u79ef                   | \\t0..1     | \\tn..9,4\\t    | \u9009\u586b\uff0c\u4f53\u79ef\u5355\u4f4d\u4ee5DMQ\u7acb\u65b9\u7c73\u586b\u5199\u6570\u503c\uff0c\u4fdd\u75594\u4f4d\u5c0f\u6570\uff0c\u5982\u6574\u6570\u7684\u8bdd\uff0c\u4ee5.0000\u586b\u5145\u3002\u5c0f\u6570\u70b9\u4e0d\u8ba1\u5165\u603b\u957f\u3002                                                         |\\n| 33  | \\t3\\t | TotalNumberOfPackages          | \\t\u603b\u4ef6\u6570\\t                | 0..1      | \\tn..8       | \\t\u9009\u586b\u3002                                                                                                       |\\n| 34  | \\t1\\t | ActualCarrierInfo              | \\t\u5b9e\u9645\u627f\u8fd0\u4eba\u4fe1\u606f             | \\t         | 1\\t          | \\t                                                                                                          | |\\n| 35  | \\t2\\t | ActualCarrierName              | \\t\u5b9e\u9645\u627f\u8fd0\u4eba\u540d\u79f0             | \\t1..1     | \\tan..256    | \\t\u5fc5\u586b\uff0c\u4e0e\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u7b7e\u8ba2\u8fd0\u8f93\u5408\u540c\uff0c\u5b9e\u9645\u5b8c\u6210\u8fd0\u8f93\u7684\u7ecf\u8425\u8005\u3002 \u53d6\u5f97\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u7684\u4e2a\u4f53\u8fd0\u8f93\u4e1a\u6237\uff0c\u76f4\u63a5\u586b\u5199\u201c\u8bb8\u53ef\u8bc1\u4e0a\u7684\u4e1a\u6237\u540d\u79f0\u201d\uff1b \u5176\u4ed6\u60c5\u51b5\u586b\u5199\u201c\u8fd0\u8f93\u516c\u53f8\u540d\u79f0\uff08\u5b9e\u9645\u627f\u8fd0\u9a7e\u9a76\u5458\u59d3\u540d\uff09\u201d\u3002              |\\n| 36  | \\t2\\t | ActualCarrierBusinessLicense   | \\t\u5b9e\u9645\u627f\u8fd0\u4eba\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u53f7     | \\t1..1     | \\tan..50     | \\t\u5fc5\u586b\uff0c\u5b9e\u9645\u627f\u8fd0\u4eba\u7684\u9053\u8def\u8fd0\u8f93\u7ecf\u8425\u8bb8\u53ef\u8bc1\u7f16\u53f7\uff0c\u7f51\u7edc\u8d27\u8fd0\u7ecf\u8425\u8005\u6574\u5408\u8f66\u8f86\u5168\u90e8\u4e3a\u603b\u8d28\u91cf4.5\u5428\u53ca\u4ee5\u4e0b\u666e\u901a\u8d27\u8fd0\u8f66\u8f86\u7684\uff0c\u53ef\u586b\u201c\u8f66\u7c4d\u57306\u4f4d\u884c\u653f\u533a\u57df\u4ee3\u7801+000000\u201d\u3002                              |\\n| 37  | \\t2\\t | ActualCarrierID                | \\t\u5b9e\u9645\u627f\u8fd0\u4eba\u7edf\u4e00\u793e\u4f1a\u4fe1\u7528\u4ee3\u7801\u6216\u8bc1\u4ef6\u53f7\u7801\\t | 1..1      | \\tan..50\\t    | \u5fc5\u586b\u3002                                                                                                        |\\n| 38  | \\t1\\t | InsuranceInformation           | \\t\u4fdd\u9669\u4fe1\u606f\\t               | 1..1\\t     |             | \\t\u5fc5\u586b\u3002                                                                                                       |\\n| 39  | \\t2\\t | PolicyNumber                   | \\t\u4fdd\u9669\u5355\u53f7                | \\t1..1\\t    | an..30\\t     | \u5fc5\u586b\uff0c\u672a\u6295\u4fdd\u7684\uff0c\u53ef\u586bnone\u3002                                                                                            |\\n| 40  | \\t2\\t | InsuranceCompany               | \\t\u4fdd\u9669\u516c\u53f8 \u540d\u79f0             | \\t1..1     | \\tan..30     | \\t\u5fc5\u586b\uff0c\u4ee3\u7801\u96c6\u53c2\u89c1wlhy.mot.gov.cn\u3002\u672a\u6295\u4fdd\u7684\uff0c\u53ef\u586b\u201c\u65e0\u201d\u3002                                                                       |\\n| 41  | \\t1\\t | Remark                         | \\t\u5907\u6ce8                  | \\t0..1     | \\tan..256    | \\t\u9009\u586b\u3002                                                                                                       |"},{"id":"/2023/07/04/saas","metadata":{"permalink":"/blog/2023/07/04/saas","source":"@site/blog/2023/07/04/saas.md","title":"Saas IaaS Paas \u533a\u522b","description":"Saas IaaS Paas \u533a\u522b \u4e0e\u4ecb\u7ecd \u4ec0\u4e48\u662fSaas \u7cfb\u7edf \u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4f01\u4e1a\u7684Saas\u7cfb\u7edf","date":"2023-07-04T00:00:00.000Z","formattedDate":"2023\u5e747\u67084\u65e5","tags":[{"label":"saas","permalink":"/blog/tags/saas"},{"label":"\u77e5\u8bc6","permalink":"/blog/tags/\u77e5\u8bc6"}],"readingTime":1.77,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Saas IaaS Paas \u533a\u522b","tags":["saas","\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&11","description":"Saas IaaS Paas \u533a\u522b \u4e0e\u4ecb\u7ecd \u4ec0\u4e48\u662fSaas \u7cfb\u7edf \u5982\u4f55\u642d\u5efa\u5c5e\u4e8e\u4f01\u4e1a\u7684Saas\u7cfb\u7edf"},"unlisted":false,"prevItem":{"title":"\u7f51\u7edc\u8d27\u8fd0\u7cfb\u7edf \u642d\u5efa\u603b\u7ed3","permalink":"/blog/2023/07/05/network_freight"},"nextItem":{"title":"\u547d\u4ee4\u884c\u5e38\u7528\u5feb\u6377\u952e\u53ca\u6c47\u603b","permalink":"/blog/2023/06/27/terminal_command"}},"content":"\x3c!-- truncate --\x3e\\n# Saas IaaS Paas \u533a\u522b\\n\\n\\n## Saas (\u8f6f\u4ef6\u5373\u670d\u52a1)\\n\\n> SaaS\u63d0\u4f9b\u5546\u4e3a\u4f01\u4e1a\u642d\u5efa\u4fe1\u606f\u5316\u6240\u9700\u8981\u7684\u6240\u6709\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u53ca\u8f6f\u4ef6\u3001\u786c\u4ef6\u8fd0\u4f5c\u5e73\u53f0\uff0c\u5e76\u8d1f\u8d23\u6240\u6709\u524d\u671f\u7684\u5b9e\u65bd\u3001\u540e\u671f\u7684\u7ef4\u62a4\u7b49\u4e00\u7cfb\u5217\u670d\u52a1\uff0c\u4f01\u4e1a\u65e0\u9700\u8d2d\u4e70\u8f6f\u786c\u4ef6\u3001\u5efa\u8bbe\u673a\u623f\u3001\u62db\u8058IT\u4eba\u5458\uff0c\u5373\u53ef\u901a\u8fc7\u4e92\u8054\u7f51\u4f7f\u7528\u4fe1\u606f\u7cfb\u7edf\\n\\n\u9489\u9489\uff0c\u4f01\u4e1a\u5fae\u4fe1\\n\\n## Iaas (\u57fa\u7840\u67b6\u6784\u5373\u670d\u52a1)\\n\\n> \u57fa\u4e8e\u4e91\u7684\u670d\u52a1\uff0c\u6309\u9700\u4ed8\u8d39\uff0c\u7528\u4e8e\u5b58\u50a8\uff0c\u7f51\u7edc\u548c\u865a\u62df\u5316\u7b49\u670d\u52a1\\n\\nAWS \u963f\u91cc\u4e91 \u817e\u8baf\u4e91 \u7b49\\n\\n\\n## Paas (\u5e73\u53f0\u5373\u670d\u52a1)\\n> Internet\u4e0a\u53ef\u7528\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u5de5\u5177\\n\\nMicrosoft Windows Azure\uff0c\u767e\u5ea6BAE\u3001\u65b0\u6d6aSAE\u3001\u4eac\u4e1c\u4e91\u64ceJAE\\n\\n\\n\\n## IaaS\uff0cPaaS\u548cSaaS\u4e4b\u95f4\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\u5728\u6258\u7ba1\u5b9a\u5236\u5e94\u7528\u7a0b\u5e8f\u65f6\uff0cIaaS\u53ef\u4ee5\u4e3a\u60a8\u63d0\u4f9b\u6700\u5927\u7a0b\u5ea6\u7684\u7075\u6d3b\u6027\uff0c\u5e76\u4e3a\u6570\u636e\u5b58\u50a8\u63d0\u4f9b\u901a\u7528\u6570\u636e\u4e2d\u5fc3\u3002\\n\\nPaaS\u901a\u5e38\u5efa\u7acb\u5728IaaS\u5e73\u53f0\u4e4b\u4e0a\uff0c\u4ee5\u51cf\u5c11\u7cfb\u7edf\u7ba1\u7406\u7684\u9700\u6c42\u3002\u5b83\u4f7f\u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\uff0c\u800c\u4e0d\u662f\u57fa\u7840\u67b6\u6784\u7ba1\u7406\u3002\\n\\nSaaS\u63d0\u4f9b\u6ee1\u8db3\u7279\u5b9a\u4e1a\u52a1\u9700\u6c42\u7684\u5373\u7528\u578b\u89e3\u51b3\u65b9\u6848\u3002\u5927\u591a\u6570\u73b0\u4ee3SaaS\u5e73\u53f0\u90fd\u5efa\u7acb\u5728IaaS\u6216PaaS\u5e73\u53f0\u4e0a\u3002\\n\\n\u60a8\u53ef\u80fd\u9009\u62e9\u4ece\u4e00\u79cd\u4e91\u8ba1\u7b97\u670d\u52a1\u6a21\u578b\u5f00\u59cb\uff0c\u6216\u8005\u627e\u5230\u5bf9\u8fd9\u4e09\u79cd\u6a21\u578b\u7684\u9700\u6c42\uff1a\u8fd9\u53d6\u51b3\u4e8e\u4e1a\u52a1\u7684\u89c4\u6a21\u548c\u590d\u6742\u6027"},{"id":"/2023/06/27/terminal_command","metadata":{"permalink":"/blog/2023/06/27/terminal_command","source":"@site/blog/2023/06/27/terminal_command.md","title":"\u547d\u4ee4\u884c\u5e38\u7528\u5feb\u6377\u952e\u53ca\u6c47\u603b","description":"\u547d\u4ee4\u884c\u5e38\u7528\u7ec8\u7aef\u5feb\u6377\u952e\u53ca\u6c47\u603b \u63a7\u5236\u9762\u677f\u5feb\u6377\u64cd\u4f5c \u7ec8\u7aef\u5feb\u6377\u64cd\u4f5c \u7ec8\u7aef\u5feb\u6377\u952e  \u5982\u4f55\u5feb\u901f\u4f7f\u7528\u547d\u4ee4\u884c\u7ec8\u7aef \u547d\u4ee4\u884c\u7ec8\u7aef\u5feb\u6377\u952e\u64cd\u4f5c","date":"2023-06-27T00:00:00.000Z","formattedDate":"2023\u5e746\u670827\u65e5","tags":[{"label":"cmd","permalink":"/blog/tags/cmd"},{"label":"\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/\u57fa\u7840\u77e5\u8bc6"}],"readingTime":3.555,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u547d\u4ee4\u884c\u5e38\u7528\u5feb\u6377\u952e\u53ca\u6c47\u603b","tags":["cmd","\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&10","description":"\u547d\u4ee4\u884c\u5e38\u7528\u7ec8\u7aef\u5feb\u6377\u952e\u53ca\u6c47\u603b \u63a7\u5236\u9762\u677f\u5feb\u6377\u64cd\u4f5c \u7ec8\u7aef\u5feb\u6377\u64cd\u4f5c \u7ec8\u7aef\u5feb\u6377\u952e  \u5982\u4f55\u5feb\u901f\u4f7f\u7528\u547d\u4ee4\u884c\u7ec8\u7aef \u547d\u4ee4\u884c\u7ec8\u7aef\u5feb\u6377\u952e\u64cd\u4f5c"},"unlisted":false,"prevItem":{"title":"Saas IaaS Paas \u533a\u522b","permalink":"/blog/2023/07/04/saas"},"nextItem":{"title":"github workflows","permalink":"/blog/2023/06/09/github-workflows"}},"content":"\x3c!-- truncate --\x3e\\n## \u5e38\u7528\u5feb\u6377\u952e\\n\\n\\n* `tab` \u547d\u4ee4\u8865\u5168 \u6587\u4ef6\u540d\u8865\u5168\\n* `ctrl + c ` \u53d6\u6d88\u5f53\u524d\u547d\u4ee4 \\n* `ctrl + z` \u540e\u7aef\u8fd0\u884c\\n* `ctrl + s` \u6682\u505c\u5f53\u524d\u7ec8\u7aef\\n* `ctrl + q` \u6062\u590d\u5f53\u524d\u7ec8\u7aef\\n* `ctrl + a ` \u5149\u6807\u79fb\u52a8\u5230\u884c\u9996\\n* `ctrl + e` \u5149\u6807\u79fb\u52a8\u5230\u884c\u5c3e\\n* `ctrl + f` \u5149\u6807\u79fb\u52a8\u5411\u524d \u4e0b\u4e2a\u5355\u8bcd\\n* `ctrl + b` \u5149\u6807\u8fd4\u56de \u79fb\u52a8\u524d\u4e00\u4e2a\u5355\u8bcd\\n* `ctrl + u` \u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u5de6\u8fb9\u4e0e\u884c\u9996\u4e4b\u95f4\u7684\u6240\u6709\u5b57\u7b26\\n* `ctrl + k` \u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u4e0e\u884c\u5c3e\u6240\u6709\u5b57\u6bb5\\n* `ctrl + w` \u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u524d\u4efb\u610f\u4e2a\u7a7a\u683c\u53ca\u5176\u524d\u7684\u4e00\u4e2a\u5355\u8bcd\uff0c\u6216\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u5de6\u8fb9\u81f3\u6240\u5728\u5355\u8bcd\u9996\u7684\u6240\u6709\u5b57\u7b26\u3002\\n* `alt + d` \u5220\u9664\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u540e\u4efb\u610f\u4e2a\u7a7a\u683c\u53ca\u5176\u540e\u7684\u4e00\u4e2a\u5355\u8bcd\uff0c\u6216\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u81f3\u6240\u5728\u5355\u8bcd\u5c3e\u7684\u6240\u6709\u5b57\u7b26\\n* `ctrl + y ` \u590d\u5236\u4f60\u4e0a\u4e00\u6b21\u5220\u9664\u6216\u526a\u5207\u7684\u6761\u76ee\\n* `alt +u` \u8f6c\u6362\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u540e\u7684\u4e00\u4e2a\u5355\u8bcd\u4e3a\u5927\u5199\uff0c\u6216\u5149\u6807\u6240\u5728\u5355\u8bcd\u4f4d\u7f6e\u81f3\u6b64\u5355\u8bcd\u5c3e\u7684\u5b57\u6bcd\u4e3a\u5927\u5199\\n* `alt +i ` \u8f6c\u6362\u5149\u6807\u6240\u5728\u4f4d\u7f6e\u540e\u7684\u4e00\u4e2a\u5355\u8bcd\u4e3a\u5c0f\u5199\uff0c\u6216\u5149\u6807\u6240\u5728\u5355\u8bcd\u4f4d\u7f6e\u81f3\u6b64\u5355\u8bcd\u5c3e\u7684\u5b57\u6bcd\u4e3a\u5c0f\u5199\\n* `alt + .` \u5728\u5149\u6807\u5904\u8f93\u5165\u6700\u8fd1\u5386\u53f2\u547d\u4ee4\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6b64\u547d\u4ee4\u53ea\u6709\u5355\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8f93\u5165\u6b64\u5b57\u7b26\u4e32\u3002\u53ef\u6301\u7eed\u4f7f\u7528\u4ee5\u6301\u7eed\u5207\u6362\u4e3a\u66f4\u524d\u7684\u547d\u4ee4\\n* `ctrl + r ` \u4f9d\u636e\u7528\u6237\u5728\uff1a\u63d0\u793a\u7b26\u540e\u7684\u8f93\u5165\u5b57\u7b26\u4e32\u5339\u914d\u67e5\u627e history \u8bb0\u5f55\u4e2d\u547d\u4ee4\u6761\u76ee\\n* `ctrl + g`   \u4ece\u5386\u53f2\u641c\u7d22\u6a21\u5f0f\uff08Ctrl + r\uff09\u9000\u51fa\\n* `!num` \u6267\u884c history \u8bb0\u5f55\u4e2d\u7b2c num \u6761\u547d\u4ee4\u6761\u76ee\uff0cnum \u6b63\u6574\u6570\u65f6\uff0c\u4e3a\u6b63\u5e8f\uff1b\u8d1f\u6570\u65f6\uff0c\u4e3a\u53cd\u5e8f\\n* `!string:p`  \u8f93\u51fa\u6700\u8fd1\u7684\u4ee5 string \u5f00\u5934\u7684\u547d\u4ee4\u6761\u76ee\u3002\u7b49\u540c !?string?\\n\\n### \u4f7f\u7528\u6280\u5de7\\n* `!!` \u8f93\u51fa\u5e76\u6267\u884c\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u4e00\u6761\u547d\u4ee4\\n* `!num:p`  \u8f93\u51fa\u7b2c num \u6761\u547d\u4ee4\u6761\u76ee\uff0c\u4e0d\u6267\u884c\\n* `!num:gs/str1/str2/ ` \u5c06\u7b2c num \u6761\u547d\u4ee4\u6761\u76ee\u4e2d\u7684 str1 \u5b57\u7b26\u4e32\u66ff\u6362\u4e3astr2\uff0c\uff08\u82e5\u4e0d\u52a0 g\uff0c\u5219\u4ec5\u66ff\u6362\u7b2c\u4e00\u4e2a\u5339\u914d\uff09\\n* `!string ` \u8f93\u51fa\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u4ee5 string \u5f00\u5934\u7684\u547d\u4ee4\u6761\u76ee\u3002\u7b49\u540c !?string?\\n* `!?string? `  \u8f93\u51fa\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u4ee5 string \u5f00\u5934\u7684\u547d\u4ee4\u6761\u76ee\u3002\u7b49\u540c !string\\n* `!string:p` \u8f93\u51fa\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u4ee5 string \u5f00\u5934\u7684\u547d\u4ee4\u6761\u76ee\\n* `^abc` \u5220\u9664\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u547d\u4ee4\u4e2d\u7684 abc \u5b57\u7b26\u4e32\uff0c\u5e76\u6267\u884c\\n* `\\\\^foo\\\\^bar`  \u5c06\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u547d\u4ee4\u4e2d\u7684 foo \u5b57\u7b26\u4e32\u66ff\u6362\u4e3a bar\uff0c\u5e76\u6267\u884c\\n* `!$` \u6267\u884c\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u547d\u4ee4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\\n* `!*` \u6267\u884c\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u547d\u4ee4\u4e2d\u7684\u6240\u6709\u53c2\u6570\\n* `!*:p` \u8f93\u51fa\u6700\u8fd1\u5df2\u6267\u884c\u8fc7\u7684\u547d\u4ee4\u4e2d\u7684\u6240\u6709\u53c2\u6570"},{"id":"/2023/06/09/github-workflows","metadata":{"permalink":"/blog/2023/06/09/github-workflows","source":"@site/blog/2023/06/09/github-workflows.md","title":"github workflows","description":"github workflows  \u53d1\u5e03 \u5982\u4f55\u4f7f\u7528 github workflows \u4e00\u952e\u90e8\u7f72 \u4e00\u952e\u53d1\u5e03","date":"2023-06-09T00:00:00.000Z","formattedDate":"2023\u5e746\u67089\u65e5","tags":[{"label":"github","permalink":"/blog/tags/github"},{"label":"\u77e5\u8bc6","permalink":"/blog/tags/\u77e5\u8bc6"},{"label":"\u73a9\u8f6cgithub","permalink":"/blog/tags/\u73a9\u8f6cgithub"}],"readingTime":6.23,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"github workflows","tags":["github","\u77e5\u8bc6","\u73a9\u8f6cgithub"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&9","description":"github workflows  \u53d1\u5e03 \u5982\u4f55\u4f7f\u7528 github workflows \u4e00\u952e\u90e8\u7f72 \u4e00\u952e\u53d1\u5e03"},"unlisted":false,"prevItem":{"title":"\u547d\u4ee4\u884c\u5e38\u7528\u5feb\u6377\u952e\u53ca\u6c47\u603b","permalink":"/blog/2023/06/27/terminal_command"},"nextItem":{"title":"github .github \u76ee\u5f55\u4ecb\u7ecd","permalink":"/blog/2023/06/05/github"}},"content":"\u5de5\u4f5c\u6d41\u662f\u4e00\u4e2a\u53ef\u914d\u7f6e\u7684\u81ea\u52a8\u5316\u8fc7\u7a0b\uff0c\u5c06\u8fd0\u884c\u4e00\u4e2a\u6216\u591a\u4e2a\u4f5c\u4e1a\u3002\u5de5\u4f5c\u6d41\u662f\u7531\u7b7e\u5165\u5230\u5b58\u50a8\u5e93\u4e2d\u7684YAML\u6587\u4ef6\u5b9a\u4e49\u7684\uff0c\u5f53\u5b58\u50a8\u5e93\u4e2d\u7684\u4e8b\u4ef6\u89e6\u53d1\u5de5\u4f5c\u6d41\u65f6\uff0c\u5de5\u4f5c\u6d41\u5c31\u4f1a\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u624b\u52a8\u89e6\u53d1\u5de5\u4f5c\u6d41\uff0c\u6216\u8005\u6309\u7167\u5df2\u5b9a\u4e49\u7684\u65f6\u95f4\u8868\u89e6\u53d1\u5de5\u4f5c\u6d41\u3002\\n\\n\u5de5\u4f5c\u6d41\u5b9a\u4e49\u5728\u5b58\u50a8\u5e93\u7684.github/ Workflows\u76ee\u5f55\u4e2d\uff0c\u5e76\u4e14\u5b58\u50a8\u5e93\u53ef\u4ee5\u6709\u591a\u4e2a\u5de5\u4f5c\u6d41\uff0c\u6bcf\u4e2a\u5de5\u4f5c\u6d41\u53ef\u4ee5\u6267\u884c\u4e00\u7ec4\u4e0d\u540c\u7684\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u6709\u4e00\u4e2a\u5de5\u4f5c\u6d41\u6765\u6784\u5efa\u548c\u6d4b\u8bd5\u62c9\u53d6\u8bf7\u6c42\uff0c\u53e6\u4e00\u4e2a\u5de5\u4f5c\u6d41\u5728\u6bcf\u6b21\u521b\u5efa\u53d1\u5e03\u65f6\u90e8\u7f72\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd8\u6709\u53e6\u4e00\u4e2a\u5de5\u4f5c\u6d41\u5728\u6bcf\u6b21\u6709\u4eba\u6253\u5f00\u65b0\u95ee\u9898\u65f6\u6dfb\u52a0\u6807\u7b7e\u3002\\n\\n[\u5b98\u65b9\u6587\u6863](https://docs.github.com/zh/actions/using-workflows/about-workflows)\\n\x3c!-- truncate --\x3e\\n\\n# \u73a9\u8f6cgithub \u4e4b workflows\\n\\n\\n\\n\\n##  workflows \u80fd\u505a\u54ea\u4e9b\\n\\nGitHub Actions \u662f\u4e00\u79cd\u6301\u7eed\u96c6\u6210\u548c\u6301\u7eed\u4ea4\u4ed8 (CI/CD) \u5e73\u53f0\uff0c\u53ef\u7528\u4e8e\u81ea\u52a8\u6267\u884c\u751f\u6210\u3001\u6d4b\u8bd5\u548c\u90e8\u7f72\u7ba1\u9053\u3002 \u60a8\u53ef\u4ee5\u521b\u5efa\u5de5\u4f5c\u6d41\u7a0b\u6765\u6784\u5efa\u548c\u6d4b\u8bd5\u5b58\u50a8\u5e93\u7684\u6bcf\u4e2a\u62c9\u53d6\u8bf7\u6c42\uff0c\u6216\u5c06\u5408\u5e76\u7684\u62c9\u53d6\u8bf7\u6c42\u90e8\u7f72\u5230\u751f\u4ea7\u73af\u5883\u3002\\n\\nGitHub Actions \u4e0d\u4ec5\u4ec5\u662f DevOps\uff0c\u8fd8\u5141\u8bb8\u60a8\u5728\u5b58\u50a8\u5e93\u4e2d\u53d1\u751f\u5176\u4ed6\u4e8b\u4ef6\u65f6\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\u3002 \u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\uff0c\u4ee5\u4fbf\u5728\u6709\u4eba\u5728\u60a8\u7684\u5b58\u50a8\u5e93\u4e2d\u521b\u5efa\u65b0\u95ee\u9898\u65f6\u81ea\u52a8\u6dfb\u52a0\u76f8\u5e94\u7684\u6807\u7b7e\u3002\\n\\nGitHub \u63d0\u4f9b Linux\u3001Windows \u548c macOS \u865a\u62df\u673a\u6765\u8fd0\u884c\u5de5\u4f5c\u6d41\u7a0b\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\u6216\u4e91\u57fa\u7840\u67b6\u6784\u4e2d\u6258\u7ba1\u81ea\u5df1\u7684\u81ea\u6258\u7ba1\u8fd0\u884c\u5668\u3002\\n\\n\u4f5c\u4e1a\u662f\u5de5\u4f5c\u6d41\u4e2d\u5728\u540c\u4e00\u8fd0\u884c\u5668\u4e0a\u6267\u884c\u7684\u4e00\u7ec4\u6b65\u9aa4\u3002 \u6bcf\u4e2a\u6b65\u9aa4\u8981\u4e48\u662f\u4e00\u4e2a\u5c06\u8981\u6267\u884c\u7684 shell \u811a\u672c\uff0c\u8981\u4e48\u662f\u4e00\u4e2a\u5c06\u8981\u8fd0\u884c\u7684\u52a8\u4f5c\u3002 \u6b65\u9aa4\u6309\u987a\u5e8f\u6267\u884c\uff0c\u5e76\u4e14\u76f8\u4e92\u4f9d\u8d56\u3002 \u7531\u4e8e\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5728\u540c\u4e00\u8fd0\u884c\u5668\u4e0a\u6267\u884c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u5c06\u6570\u636e\u4ece\u4e00\u4e2a\u6b65\u9aa4\u5171\u4eab\u5230\u53e6\u4e00\u4e2a\u6b65\u9aa4\u3002 \u4f8b\u5982\uff0c\u53ef\u4ee5\u6709\u4e00\u4e2a\u751f\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u6b65\u9aa4\uff0c\u540e\u8ddf\u4e00\u4e2a\u6d4b\u8bd5\u5df2\u751f\u6210\u5e94\u7528\u7a0b\u5e8f\u7684\u6b65\u9aa4\u3002\\n\\n\u60a8\u53ef\u4ee5\u914d\u7f6e\u4f5c\u4e1a\u4e0e\u5176\u4ed6\u4f5c\u4e1a\u7684\u4f9d\u8d56\u5173\u7cfb\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4f5c\u4e1a\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u4e14\u5f7c\u6b64\u5e76\u884c\u8fd0\u884c\u3002 \u5f53\u4e00\u4e2a\u4f5c\u4e1a\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u4f5c\u4e1a\u65f6\uff0c\u5b83\u5c06\u7b49\u5f85\u4ece\u5c5e\u4f5c\u4e1a\u5b8c\u6210\uff0c\u7136\u540e\u624d\u80fd\u8fd0\u884c\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u7684\u4e0d\u540c\u4f53\u7cfb\u7ed3\u6784\uff0c\u60a8\u53ef\u80fd\u6709\u591a\u4e2a\u751f\u6210\u4f5c\u4e1a\uff0c\u4ee5\u53ca\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u4f5c\u4e1a\u7684\u6253\u5305\u4f5c\u4e1a\u3002 \u751f\u6210\u4f5c\u4e1a\u5c06\u5e76\u884c\u8fd0\u884c\uff0c\u5f53\u5b83\u4eec\u5168\u90e8\u6210\u529f\u5b8c\u6210\u540e\uff0c\u6253\u5305\u4f5c\u4e1a\u5c06\u8fd0\u884c\u3002\\n\\n## \u5982\u4f55\u4f7f\u7528 workflows\\n\\n1. \u5728\u5b58\u50a8\u5e93\u4e2d\uff0c\u521b\u5efa `.github/workflows/` \u76ee\u5f55\u6765\u5b58\u50a8\u5de5\u4f5c\u6d41\u6587\u4ef6\u3002\\n\\n2. \u5728 `.github/workflows/ ` \u76ee\u5f55\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a learn-github-actions.yml \u7684\u65b0\u6587\u4ef6\u5e76\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u3002\\n\\n3. \u63d0\u4ea4\u8fd9\u4e9b\u66f4\u6539\u5e76\u5c06\u5176\u63a8\u9001\u5230\u60a8\u7684 GitHub \u4ed3\u5e93\u3002\\n\\n## \u4e86\u89e3 workflows \u7684\u6587\u4ef6\\n\\n```yaml\\nname: \'\' # \u53ef\u9009 - \u5de5\u4f5c\u6d41\u7684\u540d\u79f0\uff0c\u5b83\u5c06\u663e\u793a\u5728 GitHub \u5b58\u50a8\u5e93\u7684\u201c\u64cd\u4f5c\u201d\u9009\u9879\u5361\u4e2d\u3002\\nrun-name: \'\' # \u53ef\u9009 - \u4ece\u5de5\u4f5c\u6d41\u751f\u6210\u7684\u5de5\u4f5c\u6d41\u8fd0\u884c\u7684\u540d\u79f0\uff0c\u8be5\u540d\u79f0\u5c06\u663e\u793a\u5728\u5b58\u50a8\u5e93\u7684\u201c\u64cd\u4f5c\u201d\u9009\u9879\u5361\u4e0a\u7684\u5de5\u4f5c\u6d41\u8fd0\u884c\u5217\u8868\u4e2d\u3002\u6b64\u793a\u4f8b\u4f7f\u7528\u5305\u542b github \u4e0a\u4e0b\u6587\u7684\u8868\u8fbe\u5f0f\u6765\u663e\u793a\u89e6\u53d1\u4e86\u5de5\u4f5c\u6d41\u8fd0\u884c\u7684\u53c2\u4e0e\u8005\u7684\u7528\u6237\u540d\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\\non: \'\' # \u6307\u5b9a\u6b64\u5de5\u4f5c\u6d41\u7a0b\u7684\u89e6\u53d1\u5668\u3002 \u6b64\u793a\u4f8b\u4f7f\u7528 push \u4e8b\u4ef6\uff0c\u56e0\u6b64\u6bcf\u5f53\u6709\u4eba\u5c06\u66f4\u6539\u63a8\u9001\u5230\u5b58\u50a8\u5e93\u6216\u5408\u5e76\u62c9\u53d6\u8bf7\u6c42\u65f6\u90fd\u4f1a\u89e6\u53d1\u5de5\u4f5c\u6d41\u8fd0\u884c\u3002 \u8fd9\u662f\u7531\u5230\u6bcf\u4e2a\u5206\u652f\u7684\u63a8\u9001\u89e6\u53d1\u7684\\njobs: \'\' # \u5de5\u4f5c\u6d41\u4e2d\u8fd0\u884c\u7684\u6240\u6709\u4f5c\u4e1a\u7ec4\u5408\u5728\u4e00\u8d77\\n  check-bats-version: \'\' #  check-bats-version: \u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a check-bats-version \u4f5c\u4e1a\u3002 \u5b50\u952e\u5c06\u5b9a\u4e49\u4f5c\u4e1a\u7684\u5c5e\u6027\\n  runs-on: \'\' # \u5c06\u4f5c\u4e1a\u914d\u7f6e\u4e3a\u5728\u6700\u65b0\u7248\u672c\u7684 Ubuntu Linux \u8fd0\u884c\u5668\u4e0a\u8fd0\u884c\u3002 \u8fd9\u610f\u5473\u7740\u8be5\u4f5c\u4e1a\u5c06\u5728 GitHub \u6258\u7ba1\u7684\u65b0\u865a\u62df\u673a\u4e0a\u6267\u884c\\n  steps:  # \u5c06\u5728 check-bats-version \u4f5c\u4e1a\u4e2d\u8fd0\u884c\u7684\u6240\u6709\u6b65\u9aa4\u7ec4\u5408\u5728\u4e00\u8d77\u3002 \u6b64\u90e8\u5206\u4e0b\u5d4c\u5957\u7684\u6bcf\u9879\u90fd\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u64cd\u4f5c\u6216 shell \u811a\u672c\\n    uses: \'\' # uses \u5173\u952e\u5b57\u6307\u5b9a\u6b64\u6b65\u9aa4\u5c06\u8fd0\u884c actions/checkout \u64cd\u4f5c\u7684 v3\u3002 \u8fd9\u662f\u4e00\u4e2a\u5c06\u5b58\u50a8\u5e93\u7b7e\u51fa\u5230\u8fd0\u884c\u5668\u4e0a\u7684\u64cd\u4f5c\uff0c\u5141\u8bb8\u60a8\u5bf9\u4ee3\u7801\uff08\u5982\u751f\u6210\u548c\u6d4b\u8bd5\u5de5\u5177\uff09\u8fd0\u884c\u811a\u672c\u6216\u5176\u4ed6\u64cd\u4f5c\u3002 \u6bcf\u5f53\u5de5\u4f5c\u6d41\u7a0b\u5c06\u9488\u5bf9\u5b58\u50a8\u5e93\u7684\u4ee3\u7801\u8fd0\u884c\u65f6\uff0c\u90fd\u5e94\u4f7f\u7528\u7b7e\u51fa\u64cd\u4f5c\u3002\\n      with: \'\' # \u6b64\u6b65\u9aa4\u4f7f\u7528 actions/setup-node@v3 \u64cd\u4f5c\u5b89\u88c5\u6307\u5b9a\u7684 Node.js \u7248\u672c\uff08\u672c\u793a\u4f8b\u4f7f\u7528 v14\uff09\u3002 \u8fd9\u4f1a\u5c06 node \u548c npm \u547d\u4ee4\u90fd\u653e\u5728 PATH \u4e2d\\nrun: \'\' #       run \u5173\u952e\u5b57\u6307\u793a\u4f5c\u4e1a\u5728\u8fd0\u884c\u5668\u4e0a\u6267\u884c\u547d\u4ee4\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u4f7f\u7528 npm \u6765\u5b89\u88c5 bats \u8f6f\u4ef6\u6d4b\u8bd5\u5305\\n  \\n\\n```\\n\\n## \u5982\u4f55\u53d1\u5e03blog \u901a\u8fc7workflows\\n\\n\\n## \u53d1\u5e03\u81ea\u5df1\u7684 workflows\\n\\n## \u603b\u7ed3"},{"id":"/2023/06/05/github","metadata":{"permalink":"/blog/2023/06/05/github","source":"@site/blog/2023/06/05/github.md","title":"github .github \u76ee\u5f55\u4ecb\u7ecd","description":"github .github\u76ee\u5f55\u4ecb\u7ecd github \u4f60\u4e0d\u77e5\u9053\u7684\u79d8\u5bc6","date":"2023-06-05T00:00:00.000Z","formattedDate":"2023\u5e746\u67085\u65e5","tags":[{"label":"github","permalink":"/blog/tags/github"},{"label":"\u77e5\u8bc6","permalink":"/blog/tags/\u77e5\u8bc6"}],"readingTime":0.41,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"github .github \u76ee\u5f55\u4ecb\u7ecd","tags":["github","\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&9","description":"github .github\u76ee\u5f55\u4ecb\u7ecd github \u4f60\u4e0d\u77e5\u9053\u7684\u79d8\u5bc6"},"unlisted":false,"prevItem":{"title":"github workflows","permalink":"/blog/2023/06/09/github-workflows"},"nextItem":{"title":"\u663e\u5361\u53c2\u6570\u4ecb\u7ecd","permalink":"/blog/2023/06/02/graphics_card"}},"content":"## github \u4ecb\u7ecd\\n\\nGitHub \u662f\u4e00\u4e2a\u7528\u4e8e\u7248\u672c\u63a7\u5236\u548c\u534f\u4f5c\u7684\u4ee3\u7801\u6258\u7ba1\u5e73\u53f0\u3002 \u5b83\u5141\u8bb8\u60a8\u548c\u5176\u4ed6\u4eba\u968f\u65f6\u968f\u5730\u534f\u540c\u5904\u7406\u9879\u76ee\u3002\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u8bbe\u7f6e git\\n\\n\\n## \u521b\u5efa\u4ed3\u5e93\\n\\n\\n## \u521b\u5efa\u4ed3\u5e93\u5206\u652f\\n\\n\\n## \u53c2\u4e0e\u9879\u76ee\\n\\n## \u793e\u4ea4\u5316\\n\\n\\n## github \u901a\u4fe1\\n\\n\\n\\n## github \u8bcd\u6c47\u8868\\n\\n\\n## git \u5907\u5fd8\u6e05\u5355\\n\\n\\n## \u5b66\u4e60\u8d44\u6e90"},{"id":"/2023/06/02/graphics_card","metadata":{"permalink":"/blog/2023/06/02/graphics_card","source":"@site/blog/2023/06/02/graphics_card.md","title":"\u663e\u5361\u53c2\u6570\u4ecb\u7ecd","description":"\u9ad8\u7aef\u663e\u5361\u4ecb\u7ecd,\u4efb\u4f55\u9009\u62e9\u663e\u5361,\u663e\u5361\u4f60\u9700\u8981\u61c2\u7684\u77e5\u8bc6","date":"2023-06-02T00:00:00.000Z","formattedDate":"2023\u5e746\u67082\u65e5","tags":[{"label":"\u77e5\u8bc6","permalink":"/blog/tags/\u77e5\u8bc6"},{"label":"\u767e\u79d1","permalink":"/blog/tags/\u767e\u79d1"}],"readingTime":0.06,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u663e\u5361\u53c2\u6570\u4ecb\u7ecd","tags":["\u77e5\u8bc6","\u767e\u79d1"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2306021","description":"\u9ad8\u7aef\u663e\u5361\u4ecb\u7ecd,\u4efb\u4f55\u9009\u62e9\u663e\u5361,\u663e\u5361\u4f60\u9700\u8981\u61c2\u7684\u77e5\u8bc6"},"unlisted":false,"prevItem":{"title":"github .github \u76ee\u5f55\u4ecb\u7ecd","permalink":"/blog/2023/06/05/github"},"nextItem":{"title":"docusaurus bing SEO \u4f18\u5316","permalink":"/blog/2023/05/31/bing"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u72ec\u7acb\u663e\u5361\\n\\n\\n\\n\\n\\n## \u96c6\u6210\u663e\u5361"},{"id":"/2023/05/31/bing","metadata":{"permalink":"/blog/2023/05/31/bing","source":"@site/blog/2023/05/31/bing.md","title":"docusaurus bing SEO \u4f18\u5316","description":"bing docusaurus seo \u4f18\u5316 \u7ec6\u5219 \u641c\u7d22\u5f15\u64ce\u4f18\u5316","date":"2023-05-31T00:00:00.000Z","formattedDate":"2023\u5e745\u670831\u65e5","tags":[{"label":"bing","permalink":"/blog/tags/bing"},{"label":"seo","permalink":"/blog/tags/seo"}],"readingTime":1.145,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"docusaurus bing SEO \u4f18\u5316","tags":["bing","seo"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2305311","description":"bing docusaurus seo \u4f18\u5316 \u7ec6\u5219 \u641c\u7d22\u5f15\u64ce\u4f18\u5316"},"unlisted":false,"prevItem":{"title":"\u663e\u5361\u53c2\u6570\u4ecb\u7ecd","permalink":"/blog/2023/06/02/graphics_card"},"nextItem":{"title":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72","permalink":"/blog/2023/05/31/hugo"}},"content":"\x3c!-- truncate --\x3e\\n## docusaurus seo\\n\\n\\n### page metadata\\n\\n```html\\n  <meta name=\\"keywords\\" content=\\"cooking, blog\\">\\n</head>\\n```\\n\\n### \u5934\u90e8\u8fdb\u884c\u914d\u7f6e\\n\\n```markdown\\n---\\ntitle: \u7ed9\u641c\u7d22\u5f15\u64ce\u770b\u7684\u6807\u9898\uff1b\u53ef\u80fd\u548c\u6b63\u6587\u6807\u9898\u4e0d\u4e00\u6837\\ndescription: \u5173\u4e8e\u6b64\u9875\u7684\u7b80\u77ed\u63cf\u8ff0\\nimage: \u5728\u793e\u4ea4\u5a92\u4f53\u5361\u7247\u4e2d\u663e\u793a\u7684\u7f29\u7565\u56fe\\nkeywords: [\u63cf\u8ff0, \u4e2d\u5fc3\u7684, \u5173\u952e\u8bcd]\\n---\\n```\\n\\n### \u5728layout \u7ec4\u4ef6\u6dfb\u52a0`<Head>` \u5143\u7d20 component.\\n\\n```typescript\\nimport React from \'react\';\\nimport Layout from \'@theme/Layout\';\\nimport Head from \'@docusaurus/Head\';\\n\\nexport default function page() {\\n  return (\\n    <Layout title=\\"Page\\" description=\\"A React page demo\\">\\n      <Head>\\n        <meta property=\\"og:image\\" content=\\"image.png\\" />\\n      </Head>\\n      {/* ... */}\\n    </Layout>\\n  );\\n}\\n```\\n\\n\\n### \u7ed3\u6784\u5316\u76ee\u5f55\\n\\n```html\\n<aside></aside>\\n<nav></nav>\\n<main></main>\\n```\\n\\n### Sitemap file\\n\\n\\n```text\\nDocusaurus provides the @docusaurus/plugin-sitemap plugin, which is shipped with preset-classic by default. It autogenerates a sitemap.xml file which will be available at https://example.com/[baseUrl]/sitemap.xml after the production build. \u7ad9\u70b9\u5730\u56fe\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u641c\u7d22\u5f15\u64ce\u722c\u866b\u66f4\u51c6\u786e\u5730\u722c\u53d6\u4f60\u7684\u7f51\u7ad9\u3002\\n\\n```\\n\\n\\n\\n## bing SEO \\n\\n\u5c06\u9875\u9762\u6e90\u4ee3\u7801\u7684 `<meta description>` \u6807\u8bb0\u4e2d\u7684\u63cf\u8ff0\u957f\u5ea6\u66f4\u6539\u4e3a\u4ecb\u4e8e 25 \u5230 160 \u4e2a\u5b57\u7b26\u4e4b\u95f4\u3002"},{"id":"/2023/05/31/hugo","metadata":{"permalink":"/blog/2023/05/31/hugo","source":"@site/blog/2023/05/31/hugo.md","title":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72","description":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72 \u642d\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684blog","date":"2023-05-31T00:00:00.000Z","formattedDate":"2023\u5e745\u670831\u65e5","tags":[{"label":"hugo","permalink":"/blog/tags/hugo"},{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":1.99,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72","tags":["hugo","blog"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&7","description":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72 \u642d\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684blog"},"unlisted":false,"prevItem":{"title":"docusaurus bing SEO \u4f18\u5316","permalink":"/blog/2023/05/31/bing"},"nextItem":{"title":"vercel\u514d\u8d39blog \u642d\u5efa\u6559\u7a0b","permalink":"/blog/2023/05/29/vercel"}},"content":"\x3c!-- truncate --\x3e\\n## \u521b\u5efagithub \u8d26\u6237\\n\\n[\u5982\u4f55\u521b\u5efagithub \u5e76\u521b\u5efa github pages](https://ahkevinxy.github.io/blog/2023/05/29/vercel)\\n\\n\\n\\n## git \u57fa\u7840\u77e5\u8bc6\\n\\n[\u7b80\u5355\u7684git \u4f7f\u7528\u6280\u5de7](https://ahkevinxy.github.io/docs/backend/git/base)\\n\\n```bash \\n\\n# \u521d\u59cbgit \u9879\u76ee\\ngit init \\n\\n# \u6dfb\u52a0\u9879\u76ee\\ngit add . # .\u8868\u793a\u6240\u6709 \u4e5f\u53ef\u4ee5\u6307\u5b9a\u6587\u4ef6\u6dfb\u52a0\\n\\n# \u6dfb\u52a0\u63d0\u4ea4\u8bf4\u660e\\n\\ngit commit -m\'\' # \'\' \u52a0\u5165\u8bf4\u660e\u4ecb\u7ecd\\n\\n# \u63d0\u4ea4 \u4ee3\u7801\\n\\ngit  push # \u5982\u679c\u7b2c\u4e00\u6b21 \u53ef\u80fd\u4f1a\u63d0\u793a git push --set-upstream origin master\\n\\n\\n```\\n\\n## \u4f7f\u7528  \u4e3b\u9898\u5de5\u5177\\n\\n[\u6253\u5f00\u4e3b\u9898\u811a\u624b\u67b6](https://github.com/CaiJimmy/hugo-theme-stack-starter)\\n\\n\u70b9\u51fb `use this template` \u9009\u62e9 Create a new repository \u521b\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684 github pages\\n\\n\\n## \u6253\u5f00\u81ea\u5df1\u521b\u5efa\u7684\u9879\u76ee\\n\\n\u70b9\u51fb code  \u9009\u62e9 code spaces \\n\\n\\n\\n## \u4e0b\u8f7d hugo\\n\\n\\n:::info\\n \\n\u9009\u62e9\u5bf9\u5e94\u7684 hugo \u7248\u672c `0.111.3`\\n\\n\\n[\u4e0b\u8f7d\u5730\u5740](https://github.com/gohugoio/hugo/releases/tag/v0.111.3)\\n\\n\u9009\u62e9 hugo_extended \u5f00\u5934\u4e0b\u8f7d\\n\\n\\n:::\\n\\n\\n## \u4fee\u6539 github workflows \u6587\u4ef6\\n\\n* deploy.yml\\n```yml\\nname: Deploy to Github Pages\\n\\non:\\n  push:\\n    branches: [master]\\n  pull_request:\\n    branches: [master]\\n\\njobs:\\n  build:\\n    runs-on: ubuntu-latest\\n\\n    steps:\\n      - uses: actions/checkout@v2\\n\\n      - name: Cache Hugo resources\\n        uses: actions/cache@v2\\n        env:\\n          cache-name: cache-hugo-resources\\n        with:\\n          path: resources\\n          key: ${{ env.cache-name }}\\n\\n      - uses: actions/setup-go@v2\\n        with:\\n          go-version: \\"^1.17.0\\"\\n      - run: go version\\n\\n      - name: Cache Go Modules\\n        uses: actions/cache@v2\\n        with:\\n          path: |\\n            ~/.cache/go-build\\n            ~/go/pkg/mod\\n          key: ${{ runner.os }}-go-${{ hashFiles(\'**/go.sum\') }}\\n          restore-keys: |\\n            ${{ runner.os }}-go-\\n\\n      - name: Setup Hugo\\n        uses: peaceiris/actions-hugo@v2\\n        with:\\n          hugo-version: \\"0.111.3\\"\\n          extended: true\\n\\n      - name: Build\\n        run: hugo --minify --gc\\n\\n      - name: Deploy \ud83d\ude80\\n        uses: JamesIves/github-pages-deploy-action@v4.4.2\\n        with:\\n          branch: gh-pages\\n          folder: public\\n          clean: true\\n          single-commit: true\\n\\n\\n```\\n* \u53d8\u66f4\\nhugo-version: \\"latest\\" ==> hugo-version: \\"0.111.3\\"\\n\\n\\n\\n## \u8bbe\u7f6e \u9879\u76ee  settings\\n\\n1. \u70b9\u51fb Actions \\n2. \u9009\u62e9 General \\n3. \u9009\u62e9 `Workflow permissions` \\n4. \u9009\u62e9 ` Read and write permissions` \\n\\n\\n## \u521b\u5efa\u65b0\u7684\u9875\u9762\\n\\n```bash\\n\\n hugo new post/2023/05/31/new.md\\n \\n \\n```\\n\\n:::info\\n\\n\u9700\u8981\u6539 \u6587\u4ef6\u5934\\n\\n```markdown\\n---\\ntitle: \\"Hugo\\"\\ndescription: \\ndate: 2023-05-31T08:42:48Z\\nimage: \\nmath: \\nlicense: \\nhidden: false\\ncomments: true\\ndraft: true\\n---\\n```\\n\u9700\u8981\u5c06 `draft`: `true` \u5220\u9664 \\n:::\\n\\n\\n\\n## \u63d0\u4ea4\u5bf9\u5e94\u4ee3\u7801\\n\\n### \u547d\u4ee4\u884c\u63d0\u4ea4\\n```bash\\ngit add . \\n\\n\\ngit commit -m\'test\'\\n\\ngit push \\n```\\n\\n### githubDesktop"},{"id":"/2023/05/29/vercel","metadata":{"permalink":"/blog/2023/05/29/vercel","source":"@site/blog/2023/05/29/vercel.md","title":"vercel\u514d\u8d39blog \u642d\u5efa\u6559\u7a0b","description":"vercel \u514d\u8d39blog \u642d\u5efa \u4e2a\u4eba\u514d\u8d39blog \u5982\u4f55\u642d\u5efa\u4e2a\u4ebablog \u4e00\u952e\u5f0fblog\u642d\u5efa","date":"2023-05-29T00:00:00.000Z","formattedDate":"2023\u5e745\u670829\u65e5","tags":[{"label":"vercel","permalink":"/blog/tags/vercel"},{"label":"blog","permalink":"/blog/tags/blog"},{"label":"\u514d\u8d39","permalink":"/blog/tags/\u514d\u8d39"}],"readingTime":0.93,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"vercel\u514d\u8d39blog \u642d\u5efa\u6559\u7a0b","tags":["vercel","blog","\u514d\u8d39"],"authors":"ahKevinXy","image":"https://source.unsplash.com/random?people&6","description":"vercel \u514d\u8d39blog \u642d\u5efa \u4e2a\u4eba\u514d\u8d39blog \u5982\u4f55\u642d\u5efa\u4e2a\u4ebablog \u4e00\u952e\u5f0fblog\u642d\u5efa"},"unlisted":false,"prevItem":{"title":"Hugo  stack  \u4e3b\u9898\u5b89\u88c5\u4e0e\u90e8\u7f72","permalink":"/blog/2023/05/31/hugo"},"nextItem":{"title":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 go sdk","permalink":"/blog/2023/05/25/go-cmb"}},"content":"\x3c!-- truncate --\x3e\\n## \u6ce8\u518c github\\n\\n> \u6ce8\u518c\u5730\u5740 https://github.com/signup?source=login\\n\\n\\n\\n## \u521b\u5efa\u5c5e\u4e8e github pages \u9879\u76ee https://github.com/new\\n\\n\u89c4\u5219 \u540d\u5b57 + github.io\\n\\n[![\u6ce8\u518c github pages](/img/blog/2023/05/blog_vercel_01.png)](/img/blog/2023/05/blog_vercel_01.png)\\n\\n\\n\\n## \u4e0a\u4f20\u4ee3\u7801\\n\\n\\n```bash\\n# git \u672a\u8bbe\u7f6e email \u6216\u8005username \u9700\u8981\u8bbe\u7f6e\u4e00\u4e0b\\n\\ngit config --global user.name \\"Your Name\\" # \u81ea\u5df1github\u540d\u79f0\\n\\ngit config --global user.email \\"youremail@yourdomain.com\\" # \u81ea\u5df1github \u6ce8\u518c\u90ae\u7bb1\\n\\n# \u67e5\u770b\u662f\u5426\u751f\u6548\\ngit config --list\\n\\n```\\n\\n```bash\\necho \\"# Libxy.github.io\\" >> README.md\\ngit init\\ngit add README.md\\ngit commit -m \\"first commit\\"\\ngit branch -M main\\ngit remote add origin https://github.com/Libxy/Libxy.github.io.git\\ngit push -u origin main\\n```\\n\\n\\n\\n## \u6ce8\u518c verce\\n\\n> https://vercel.com/\\n\\n\\n\u4f7f\u7528github \u5feb\u6377\u767b\u5f55\\n\\n\\n### \u521b\u5efa\u9879\u76ee \\n\\n> https://vercel.com/new\\n\\n\\n\u9009\u62e9 github \u9879\u76ee  https://github.com/Libxy/Libxy.github.io.git\\n\\n\\n### \u5bfc\u5165\u9879\u76ee\\n[![\u5bfc\u5165\u9879\u76ee](/img/blog/2023/05/blog_vercel_02.png)](/img/blog/2023/05/blog_vercel_02.png)\\n\\n\\n### \u53d1\u5e03\u9879\u76ee\\n\\n[![\u53d1\u5e03\u9879\u76ee](/img/blog/2023/05/blog_vercel_03.png)](/img/blog/2023/05/blog_vercel_03.png)\\n\\n\\n\\n### \u6dfb\u52a0 domain \u6620\u5c04\\n\\n[![\u53d1\u5e03\u9879\u76ee](/img/blog/2023/05/blog_vercel_05.png)](/img/blog/2023/05/blog_vercel_05.png)\\n\\n\\n## \u8bbf\u95ee\u81ea\u5df1\u7684\u6620\u5c04\u7684\u7f51\u7ad9"},{"id":"/2023/05/25/go-cmb","metadata":{"permalink":"/blog/2023/05/25/go-cmb","source":"@site/blog/2023/05/25/go-cmb.md","title":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 go sdk","description":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 \u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054\u4ee3\u53d1  \u62db\u5546\u94f6\u884c\u4f01\u4e1a\u76f4\u8054\u4ee3\u6263 \u4ee3\u53d1\u4ee3\u6263 \u4ee3\u53d1\u5de5\u8d44 \u7075\u6d3b\u7528\u5de5\u4ee3\u53d1\u4ee3\u6263 \u62db\u5546\u5de5\u8d44\u5361\u529e\u7406 \u5de5\u8d44\u5361\u529e\u7406","date":"2023-05-25T00:00:00.000Z","formattedDate":"2023\u5e745\u670825\u65e5","tags":[{"label":"go","permalink":"/blog/tags/go"},{"label":"\u62db\u5546\u94f6\u884c","permalink":"/blog/tags/\u62db\u5546\u94f6\u884c"},{"label":"sdk","permalink":"/blog/tags/sdk"}],"readingTime":1.49,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 go sdk","tags":["go","\u62db\u5546\u94f6\u884c","sdk"],"authors":"ahKevinXy","description":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 \u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054\u4ee3\u53d1  \u62db\u5546\u94f6\u884c\u4f01\u4e1a\u76f4\u8054\u4ee3\u6263 \u4ee3\u53d1\u4ee3\u6263 \u4ee3\u53d1\u5de5\u8d44 \u7075\u6d3b\u7528\u5de5\u4ee3\u53d1\u4ee3\u6263 \u62db\u5546\u5de5\u8d44\u5361\u529e\u7406 \u5de5\u8d44\u5361\u529e\u7406","image":"https://img.opencodes.top/blog/cmb/wx.png"},"unlisted":false,"prevItem":{"title":"vercel\u514d\u8d39blog \u642d\u5efa\u6559\u7a0b","permalink":"/blog/2023/05/29/vercel"},"nextItem":{"title":"MySQL\u4e2dDATE_FORMAT()\u51fd\u6570\u7684\u8bf4\u660e\u548c\u7b80\u4ecb","permalink":"/blog/2023/05/23/mysql"}},"content":"\x3c!-- truncate --\x3e\\n\\n\\n[![\u62db\u5546\u94f6\u884clogo](/img/cmb_logo.jpeg)](/img/cmb_logo.jpeg)\\n\\n\\n\\n\\n\\n## \u4ecb\u7ecd\\n\\n\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054\u670d\u52a1\\n\\n## \u62db\u5546\u94f6\u884c\u6587\u6863 [\u5b98\u7f51](https://openbiz.cmbchina.com/developer/UI/business/Index.aspx)\\n\\n\\n## \u4f7f\u7528\\n\\n```bash\\ngo get -u github.com/ahKevinXy/go-cmb\\n\\n```\\n\\n## TODO\\n\\n- [ ] \u66f4\u65b0 models \u4e3a proto \u517c\u5bb9\u5176\u4ed6\u8bed\u8a00\\n- [ ] \u4f18\u5316\u8bf7\u6c42\u53c2\u6570\\n- [ ] \u5b8c\u5584\u529f\u80fd\\n\\n## \u76ee\u5f55\u8bf4\u660e\\n\\n* `cmb_error` \u9519\u8bef\u53c2\u6570\\n* `config`  \u914d\u7f6e\u6587\u4ef6\\n* `constants` \u5e38\u91cf\u6587\u4ef6\\n* `docs` \u6587\u6863\u6587\u4ef6\\n* `handler` \u4e1a\u52a1\u5904\u7406\\n    * `account` \u8d26\u6237\u5904\u7406\\n    * `notice` \u901a\u77e5\\n    * `payment` \u652f\u4ed8\\n    * `payroll` \u4ee3\u53d1\\n    * `payrool_old` \u4ee3\u53d1(\u65e7)\\n    * `unit_manager` \u4ea4\u6613\u7ba1\u5bb6\\n* `help` \u5de5\u5177\u7c7b\u51fd\u6570\\n* `models` \u5b9e\u4f8b\\n* `pkg` \u7b2c\u4e09\u65b9\u5305\\n* `testdata` \u672c\u5730\u6d4b\u8bd5\u6570\u636e\\n\\n\\n### \u8d26\u52a1\u7ba1\u7406\\n\\n### \u4ea4\u6613\u7ba1\u5bb6\\n\\n\\n### \u4ee3\u53d1\u4ee3\u6263\\n\\n\\n### \u4ea4\u6613\u6d41\u6c34\\n\\n\\n## \u5f00\u53d1\u8c03\u8bd5\\n\\n### \u751f\u6210 testdata \u53c2\u6570\u6570\u636e\\n```bash\\n# \u521b\u5efa testdata\u76ee\u5f55\\n mkdir testdata\\n\\n# \u751f\u6210 testdata.go \u6587\u4ef6\\n cp -rf  testdata.go.template  testdata/testdata.go\\n\\n```\\n\\n### \u5f55\u5165\u672c\u5730\u6d4b\u8bd5\u6570\u636e\\n\\n```go\\npackage testdata\\n\\n// \u5546\u6237\u914d\u7f6e\\nconst (\\n\\tUserId     = \\"\\" // \u7528\u6237ID\\n\\tAccount    = \\"\\" //\u8d26\u6237\\n\\tUserKey    = \\"\\" // \u7528\u6237\u79d8\u94a5\\n\\tAseKey     = \\"\\" // \u5bf9\u79f0\u79d8\u94a5\\n\\tBankLinkNo = \\"\\" // \u5206\u884c\u53f7\\n)\\n\\n// Sass\u5e73\u53f0\u914d\u7f6e\\nconst (\\n\\tCmbSassName       = \\"\\" // Sass \u540d\u79f0\\n\\tCmbSassPrivateKey = \\"\\" // \u5e73\u53f0\u79c1\u94a5\\n\\tCmbSigdatDefault  = \\"\\" // \u9ed8\u8ba4\u503c\\n\\tCmbUrl            = \\"\\" // \u94f6\u4f01\u76f4\u8054\u5730\u5740\\n)\\n\\n```\\n\\n\\n## \u5fae\u4fe1\u4ea4\u6d41\\n\\n\\n[![\u4e0a\u6d77\u62db\u5546\u94f6\u884c\u5ba2\u6237\u7ecf\u7406\u5fae\u4fe1](https://img.opencodes.top/blog/cmb/wx.png \\"wx\\")](https://img.opencodes.top/blog/cmb/wx.png)"},{"id":"/2023/05/23/mysql","metadata":{"permalink":"/blog/2023/05/23/mysql","source":"@site/blog/2023/05/23/mysql.md","title":"MySQL\u4e2dDATE_FORMAT()\u51fd\u6570\u7684\u8bf4\u660e\u548c\u7b80\u4ecb","description":"MYSQL \u65f6\u95f4\u51fd\u6570\u5904\u7406 MYSQL \u65f6\u95f4\u7ba1\u7406","date":"2023-05-23T00:00:00.000Z","formattedDate":"2023\u5e745\u670823\u65e5","tags":[{"label":"mysql","permalink":"/blog/tags/mysql"},{"label":"\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/\u57fa\u7840\u77e5\u8bc6"}],"readingTime":11.97,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"MySQL\u4e2dDATE_FORMAT()\u51fd\u6570\u7684\u8bf4\u660e\u548c\u7b80\u4ecb","tags":["mysql","\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","description":"MYSQL \u65f6\u95f4\u51fd\u6570\u5904\u7406 MYSQL \u65f6\u95f4\u7ba1\u7406","image":"https://img.opencodes.top/blog/cmb/wx.png"},"unlisted":false,"prevItem":{"title":"\u62db\u5546\u94f6\u884c\u94f6\u4f01\u76f4\u8054 go sdk","permalink":"/blog/2023/05/25/go-cmb"},"nextItem":{"title":"CPU \u8be6\u89e3","permalink":"/blog/2023/05/18/cpu"}},"content":"\x3c!-- truncate --\x3e\\n## \u83b7\u53d6\u65f6\u95f4\\n### NOW() \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\\n\\n```sql\\nselect NOW(); -- 2023-05-25 13:17:50\\n```\\n\\n### curdate \u83b7\u53d6\u5f53\u524d\u65e5\u671f\\n\\n```sql\\nSELECT CURDATE(); --2023-05-25\\n```\\n\\n### CURTIME() \u83b7\u53d6\u5f53\u524d\u65f6\u95f4\\n```sql\\nSELECT CURTIME();  --  13:17:50\\n```\\n\\n### \u83b7\u53d6\u5e74\u6708\u65e5\\n\\n```sql\\nSELECT EXTRACT(YEAR FROM NOW(); -- \u83b7\u53d6\u5e74 2023\\nSELECT EXTRACT(MONTH FROM NOW()); -- \u83b7\u53d6\u6708 5\\nSELECT EXTRACT(DAY FROM NOW()); -- \u65e5 25\\nSELECT EXTRACT(HOUR FROM NOW()); -- \u83b7\u53d6\u65f6\u95f4 13\\nSELECT EXTRACT(MINUTE FROM NOW()); -- 17\\n\\nSELECT EXTRACT(SECOND FROM NOW()); -- \u79d229\\n\\n--  \u6216\u8005\u4ece\u65e5\u671f\u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\\nSELECT EXTRACT(SECOND FROM \'2023-05-25 13:17:50\');  -- 14\\n\\n\\n```\\n\\n\\n## \u65f6\u95f4\u5904\u7406\\n\\n### \u65e5\u671f\u589e\u52a0 \u51cf\u5c11\\n\\n```sql\\n-- \u65f6\u95f4\u51cf\u5c11\u4e00\u4e2a\u5c0f\u65f6\\nselect date_sub(now(), INTERVAL 1 hour);\\n\\n-- \u65f6\u95f4\u52a0\u4e00\u5929 \\nselect date_add(now(), INTERVAL 1 day);\\n-- \u5176\u4ed6\u95f4\u9694\\nINTERVAL 1 YEAR\\nINTERVAL 1 MONTH\\nINTERVAL 1 DAY\\nINTERVAL 1 HOUR\\nINTERVAL 1 MINUTE\\nINTERVAL 1 SECOND\\n\\n```\\n\\n\\n## \u65e5\u671f\u683c\u5f0f\u5316\u3001\u5b57\u7b26\u4e32\u8f6c\u65e5\u671f \\n\\n\\n### DATE_FORMAT\\n\u683c\u5f0f\u5316 datetime timestamp\\n\\n* date \u662f\u8981\u683c\u5f0f\u5316\u7684\u6709\u6548\u65e5\u671f\\n* format \u9884\u5b9a\u4e49\u7684\u8bf4\u660e\u7b26\\n\\n```sql\\n-- \u683c\u5f0f\u5316\u53c2\u8003\uff1a\\nselect DATE_FORMAT(now(),\'%Y-%m-%d %H:%i:%s\');\\nselect DATE_FORMAT(now(),\'%Y-%m-%d %H:00:00\');\\n\\n-- \u5b57\u7b26\u4e32\u8f6c\u65e5\u671f\\nselect str_to_date(\'2023-05-25 13:17:50\', \'%Y-%m-%d %H:%i:%s\'); -- 2023-05-25 13:17:50\\n\\n```\\n\\n## \u5176\u5b83\u53c2\u8003\\n\\n```sql\\n-- MySQL\u65e5\u671f\u65f6\u95f4\u5904\u7406\u51fd\u6570\\n-- \u5f53\u524d\u65e5\u671f\uff1a2017-05-12\uff08\u7a81\u7136\u53d1\u73b0\u4eca\u5929512\uff0c\u662f\u4e0d\u662f\u4f1a\u62c9\u9632\u7a7a\u8b66\u62a5\uff09\\nSELECT NOW() FROM DUAL;-- \u5f53\u524d\u65e5\u671f\u65f6\u95f4\uff1a2017-05-12 11:41:47\\n-- \u5728MySQL\u91cc\u4e5f\u5b58\u5728\u548cOracle\u91cc\u7c7b\u4f3c\u7684dual\u865a\u62df\u8868\uff1a\u5b98\u65b9\u58f0\u660e\u7eaf\u7cb9\u662f\u4e3a\u4e86\u6ee1\u8db3select ... from...\u8fd9\u4e00\u4e60\u60ef\u95ee\u9898\uff0cmysql\u4f1a\u5ffd\u7565\u5bf9\u8be5\u8868\u7684\u5f15\u7528\u3002\\n-- \u90a3\u4e48MySQL\u4e2d\u5c31\u4e0d\u7528DUAL\u4e86\u5427\u3002\\nSELECT NOW();-- \u5f53\u524d\u65e5\u671f\u65f6\u95f4\uff1a2017-05-12 11:41:55\\n-- \u9664\u4e86 now() \u51fd\u6570\u80fd\u83b7\u5f97\u5f53\u524d\u7684\u65e5\u671f\u65f6\u95f4\u5916\uff0cMySQL \u4e2d\u8fd8\u6709\u4e0b\u9762\u7684\u51fd\u6570\uff1a\\nSELECT CURRENT_TIMESTAMP();-- 2017-05-15 10:19:31\\nSELECT CURRENT_TIMESTAMP;-- 2017-05-15 10:19:51\\nSELECT LOCALTIME();-- 2017-05-15 10:20:00\\nSELECT LOCALTIME;-- 2017-05-15 10:20:10\\nSELECT LOCALTIMESTAMP();-- 2017-05-15 10:20:21(v4.0.6)\\nSELECT LOCALTIMESTAMP;-- 2017-05-15 10:20:30(v4.0.6)\\n-- \u8fd9\u4e9b\u65e5\u671f\u65f6\u95f4\u51fd\u6570\uff0c\u90fd\u7b49\u540c\u4e8e now()\u3002\u9274\u4e8e now() \u51fd\u6570\u7b80\u77ed\u6613\u8bb0\uff0c\u5efa\u8bae\u603b\u662f\u4f7f\u7528 now()\u6765\u66ff\u4ee3\u4e0a\u9762\u5217\u51fa\u7684\u51fd\u6570\u3002\\n \\nSELECT SYSDATE();-- \u5f53\u524d\u65e5\u671f\u65f6\u95f4\uff1a2017-05-12 11:42:03\\n-- sysdate() \u65e5\u671f\u65f6\u95f4\u51fd\u6570\u8ddf now() \u7c7b\u4f3c\uff0c\\n-- \u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff1anow() \u5728\u6267\u884c\u5f00\u59cb\u65f6\u503c\u5c31\u5f97\u5230\u4e86;sysdate() \u5728\u51fd\u6570\u6267\u884c\u65f6\u52a8\u6001\u5f97\u5230\u503c\u3002\\n-- \u770b\u4e0b\u9762\u7684\u4f8b\u5b50\u5c31\u660e\u767d\u4e86\uff1a\\nSELECT NOW(), SLEEP(3), NOW();\\nSELECT SYSDATE(), SLEEP(3), SYSDATE();\\n \\n \\nSELECT CURDATE();-- \u5f53\u524d\u65e5\u671f\uff1a2017-05-12\\nSELECT CURRENT_DATE();-- \u5f53\u524d\u65e5\u671f\uff1a\u7b49\u540c\u4e8e CURDATE()\\nSELECT CURRENT_DATE;-- \u5f53\u524d\u65e5\u671f\uff1a\u7b49\u540c\u4e8e CURDATE()\\n \\nSELECT CURTIME();-- \u5f53\u524d\u65f6\u95f4\uff1a11:42:47\\nSELECT CURRENT_TIME();-- \u5f53\u524d\u65f6\u95f4\uff1a\u7b49\u540c\u4e8e CURTIME()\\nSELECT CURRENT_TIME;-- \u5f53\u524d\u65f6\u95f4\uff1a\u7b49\u540c\u4e8e CURTIME()\\n \\n-- \u83b7\u5f97\u5f53\u524d UTC \u65e5\u671f\u65f6\u95f4\u51fd\u6570\\nSELECT UTC_TIMESTAMP(), UTC_DATE(), UTC_TIME()\\n-- MySQL \u83b7\u5f97\u5f53\u524d\u65f6\u95f4\u6233\u51fd\u6570\uff1acurrent_timestamp, current_timestamp()\\nSELECT CURRENT_TIMESTAMP, CURRENT_TIMESTAMP();-- 2017-05-15 10:32:21 | 2017-05-15 10:32:21\\n \\n \\n-- MySQL \u65e5\u671f\u65f6\u95f4 Extract\uff08\u9009\u53d6\uff09 \u51fd\u6570\\nSET @dt = \'2017-05-15 10:37:14.123456\';\\nSELECT DATE(@dt);-- \u83b7\u53d6\u65e5\u671f\uff1a2017-05-15\\nSELECT TIME(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u65f6\u95f4\uff1a10:37:14.123456\\nSELECT YEAR(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u5e74\u4efd\\nSELECT MONTH(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u6708\u4efd\\nSELECT DAY(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u65e5\\nSELECT HOUR(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u65f6\\nSELECT MINUTE(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u5206\\nSELECT SECOND(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u79d2\\nSELECT MICROSECOND(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u6beb\u79d2\\nSELECT QUARTER(\'2017-05-15 10:37:14.123456\');-- \u83b7\u53d6\u5b63\u5ea6\\nSELECT WEEK(\'2017-05-15 10:37:14.123456\');-- 20 (\u83b7\u53d6\u5468)\\nSELECT WEEK(\'2017-05-15 10:37:14.123456\', 7);-- ****** \u6d4b\u8bd5\u6b64\u51fd\u6570\u5728MySQL5.6\u4e0b\u65e0\u6548\\nSELECT WEEKOFYEAR(\'2017-05-15 10:37:14.123456\');-- \u540cweek()\\nSELECT DAYOFYEAR(\'2017-05-15 10:37:14.123456\');-- 135 (\u65e5\u671f\u5728\u5e74\u5ea6\u4e2d\u7b2c\u51e0\u5929)\\nSELECT DAYOFMONTH(\'2017-05-15 10:37:14.123456\');-- 5 (\u65e5\u671f\u5728\u6708\u5ea6\u4e2d\u7b2c\u51e0\u5929)\\nSELECT DAYOFWEEK(\'2017-05-15 10:37:14.123456\');-- 2 (\u65e5\u671f\u5728\u5468\u4e2d\u7b2c\u51e0\u5929\uff1b\u5468\u65e5\u4e3a\u7b2c\u4e00\u5929)\\nSELECT WEEKDAY(\'2017-05-15 10:37:14.123456\');-- 0\\nSELECT WEEKDAY(\'2017-05-21 10:37:14.123456\');-- 6(\u4e0edayofweek()\u90fd\u8868\u793a\u65e5\u671f\u5728\u5468\u7684\u7b2c\u51e0\u5929\uff0c\u53ea\u662f\u53c2\u8003\u6807\u51c6\u4e0d\u540c\uff0cweekday()\u5468\u4e00\u4e3a\u7b2c0\u5929\uff0c\u5468\u65e5\u4e3a\u7b2c6\u5929)\\nSELECT YEARWEEK(\'2017-05-15 10:37:14.123456\');-- 201720(\u5e74\u548c\u5468)\\n \\nSELECT EXTRACT(YEAR FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(MONTH FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(DAY FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(HOUR FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(MINUTE FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(SECOND FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(MICROSECOND FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(QUARTER FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(WEEK FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(YEAR_MONTH FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(DAY_HOUR FROM \'2017-05-15 10:37:14.123456\');\\nSELECT EXTRACT(DAY_MINUTE FROM \'2017-05-15 10:37:14.123456\');-- 151037(\u65e5\u65f6\u5206)\\nSELECT EXTRACT(DAY_SECOND FROM \'2017-05-15 10:37:14.123456\');-- 15103714(\u65e5\u65f6\u5206\u79d2)\\nSELECT EXTRACT(DAY_MICROSECOND FROM \'2017-05-15 10:37:14.123456\');-- 15103714123456(\u65e5\u65f6\u5206\u79d2\u6beb\u79d2)\\nSELECT EXTRACT(HOUR_MINUTE FROM \'2017-05-15 10:37:14.123456\');-- 1037(\u65f6\u5206)\\nSELECT EXTRACT(HOUR_SECOND FROM \'2017-05-15 10:37:14.123456\');-- 103714(\u65f6\u5206\u79d2)\\nSELECT EXTRACT(HOUR_MICROSECOND FROM \'2017-05-15 10:37:14.123456\');-- 103714123456(\u65e5\u65f6\u5206\u79d2\u6beb\u79d2)\\nSELECT EXTRACT(MINUTE_SECOND FROM \'2017-05-15 10:37:14.123456\');-- 3714(\u5206\u79d2)\\nSELECT EXTRACT(MINUTE_MICROSECOND FROM \'2017-05-15 10:37:14.123456\');-- 3714123456(\u5206\u79d2\u6beb\u79d2)\\nSELECT EXTRACT(SECOND_MICROSECOND FROM \'2017-05-15 10:37:14.123456\');-- 14123456(\u79d2\u6beb\u79d2)\\n-- MySQL Extract() \u51fd\u6570\u9664\u4e86\u6ca1\u6709date(),time() \u7684\u529f\u80fd\u5916\uff0c\u5176\u4ed6\u529f\u80fd\u4e00\u5e94\u5177\u5168\u3002\\n-- \u5e76\u4e14\u8fd8\u5177\u6709\u9009\u53d6\u2018day_microsecond\' \u7b49\u529f\u80fd\u3002\\n-- \u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f\u53ea\u9009\u53d6 day \u548c microsecond\uff0c\u800c\u662f\u4ece\u65e5\u671f\u7684 day \u90e8\u5206\u4e00\u76f4\u9009\u53d6\u5230 microsecond \u90e8\u5206\u3002\\n \\n \\nSELECT DAYNAME(\'2017-05-15 10:37:14.123456\');-- Monday(\u8fd4\u56de\u82f1\u6587\u661f\u671f)\\nSELECT MONTHNAME(\'2017-05-15 10:37:14.123456\');-- May(\u8fd4\u56de\u82f1\u6587\u6708\u4efd)\\nSELECT LAST_DAY(\'2016-02-01\');-- 2016-02-29 (\u8fd4\u56de\u6708\u4efd\u4e2d\u6700\u540e\u4e00\u5929)\\nSELECT LAST_DAY(\'2016-05-01\');-- 2016-05-31\\n \\n-- DATE_ADD(date,INTERVAL expr type) \u4ece\u65e5\u671f\u52a0\u4e0a\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\\n-- type\u53c2\u6570\u53ef\u53c2\u8003\uff1ahttp://www.w3school.com.cn/sql/func_date_sub.asp\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 YEAR);-- \u8868\u793a\uff1a2018-05-15 10:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 QUARTER);-- \u8868\u793a\uff1a2017-08-15 10:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MONTH);-- \u8868\u793a\uff1a2017-06-15 10:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 WEEK);-- \u8868\u793a\uff1a2017-05-22 10:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 DAY);-- \u8868\u793a\uff1a2017-05-16 10:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 HOUR);-- \u8868\u793a\uff1a2017-05-15 11:37:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MINUTE);-- \u8868\u793a\uff1a2017-05-15 10:38:14.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 SECOND);-- \u8868\u793a\uff1a2017-05-15 10:37:15.123456\\nSELECT DATE_ADD(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MICROSECOND);-- \u8868\u793a\uff1a2017-05-15 10:37:14.123457\\n \\n \\n-- DATE_SUB(date,INTERVAL expr type) \u4ece\u65e5\u671f\u51cf\u53bb\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 YEAR);-- \u8868\u793a\uff1a2016-05-15 10:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 QUARTER);-- \u8868\u793a\uff1a2017-02-15 10:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MONTH);-- \u8868\u793a\uff1a2017-04-15 10:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 WEEK);-- \u8868\u793a\uff1a2017-05-08 10:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 DAY);-- \u8868\u793a\uff1a2017-05-14 10:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 HOUR);-- \u8868\u793a\uff1a2017-05-15 09:37:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MINUTE);-- \u8868\u793a\uff1a2017-05-15 10:36:14.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 SECOND);-- \u8868\u793a\uff1a2017-05-15 10:37:13.123456\\nSELECT DATE_SUB(\'2017-05-15 10:37:14.123456\',INTERVAL 1 MICROSECOND);-- \u8868\u793a\uff1a2017-05-15 10:37:14.123455\\n \\n-- \u7ecf\u7279\u6b8a\u65e5\u671f\u6d4b\u8bd5\uff0cDATE_SUB(date,INTERVAL expr type)\u53ef\u653e\u5fc3\u4f7f\u7528\\nSELECT DATE_SUB(CURDATE(),INTERVAL 1 DAY);-- \u524d\u4e00\u5929\uff1a2017-05-11\\nSELECT DATE_SUB(CURDATE(),INTERVAL -1 DAY);-- \u540e\u4e00\u5929\uff1a2017-05-13\\nSELECT DATE_SUB(CURDATE(),INTERVAL 1 MONTH);-- \u4e00\u4e2a\u6708\u524d\u65e5\u671f\uff1a2017-04-12\\nSELECT DATE_SUB(CURDATE(),INTERVAL -1 MONTH);-- \u4e00\u4e2a\u6708\u540e\u65e5\u671f\uff1a2017-06-12\\nSELECT DATE_SUB(CURDATE(),INTERVAL 1 YEAR);-- \u4e00\u5e74\u524d\u65e5\u671f\uff1a2016-05-12\\nSELECT DATE_SUB(CURDATE(),INTERVAL -1 YEAR);-- \u4e00\u5e74\u540e\u65e5\u671f\uff1a20178-06-12\\n-- MySQL date_sub() \u65e5\u671f\u65f6\u95f4\u51fd\u6570 \u548c date_add() \u7528\u6cd5\u4e00\u81f4\uff0c\u5e76\u4e14\u53ef\u4ee5\u7528INTERNAL -1 xxx\u7684\u5f62\u5f0f\u4e92\u6362\u4f7f\u7528\uff1b\\n-- \u53e6\u5916\uff0cMySQL \u4e2d\u8fd8\u6709\u4e24\u4e2a\u51fd\u6570 subdate(), subtime()\uff0c\u5efa\u8bae\uff0c\u7528 date_sub() \u6765\u66ff\u4ee3\u3002\\n \\n-- MySQL \u53e6\u7c7b\u65e5\u671f\u51fd\u6570\uff1aperiod_add(P,N), period_diff(P1,P2)\\n-- \u51fd\u6570\u53c2\u6570\u201cP\u201d \u7684\u683c\u5f0f\u4e3a\u201cYYYYMM\u201d \u6216\u8005 \u201cYYMM\u201d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u201cN\u201d \u8868\u793a\u589e\u52a0\u6216\u51cf\u53bb N month\uff08\u6708\uff09\u3002\\n-- MySQL period_add(P,N)\uff1a\u65e5\u671f\u52a0/\u51cf\u53bbN\u6708\u3002\\nSELECT PERIOD_ADD(201705,2), PERIOD_ADD(201705,-2);-- 201707  20170503\\n-- period_diff(P1,P2)\uff1a\u65e5\u671f P1-P2\uff0c\u8fd4\u56de N \u4e2a\u6708\u3002\\nSELECT PERIOD_DIFF(201706, 201703);-- \\n-- datediff(date1,date2)\uff1a\u4e24\u4e2a\u65e5\u671f\u76f8\u51cf date1 - date2\uff0c\u8fd4\u56de\u5929\u6570\\nSELECT DATEDIFF(\'2017-06-05\',\'2017-05-29\');-- 7\\n-- TIMEDIFF(time1,time2)\uff1a\u4e24\u4e2a\u65e5\u671f\u76f8\u51cf time1 - time2\uff0c\u8fd4\u56de TIME \u5dee\u503c\\nSELECT TIMEDIFF(\'2017-06-05 19:28:37\', \'2017-06-05 17:00:00\');-- 02:28:37\\n \\n \\n-- MySQL\u65e5\u671f\u8f6c\u6362\u51fd\u6570\\nSELECT TIME_TO_SEC(\'01:00:05\'); -- 3605\\nSELECT SEC_TO_TIME(3605);-- 01:00:05\\n \\n-- MySQL \uff08\u65e5\u671f\u3001\u5929\u6570\uff09\u8f6c\u6362\u51fd\u6570\uff1ato_days(date), from_days(days)\\nSELECT TO_DAYS(\'0000-00-00\'); -- NULL \\nSELECT TO_DAYS(\'2017-06-05\'); -- 736850\\nSELECT FROM_DAYS(0);           -- \'0000-00-00\' \\nSELECT FROM_DAYS(736850);      -- \'2017-06-05\'\\n \\n-- MySQL Str to Date \uff08\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u65e5\u671f\uff09\u51fd\u6570\uff1astr_to_date(str, format)\\n \\nSELECT STR_TO_DATE(\'06.05.2017 19:40:30\', \'%m.%d.%Y %H:%i:%s\');-- 2017-06-05 19:40:30\\nSELECT STR_TO_DATE(\'06/05/2017\', \'%m/%d/%Y\');                  -- 2017-06-05\\nSELECT STR_TO_DATE(\'2017/12/3\',\'%Y/%m/%d\')\\t\\t       -- 2017-12-03\\nSELECT STR_TO_DATE(\'20:09:30\', \'%h:%i:%s\')\\t\\t       -- NULL(\u8d85\u8fc712\u65f6\u7684\u5c0f\u65f6\u7528\u5c0f\u5199h\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u4e3aNULL)\\n \\n-- \u65e5\u671f\u65f6\u95f4\u683c\u5f0f\u5316\\nSELECT DATE_FORMAT(\'2017-05-12 17:03:51\', \'%Y\u5e74%m\u6708%d\u65e5 %H\u65f6%i\u5206%s\u79d2\');-- 2017\u5e7405\u670812\u65e5 17\u65f603\u520651\u79d2(\u5177\u4f53\u9700\u8981\u4ec0\u4e48\u683c\u5f0f\u7684\u6570\u636e\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765;\u5c0f\u5199h\u4e3a12\u5c0f\u65f6\u5236;)\\nSELECT TIME_FORMAT(\'2017-05-12 17:03:51\', \'%Y\u5e74%m\u6708%d\u65e5 %H\u65f6%i\u5206%s\u79d2\');-- 0000\u5e7400\u670800\u65e5 17\u65f603\u520651\u79d2(time_format()\u53ea\u80fd\u7528\u4e8e\u65f6\u95f4\u7684\u683c\u5f0f\u5316)\\n-- STR_TO_DATE()\u548cDATE_FORMATE()\u4e3a\u4e92\u9006\u64cd\u4f5c\\n \\n-- MySQL \u83b7\u5f97\u56fd\u5bb6\u5730\u533a\u65f6\u95f4\u683c\u5f0f\u51fd\u6570\uff1aget_format()\\n-- MySQL get_format() \u8bed\u6cd5\uff1aget_format(date|time|datetime, \'eur\'|\'usa\'|\'jis\'|\'iso\'|\'internal\'\\n-- MySQL get_format() \u7528\u6cd5\u7684\u5168\u90e8\u793a\u4f8b\uff1a\\nSELECT GET_FORMAT(DATE,\'usa\');   \\t-- \'%m.%d.%Y\' \\nSELECT GET_FORMAT(DATE,\'jis\');   \\t-- \'%Y-%m-%d\' \\nSELECT GET_FORMAT(DATE,\'iso\');   \\t-- \'%Y-%m-%d\' \\nSELECT GET_FORMAT(DATE,\'eur\');   \\t-- \'%d.%m.%Y\' \\nSELECT GET_FORMAT(DATE,\'internal\');   \\t-- \'%Y%m%d\' \\nSELECT GET_FORMAT(DATETIME,\'usa\');   \\t-- \'%Y-%m-%d %H.%i.%s\' \\nSELECT GET_FORMAT(DATETIME,\'jis\');   \\t-- \'%Y-%m-%d %H:%i:%s\' \\nSELECT GET_FORMAT(DATETIME,\'iso\');   \\t-- \'%Y-%m-%d %H:%i:%s\' \\nSELECT GET_FORMAT(DATETIME,\'eur\');   \\t-- \'%Y-%m-%d %H.%i.%s\' \\nSELECT GET_FORMAT(DATETIME,\'internal\'); -- \'%Y%m%d%H%i%s\' \\nSELECT GET_FORMAT(TIME,\'usa\');   \\t-- \'%h:%i:%s %p\' \\nSELECT GET_FORMAT(TIME,\'jis\');   \\t-- \'%H:%i:%s\' \\nSELECT GET_FORMAT(TIME,\'iso\');   \\t-- \'%H:%i:%s\' \\nSELECT GET_FORMAT(TIME,\'eur\');   \\t-- \'%H.%i.%s\' \\nSELECT GET_FORMAT(TIME,\'internal\');     -- \'%H%i%s\'\\n \\n \\n-- MySQL \u62fc\u51d1\u65e5\u671f\u3001\u65f6\u95f4\u51fd\u6570\uff1amakdedate(year,dayofyear), maketime(hour,minute,second)\\nSELECT MAKEDATE(2017,31);   -- \'2017-01-31\' \\nSELECT MAKEDATE(2017,32);   -- \'2017-02-01\'\\nSELECT MAKETIME(19,52,35);  -- \'19:52:35\'\\n \\n-- MySQL \u65f6\u533a\uff08timezone\uff09\u8f6c\u6362\u51fd\u6570\uff1aconvert_tz(dt,from_tz,to_tz)\\nSELECT CONVERT_TZ(\'2017-06-05 19:54:12\', \'+08:00\', \'+00:00\'); -- 2017-06-05 11:54:12\\n \\n \\n-- MySQL \uff08Unix \u65f6\u95f4\u6233\u3001\u65e5\u671f\uff09\u8f6c\u6362\u51fd\u6570\\n-- unix_timestamp(), unix_timestamp(date), from_unixtime(unix_timestamp), from_unixtime(unix_timestamp,format)\\n-- \u5c06\u5177\u4f53\u65f6\u95f4\u65f6\u95f4\u8f6c\u4e3atimestamp\\nSELECT UNIX_TIMESTAMP();-- \u5f53\u524d\u65f6\u95f4\u7684\u65f6\u95f4\u6233\uff1a1494815779\\nSELECT UNIX_TIMESTAMP(\'2017-05-15\');-- \u6307\u5b9a\u65e5\u671f\u7684\u65f6\u95f4\u6233\uff1a1494777600\\nSELECT UNIX_TIMESTAMP(\'2017-05-15 10:37:14\');-- \u6307\u5b9a\u65e5\u671f\u65f6\u95f4\u7684\u65f6\u95f4\u6233\uff1a1494815834\\n \\n-- \u5c06\u65f6\u95f4\u6233\u8f6c\u4e3a\u5177\u4f53\u65f6\u95f4\\nSELECT FROM_UNIXTIME(1494815834);-- 2017-05-15 10:37:14\\nSELECT FROM_UNIXTIME(1494815834, \'%Y\u5e74%m\u6708%d\u65e5 %h\u65f6%\u5206:%s\u79d2\');-- \u83b7\u53d6\u65f6\u95f4\u6233\u5bf9\u5e94\u7684\u683c\u5f0f\u5316\u65e5\u671f\u65f6\u95f4\\n \\n-- MySQL \u65f6\u95f4\u6233\uff08timestamp\uff09\u8f6c\u6362\u3001\u589e\u3001\u51cf\u51fd\u6570\\nSELECT TIMESTAMP(\'2017-05-15\');-- 2017-05-15 00:00:00\\nSELECT TIMESTAMP(\'2017-05-15 08:12:25\', \'01:01:01\');-- 2017-05-15 09:13:26\\nSELECT DATE_ADD(\'2017-05-15 08:12:25\', INTERVAL 1 DAY);-- 2017-05-16 08:12:25\\nSELECT TIMESTAMPADD(DAY, 1, \'2017-05-15 08:12:25\');-- 2017-05-16 08:12:25; MySQL timestampadd() \u51fd\u6570\u7c7b\u4f3c\u4e8e date_add()\u3002\\n \\nSELECT TIMESTAMPDIFF(YEAR, \'2017-06-01\', \'2016-05-15\');-- -1\\nSELECT TIMESTAMPDIFF(MONTH, \'2017-06-01\', \'2016-06-15\');-- -11\\nSELECT TIMESTAMPDIFF(DAY, \'2017-06-01\', \'2016-06-15\');-- -351\\nSELECT TIMESTAMPDIFF(HOUR, \'2017-06-01 08:12:25\', \'2016-06-15 00:00:00\');-- -8432\\nSELECT TIMESTAMPDIFF(MINUTE, \'2017-06-01 08:12:25\', \'2016-06-15 00:00:00\');-- -505932\\nSELECT TIMESTAMPDIFF(SECOND, \'2017-06-01 08:12:25\', \'2016-06-15 00:00:00\');-- -30355945\\n\\n```\\n\\n\\n## \u683c\u5f0f\u5316\u53c2\u6570\\n\\n> \u4f8b\u5b50\u683c\u5f0f\u5316 \u57fa\u4e8e 2023-05-25 13:54:00\\n\\n| \u683c\u5f0f  | \u63cf\u8ff0                                        |\\n|:---:|:------------------------------------------|\\n| %a  | \u7f29\u5199\u661f\u671f\u540d  eg:(Thu)                           |\\n| %b  | \u7f29\u5199\u6708\u540d   eg:(May)                           |\\n| %c  | \u6708 \u6570\u5b57     eg:(5)                           |\\n| %D  | \u5e26\u6709\u82f1\u6587\u524d\u7f00\u7684\u6708\u4e2d\u7684\u5929  eg:(25th)                    |\\n| %d  | \u6708\u7684\u5929(00-31)  eg:(25)                       |\\n| %e  | \u6708\u7684\u5929 (0-31)                                |\\n| %f  | \u5fae\u79d2   eg:(000000)                          |\\n| %H  | \u5c0f\u65f6(00-23)  eg:(13)                        |\\n| %h  | \u5c0f\u65f6(01-12)  eg:(01)                        |\\n| %I  | \u5c0f\u65f6(01-12)  eg:(01)                        |\\n| %i  | \u5206\u949f(0-59)    eg:(55)                       |\\n| %j  | \u5e74\u7684\u5929\u6570(001-366) eg:(145)                    |\\n| %k  | \u5c0f\u65f6(0-23 )     eg:(13)                     |\\n| %l  | \u5c0f\u65f6(1-12)       eg:(1)                     |\\n| %M  | \u6708\u540d           eg:(May)                     |\\n| %m  | \u6708\uff0c\u6570\u503c(00-12)       eg:(05)                 |\\n| %p  | AM \u6216 PM  eg:(PM)                          |\\n| %r  | \u65f6\u95f4\uff0c12-\u5c0f\u65f6\uff08hh:mm:ss AM \u6216 PM\uff09 eg:01:50:07 PM |\\n| %S  | \u79d2(00-59)          eg:(14)                 |\\n| %s  | \u79d2(00-59)            eg:(29)               |\\n| %T  | \u65f6\u95f4, 24-\u5c0f\u65f6 (hh:mm:ss)  eg:(13:58:25)       |\\n| %U  | \u5468 (00-53) \u661f\u671f\u65e5\u662f\u4e00\u5468\u7684\u7b2c\u4e00\u5929   eg:(21)            |\\n| %u  | \u5468 (00-53) \u661f\u671f\u4e00\u662f\u4e00\u5468\u7684\u7b2c\u4e00\u5929  eg:(21)             |\\n| %V  | \u5468(01-53) \u661f\u671f\u5929\u662f\u4e00\u5468\u7684\u7b2c\u4e00\u5929,\u4e0e%X\u4f7f\u7528   eg:(21)       |\\n| %v  | \u5468(01-53) \u661f\u671f\u4e00\u662f\u4e00\u5468\u7684\u7b2c\u4e00\u5929,\u4e0e%x\u4f7f\u7528   eg:(21)       |\\n| %W  | \u661f\u671f\u540d           eg:(Thursday)               |\\n| %w  | \u5468\u7684\u5929            eg:(4)                     |\\n| %X  | \u5e74\u5176\u4e2d\u7684\u661f\u671f\u65e5\u662f\u5468\u7684\u7b2c\u4e00\u5929,4\u4f4d \u4e0e%V\u4f7f\u7528   eg:(202321)      |\\n| %x  | \u5e74 \u5176\u4e2d\u7684\u661f\u671f\u4e00\u662f\u5468\u7684\u4e00\u5929,4\u4f4d\u4e0e%v\u4f7f\u7528    eg:(202321)      |\\n| %Y  | \u5e74,4\u4f4d            eg:(2023)                 |\\n| %t  | \u5e74,2\u4f4d             eg:(23)                  |"},{"id":"/2023/05/18/cpu","metadata":{"permalink":"/blog/2023/05/18/cpu","source":"@site/blog/2023/05/18/cpu.md","title":"CPU \u8be6\u89e3","description":"\u4ecb\u7ecd","date":"2023-05-18T00:00:00.000Z","formattedDate":"2023\u5e745\u670818\u65e5","tags":[{"label":"CPU","permalink":"/blog/tags/cpu"},{"label":"\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.57,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"CPU \u8be6\u89e3","tags":["CPU","\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2305181"},"unlisted":false,"prevItem":{"title":"MySQL\u4e2dDATE_FORMAT()\u51fd\u6570\u7684\u8bf4\u660e\u548c\u7b80\u4ecb","permalink":"/blog/2023/05/23/mysql"},"nextItem":{"title":"git  tag","permalink":"/blog/2023/05/14/git"}},"content":"\x3c!-- truncate --\x3e\\n## \u4ecb\u7ecd\\n\\n\u4e2d\u592e\u5904\u7406\u5668,\u7b80\u79f0 CPU( Center Processing Unit )\\n\\n\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u90e8\u5206 `\u63a7\u5236\u5668` `\u8fd0\u7b97\u5668`,\u5176\u4e2d\u8fd8\u5305\u62ec \u9ad8\u901f\u7f13\u51b2 \u5b58\u50a8\u5668\u53ca\u5b9e\u73b0\u5b83\u4eec\u4e4b\u95f4\u8054\u7cfb\u7684\u6570\u636e,\u63a7\u5236\u7684\u603b\u7ebf.\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u4e09\u5927\u6838\u5fc3\u90e8\u4ef6(CPU,\u5185\u5b58\u5b58\u50a8\u5668,\u8f93\u5165\\\\\u8f93\u51fa\u8bbe\u5907).\\n\\n\u4e2d\u592e\u5904\u7406\u5668\u4e3b\u8981\u4e3a\u5904\u7406\u6307\u4ee4,\u6267\u884c\u64cd\u4f5c,\u63a7\u5236\u65f6\u95f4,\u5904\u7406\u6570\u636e.\\n\\n## i7\\n\\n## i5\\n\\n## i3"},{"id":"/2023/05/14/git","metadata":{"permalink":"/blog/2023/05/14/git","source":"@site/blog/2023/05/14/git.md","title":"git  tag","description":"\u83b7\u53d6git tag \u5217\u8868","date":"2023-05-14T00:00:00.000Z","formattedDate":"2023\u5e745\u670814\u65e5","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"command","permalink":"/blog/tags/command"}],"readingTime":0.4,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"git  tag","tags":["git","command"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2305141"},"unlisted":false,"prevItem":{"title":"CPU \u8be6\u89e3","permalink":"/blog/2023/05/18/cpu"},"nextItem":{"title":"samba\u4fee\u6539\u5bc6\u7801","permalink":"/blog/2023/05/04/samb"}},"content":"\x3c!-- truncate --\x3e\\n## \u83b7\u53d6git tag \u5217\u8868\\n\\n```bash\\ngit tag\\n```\\n\\n## \u521b\u5efa\u6807\u7b7e\\n\\n```bash\\ngit tag -a v1.0.3 -m\\"tag \u5907\u6ce8\\"\\n```\\n\\n## \u67e5\u770b\u5907\u6ce8\\n\\n```bash\\ngit  show v1.0.3\\n```\\n\\n## \u5bf9\u5386\u53f2\u8fdb\u884c\u6807\u7b7e\\n\\n```bash\\ngit log --pretty=oneline\\n\\ngit tag -a v1.0.3 0d52aaab44\\n```\\n\\n## \u63d0\u4ea4tag\\n\\n```bash\\n git push origin --tags\\n```\\n\\n## \u5220\u9664\u6807\u7b7e\\n\\n```bash\\ngit tag -d v1.0.3\\n\\ngit push origin --delete <tagname>\\n```"},{"id":"/2023/05/04/samb","metadata":{"permalink":"/blog/2023/05/04/samb","source":"@site/blog/2023/05/04/samb.md","title":"samba\u4fee\u6539\u5bc6\u7801","description":"","date":"2023-05-04T00:00:00.000Z","formattedDate":"2023\u5e745\u67084\u65e5","tags":[{"label":"samba","permalink":"/blog/tags/samba"},{"label":"\u7fa4\u673a\u5668\u4eba","permalink":"/blog/tags/\u7fa4\u673a\u5668\u4eba"},{"label":"go","permalink":"/blog/tags/go"}],"readingTime":0.025,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"samba\u4fee\u6539\u5bc6\u7801","tags":["samba","\u7fa4\u673a\u5668\u4eba","go"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php"},"unlisted":false,"prevItem":{"title":"git  tag","permalink":"/blog/2023/05/14/git"},"nextItem":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","permalink":"/blog/2023/05/04/webchat"}},"content":"```bash\\n smbpasswd -a <username>\\n```"},{"id":"/2023/05/04/webchat","metadata":{"permalink":"/blog/2023/05/04/webchat","source":"@site/blog/2023/05/04/webchat.md","title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","description":"\u5728\u7ec8\u7aef\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u673a\u5668\u4eba\u4e4b\u540e\uff0c\u521b\u5efa\u8005\u53ef\u4ee5\u5728\u673a\u5668\u4eba\u8be6\u60c5\u9875\u770b\u7684\u8be5\u673a\u5668\u4eba\u7279\u6709\u7684webhookurl\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6309\u4ee5\u4e0b\u8bf4\u660e\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u8d77HTTP POST \u8bf7\u6c42\uff0c\u5373\u53ef\u5b9e\u73b0\u7ed9\u8be5\u7fa4\u7ec4\u53d1\u9001\u6d88\u606f","date":"2023-05-04T00:00:00.000Z","formattedDate":"2023\u5e745\u67084\u65e5","tags":[{"label":"\u4f01\u4e1a\u5fae\u4fe1","permalink":"/blog/tags/\u4f01\u4e1a\u5fae\u4fe1"},{"label":"\u7fa4\u673a\u5668\u4eba","permalink":"/blog/tags/\u7fa4\u673a\u5668\u4eba"},{"label":"go","permalink":"/blog/tags/go"}],"readingTime":2.465,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","tags":["\u4f01\u4e1a\u5fae\u4fe1","\u7fa4\u673a\u5668\u4eba","go"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2305041"},"unlisted":false,"prevItem":{"title":"samba\u4fee\u6539\u5bc6\u7801","permalink":"/blog/2023/05/04/samb"},"nextItem":{"title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","permalink":"/blog/2023/04/18/mysql"}},"content":"\x3c!-- truncate --\x3e\\n\\n> \u5728\u7ec8\u7aef\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u673a\u5668\u4eba\u4e4b\u540e\uff0c\u521b\u5efa\u8005\u53ef\u4ee5\u5728\u673a\u5668\u4eba\u8be6\u60c5\u9875\u770b\u7684\u8be5\u673a\u5668\u4eba\u7279\u6709\u7684webhookurl\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6309\u4ee5\u4e0b\u8bf4\u660e\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u8d77HTTP POST \u8bf7\u6c42\uff0c\u5373\u53ef\u5b9e\u73b0\u7ed9\u8be5\u7fa4\u7ec4\u53d1\u9001\u6d88\u606f\\n> go \u8bed\u8a00\u5b9e\u73b0\u673a\u5668\u4eba\u63a8\u9001\u6d88\u606f\\n\\n* \u4f7f\u7528curl \u5de5\u5177\\n\\n```bash\\ncurl \'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693axxx6-7aoc-4bc4-97a0-0ec2sifa5aaa\' \\\\\\n   -H \'Content-Type: application/json\' \\\\\\n   -d \'\\n   {\\n     \\"msgtype\\": \\"text\\",\\n     \\"text\\": {\\n         \\"content\\": \\"hello world\\"\\n     }\\n   }\'\\n\\n```\\n\\n* \u5f53\u524d\u81ea\u5b9a\u4e49\u673a\u5668\u4eba\u652f\u6301\u6587\u672c\uff08text\uff09\u3001markdown\uff08markdown\uff09\u3001\u56fe\u7247\uff08image\uff09\u3001\u56fe\u6587\uff08news\uff09\u56db\u79cd\u6d88\u606f\u7c7b\u578b\\n\\n* \u673a\u5668\u4eba\u7684text/markdown\u7c7b\u578b\u6d88\u606f\u652f\u6301\u5728content\u4e2d\u4f7f\u7528< @userid>\u6269\u5c55\u8bed\u6cd5\u6765@\u7fa4\u6210\u5458\\n\\n## go \u8bed\u8a00\u5b9e\u73b0\\n\\n```go\\n\\npackage helps\\n\\nimport (\\n \\"bytes\\"\\n \\"encoding/json\\"\\n \\"errors\\"\\n \\"io\\"\\n \\"fmt\\"\\n \\"io/ioutil\\"\\n \\"net/http\\"\\n \\"net/http/cookiejar\\"\\n \\"strings\\"\\n)\\n\\n\\n\\n// PushMessageToQwx\\n//  @Description:   \u63a8\u9001\u6d88\u606f\u5230\u4f01\u4e1a\u5fae\u4fe1\\n//  @Author  ahKevinXy\\n//  @Date 2023-04-12 10:32:59\\nfunc PushMessageToQwx(mp map[string]interface{}, noticeUrl string) {\\n\\n request, i, err := MakeHttpRequest(\\"POST\\", noticeUrl, mp, nil)\\n if err != nil {\\n  return\\n }\\n fmt.Println(request, i, err, \\"\u5904\u7406\u7ed3\u679c\\")\\n}\\n\\nconst (\\n POST  = \\"POST\\"\\n GET   = \\"GET\\"\\n PUT   = \\"PUT\\"\\n PATCH = \\"PATCH\\"\\n)\\n\\n// MakeHttpRequest\\n// @Description: HTTP\u8bf7\u6c42\\n// @Author ahKevinXy\\n// @Date 2022-11-08 16:49:40\\nfunc MakeHttpRequest(method, url string, entity map[string]interface{}, jar *cookiejar.Jar) (string, int, error) {\\n var body io.Reader\\n var err error\\n\\n if entity != nil {\\n  switch method {\\n  case POST, PUT, PATCH:\\n   b, err := json.Marshal(entity)\\n   if err != nil {\\n    return \\"\\", 0, err\\n   }\\n\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u003c\\"), []byte(\\"<\\"), -1)\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u003e\\"), []byte(\\">\\"), -1)\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u0026\\"), []byte(\\"&\\"), -1)\\n\\n   body = bytes.NewBuffer(b)\\n\\n  case GET:\\n   if len(entity) > 0 {\\n    params := make([]string, len(entity))\\n    index := 0\\n    for k, v := range entity {\\n     _v := fmt.Sprintf(\\"%v\\", v)\\n     params[index] = fmt.Sprintf(\\"%s=%v\\", k, _v)\\n     index++\\n    }\\n    queryStr := strings.Join(params, \\"&\\")\\n    url = fmt.Sprintf(\\"%s?%s\\", url, queryStr)\\n   }\\n  }\\n }\\n\\n req, err := http.NewRequest(method, url, body)\\n if err != nil {\\n\\n  return \\"\\", 0, err\\n }\\n if entity != nil && (method == POST || method == PUT || method == PATCH) {\\n  req.Header.Set(\\"Content-Type\\", \\"application/json;charset=utf-8\\")\\n  req.Header.Set(\\"Accept\\", \\"application/json\\")\\n }\\n req.Header.Add(\\"Connection\\", \\"close\\")\\n req.Header.Set(\\"User-Agent\\", \\"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5\\")\\n\\n\\n client := http.DefaultClient\\n if jar != nil {\\n  client = &http.Client{\\n   Jar: jar,\\n  }\\n }\\n\\n res, err := client.Do(req)\\n if err != nil {\\n\\n  return \\"\\", 0, err\\n }\\n defer res.Body.Close()\\n\\n if res.StatusCode != http.StatusOK && res.StatusCode != http.StatusCreated && res.StatusCode != http.StatusNoContent {\\n\\n  return \\"\\", 0, errors.New(\\"http request failed to call\\")\\n }\\n resBody, err := ioutil.ReadAll(res.Body)\\n if err != nil {\\n \\n  return \\"\\", 0, errors.New(\\"the response could not be read\\")\\n }\\n\\n return string(resBody), res.StatusCode, nil\\n}\\n\\n\\n\\n```"},{"id":"/2023/04/18/mysql","metadata":{"permalink":"/blog/2023/04/18/mysql","source":"@site/blog/2023/04/18/mysql.md","title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","description":"\u67e5\u8be2\u6240\u6709\u7a7a\u95f4","date":"2023-04-18T00:00:00.000Z","formattedDate":"2023\u5e744\u670818\u65e5","tags":[{"label":"mysql","permalink":"/blog/tags/mysql"},{"label":"\u5de5\u5177","permalink":"/blog/tags/\u5de5\u5177"}],"readingTime":1.08,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"tags":["mysql","\u5de5\u5177"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2304181"},"unlisted":false,"prevItem":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","permalink":"/blog/2023/05/04/webchat"},"nextItem":{"title":"Go \u4e2d\u7684sync poll","permalink":"/blog/2023/03/15/sync_poll"}},"content":"\x3c!-- truncate --\x3e\\n## \u67e5\u8be2\u6240\u6709\u7a7a\u95f4\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\nsum(table_rows) as \'\u8bb0\u5f55\u6570\',\\nsum(truncate(data_length/1024/1024, 2)) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\nsum(truncate(index_length/1024/1024, 2)) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\ngroup by table_schema\\norder by sum(data_length) desc, sum(index_length) desc;\\n```\\n\\n## \u67e5\u8be2\u7a7a\u95f4\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\ntable_name as \'\u8868\u540d\',\\ntable_rows as \'\u8bb0\u5f55\u6570\',\\ntruncate(data_length/1024/1024, 2) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\ntruncate(index_length/1024/1024, 2) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\norder by data_length desc, index_length desc;\\n```\\n\\n## \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5e93\u5bb9\u91cf\u5927\u5c0f\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\nsum(table_rows) as \'\u8bb0\u5f55\u6570\',\\nsum(truncate(data_length/1024/1024, 2)) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\nsum(truncate(index_length/1024/1024, 2)) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\nwhere table_schema=\'mysql\';\\n\\n```\\n\\n## \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5e93\u5404\u8868\u5bb9\u91cf\u5927\u5c0f\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\ntable_name as \'\u8868\u540d\',\\ntable_rows as \'\u8bb0\u5f55\u6570\',\\ntruncate(data_length/1024/1024, 2) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\ntruncate(index_length/1024/1024, 2) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\nwhere table_schema=\'mysql\'\\norder by data_length desc, index_length desc;\\n```"},{"id":"/2023/03/15/sync_poll","metadata":{"permalink":"/blog/2023/03/15/sync_poll","source":"@site/blog/2023/03/15/sync_poll.md","title":"Go \u4e2d\u7684sync poll","description":"Go \u4e2d\u7684waitgroup","date":"2023-03-15T23:07:03.000Z","formattedDate":"2023\u5e743\u670815\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Go\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/go\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.13,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e2d\u7684sync poll","tags":["Go","Go\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","description":"Go \u4e2d\u7684waitgroup","keywords":["Go \u4e2d\u7684waitgroup"],"date":"2023-03-15T23:07:03.000Z","image":"https://www.dmoe.cc/random.php?type=2304152"},"unlisted":false,"prevItem":{"title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","permalink":"/blog/2023/04/18/mysql"},"nextItem":{"title":"\u535a\u5ba2","permalink":"/blog/index"}},"content":"> \u4f7f\u7528\u573a\u666f\uff1a\u9891\u7e41\u6784\u9020\u7ed3\u6784\u4f53\uff0c\u5206\u914d\u5185\u5b58\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8c61\u6c60.\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n[from](https://juejin.cn/post/7209625823580520504)"},{"id":"/index","metadata":{"permalink":"/blog/index","source":"@site/blog/index.md","title":"\u535a\u5ba2","description":"\u5178\u578b\u7684\u535a\u5ba2\u7ed3\u5408\u4e86\u6587\u5b57\u3001\u56fe\u50cf\u3001\u5176\u4ed6\u535a\u5ba2\u6216\u7f51\u7ad9\u7684\u94fe\u63a5\u53ca\u5176\u5b83\u4e0e\u4e3b\u9898\u76f8\u5173\u7684\u5a92\u4f53\uff0c\u80fd\u591f\u8ba9\u8bfb\u8005\u4ee5\u4e92\u52a8\u7684\u65b9\u5f0f\u7559\u4e0b\u610f\u89c1\uff0c\u662f\u8bb8\u591a\u535a\u5ba2\u7684\u91cd\u8981\u8981\u7d20\u3002\u5927\u90e8\u5206\u7684\u535a\u5ba2\u5185\u5bb9\u4ee5\u6587\u5b57\u4e3a\u4e3b","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u535a\u5ba2","authors":"ahKevinXy","description":"\u5178\u578b\u7684\u535a\u5ba2\u7ed3\u5408\u4e86\u6587\u5b57\u3001\u56fe\u50cf\u3001\u5176\u4ed6\u535a\u5ba2\u6216\u7f51\u7ad9\u7684\u94fe\u63a5\u53ca\u5176\u5b83\u4e0e\u4e3b\u9898\u76f8\u5173\u7684\u5a92\u4f53\uff0c\u80fd\u591f\u8ba9\u8bfb\u8005\u4ee5\u4e92\u52a8\u7684\u65b9\u5f0f\u7559\u4e0b\u610f\u89c1\uff0c\u662f\u8bb8\u591a\u535a\u5ba2\u7684\u91cd\u8981\u8981\u7d20\u3002\u5927\u90e8\u5206\u7684\u535a\u5ba2\u5185\u5bb9\u4ee5\u6587\u5b57\u4e3a\u4e3b","date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"Go \u4e2d\u7684sync poll","permalink":"/blog/2023/03/15/sync_poll"},"nextItem":{"title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","permalink":"/blog/english"}},"content":""},{"id":"/english","metadata":{"permalink":"/blog/english","source":"@site/blog/english/index.md","title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","description":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0.225,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","authors":"ahKevinXy","description":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","hide_table_of_contents":false,"date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"\u535a\u5ba2","permalink":"/blog/index"},"nextItem":{"title":"letcode \u6253\u5361","permalink":"/blog/letcode"}},"content":"\x3c!-- truncate --\x3e\\n## \u5fae\u670d\u52a1 Microservice\\n\\n## (\u6808)Stack\\n\\n## \u6848\u4f8b case\\n\\n## \u4f8b\u5b50 example\\n\\n## \u81ea\u7531\u804c\u4e1a\u8005 freelancer  --  work \uff08\u5de5\u4f5c\uff09\\n\\n## \u786c\u4ef6 hardware\\n\\n## \u610f\u89c1\u53cd\u9988 feedback\\n\\n## \u6982\u8981 summary"},{"id":"/letcode","metadata":{"permalink":"/blog/letcode","source":"@site/blog/letcode/index.md","title":"letcode \u6253\u5361","description":"letcode \u4e2a\u4eba\u5b66\u4e60","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"letcode","permalink":"/blog/tags/letcode"}],"readingTime":0.015,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"letcode \u6253\u5361","tags":["letcode"],"authors":"ahKevinXy","description":"letcode \u4e2a\u4eba\u5b66\u4e60","keywords":["letcode \u6253\u5361"],"date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","permalink":"/blog/english"},"nextItem":{"title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","permalink":"/blog/source"}},"content":"\x3c!-- truncate --\x3e"},{"id":"/source","metadata":{"permalink":"/blog/source","source":"@site/blog/source/index.md","title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","description":"\u5f00\u6e90\u8f6f\u4ef6","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"letcode","permalink":"/blog/tags/letcode"}],"readingTime":0.235,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","tags":["letcode"],"authors":"ahKevinXy","description":"\u5f00\u6e90\u8f6f\u4ef6","keywords":["\u5f00\u6e90\u8f6f\u4ef6"],"date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"letcode \u6253\u5361","permalink":"/blog/letcode"},"nextItem":{"title":"\u4f18\u79c0\u535a\u5ba2","permalink":"/blog/stars"}},"content":"\x3c!-- truncate --\x3e\\n## [Gihub \u6398\u91d1\u8ba1\u5212](https://www.zhihu.com/people/github-stars)\\n\\n## [\u5f00\u6e90\u5927\u5c4f\u5c55\u793a](https://zhuanlan.zhihu.com/p/384830720)\\n\\n## SNS\\n\\n* [ThinkSNS](https://github.com/slimkit/plus)\\n\\n## \u7b14\u8bb0\\n\\n:::info\\nAn open source, markdown-based, self-hosted note taking webapp.\\n\\n:::\\n\\n* [batnoter](https://github.com/batnoter/batnoter.git)\\n\\n* [topgoer](https://www.topgoer.com/)\\n\\n## go \u5b66\u4e60\u8d44\u6599(\u5168)"},{"id":"/stars","metadata":{"permalink":"/blog/stars","source":"@site/blog/stars/index.md","title":"\u4f18\u79c0\u535a\u5ba2","description":"\u5f00\u6e90\u8f6f\u4ef6","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0.085,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u4f18\u79c0\u535a\u5ba2","authors":"ahKevinXy","description":"\u5f00\u6e90\u8f6f\u4ef6","keywords":["\u5f00\u6e90\u8f6f\u4ef6"],"date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","permalink":"/blog/source"},"nextItem":{"title":"TODO","permalink":"/blog/todos"}},"content":"\x3c!-- truncate --\x3e\\n[CppGuide](https://github.com/balloonwj/CppGuide)\\n\\n[\u9648\u5929\u5947,cs\u5165\u95e8\u4e00\u6761\u9f99\u670d\u52a1](https://csdiy.wiki/)"},{"id":"/todos","metadata":{"permalink":"/blog/todos","source":"@site/blog/todos/index.md","title":"TODO","description":"* go unsafe 2023-3-15 2326","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0.295,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"TODO","authors":"ahKevinXy","date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"\u4f18\u79c0\u535a\u5ba2","permalink":"/blog/stars"},"nextItem":{"title":"Go defer \u8be6\u89e3","permalink":"/blog/2023/03/07/index"}},"content":"* go unsafe 2023-3-15 23:22:26\\n* Go\u5f02\u6b65\u4efb\u52a1\u5904\u7406\u89e3\u51b3\u65b9\u6848\uff1aAsynq 2023-3-15 23:21:25\\n* go \u6d4b\u8bd5 testing 2023-3-15 23:21:30\\n* go 1.18\u540e\u6cdb\u578b\u5b66\u4e60 2023-3-15 23:21:35\\n* [CloudWeGo](https://www.cloudwego.io/zh/) \u5b66\u4e60 2023-3-15 23:19:41\\n* gin\u901a\u8fc7embed \u6253\u5305\u9759\u6001\u6587\u4ef6 2023-3-15 23:18:05\\n\\n\\n\\n\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2023/03/07/index","metadata":{"permalink":"/blog/2023/03/07/index","source":"@site/blog/2023/03/07/index.md","title":"Go defer \u8be6\u89e3","description":"Go defer \u8be6\u89e3","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":3.59,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go defer \u8be6\u89e3","tags":["Go"],"authors":"ahKevinXy","description":"Go defer \u8be6\u89e3","keywords":["Go defer \u8be6\u89e3"],"date":"2023-03-07T13:09:13.000Z","image":"https://www.dmoe.cc/random.php?type=2304072"},"unlisted":false,"prevItem":{"title":"TODO","permalink":"/blog/todos"},"nextItem":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","permalink":"/blog/2023/03/07/sort_go"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u57fa\u672c\u529f\u80fd\u4ecb\u7ecd\\n\\n1. defer\u662f\u4e00\u79cd\u5ef6\u8fdf\u5904\u7406\u673a\u5236\uff0c\u662f\u5728\u51fd\u6570\u8fdb\u884creturn\u4e4b\u524d\u8fdb\u884c\u6267\u884c\u3002\\n2. defer\u662f\u91c7\u7528\u6808\u7684\u65b9\u5f0f\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5148\u5b9a\u4e49\u7684defer\u540e\u6267\u884c\uff0c\u540e\u5b9a\u4e49\u7684defer\u6700\u5148\u88ab\u6267\u884c\u3002\\n\\n## \u6269\u5c55\\n\\n1. defer \u6267\u884c\u987a\u5e8f . \u91c7\u7528\u6808\u7684\u65b9\u5f0f\u6267\u884c,\u5148\u5b9a\u4e49\u5148\u6267\u884c\\n2. defer \u4e0e return \u8c01\u5148\u8c01\u6267\u884c return \u4e4b\u540e\u7684\u8bed\u53e5\u5148\u6267\u884c\uff0cdefer \u540e\u7684\u8bed\u53e5\u540e\u6267\u884c\u3002\\n3. \u51fd\u6570\u7684\u8fd4\u56de\u503c\u521d\u59cb\u5316\u4e0e defer \u95f4\u63a5\u5f71\u54cd\u3002defer\u4e2d\u4fee\u6539\u4e86\u8fd4\u56de\u503c\uff0c\u5b9e\u9645\u8fd4\u56de\u7684\u503c\u662f\u6309\u7167defer\u4fee\u6539\u540e\u7684\u503c\u8fdb\u884c\u8fd4\u56de\\n4. defer \u9047\u89c1 panic\u3002\u6309\u7167defer\u7684\u6808\u987a\u5e8f\uff0c\u8f93\u51fapanic\u89e6\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684defer\\n5. defer \u4e2d\u5305\u542b panic\u3002\u6309\u7167defer\u7684\u6808\u987a\u5e8f\uff0c\u8f93\u51fapanic\u89e6\u53d1\u4e4b\u524d\u7684defer\u3002\u5e76\u4e14defer\u4e2d\u4f1a\u63a5\u6536\u5230panic\u4fe1\u606f\u3002\\n6. defer \u4e0b\u7684\u51fd\u6570\u53c2\u6570\u5305\u542b\u5b50\u51fd\u6570\u3002\u4f1a\u5148\u8fdb\u884c\u5b50\u51fd\u6570\u7684\u7ed3\u679c\u503c\uff0c\u7136\u540e\u5728\u6309\u7167\u6808\u7684\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\\n\\n## defer \u4e0epanic\\n\\npanic\u662fGo\u8bed\u8a00\u4e2d\u7684\u4e00\u79cd\u5f02\u5e38\u73b0\u8c61\uff0c\u5b83\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u629b\u51fa\u5177\u4f53\u7684\u5f02\u5e38\u4fe1\u606f\\n\\n\u5f53\u51fd\u6570\u4e2d\u53d1\u751f\u4e86panic\u5f02\u5e38\uff0c\u4f1a\u9a6c\u4e0a\u4e2d\u6b62\u5f53\u524d\u51fd\u6570\u7684\u6267\u884c\uff0cpanic\u4e4b\u524d\u5b9a\u4e49\u7684defer\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u6240\u6709\u7684 defer \u8bed\u53e5\u90fd\u4f1a\u4fdd\u8bc1\u6267\u884c\u5e76\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u63a5\u6536\u5230 panic \u7684\u51fd\u6570\u8c03\u7528\u8005\u3002\u8fd9\u6837\u5411\u4e0a\u5192\u6ce1\u76f4\u5230\u6700\u9876\u5c42\uff0c\u5e76\u6267\u884c\uff08\u6bcf\u5c42\u7684\uff09 defer\uff0c\u5728\u6808\u9876\u5904\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5e76\u5728\u547d\u4ee4\u884c\u4e2d\u7528\u4f20\u7ed9 panic \u7684\u503c\u62a5\u544a\u9519\u8bef\u60c5\u51b5\uff1a\u8fd9\u4e2a\u7ec8\u6b62\u8fc7\u7a0b\u5c31\u662f panicking\u3002\\n\\n## defer\u4e2d\u5305\u542bpanic\\n\\n\u7a0b\u5e8f\u4e2d\u867d\u7136\u53d1\u751f\u4e86panic\uff0c\u4f46\u662f\u5728panic\u4e4b\u524d\u5b9a\u4e49\u7684defer\u8bed\u53e5\uff0c\u8fd8\u662f\u4f1a\u88ab\u6267\u884c\u3002\u8981\u60f3\u5728defer\u4e2d\u83b7\u53d6\u5230\u5177\u4f53\u7684panic\u4fe1\u606f\uff0c\u9700\u8981\u4f7f\u7528 recover() \u8fdb\u884c\u83b7\u53d6\u3002\\n\\n\u8fd9\u4e2a\uff08recover\uff09\u5185\u5efa\u51fd\u6570\u88ab\u7528\u4e8e\u4ece panic \u6216 \u9519\u8bef\u573a\u666f\u4e2d\u6062\u590d\uff1a\u8ba9\u7a0b\u5e8f\u53ef\u4ee5\u4ece panicking \u91cd\u65b0\u83b7\u5f97\u63a7\u5236\u6743\uff0c\u505c\u6b62\u7ec8\u6b62\u8fc7\u7a0b\u8fdb\u800c\u6062\u590d\u6b63\u5e38\u6267\u884c\u3002\\n\\n## defer\u4e0b\u7684\u51fd\u6570\u53c2\u6570\u5305\u542b\u5b50\u51fd\u6570\\n\\n1. \u6267\u884c\u7b2c1\u4e2adefer\u65f6\uff0c\u538b\u5165defer\u6808\u4e2d\uff0c\u8be5defer\u4f1a\u6267\u884c\u4e00\u4e2afunction\u7684\u51fd\u6570\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u6267\u884c\\n2. \u56e0\u4e3a\u8be5\u51fd\u6570\u4e2d\u53c8\u5305\u542b\u4e86\u4e00\u4e2a\u51fd\u6570(\u5b50\u51fd\u6570)\uff0cGo\u8bed\u8a00\u5904\u7406\u7684\u673a\u5236\u662f\uff0c\u5148\u6267\u884c\u8be5\u5b50\u51fd\u6570\u3002\\n3. \u6267\u884c\u5b8c\u5b50\u51fd\u6570\uff0c\u63a5\u7740\u518d\u6267\u884c\u7b2c2\u4e2adefer\u8bed\u53e5\u3002\u6b64\u65f6\uff0c\u7b2c2\u4e2adefer\u4e2d\u4e5f\u6709\u4e00\u4e2a\u5b50\u51fd\u6570\uff0c\u6309\u7167\u7b2c2\u70b9\u7684\u903b\u8f91\uff0c\u8fd9\u4e2a\u5b50\u51fd\u6570\u4f1a\u88ab\u76f4\u63a5\u6267\u884c\\n4. \u5b9a\u4e49\u5b8cdefer\u8bed\u53e5\u4e4b\u540e\uff0c\u6b64\u65f6\u7ed3\u675f\u8be5\u51fd\u6570\u7684\u8c03\u7528\u3002\u6240\u6709\u88ab\u5b9a\u4e49\u7684defer\u8bed\u53e5\uff0c\u6309\u7167\u6808\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\\n\\n\u5f53defer\u4e2d\u5b58\u5728\u5b50\u51fd\u6570\u65f6\uff0c\u5b50\u51fd\u6570\u4f1a\u6309\u7167defer\u5b9a\u4e49\u7684\u8bed\u53e5\u987a\u5e8f\uff0c\u4f18\u5148\u6267\u884c\u3002defer\u6700\u5916\u5c42\u7684\u903b\u8f91\uff0c\u5219\u6309\u7167\u6808\u7684\u987a\u5e8f\u6267\u884c\u3002"},{"id":"/2023/03/07/sort_go","metadata":{"permalink":"/blog/2023/03/07/sort_go","source":"@site/blog/2023/03/07/sort_go.md","title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","description":"Go defer \u8be6\u89e3","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"\u7b97\u6cd5","permalink":"/blog/tags/\u7b97\u6cd5"}],"readingTime":4.98,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","tags":["Go","\u7b97\u6cd5"],"authors":"ahKevinXy","description":"Go defer \u8be6\u89e3","keywords":["Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","\u6392\u5e8f","\u7b97\u6cd5","go"],"date":"2023-03-07T13:09:13.000Z","image":"https://www.dmoe.cc/random.php?type=2304073"},"unlisted":false,"prevItem":{"title":"Go defer \u8be6\u89e3","permalink":"/blog/2023/03/07/index"},"nextItem":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","permalink":"/blog/2023/03/07/three_tools"}},"content":"\x3c!-- truncate --\x3e\\n## \u5192\u6ce1\u6392\u5e8f\\n>\\n> \u539f\u7406\\n\\n\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u76f8\u90bb\u5143\u7d20\u4e24\u4e24\u8fdb\u884c\u6bd4\u8f83\u3002\u6bcf\u6b21\u6bd4\u8f83\u5b8c\u4e00\u8f6e\uff0c\u5c31\u4f1a\u627e\u5230\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u6216\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u8fd9\u4e2a\u6570\u5c31\u4f1a\u4ece\u5e8f\u5217\u7684\u6700\u53f3\u8fb9\u5192\u51fa\u6765\\n\\n## \u9009\u62e9\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u9996\u5148\u5728\u5f00\u59cb\u7684\u65f6\u5019\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5143\u7d20\u4e0e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u8fd9\u6837\u6700\u5c0f\u7684\u5143\u7d20\u5c31\u653e\u5230\u4e86\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u4e0a\u4e86,\u7136\u540e\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\uff0c\u627e\u5230\u5269\u4e0b\u7684n-1\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u518d\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u6362\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u4e86\u6700\u7ec8\u4f4d\\n\\n## \u63d2\u5165\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5c06\u4e00\u4e2a\u8bb0\u5f55\u63d2\u5165\u5230\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6709\u5e8f\u8868\u4e2d\uff0c\u4ece\u800c\u4e00\u4e2a\u65b0\u7684\u3001\u8bb0\u5f55\u6570\u589e1\u7684\u6709\u5e8f\u8868,\u5728\u5176\u5b9e\u73b0\u8fc7\u7a0b\u4f7f\u7528\u53cc\u5c42\u5faa\u73af\uff0c\u5916\u5c42\u5faa\u73af\u5bf9\u9664\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u5916\u7684\u6240\u6709\u5143\u7d20\uff0c\u5185\u5c42\u5faa\u73af\u5bf9\u5f53\u524d\u5143\u7d20\u524d\u9762\u7684\u6709\u5e8f\u8868\u8fdb\u884c\u5f85\u63d2\u5165\u4f4d\u7f6e\u67e5\u627e\uff0c\u5e76\u8fdb\u884c\u79fb\u52a8\\n\\n## \u5feb\u901f\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5feb\u901f\u6392\u5e8f\u8981\u6c42\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\uff0c\u6839\u636e\u8fd9\u4e2a\u57fa\u51c6\u4e3a\u539f\u6570\u7ec4\u5206\u7ec4\uff0c\u6bd4\u57fa\u51c6\u5927\u7684\u4e00\u7ec4\uff0c\u6bd4\u57fa\u51c6\u5c0f\u7684\u4e00\u7ec4\uff0c\u518d\u91cd\u590d\u9012\u5f52\u5730\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u91cd\u65b0\u5408\u5e76\u6bcf\u7ec4\u6392\u5e8f\u540e\u7684\u5e8f\u5217\uff0c\u5373\u4e3a\u6392\u597d\u5e8f\u7684\u5e8f\u5217\\n\\n## \u5f52\u5e76\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5f52\u5e76\u6392\u5e8f\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\u7684\u4e00\u4e2a\u5178\u578b\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5c06\u5df2\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u5168\u6709\u5e8f\u7684\u5e8f\u5217\u3002\\n\\n\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\u662f\uff1a\u9996\u5148\u5c06\u5e8f\u5217\u62c6\u5206\u6210\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5c06\u6392\u5e8f\u597d\u7684\u5b50\u5e8f\u5217\u5408\u5e76\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u3002\\n\\n## \u5806\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662f\u5806\uff1f\u5806\u662f\u4e00\u79cd\u8fd1\u4f3c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5206\u4e3a\u5927\u6839\u5806\uff0c\u5c0f\u6839\u5806\u3002\\n\\n\u63a5\u7740\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5806\u6392\u5e8f\u7684\u8fc7\u7a0b\uff1a\\n\\n1. \u5c06\u5f85\u6392\u5e8f\u5e8f\u5217\u6784\u9020\u6210\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6b64\u65f6\uff0c\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u5927\u503c\u5c31\u662f\u5806\u7ed3\u6784\u9876\u7aef\u7684\u6839\u8282\u70b9\u3002\\n2. \u5c06\u5806\u6839\u8282\u70b9\u7684\u6570\u4e0e\u672b\u5c3e\u7684\u6570\u4ea4\u6362\uff0c\u6b64\u65f6\uff0c\u672b\u5c3e\u7684\u6570\u4e3a\u6700\u5927\u503c\uff0c\u5269\u4f59\u5f85\u6392\u5e8f\u5e8f\u5217\u4e2a\u6570\u4e3an-1\u3002\\n3. \u5c06\u5269\u4f59\u7684n-1\u4e2a\u6570\u518d\u6784\u9020\u6210\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u518d\u5c06\u9876\u7aef\u6570\u4e0en-1\u4f4d\u7f6e\u7684\u6570\u4ea4\u6362\uff0c\u5982\u6b64\u53cd\u590d\u6267\u884c\uff0c\u4fbf\u80fd\u5f97\u5230\u6709\u5e8f\u6570\u7ec4\u3002\\n\\n## \u5e0c\u5c14\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5e0c\u5c14\u6392\u5e8f\u662f\u628a\u8bb0\u5f55\u6309\u4e0b\u6807\u7684\u4e00\u5b9a\u589e\u91cf\u5206\u7ec4\uff0c\u5bf9\u6bcf\u7ec4\u4f7f\u7528\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u6392\u5e8f\uff1b\u968f\u7740\u589e\u91cf\u9010\u6e10\u51cf\u5c11\uff0c\u6bcf\u7ec4\u5305\u542b\u7684\u5173\u952e\u8bcd\u8d8a\u6765\u8d8a\u591a\uff0c\u5f53\u589e\u91cf\u51cf\u81f31\u65f6\uff0c\u6574\u4e2a\u6587\u4ef6\u6070\u88ab\u5206\u6210\u4e00\u7ec4\uff0c\u7b97\u6cd5\u4fbf\u7ec8\u6b62\u3002\\n\\n## \u8ba1\u6570\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u8ba1\u6570\u6392\u5e8f\u662f\u4e00\u79cd\u901a\u8fc7\u8ba1\u6570\u800c\u4e0d\u662f\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\u7684\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u8303\u56f4\u8f83\u5c0f\u7684\u6574\u6570\u5e8f\u5217\u3002\\n\u5b83\u7684\u4f18\u52bf\u5728\u4e8e\u5728\u5bf9\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6574\u6570\u6392\u5e8f\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u039f(n+k)\uff08\u5176\u4e2dk\u662f\u6574\u6570\u7684\u8303\u56f4\uff09\uff0c\u5feb\u4e8e\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u3002\\n\\n## \u6876\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5c06\u6570\u7ec4\u6309\u7167\u5143\u7d20\u6240\u5c5e\u8303\u56f4\u5206\u5230\u6709\u9650\u6570\u91cf\u7684\u6876\u91cc\uff0c\u518d\u5355\u72ec\u5bf9\u6bcf\u4e2a\u6876\u6392\u5e8f\uff08\u53ef\u4ee5\u4f7f\u7528\u522b\u7684\u6392\u5e8f\u7b97\u6cd5\u6216\u662f\u4ee5\u9012\u5f52\u65b9\u5f0f\u7ee7\u7eed\u4f7f\u7528\u6876\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff09\uff0c\u6700\u540e\u4f9d\u6b21\u628a\u5404\u4e2a\u6876\u4e2d\u7684\u8bb0\u5f55\u5217\u51fa\u6765\u8bb0\u5f97\u5230\u6709\u5e8f\u5e8f\u5217\u3002\\n\\n## \u57fa\u6570\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u4f9d\u6b21\u6309\u7167\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d...\u7684\u987a\u5e8f\u5bf9\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u6b21\u7684\u5206\u7ec4\u6309\u7167\u7d22\u5f15\u5927\u5c0f\u91cd\u65b0\u7ec4\u6210\u65b0\u7684\u6570\u7ec4\u3002\u6700\u540e\u4e00\u8f6e\u7684\u65b0\u6570\u7ec4\u5373\u4e3a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\\n\\n1. \u6211\u4eec\u6309\u7167\u4e2a\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\u3002\\n2. \u6211\u4eec\u6309\u7167\u5341\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\\n3. \u6211\u4eec\u6309\u7167\u767e\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\u3002"},{"id":"/2023/03/07/three_tools","metadata":{"permalink":"/blog/2023/03/07/three_tools","source":"@site/blog/2023/03/07/three_tools.md","title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","description":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":0.145,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","tags":["Go"],"authors":"ahKevinXy","description":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","keywords":["Go\u8bed\u8a00\u4e09\u5251\u5ba2","Go\u8bed\u8a00\u5de5\u5177","go"],"date":"2023-03-07T13:09:13.000Z","image":"https://www.dmoe.cc/random.php?type=2304073"},"unlisted":false,"prevItem":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","permalink":"/blog/2023/03/07/sort_go"},"nextItem":{"title":"Go \u4e2d\u7684waitgroup","permalink":"/blog/2023/03/15/wait_group"}},"content":"\x3c!-- truncate --\x3e\\n\\n## [viper](https://github.com/spf13/viper)\\n\\nGo configuration with fangs\\n\\n## [Cobra](https://github.com/spf13/cobra)\\n\\nA Commander for modern Go CLI interactions\\n\\n## [Pflag](https://github.com/spf13/pflag)\\n\\nDrop-in replacement for Go\'s flag package, implementing POSIX/GNU-style --flags."},{"id":"/2023/03/15/wait_group","metadata":{"permalink":"/blog/2023/03/15/wait_group","source":"@site/blog/2023/03/15/wait_group.md","title":"Go \u4e2d\u7684waitgroup","description":"Go \u4e2d\u7684waitgroup","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Go\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/go\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.495,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e2d\u7684waitgroup","tags":["Go","Go\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","description":"Go \u4e2d\u7684waitgroup","keywords":["Go \u4e2d\u7684waitgroup"],"date":"2023-03-07T13:09:13.000Z","image":"https://www.dmoe.cc/random.php?type=2304151"},"unlisted":false,"prevItem":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","permalink":"/blog/2023/03/07/three_tools"},"nextItem":{"title":"\u8d44\u6e90\u6c47\u96c6\u5730","permalink":"/blog/2023/07/16/awesome"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u4ec0\u4e48\u662fWaitGroup\\n\\n`WaitGroup` \u662f\u540c\u6b65goroutines\u7684\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\uff0c\\n\\n\\n`WaitGroup` \u662f\u901a\u8fc7\u8c03\u7528\u6807\u51c6\u5e93`sync` \u5305\\n\\n```go\\n  var wg sync*WaitGroup\\n\\n```\\n\\nWaitGroup \u6709\u4e09\u4e2a\u91cd\u8981\u7684\u65b9\u6cd5\\n\\n1. Add: \u6dfb\u52a0\u5230\u4f60\u9700\u8981\u7b49\u5f85\u7684goroutines\u7684\u603b\u91cf\u4e0a\\n2. Done: \u4ece\u4f60\u9700\u8981\u7b49\u5f85\u7684goroutines\u4e0a\u51cf\u96641\\n3. Wait: \u963b\u6b62\u4ee3\u7801\u8fdb\u884c\u8fdb\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u7684goroutines\u5168\u90e8\u6267\u884c\u5b8c\u6210"},{"id":"/2023/07/16/awesome","metadata":{"permalink":"/blog/2023/07/16/awesome","source":"@site/blog/2023/07/16/awesome.md","title":"\u8d44\u6e90\u6c47\u96c6\u5730","description":"\u8d44\u6e90\u6c47\u96c6\u5730","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0.14,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u8d44\u6e90\u6c47\u96c6\u5730","authors":"ahKevinXy","description":"\u8d44\u6e90\u6c47\u96c6\u5730","hide_table_of_contents":false,"date":"2023-03-07T13:09:13.000Z","image":"https://source.unsplash.com/random?people&22"},"unlisted":false,"prevItem":{"title":"Go \u4e2d\u7684waitgroup","permalink":"/blog/2023/03/15/wait_group"},"nextItem":{"title":"\u767d\u5ad6\u7684\u5de5\u5177","permalink":"/blog/2023/07/16/free"}},"content":"[github](https://github.com/topics/awesome)\\n\\n\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n##  \u540e\u7aef\u8d44\u6e90\\n\\n## [Go \u8d44\u6e90\u7f51\u7ad9\u5bfc\u822a](https://hao.studygolang.com/)\\n\\n\\n## \u524d\u7aef\u8d44\u6e90\\n\\n\\n##  Java \u8d44\u6e90\\n\\n\\n## php \u8d44\u6e90"},{"id":"/2023/07/16/free","metadata":{"permalink":"/blog/2023/07/16/free","source":"@site/blog/2023/07/16/free.md","title":"\u767d\u5ad6\u7684\u5de5\u5177","description":"\u767d\u5ad6\u5de5\u5177 \u5982\u4f55\u4f7f\u7528\u7f51\u4e0a\u514d\u8d39\u5f00\u6e90\u7684\u8d44\u6e90","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"\u514d\u8d39","permalink":"/blog/tags/\u514d\u8d39"}],"readingTime":0.255,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u767d\u5ad6\u7684\u5de5\u5177","tags":["\u514d\u8d39"],"authors":"ahKevinXy","description":"\u767d\u5ad6\u5de5\u5177 \u5982\u4f55\u4f7f\u7528\u7f51\u4e0a\u514d\u8d39\u5f00\u6e90\u7684\u8d44\u6e90","hide_table_of_contents":false,"image":"https://source.unsplash.com/random?people&22","date":"2023-03-07T13:09:13.000Z"},"unlisted":false,"prevItem":{"title":"\u8d44\u6e90\u6c47\u96c6\u5730","permalink":"/blog/2023/07/16/awesome"},"nextItem":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","permalink":"/blog/2023/03/06/ants"}},"content":"\x3c!-- truncate --\x3e\\n## \u5f00\u653e \u56fe\u7247\u751f\u6210\u5668 any idea you can imagine and create\\n\\n[undraw](https://undraw.co/)\\n\\n## \u6258\u7ba1\u5e73\u53f0 (\u51e0\u4e4e\u65e0\u9650\u5236\u4f7f\u7528)\\n\\n[\u963f\u91cccodeup](https://codeup.aliyun.com/)\\n\\n## \u8fdc\u7a0b\u7f16\u8f91\u5668\\n\\n[\u963f\u91ccide](https://ide.aliyun.com/)\\n\\n\\n## \u63d2\u753b\u5de5\u5177\\n\\n- [storyset](https://storyset.com/)\\n- [undraw](https://undraw.co/illustrations)"},{"id":"/2023/03/06/ants","metadata":{"permalink":"/blog/2023/03/06/ants","source":"@site/blog/2023/03/06/ants.md","title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","description":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790 ants\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 goroutine \u6c60\uff0c\u5b9e\u73b0\u4e86\u5bf9\u5927\u89c4\u6a21 goroutine \u7684\u8c03\u5ea6\u7ba1\u7406","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"ants","permalink":"/blog/tags/ants"}],"readingTime":12.845,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","tags":["Go","ants"],"authors":"ahKevinXy","description":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790 ants\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 goroutine \u6c60\uff0c\u5b9e\u73b0\u4e86\u5bf9\u5927\u89c4\u6a21 goroutine \u7684\u8c03\u5ea6\u7ba1\u7406","keywords":["\u5185\u5b58\u5bf9\u9f50","Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236"],"date":"2023-03-06T15:17:31.000Z","image":"https://www.dmoe.cc/random.php?type=2304061"},"unlisted":false,"prevItem":{"title":"\u767d\u5ad6\u7684\u5de5\u5177","permalink":"/blog/2023/07/16/free"},"nextItem":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","permalink":"/blog/2023/03/06/memory_struct"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u7b80\u4ecb\\n\\n### ants\u662f\u4ec0\u4e48\\n\\nants\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 goroutine \u6c60\uff0c\u5b9e\u73b0\u4e86\u5bf9\u5927\u89c4\u6a21 goroutine \u7684\u8c03\u5ea6\u7ba1\u7406\u3001goroutine \u590d\u7528\uff0c\u5141\u8bb8\u4f7f\u7528\u8005\u5728\u5f00\u53d1\u5e76\u53d1\u7a0b\u5e8f\u7684\u65f6\u5019\u9650\u5236 goroutine \u6570\u91cf\uff0c\u590d\u7528\u8d44\u6e90\uff0c\u8fbe\u5230\u66f4\u9ad8\u6548\u6267\u884c\u4efb\u52a1\u7684\u6548\u679c\u3002\\n\\n### \u529f\u80fd\u7279\u70b9\\n\\n* \u81ea\u52a8\u8c03\u5ea6\u6d77\u91cf\u7684 goroutines\uff0c\u590d\u7528 goroutines\\n* \u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7684 goroutines\uff0c\u8fdb\u4e00\u6b65\u8282\u7701\u8d44\u6e90\\n* \u63d0\u4f9b\u4e86\u5927\u91cf\u6709\u7528\u7684\u63a5\u53e3\uff1a\u4efb\u52a1\u63d0\u4ea4\u3001\u83b7\u53d6\u8fd0\u884c\u4e2d\u7684 goroutine \u6570\u91cf\u3001\u52a8\u6001\u8c03\u6574 Pool \u5927\u5c0f\u3001\u91ca\u653e Pool\u3001\u91cd\u542f Pool\\n* \u4f18\u96c5\u5904\u7406 panic\uff0c\u9632\u6b62\u7a0b\u5e8f\u5d29\u6e83\\n* \u8d44\u6e90\u590d\u7528\uff0c\u6781\u5927\u8282\u7701\u5185\u5b58\u4f7f\u7528\u91cf\uff1b\u5728\u5927\u89c4\u6a21\u6279\u91cf\u5e76\u53d1\u4efb\u52a1\u573a\u666f\u4e0b\u6bd4\u539f\u751f goroutine \u5e76\u53d1\u5177\u6709\u66f4\u9ad8\u7684\u6027\u80fd\\n* \u975e\u963b\u585e\u673a\u5236\\n\\n### ants\u6838\u5fc3\u6982\u5ff5\\n\\n* Pool \uff1a\u534f\u7a0b\u6c60\\n* WorkerArray\uff1aPool\u6c60\u4e2d\u7684worker\u961f\u5217\uff0c\u5b58\u653e\u6240\u6709\u7684goWorker\\n* goWorker\uff1a\u8fd0\u884c\u4efb\u52a1\u7684\u5b9e\u9645\u6267\u884c\u8005\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a goroutine \u6765\u63a5\u53d7\u4efb\u52a1\u5e76\u6267\u884c\u51fd\u6570\u8c03\u7528\u3002\\n\\n## Pool\u534f\u7a0b\u6c60\\n\\n### Pool\u7ed3\u6784\\n\\n> Ants \u63d0\u4f9b\u4e86\u4e24\u79cdPool\u7ed3\u6784\uff1aPool\u548cPoolWithFunc \uff1b\u4f46\u4e24\u8005\u903b\u8f91\u5927\u81f4\u4e00\u6837\uff0c\u672c\u6587\u7740\u91cd\u4ecb\u7ecdPool\u7684\u7ed3\u6784\\n\\n```go\\n // Pool accepts the tasks from client, it limits the total of goroutines to a given number by recycling goroutines.\\ntype Pool struct {\\n // capacity of the pool, a negative value means that the capacity of pool is limitless, an infinite pool is used to\\n // avoid potential issue of endless blocking caused by nested usage of a pool: submitting a task to pool\\n // which submits a new task to the same pool.\\n  // \u534f\u7a0b\u6c60\u7684\u5bb9\u91cf\\n capacity int32\\n\\n // running is the number of the currently running goroutines.\\n  // \u6b63\u5728\u8fd0\u884c\u7684goroutines\u7684\u6570\u91cf\\n running int32\\n\\n // lock for protecting the worker queue.\\n  // \u9501\uff0c\u81ea\u65cb\u9501\uff0c\u4fdd\u62a4\u961f\u5217\\n lock sync.Locker\\n\\n // workers is a slice that store the available workers.\\n  // \u5b58\u653e\u6c60\u4e2d\u6240\u6709\u7684worker,workerArray\u5305\u542b\u53ef\u7528workers\u961f\u5217\u548c\u8fc7\u671fworkers\u961f\u5217\uff0c\u53ea\u4f1a\u4ece\u53ef\u7528workers\u961f\u5217\u4e2d\u53d6\u53ef\u7528worker\\n workers workerArray\\n\\n // state is used to notice the pool to closed itself.\\n  // \u8bb0\u5f55\u6c60\u5b50\u7684\u72b6\u6001 \uff08\u5173\u95ed\u3001\u5f00\u542f\uff09\\n state int32\\n\\n // cond for waiting to get an idle worker.\\n  // \u6761\u4ef6\u53d8\u91cf\\n cond *sync.Cond\\n\\n // workerCache speeds up the obtainment of a usable worker in function:retrieveWorker.\\n  // worker \u5bf9\u8c61\u6c60\\n workerCache sync.Pool\\n\\n // waiting is the number of goroutines already been blocked on pool.Submit(), protected by pool.lock\\n  //\u963b\u585e\u7b49\u5f85\u7684\u4efb\u52a1\u91cf\\n waiting int32\\n // \u6e05\u9053\u592b\uff0c\u5b9a\u65f6\u6e05\u7406workerarray \u961f\u5217\u4e2d\u8fc7\u671f\u7684worker\\n purgeDone int32\\n stopPurge context.CancelFunc\\n // \u5b9a\u65f6\u5668 \u66f4\u65b0pool\u4e2dnow\u7684\u5b57\u6bb5\\n ticktockDone int32\\n stopTicktock context.CancelFunc\\n\\n now atomic.Value\\n // \u9700\u8981\u81ea\u5b9a\u4e49\u52a0\u8f7d\u7684\u914d\u7f6e\\n options *Options\\n}\\n\\n```\\n\\n### Pool\u521b\u5efa\\n\\n```go\\n// NewPool generates an instance of ants pool.\\nfunc NewPool(size int, options ...Option) (*Pool, error) {\\n opts := loadOptions(options...) // \u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684options\u4e2d\u7684\u914d\u7f6e\\n\\n if size <= 0 {\\n  size = -1\\n }\\n\\n if !opts.DisablePurge {// \u5f53 DisablePurge \u4e3a true \u65f6\uff0cworker \u4e0d\u4f1a\u88ab\u6e05\u9664\u5e76\u4e14\u662f\u9a7b\u7559\u7684\u3002\\n  if expiry := opts.ExpiryDuration; expiry < 0 {\\n   return nil, ErrInvalidPoolExpiry\\n  } else if expiry == 0 {\\n   opts.ExpiryDuration = DefaultCleanIntervalTime // \u9ed8\u8ba4\u95f4\u9694\u65f6\u95f41s\\n  }\\n }\\n\\n if opts.Logger == nil {\\n  opts.Logger = defaultLogger\\n }\\n\\n p := &Pool{\\n  capacity: int32(size),\\n  lock:     syncx.NewSpinLock(),//\u81ea\u65cb\u9501\\n  options:  opts,\\n }\\n p.workerCache.New = func() interface{} { //sync.pool \u521d\u59cb\u5316\\n  return &goWorker{\\n   pool: p,\\n   task: make(chan func(), workerChanCap),\\n  }\\n }\\n if p.options.PreAlloc {\\n  if size == -1 {\\n   return nil, ErrInvalidPreAllocSize\\n  }\\n  p.workers = newWorkerArray(loopQueueType, size) //\u5faa\u73af\u961f\u5217\\n } else {\\n  p.workers = newWorkerArray(stackType, 0) //\u6570\u7ec4\\n }\\n\\n p.cond = sync.NewCond(p.lock) // sync.cond\u521d\u59cb\u5316\\n\\n p.goPurge()\\n p.goTicktock()\\n\\n return p, nil\\n}\\n\\n\\n```\\n\\n### \u81ea\u65cb\u9501SpinLock(\u91cd\u70b9)\\n\\n> \u601d\u8003\uff1a\u5982\u4f55\u8bbe\u8ba1\u4e00\u79cd\u81ea\u65cb\u9501\uff0c\u8bbe\u8ba1\u81ea\u65cb\u9501\u65f6\u9700\u8981\u6ce8\u610f\u4ec0\u4e48\uff1f\\n\\nspinLock\u662f\u57fa\u4e8eCAS\u673a\u5236\u548c\u6307\u6570\u9000\u907f\u7b97\u6cd5\u5b9e\u73b0\u7684\u4e00\u79cd\u81ea\u65cb\u9501\\n\\n```go\\npackage sync\\n\\nimport (\\n \\"runtime\\"\\n \\"sync\\"\\n \\"sync/atomic\\"\\n)\\n\\ntype spinLock uint32 // \u5b9e\u73b0sync.Locker\u63a5\u53e3\\n\\nconst maxBackoff = 16 //\u6700\u5927\u7684\u56de\u907f\u6b21\u6570\\n\\nfunc (sl *spinLock) Lock() {\\n backoff := 1\\n  // \u57fa\u4e8eCAS\u673a\u5236\uff0c\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u4e14\u4f7f\u7528\u6307\u6570\u9000\u907f\u7b97\u6cd5\u6765\u63d0\u4f9b\u83b7\u53d6\u9501\u7684\u6210\u529f\u7387\\n for !atomic.CompareAndSwapUint32((*uint32)(sl), 0, 1) {\\n  // Leverage the exponential backoff algorithm, see https://en.wikipedia.org/wiki/Exponential_backoff.\\n  for i := 0; i < backoff; i++ {\\n     //runtime.Gosched()\u51fd\u6570\u529f\u80fd\uff1a\u4f7f\u5f53\u524dgoroutine\u8ba9\u51faCPU\u65f6\u95f4\u7247\uff08\u201c\u56de\u907f\u201d\uff09\uff0c\u8ba9\u5176\u4ed6\u7684goroutine\u83b7\u5f97\u6267\u884c\u7684\u673a\u4f1a\u3002\u5f53\u524d\u7684goroutine\u4f1a\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u95f4\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002\\n    //\u6ce8\u610f\uff1a\u5f53\u4e00\u4e2agoroutine\u53d1\u751f\u963b\u585e\uff0cGo\u4f1a\u81ea\u52a8\u5730\u628a\u4e0e\u8be5goroutine\u5904\u4e8e\u540c\u4e00\u7cfb\u7edf\u7ebf\u7a0b\u7684\u5176\u4ed6goroutines\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u7cfb\u7edf\u7ebf\u7a0b\u4e0a\u53bb\uff0c\u4ee5\u4f7f\u8fd9\u4e9bgoroutines\u4e0d\u963b\u585e\uff08\u4eceGMP\u6a21\u578b\u89d2\u5ea6\u6765\u8bf4\uff0c\u5c31\u662f\u5f53\u4e0eP\u7ed1\u5b9a\u7684M\u53d1\u751f\u963b\u585e\uff0cP\u5c31\u4e0e\u5176\u89e3\u7ed1\uff0c\u7136\u540e\u4e0e\u53e6\u4e00\u4e2a\u7a7a\u95f2\u7684M\u8fdb\u884c\u7ed1\u5b9a \u6216\u8005 \u53bb\u521b\u5efa\u4e00\u4e2aM\u8fdb\u884c\u7ed1\u5b9a\uff09\u3002\\n   runtime.Gosched()\\n  }\\n  if backoff < maxBackoff {\\n   backoff <<= 1\\n  }\\n }\\n}\\n\\nfunc (sl *spinLock) Unlock() {\\n  //\u539f\u5b50\u64cd\u4f5c\uff0c\u5e76\u53d1\u5b89\u5168\\n atomic.StoreUint32((*uint32)(sl), 0)\\n}\\n\\n// NewSpinLock instantiates a spin-lock.\\nfunc NewSpinLock() sync.Locker {\\n return new(spinLock)\\n}\\n\\n\\n```\\n\\nsync.Locker\\n\\n> \u8bbe\u8ba1\u9501\u65f6\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\\n\\n```go\\n// A Locker represents an object that can be locked and unlocked.\\ntype Locker interface {\\n Lock()\\n Unlock()\\n}\\n\\n```\\n\\n### \u5173\u952e\u77e5\u8bc6\u70b9\\n\\n* sync.Locker\u63a5\u53e3\\n* \u6307\u6570\u9000\u907f\u7b97\u6cd5\\n* atomic \u539f\u5b50\u5305\u4e2d\u7684\u65b9\u6cd5\u4e86\u89e3\\n* runtime.Gosched()\\n\\n## \u4efb\u52a1\u6267\u884c\\n\\n### goWorker\u7684\u7ed3\u6784\\n\\n```go\\n// goWorker is the actual executor who runs the tasks,\\n// it starts a goroutine that accepts tasks and\\n// performs function calls.\\n//goWorker \u662f\u8fd0\u884c\u4efb\u52a1\u7684\u5b9e\u9645\u6267\u884c\u8005\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a goroutine \u6765\u63a5\u53d7\u4efb\u52a1\u5e76\u6267\u884c\u51fd\u6570\u8c03\u7528\u3002\\ntype goWorker struct {\\n // pool who owns this worker.\\n pool *Pool // \u62e5\u6709worker\u7684\u534f\u8bae\u6c60\\n\\n // task is a job should be done.\\n task chan func() // \u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\uff0c\u6ce8\u610f\uff1a\u8be5chan \u53ef\u80fd\u662f\u7f13\u5b58\u533a\u6216\u8005\u975e\u7f13\u5b58\u533a\uff0c\u5982\u679c\u662f\u591a\u6838\u7684\u8bdd\uff0c\u7f13\u5b58\u533a\u7684\u5927\u5c0f\u662f1\\n\\n // recycleTime will be updated when putting a worker back into queue.\\n recycleTime time.Time // \u56de\u6536\u65f6\u95f4\\n}\\n```\\n\\n### goWoker\u7684\u521d\u59cb\u5316\\n\\n> goWorker \u662fsync.pool \u5bf9\u8c61\u6c60\u521b\u5efa\u7684\uff1b\u521d\u59cb\u5316\u5728Pool\u521b\u5efa\u65f6\\n\\n```go\\np.workerCache.New = func() interface{} {\\n  return &goWorker{\\n   pool: p,\\n   task: make(chan func(), workerChanCap),\\n  }\\n }\\n\\n```\\n\\n### workerChanCap\u7684\u503c\\n\\n```go\\n// workerChanCap determines whether the channel of a worker should be a buffered channel\\n // to get the best performance. Inspired by fasthttp at\\n // https://github.com/valyala/fasthttp/blob/master/workerpool.go#L139\\n workerChanCap = func() int {\\n  // Use blocking channel if GOMAXPROCS=1.\\n  // This switches context from sender to receiver immediately,\\n  // which results in higher performance (under go1.5 at least).\\n  if runtime.GOMAXPROCS(0) == 1 {\\n   return 0\\n  }\\n\\n  // Use non-blocking workerChan if GOMAXPROCS>1,\\n  // since otherwise the sender might be dragged down if the receiver is CPU-bound.\\n  return 1\\n }()\\n```\\n\\n### Task \u4efb\u52a1\u63d0\u4ea4\\n\\n```go\\nfunc (p *Pool) Submit(task func()) error {\\n if p.IsClosed() { // \u524d\u7f6e\u68c0\u67e5 \u534f\u7a0b\u6c60\u662f\u5426\u5173\u95ed\\n  return ErrPoolClosed\\n }\\n var w *goWorker\\n if w = p.retrieveWorker(); w == nil { //\u83b7\u53d6\u4e00\u4e2a\u53ef\u7528\u7684worker\u53d6\u6267\u884c\u4efb\u52a1\\n  return ErrPoolOverload\\n }\\n w.task <- task\\n return nil\\n}\\n\\n```\\n\\n### retrieveWorker \uff08\u53ef\u7528worker\u83b7\u53d6\uff09\\n\\n```go\\n// retrieveWorker returns an available worker to run the tasks.\\nfunc (p *Pool) retrieveWorker() (w *goWorker) {\\n spawnWorker := func() { // \u4f7f\u7528sync.pool \u521b\u5efaworker\\n  w = p.workerCache.Get().(*goWorker)\\n  w.run()\\n }\\n\\n p.lock.Lock() // \u81ea\u65cb\u9501 \u52a0\u9501\\n\\n w = p.workers.detach() // \u5c1d\u8bd5\u4eceworker\u6c60\u5b50\u4e2d\u83b7\u53d6\u53ef\u7528\u7684worker\uff0c\u6ce8\uff1a\u4efb\u52a1\u6267\u884c\u5b8c\u540e\uff0c\u4f1a\u56de\u6536worker \u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\\n if w != nil { // first try to fetch the worker from the queue  \u83b7\u53d6\u5230\u8fd4\u56de\\n  p.lock.Unlock()\\n } else if capacity := p.Cap(); capacity == -1 || capacity > p.Running() { // \u5224\u65ad\u6b63\u5728\u8fd0\u884c\u7684worker \u662f\u5426\u8d85\u8fc7 pool\u534f\u7a0b\u8bcd\u8bbe\u7f6e\u7684\u5bb9\u91cf\u5927\u5c0f\uff0c\u6ce8 capacity=-1 \u8868\u793a\u6c60\u5b50\u5bb9\u91cf\u65e0\u9650\u5927\\n  // if the worker queue is empty and we don\'t run out of the pool capacity,\\n  // then just spawn a new worker goroutine.\\n  p.lock.Unlock()\\n  spawnWorker() // \u521b\u5efaworker\\n } else { // otherwise, we\'ll have to keep them blocked and wait for at least one worker to be put back into pool.\\n  if p.options.Nonblocking { // \u5224\u65ad\u534f\u7a0b\u6c60\u662f\u5426 \u662f\u975e\u963b\u585e\u6a21\u5f0f \uff0c\u5982\u679c\u662f\u975e\u963b\u585e\u6a21\u5f0f\u4e0b\u5c31\u76f4\u63a5\u8fd4\u56de\\n   p.lock.Unlock()\\n   return\\n  }\\n retry: // \u963b\u585e\u6a21\u5f0f\u4e0b\u7684\u903b\u8f91\\n    // \u5224\u65ad\u963b\u585e\u7684\u4efb\u52a1\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u4e86\u8bbe\u7f6e\u7684\u6700\u5927\u9608\u503c\uff0c\u5982\u679c\u8d85\u8fc7\u76f4\u63a5\u8fd4\u56de\\n  if p.options.MaxBlockingTasks != 0 && p.Waiting() >= p.options.MaxBlockingTasks {\\n   p.lock.Unlock()\\n   return\\n  }\\n  p.addWaiting(1) // \u963b\u585e\u4efb\u52a1\u6570\u91cf\u52a01\\n  p.cond.Wait() // block and wait for an available worker\\n  p.addWaiting(-1) // \u83b7\u53d6\u5230\u53ef\u7528\u7684worker\u540e\uff0c\u963b\u585e\u6570\u91cf\u51cf\u4e00\\n\\n  if p.IsClosed() { // check pool\u6c60\u662f\u5426\u5173\u95ed\\n   p.lock.Unlock()\\n   return\\n  }\\n\\n  var nw int\\n  if nw = p.Running(); nw == 0 { // \u5982\u679c\u6b63\u5728\u6267\u884c\u7684worker\u6570\u91cf\u4e3a0\u65f6\uff0c\u9700\u8981\u91cd\u65b0\u521b\u5efawoker\\n   p.lock.Unlock()\\n   spawnWorker()\\n   return\\n  }\\n  if w = p.workers.detach(); w == nil { //\u4eceworkerArray\u4e2d\u83b7\u53d6\u53ef\u7528\u7684worker\\n   if nw < p.Cap() { // \u83b7\u53d6\u4e0d\u5230\uff0c\u5224\u65ad\u6b63\u5728\u8fd0\u884c\u7684goroutines\u7684\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u534f\u5c42\u6c60\u7684\u5bb9\u91cf\uff0c\u6ca1\u6709\u5c31\u521b\u5efa\\n    p.lock.Unlock()\\n    spawnWorker()\\n    return\\n   }\\n   goto retry // goto \u91cd\u8bd5\u963b\u585e\u6a21\u5f0f\u4e0b\u83b7\u53d6\u53ef\u7528worker\u7684\u903b\u8f91\\n  }\\n  p.lock.Unlock()\\n }\\n return\\n}\\n\\n```\\n\\n### WorkerArray \u5de5\u4f5c\u6c60\u7684\u7ed3\u6784\\n\\n```go\\n\\ntype workerArray interface {\\n len() int // \u957f\u5ea6\\n isEmpty() bool // \u662f\u5426\u4e3a\u7a7a\\n insert(worker *goWorker) error // \u63d2\u5165\\n detach() *goWorker // \u4eceWorkerArray\u83b7\u53d6\u53ef\u7528\u7684worker\\n retrieveExpiry(duration time.Duration) []*goWorker  //\u6e05\u9053\u592b\u8c03\u7528pool.worker\u4e2d\u7684\u6b64\u65b9\u6cd5\u6765\u6e05\u7406pool.workers\u4e2d\u7684\u8fc7\u671fworker\\n reset() // \u91cd\u7f6e\uff0c\u6e05\u7a7aWorkerArray\u4e2d\u6240\u6709\u7684Worker\\n}\\n\\n\\n\\n```\\n\\nworkerArray \u63a5\u53e3\u7684\u5b9e\u73b0workerStack \u548cloopQueue\\n\\n### \u4efb\u52a1\u6267\u884c\\n\\n```go\\n// run starts a goroutine to repeat the process\\n// that performs the function calls.\\nfunc (w *goWorker) run() {\\n   w.pool.addRunning(1) // pool\u7684running \u52a0 \u4e00\\n   go func() {\\n      defer func() {\\n         w.pool.addRunning(-1)\\n         w.pool.workerCache.Put(w)\\n         if p := recover(); p != nil {\\n            if ph := w.pool.options.PanicHandler; ph != nil {\\n               ph(p)\\n            } else {\\n               w.pool.options.Logger.Printf(\\"worker exits from a panic: %v\\\\n\\", p)\\n               var buf [4096]byte\\n               n := runtime.Stack(buf[:], false)\\n               w.pool.options.Logger.Printf(\\"worker exits from panic: %s\\\\n\\", string(buf[:n]))\\n            }\\n         }\\n         // Call Signal() here in case there are goroutines waiting for available workers.\\n         w.pool.cond.Signal() \\n      }()\\n\\n      for f := range w.task {\\n         if f == nil {\\n            return\\n         }\\n         f() // \u4efb\u52a1\u6267\u884c\\n         if ok := w.pool.revertWorker(w); !ok { // \u56de\u6536woker\\n            return\\n         }\\n      }\\n   }()\\n}\\n\\n```\\n\\n`revertWorker`worker\u56de\u6536\\n\\n> \u903b\u8f91\u7b80\u5355\uff1a1\u3001\u5f80workerArray \u961f\u5217\u4e2d\u63d2\u5165\uff1b2\u3001\u901a\u77e5\u6b63\u5728\u963b\u585e\u83b7\u53d6worker\u7684goroutines\\n\\n```go\\n// revertWorker puts a worker back into free pool, recycling the goroutines.\\nfunc (p *Pool) revertWorker(worker *goWorker) bool {\\n if capacity := p.Cap(); (capacity > 0 && p.Running() > capacity) || p.IsClosed() {\\n  p.cond.Broadcast()\\n  return false\\n }\\n worker.recycleTime = p.nowTime()\\n p.lock.Lock()\\n\\n // To avoid memory leaks, add a double check in the lock scope.\\n // Issue: https://github.com/panjf2000/ants/issues/113\\n if p.IsClosed() {\\n  p.lock.Unlock()\\n  return false\\n }\\n\\n err := p.workers.insert(worker)\\n if err != nil {\\n  p.lock.Unlock()\\n  return false\\n }\\n\\n // Notify the invoker stuck in \'retrieveWorker()\' of there is an available worker in the worker queue.\\n p.cond.Signal()\\n p.lock.Unlock()\\n return true\\n}\\n\\n\\n```\\n\\n### \u5b9a\u65f6\u6e05\u7406\u8fc7\u671f\u7684worker\\n\\n```go\\nfunc (p *Pool) goPurge() {\\n if p.options.DisablePurge {\\n  return\\n }\\n\\n // Start a goroutine to clean up expired workers periodically.\\n var ctx context.Context\\n ctx, p.stopPurge = context.WithCancel(context.Background())\\n go p.purgeStaleWorkers(ctx)\\n}\\n\\n// purgeStaleWorkers clears stale workers periodically, it runs in an individual goroutine, as a scavenger.\\nfunc (p *Pool) purgeStaleWorkers(ctx context.Context) {\\n ticker := time.NewTicker(p.options.ExpiryDuration)\\n\\n defer func() {\\n  ticker.Stop()\\n  atomic.StoreInt32(&p.purgeDone, 1)\\n }()\\n\\n for {\\n  select {\\n  case <-ctx.Done():\\n   return\\n  case <-ticker.C:\\n  }\\n\\n  if p.IsClosed() {\\n   break\\n  }\\n\\n  p.lock.Lock()\\n  expiredWorkers := p.workers.retrieveExpiry(p.options.ExpiryDuration)\\n  p.lock.Unlock()\\n\\n  // Notify obsolete workers to stop.\\n  // This notification must be outside the p.lock, since w.task\\n  // may be blocking and may consume a lot of time if many workers\\n  // are located on non-local CPUs.\\n  for i := range expiredWorkers {\\n   expiredWorkers[i].task <- nil\\n   expiredWorkers[i] = nil\\n  }\\n\\n  // There might be a situation where all workers have been cleaned up(no worker is running),\\n  // or another case where the pool capacity has been Tuned up,\\n  // while some invokers still get stuck in \\"p.cond.Wait()\\",\\n  // then it ought to wake all those invokers.\\n  if p.Running() == 0 || (p.Waiting() > 0 && p.Free() > 0) {\\n   p.cond.Broadcast()\\n  }\\n }\\n}\\n\\n\\n\\n```\\n\\nants\u6e90\u7801 \u81ea\u65cb\u9501\u7684\u8bbe\u8ba1\u3001sync.cond \u6761\u4ef6\u53d8\u91cf \u3001sync.pool \u5bf9\u8c61\u6c60\uff0c\u539f\u5b50\u64cd\u4f5c\uff0cchannel\u901a\u4fe1\u7b49"},{"id":"/2023/03/06/memory_struct","metadata":{"permalink":"/blog/2023/03/06/memory_struct","source":"@site/blog/2023/03/06/memory_struct.md","title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":4.995,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","tags":["Go"],"authors":"ahKevinXy","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","keywords":["\u5185\u5b58","\u4f18\u5316"],"date":"2023-03-06T15:17:31.000Z","image":"https://www.dmoe.cc/random.php?type=2304065"},"unlisted":false,"prevItem":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","permalink":"/blog/2023/03/06/ants"},"nextItem":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","permalink":"/blog/2023/03/06/ms"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u4ec0\u4e48\u662f\u5185\u5b58\u5bf9\u9f50\\n\\n\u4e3a\u4e86\u80fd\u8ba9CPU\u53ef\u4ee5\u66f4\u5feb\u7684\u5b58\u53d6\u5230\u5404\u4e2a\u5b57\u6bb5\uff0cGo\u7f16\u8bd1\u5668\u4f1a\u5e2e\u4f60\u628a`struct\u7ed3\u6784\u4f53`\u505a\u6570\u636e\u7684\u5bf9\u9f50\u3002\u6240\u8c13\u7684\u6570\u636e\u5bf9\u9f50\uff0c\u662f\u6307\u5185\u5b58\u5730\u5740\u662f\u6240\u5b58\u50a8\u6570\u636e\u7684\u5927\u5c0f\uff08\u6309\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u7684\u6574\u6570\u500d\uff0c\u4ee5\u4fbfCU\u53ef\u4ee5\u4e00\u6b21\u5c06\u8be5\u6570\u636e\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u51fa\u6765\u3002\u7f16\u8bd1\u5668\u901a\u8fc7\u5728\u7ed3\u6784\u4f53\u7684\u5404\u4e2a\u5b57\u6bb5\u4e4b\u95f4\u586b\u5145\u4e00\u4e9b\u7a7a\u767d\u5df2\u8fbe\u5230\u5bf9\u9f50\u7684\u76ee\u7684\u3002\\n\\n## \u5bf9\u9f50\u7cfb\u6570\\n\\n\u4e0d\u540c\u786c\u4ef6\u5e73\u53f0\u5360\u7528\u7684\u5927\u5c0f\u548c\u5bf9\u9f50\u503c\u90fd\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\\"\u5bf9\u9f50\u7cfb\u6570\\"\uff0c32\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f4\uff0c64\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f8\\n\\n\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u9f50\u7cfb\u6570\u4e5f\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u4f7f\u7528Go\u8bed\u8a00\u4e2d\u7684`unsafe.Alignof`\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u76f8\u5e94\u7c7b\u578b\u7684\u5bf9\u9f50\u7cfb\u6570\uff0c\u5bf9\u9f50\u7cfb\u6570\u90fd\u7b26\u54082^n\u8fd9\u4e2a\u89c4\u5f8b\uff0c\u6700\u5927\u4e5f\u4e0d\u4f1a\u8d85\u8fc78\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"unsafe\\"\\n)\\n\\nfunc main() {\\n    fmt.Printf(\\"bool alignof is %d\\\\n\\", unsafe.Alignof(bool(true)))\\n    fmt.Printf(\\"string alignof is %d\\\\n\\", unsafe.Alignof(string(\\"a\\")))\\n    fmt.Printf(\\"int alignof is %d\\\\n\\", unsafe.Alignof(int(0)))\\n    fmt.Printf(\\"float alignof is %d\\\\n\\", unsafe.Alignof(float64(0)))\\n    fmt.Printf(\\"int32 alignof is %d\\\\n\\", unsafe.Alignof(int32(0)))\\n    fmt.Printf(\\"float32 alignof is %d\\\\n\\", unsafe.Alignof(float32(0)))\\n}\\n```\\n\\n\u53ef\u4ee5\u67e5\u770b\u5230\u5404\u79cd\u7c7b\u578b\u5728Windows 64\u4f4d\u4e0a\u7684\u5bf9\u9f50\u7cfb\u6570\u5982\u4e0b\uff1a\\n\\n```bash\\nbool alignof is 1\\nstring alignof is 8 \\nint alignof is 8    \\nfloat alignof is 8  \\nint32 alignof is 4  \\nfloat32 alignof is 4\\n```\\n\\n## \u7f3a\u70b9\\n\\n\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u7684\u6d6a\u8d39\uff0c\u5b9e\u9645\u4e0a\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\\n\\n## \u4f18\u70b9\\n\\n1. \u63d0\u9ad8\u53ef\u79fb\u690d\u6027\uff0c\u6709\u4e9bCPU\u53ef\u4ee5\u8bbf\u95ee\u4efb\u610f\u5730\u5740\u4e0a\u7684\u4efb\u610f\u6570\u636e\uff0c\u800c\u6709\u4e9bCPU\u53ea\u80fd\u5728\u7279\u5b9a\u5730\u5740\u8bbf\u95ee\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u540c\u786c\u4ef6\u5e73\u53f0\u5177\u6709\u5dee\u5f02\u6027\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5c31\u4e0d\u5177\u6709\u79fb\u690d\u6027\uff0c\u5982\u679c\u5728\u7f16\u8bd1\u65f6\uff0c\u5c06\u5206\u914d\u7684\u5185\u5b58\u8fdb\u884c\u5bf9\u9f50\uff0c\u8fd9\u5c31\u5177\u6709\u5e73\u53f0\u53ef\u4ee5\u79fb\u690d\u6027\u4e86\\n2. \u63d0\u9ad8\u5185\u5b58\u7684\u8bbf\u95ee\u6548\u7387\uff0c32\u4f4dCPU\u4e0b\u4e00\u6b21\u53ef\u4ee5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d632\u4f4d\uff084\u4e2a\u5b57\u8282\uff09\u7684\u6570\u636e\uff0c64\u4f4dCPU\u4e0b\u4e00\u6b21\u53ef\u4ee5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d664\u4f4d\uff088\u4e2a\u5b57\u8282\uff09\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u957f\u5ea6\u4e5f\u79f0\u4e3aCPU\u7684\u5b57\u957f\u3002CPU\u4e00\u6b21\u53ef\u4ee5\u8bfb\u53d61\u4e2a\u5b57\u957f\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u6240\u9700\u8981\u8bfb\u53d6\u7684\u6570\u636e\u6b63\u597d\u8de8\u4e861\u4e2a\u5b57\u957f\uff0c\u90a3\u5c31\u5f97\u82b1\u4e24\u4e2aCPU\u5468\u671f\u7684\u65f6\u95f4\u53bb\u8bfb\u53d6\u4e86\u3002\u56e0\u6b64\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u6570\u636e\u65f6\u8fdb\u884c\u5bf9\u9f50\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u3002\\n\\n## \u7ed3\u6784\u4f53\u5bf9\u9f50\u539f\u5219\\n\\n\u5bf9\u9f50\u539f\u5219\uff1a\\n\\n1. \u7b2c\u4e00\u4e2a\u6210\u5458\u5728\u7ed3\u6784\u4f53\u53d8\u91cf\u504f\u79fb\u5904\u4e3a0\u7684\u5730\u5740\u5904\\n2. \u5176\u4ed6\u6210\u5458\u8981\u5bf9\u9f50\u5230\u67d0\u4e2a\u6570\u5b57(\u5bf9\u9f50\u6570)\u7684\u6574\u6570\u500d\u7684\u5730\u5740\u5904\u3002\u5bf9\u9f50\u6570=\u7f16\u8bd1\u5668\u9ed8\u8ba4\u7684\u4e00\u4e2a\u5bf9\u9f50\u6570\u4e0e\u8be5\u6210\u5458\u5927\u5c0f\u7684\u8f83\u5c0f\u503c\u3002\u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\\"\u5bf9\u9f50\u7cfb\u6570\\"\uff0c32\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f4\uff0c64\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f8\u3002\\n3. \u7ed3\u6784\u4f53\u603b\u5927\u5c0f\u4e3a\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\\n4. \u5982\u679c\u5d4c\u5957\u4e86\u7ed3\u6784\u4f53\u7684\u60c5\u51b5\uff0c\u5d4c\u5957\u7684\u7ed3\u6784\u4f53\u5bf9\u9f50\u5230\u81ea\u5df1\u7684\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u5904\uff0c\u7ed3\u6784\u4f53\u6574\u4f53\u5c31\u662f\u6240\u6709\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u3002\\n\\n```go\\ntype T1 struct {\\n    i16  int16 // 2 byte\\n    bool bool  // 1 byte\\n}\\n\\ntype T2 struct {\\n    i8  int8  // 1 byte\\n    i64 int64 // 8 byte\\n    i32 int32 // 4 byte\\n}\\n\\ntype T3 struct {\\n    i8  int8  // 1 byte\\n    i32 int32 // 4 byte\\n    i64 int64 // 8 byte\\n}\\n\\nfunc main() {\\n    fmt.Println(runtime.GOARCH) // amd64\\n\\n    t1 := T1{}\\n    fmt.Println(unsafe.Sizeof(t1)) // 4 bytes\\n\\n    t2 := T2{}\\n    fmt.Println(unsafe.Sizeof(t2)) // 24 bytes\\n\\n    t3 := T3{}\\n    fmt.Println(unsafe.Sizeof(t3)) // 16 bytes\\n}\\n```\\n\\n\u4ee5T1 \u7ed3\u6784\\ni16\u5e76\u6ca1\u6709\u76f4\u63a5\u653e\u5728bool\u7684\u540e\u9762\uff0c\u800c\u662f\u5728bool\u4e2d\u586b\u5145\u4e86\u4e00\u4e2a\u7a7a\u767d\u540e\uff0c\u653e\u5230\u4e86\u504f\u79fb\u91cf\u4e3a2\u7684\u4f4d\u7f6e\u4e0a\u3002\u5982\u679ci16\u4ece\u504f\u79fb\u91cf\u4e3a1\u7684\u4f4d\u7f6e\u5f00\u59cb\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u6839\u636e\u5bf9\u9f50\u539f\u52192\uff1a\u6784\u4f53\u53d8\u91cf\u4e2d\u6210\u5458\u7684\u504f\u79fb\u91cf\u5fc5\u987b\u662f\u6210\u5458\u5927\u5c0f\u7684\u6574\u6570\u500d\uff0c\u5957\u7528\u516c\u5f0f 1 % 2 = 1\uff0c\u5c31\u4e0d\u6ee1\u8db3\u5bf9\u9f50\u7684\u8981\u6c42\uff0c\u6240\u4ee5i16\u4ece\u504f\u79fb\u91cf\u4e3a2\u7684\u4f4d\u7f6e\u5f00\u59cb"},{"id":"/2023/03/06/ms","metadata":{"permalink":"/blog/2023/03/06/ms","source":"@site/blog/2023/03/06/ms.md","title":"\u61c2\u79d2\u6740\u7cfb\u7edf","description":"\u61c2\u79d2\u6740\u7cfb\u7edf","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":0.815,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","tags":["Go"],"authors":"ahKevinXy","description":"\u61c2\u79d2\u6740\u7cfb\u7edf","keywords":["\u61c2\u79d2\u6740\u7cfb\u7edf"],"date":"2023-03-06T15:17:31.000Z","image":"https://www.dmoe.cc/random.php?type=2304066"},"unlisted":false,"prevItem":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","permalink":"/blog/2023/03/06/memory_struct"},"nextItem":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","permalink":"/blog/2023/03/06/im"}},"content":"\x3c!-- truncate --\x3e\\n## \u77e5\u8bc6\u70b9\u8be6\u89e3\\n\\n```mermaid\\nflowchart LR;\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u77ac\u65f6\u9ad8\u5e76\u53d1\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u6d3b\u52a8\u9884\u70ed\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u5206\u6279\u6d3b\u52a8\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u51c6\u70b9\u6d3b\u52a8\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u6d3b\u52a8\u9875\u9762\\n    \u6d3b\u52a8\u9875\u9762 --\x3e \u9759\u6001\u5316\u5904\u7406\\n    \u6d3b\u52a8\u9875\u9762 --\x3e CDN\u52a0\u901f\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u79d2\u6740\u6309\u94ae\\n    \u79d2\u6740\u6309\u94ae --\x3e js\u63a7\u5236\u72b6\u6001\\n    \u79d2\u6740\u6309\u94ae --\x3e \u968f\u673a\u53c2\u6570\u66f4\u65b0CDN\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u8bfb\u591a\u5199\u5c11\\n    \u8bfb\u591a\u5199\u5c11 --\x3e DB \\n    \u8bfb\u591a\u5199\u5c11 --\x3e \u53ca\u65f6\u7f13\u5b58\\n    \u8bfb\u591a\u5199\u5c11 --\x3e \u591a\u8282\u70b9\u90e8\u7f72\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u7f13\u5b58\\n    \u7f13\u5b58 --\x3e \u5546\u54c1\u4fe1\u606f\u7f13\u5b58\\n    \u7f13\u5b58 --\x3e \u7f13\u5b58\u51fb\u7a7f\\n    \u7f13\u5b58 --\x3e \u7f13\u5b58\u7a7f\u900f\\n    \u7f13\u5b58 --\x3e \u5e03\u9686\u8fc7\u6ee4\u5668\\n     \\n    \\n\\n\\n\\n  \\n```"},{"id":"/2023/03/06/im","metadata":{"permalink":"/blog/2023/03/06/im","source":"@site/blog/2023/03/06/im.md","title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","description":"IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","date":"2023-03-06T14:10:16.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"im","permalink":"/blog/tags/im"}],"readingTime":2.825,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","tags":["im"],"authors":"ahKevinXy","description":"IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","keywords":["\u5373\u65f6\u901a\u4fe1","\u7f51\u7edc\u6a21\u578b","Socket\u7684\u4f5c\u7528\u4e0e\u7ec4\u6210"],"date":"2023-03-06T14:10:16.000Z","image":"https://www.dmoe.cc/random.php?type=2304064"},"unlisted":false,"prevItem":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","permalink":"/blog/2023/03/06/ms"},"nextItem":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","permalink":"/blog/2022/11/28/index"}},"content":"\x3c!-- truncate --\x3e\\n\\n## \u57fa\u7840\u77e5\u8bc6\\n\\n### \u4ec0\u4e48\u662f\u7f51\u7edc\\n\\n* \u5728\u8ba1\u7b97\u673a\u9886\u57df\u4e2d\uff0c\u7f51\u7edc\u662f\u4fe1\u606f\u4f20\u8f93\uff0c\u63a5\u6536\uff0c\u5171\u4eab\u7684\u865a\u62df\u5e73\u53f0\\n* \u901a\u8fc7\u628a\u5404\u4e2a\u70b9\uff0c\u9762\uff0c\u4f53\u7684\u4fe1\u606f\u8054\u7cfb\u5230\u4e00\u8d77\uff0c\u4ece\u800c\u5b9e\u73b0\u8fd9\u4e9b\u8d44\u6e90\u7684\u5171\u4eab\\n\\n### \u4ec0\u4e48\u662f\u7f51\u7edc\u7f16\u7a0b\\n\\n* \u7f51\u7edc\u7f16\u7a0b\u4ece\u5927\u7684\u65b9\u9762\u8bf4\u5c31\u662f\u5bf9\u4fe1\u606f\u7684\u53d1\u9001\u5230\u63a5\u6536\\n* \u901a\u8fc7\u64cd\u4f5c\u76f8\u5bf9\u5e94api\u8c03\u5ea6\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90\uff0c\u5e76\u5229\u7528\u4f20\u8f93\u7ba1\u9053\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u8fc7\u7a0b\\n\\n### 7 \u5c42\u7f51\u7edc\u6a21\u578b OSI\\n\\n* \u57fa\u7840\u5c42\uff1a \u7269\u7406\u5c42\uff08physical\uff09,\u6570\u636e\u94fe\u8def\u5c42(datalink),\u7f51\u7edc\u5c42(network)\\n* \u4f20\u8f93\u5c42(Tramsport) :TCP-UDP \u534f\u8bae\u5c42\uff0cSocket\\n* \u9ad8\u7ea7\u5c42\uff1a \u4f1a\u8bdd\u5c42\uff08session\uff09,\u8868\u793a\u5c42(presentation),\u5e94\u7528\u5c42(Application)\\n  \\n### Socket\u7684\u4f5c\u7528\u4e0e\u7ec4\u6210\\n\\n* \u5728\u7f51\u7edc\u4f20\u8f93\u4e2d\u7528\u4e8e\u552f\u4e00\u6807\u793a\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u94fe\u63a5\\n* \u7aef\u70b9: \u5305\u62ec\uff08ip+port)\\n* 4\u4e2a\u8981\u7d20\\n\\n### \u62a5\u6587\u6bb5\\n\\n* \u62a5\u6587\u6bb5\u662f\u6307TCP/IP \u534f\u8bae\u7f51\u7edc\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u8d77\u5230\u8def\u7531\u5bfc\u822a\u7684\u4f5c\u7528\\n* \u7528\u4ee5\u67e5\u8be2\u5404\u4e2a\u7f51\u7edc\u8def\u7531\u7f51\u6bb5\uff0cIP\u5730\u5740\uff0c\u4ea4\u6362\u534f\u8bae\u7b49IP\u6570\u636e\u5305\\n* \u62a5\u6587\u6bb5\u5145\u5f53\u6574\u4e2aTCP/IP\u534f\u8bae\u6570\u636e\u5305\u7684\u5bfc\u822a\u8def\u7531\u529f\u80fd\\n* \u62a5\u6587\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5730\u5c01\u88c5\u6210\u5206\u7ec4\uff0c\u5305\uff0c\u5e27\u6765\u4f20\u8f93\\n* \u5c01\u88c5\u65b9\u5f0f\u5c31\u662f\u6dfb\u52a0\u4e00\u4e9b\u63a7\u5236\u4fe1\u606f\u7ec4\u6210\u7684\u9996\u90e8\uff0c\u5373\u62a5\u6587\u5934\\n\\n### \u4f20\u8f93\u534f\u8bae\\n\\n### Mac\u5730\u5740\\n\\n* Media Access Control\\n* \u5a92\u4f53\u8bbf\u95ee\u63a7\u5236\uff0c\u6216\u7269\u7406\u5730\u5740 \u786c\u4ef6\u5730\u5740\\n* \u7528\u6765\u5b9a\u4e49\u7f51\u7edc\u8bbe\u5907\u7684\u4f4d\u7f6e\\n\\n### \u7aef\u53e3\\n\\n* \u7aef\u53e3\u76f8\u5f53\u4e8e\u7a97\u53e3 0-1023 \u53f7\u7aef\u53e3  \u4ee5\u53ca1024-49151 \u53f7\u7aef\u53e3\u90fd\u662f\u7279\u6b8a\u7aef\u53e3\\n* 49142-65525\u52a8\u6001\u7aef\u53e3\\n\\n### UDP\\n\\n* User Datagram Protocol\\n* \u7528\u6237\u6570\u636e\u534f\u8bae\uff0c\u53c8\u79f0\u7528\u6237\u6570\u636e\u62a5\u6587\u534f\u8bae\\n* \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9762\u5411\u6570\u636e\u62a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u6b63\u5f0f\u89c4\u8303\u4e3aRFC 768\\n* \u7528\u6237\u6570\u636e\u534f\u8bae\uff0c\u975e\u8fde\u63a5\u534f\u8bae\\n* \u4e00\u65e6\u628a\u5e94\u7528\u7a0b\u5e8f\u53d1\u7ed9\u7f51\u7edc\u5c42\u7684\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u5c31\u4e0d\u4fdd\u7559\u6570\u636e\u5907\u4efd\\n* udp \u5728IP\u6570\u636e\u7684\u62a5\u7684\u5934\u90e8\u4ec5\u4ec5\u52a0\u5165\u4e86\u590d\u7528\u548c\u6570\u636e\u6821\u9a8c\\n* \u53d1\u9001\u7aef\u751f\u4ea7\u6570\u636e\uff0c\u63a5\u6536\u7aef\u4ece\u7f51\u7edc\u4e2d\u6293\u53d6\u6570\u636e\\n* \u7ed3\u6784\u7b80\u5355\uff0c\u65e0\u6821\u9a8c\uff0c\u901f\u5ea6\u5feb\uff0c\u5bb9\u6613\u4e22\u5305\uff0c\u53ef\u5e7f\u64ad\\n* udp \u5305\u6700\u5927\u957f\u5ea6 65535 2^16-1 \u81ea\u8eab\u534f\u8bae\u5360\u7528 32+32 = 64 \u4f4d=8\u5b57\u8282  65535-8=65527\\n\\n### UDP \u6838\u5fc3API"},{"id":"/2022/11/28/index","metadata":{"permalink":"/blog/2022/11/28/index","source":"@site/blog/2022/11/28/index.md","title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","description":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","date":"2023-03-06T13:46:13.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6587\u6863","permalink":"/blog/tags/\u6587\u6863"}],"readingTime":0.275,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","tags":["\u6587\u6863"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","hide_table_of_contents":false,"date":"2023-03-06T13:46:13.000Z"},"unlisted":false,"prevItem":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","permalink":"/blog/2023/03/06/im"},"nextItem":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","permalink":"/blog/2023/03/06/go_chan"}},"content":"\x3c!-- truncate --\x3e\\n> \u53c2\u8003 [\u98de\u4eab-\u5373\u65f6\u804a\u5929\u7cfb\u7edf\u6280\u672f\u6587\u6863](https://juejin.cn/post/6854573217747894279)\\n\\n:::info\\n\\n\u4e09\u90e8\u66f2:\\n\\n1. \u6982\u8ff0\\n2. \u7cfb\u7edf\u67b6\u6784\\n3. \u7cfb\u7edf\u6d41\u7a0b\u56fe\\n4. \u7cfb\u7edf\u5173\u952e\u4ecb\u7ecd(\u767b\u5f55\u8bbe\u8ba1,......)\\n5. \u7cfb\u7edf\u63a5\u53e3\u6587\u6863\\n\\n:::"},{"id":"/2023/03/06/go_chan","metadata":{"permalink":"/blog/2023/03/06/go_chan","source":"@site/blog/2023/03/06/go_chan.md","title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","description":"","date":"2023-03-06T00:00:00.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6e90\u7801","permalink":"/blog/tags/\u6e90\u7801"},{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":1.995,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","tags":["\u6e90\u7801","Go"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2304062"},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","permalink":"/blog/2022/11/28/index"},"nextItem":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","permalink":"/blog/2023/03/06/go_gmp"}},"content":"\x3c!-- truncate --\x3e\\n\\n# hchan\\n\\n```go\\n\\ntype hchan struct {\\n qcount   uint           // \u901a\u9053\u4e2d\u7684\u603b\u6570\u636e total data in the queue\\n dataqsiz uint           // \u5faa\u73af\u961f\u5217\u7684\u5927\u5c0f size of the circular queue\\n buf      unsafe.Pointer // \u6307\u5411dataqsiz\u5143\u7d20\u6570\u7ec4  points to an array of dataqsiz elements\\n elemsize uint16 // \u5927\u5c0f\\n closed   uint32 // \u662f\u5426\u5173\u95ed\\n elemtype *_type // \u8282\u70b9\u7c7b\u578b element type\\n sendx    uint   // \u53d1\u9001\u6570\u636e send index\\n recvx    uint   // \u63a5\u53d7 receive index\\n recvq    waitq  // \u7b49\u5f85\u63a5\u53d7 list of recv waiters\\n sendq    waitq  //  \u7b49\u5f85\u53d1\u9001 list of send waiters\\n\\n // lock protects all fields in hchan, as well as several\\n // fields in sudogs blocked on this channel.\\n //\\n // Do not change another G\'s status while holding this lock\\n // (in particular, do not ready a G), as this can deadlock\\n // with stack shrinking.\\n lock mutex // \u9501\\n}\\n\\n```\\n\\n```go\\ntype waitq struct {\\n first *sudog // \u7b2c\u4e00\u4e2a\\n last  *sudog // \u6700\u540e\u4e00\u4e2a\\n}\\n```\\n\\n```go\\ntype sudog struct {\\n // The following fields are protected by the hchan.lock of the\\n // channel this sudog is blocking on. shrinkstack depends on\\n // this for sudogs involved in channel ops.\\n\\n g *g\\n\\n next *sudog // \u4e0b\u4e00\u4e2a\\n prev *sudog // \u4e0a\u4e00\u4e2a\\n elem unsafe.Pointer // \u6570\u636e\u5143\u7d20(\u53ef\u80fd\u6307\u5411\u5806\u6808)  data element (may point to stack)\\n\\n // The following fields are never accessed concurrently.\\n // For channels, waitlink is only accessed by g.\\n // For semaphores, all fields (including the ones above)\\n // are only accessed when holding a semaRoot lock.\\n\\n acquiretime int64 // \\n releasetime int64 // \\n ticket      uint32 //\\n\\n // isSelect indicates g is participating in a select, so\\n // g.selectDone must be CAS\'d to win the wake-up race.\\n isSelect bool\\n\\n // success indicates whether communication over channel c\\n // succeeded. It is true if the goroutine was awoken because a\\n // value was delivered over channel c, and false if awoken\\n // because c was closed.\\n success bool //\u662f\u5426\u6210\u529f\\n\\n parent   *sudog // semaRoot\u4e8c\u53c9\u6811  semaRoot binary tree\\n waitlink *sudog // g.\u7b49\u5f85\u5217\u8868\u6216semaRoot  g.waiting list or semaRoot\\n waittail *sudog // \u7b49\u5f85 semaRoot\\n c        *hchan // \u901a\u9053 channel\\n}\\n\\n```"},{"id":"/2023/03/06/go_gmp","metadata":{"permalink":"/blog/2023/03/06/go_gmp","source":"@site/blog/2023/03/06/go_gmp.md","title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","description":"path : src/runtime/runtime1.go","date":"2023-03-06T00:00:00.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6e90\u7801","permalink":"/blog/tags/\u6e90\u7801"},{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":14.655,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","tags":["\u6e90\u7801","Go"],"authors":"ahKevinXy","image":"https://www.dmoe.cc/random.php?type=2304063"},"unlisted":false,"prevItem":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","permalink":"/blog/2023/03/06/go_chan"},"nextItem":{"title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","permalink":"/blog/2023/03/05/idempotent"}},"content":"> path : src/runtime/runtime1.go\\n\\n> go  version 1.16.1\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n## G\\n\\n```Go\\ntype g struct {\\n // Stack (\u6808)parameters(\u53c2\u6570).\\n // stack describes the actual stack memory: [stack.lo, stack.hi).\\n // stackguard0 is the stack pointer compared in the Go stack growth prologue.\\n//stackguard0\u662f\u5728Go\u5806\u6808\u589e\u957f\u5e8f\u8a00\u4e2d\u6bd4\u8f83\u7684\u5806\u6808\u6307\u9488\\n // It is stack.lo+StackGuard normally, but can be StackPreempt to trigger a preemption.\\n//lo+StackGuard\u6b63\u5e38\uff0c\u4f46\u53ef\u4ee5\u662fStackPreempt\u89e6\u53d1\u62a2\u5360\\n // stackguard1 is the stack pointer compared in the C stack growth prologue.\\n//stackguard1\u662f\u5728C\u5806\u6808\u589e\u957f\u5e8f\u8a00\u4e2d\u6bd4\u8f83\u7684\u5806\u6808\u6307\u9488\\n\\n // It is stack.lo+StackGuard on g0 and gsignal stacks.\\n // It is ~0 on other goroutine stacks, to trigger a call to morestackc (and crash).\\n stack       stack   // offset known to runtime/cgo \u5df2\u77e5\u7684\u504f\u79fb\u91cf\u4e3aruntime/cgo\\n stackguard0 uintptr // offset known to liblink \u5df2\u77e5liblink\u7684\u504f\u79fb\u91cf\\n stackguard1 uintptr // offset known to liblink\\n\\n _panic       *_panic // innermost panic - offset known to liblink\\n _defer       *_defer // innermost defer\\n m            *m      // current m; offset known to arm liblink\\n sched        gobuf\\n syscallsp    uintptr        // if status==Gsyscall, syscallsp = sched.sp to use during gc\\n syscallpc    uintptr        // if status==Gsyscall, syscallpc = sched.pc to use during gc\\n stktopsp     uintptr        // expected sp at top of stack, to check in traceback\\n param        unsafe.Pointer // passed parameter on wakeup\\n atomicstatus uint32\\n stackLock    uint32 // sigprof/scang lock; TODO: fold in to atomicstatus\\n goid         int64\\n schedlink    guintptr\\n waitsince    int64      // approx time when the g become blocked\\n waitreason   waitReason // if status==Gwaiting\\n\\n preempt       bool // preemption signal, duplicates stackguard0 = stackpreempt\\n preemptStop   bool // transition to _Gpreempted on preemption; otherwise, just deschedule\\n preemptShrink bool // shrink stack at synchronous safe point\\n\\n // asyncSafePoint is set if g is stopped at an asynchronous\\n // safe point. This means there are frames on the stack\\n // without precise pointer information.\\n asyncSafePoint bool\\n\\n paniconfault bool // panic (instead of crash) on unexpected fault address\\n gcscandone   bool // g has scanned stack; protected by _Gscan bit in status\\n throwsplit   bool // must not split stack\\n // activeStackChans indicates that there are unlocked channels\\n // pointing into this goroutine\'s stack. If true, stack\\n // copying needs to acquire channel locks to protect these\\n // areas of the stack.\\n activeStackChans bool\\n // parkingOnChan indicates that the goroutine is about to\\n // park on a chansend or chanrecv. Used to signal an unsafe point\\n // for stack shrinking. It\'s a boolean value, but is updated atomically.\\n parkingOnChan uint8\\n\\n raceignore     int8     // ignore race detection events\\n sysblocktraced bool     // StartTrace has emitted EvGoInSyscall about this goroutine\\n sysexitticks   int64    // cputicks when syscall has returned (for tracing)\\n traceseq       uint64   // trace event sequencer\\n tracelastp     puintptr // last P emitted an event for this goroutine\\n lockedm        muintptr\\n sig            uint32\\n writebuf       []byte\\n sigcode0       uintptr\\n sigcode1       uintptr\\n sigpc          uintptr\\n gopc           uintptr         // pc of go statement that created this goroutine\\n ancestors      *[]ancestorInfo // ancestor information goroutine(s) that created this goroutine (only used if debug.tracebackancestors)\\n startpc        uintptr         // pc of goroutine function\\n racectx        uintptr\\n waiting        *sudog         // sudog structures this g is waiting on (that have a valid elem ptr); in lock order\\n cgoCtxt        []uintptr      // cgo traceback context\\n labels         unsafe.Pointer // profiler labels\\n timer          *timer         // cached timer for time.Sleep\\n selectDone     uint32         // are we participating in a select and did someone win the race?\\n\\n // Per-G GC state\\n\\n // gcAssistBytes is this G\'s GC assist credit in terms of\\n // bytes allocated. If this is positive, then the G has credit\\n // to allocate gcAssistBytes bytes without assisting. If this\\n // is negative, then the G must correct this by performing\\n // scan work. We track this in bytes to make it fast to update\\n // and check for debt in the malloc hot path. The assist ratio\\n // determines how this corresponds to scan work debt.\\n gcAssistBytes int64\\n}\\n```\\n\\n## M\\n\\n```go\\n\\ntype m struct {\\n g0      *g     // goroutine with scheduling stack\\n morebuf gobuf  // gobuf arg to morestack\\n divmod  uint32 // div/mod denominator for arm - known to liblink\\n\\n // Fields not known to debuggers.\\n procid        uint64       // for debuggers, but offset not hard-coded\\n gsignal       *g           // signal-handling g\\n goSigStack    gsignalStack // Go-allocated signal handling stack\\n sigmask       sigset       // storage for saved signal mask\\n tls           [6]uintptr   // thread-local storage (for x86 extern register)\\n mstartfn      func()\\n curg          *g       // current running goroutine\\n caughtsig     guintptr // goroutine running during fatal signal\\n p             puintptr // attached p for executing go code (nil if not executing go code)\\n nextp         puintptr\\n oldp          puintptr // the p that was attached before executing a syscall\\n id            int64\\n mallocing     int32\\n throwing      int32\\n preemptoff    string // if != \\"\\", keep curg running on this m\\n locks         int32\\n dying         int32\\n profilehz     int32\\n spinning      bool // m is out of work and is actively looking for work\\n blocked       bool // m is blocked on a note\\n newSigstack   bool // minit on C thread called sigaltstack\\n printlock     int8\\n incgo         bool   // m is executing a cgo call\\n freeWait      uint32 // if == 0, safe to free g0 and delete m (atomic)\\n fastrand      [2]uint32\\n needextram    bool\\n traceback     uint8\\n ncgocall      uint64      // number of cgo calls in total\\n ncgo          int32       // number of cgo calls currently in progress\\n cgoCallersUse uint32      // if non-zero, cgoCallers in use temporarily\\n cgoCallers    *cgoCallers // cgo traceback if crashing in cgo call\\n doesPark      bool        // non-P running threads: sysmon and newmHandoff never use .park\\n park          note\\n alllink       *m // on allm\\n schedlink     muintptr\\n lockedg       guintptr\\n createstack   [32]uintptr // stack that created this thread.\\n lockedExt     uint32      // tracking for external LockOSThread\\n lockedInt     uint32      // tracking for internal lockOSThread\\n nextwaitm     muintptr    // next m waiting for lock\\n waitunlockf   func(*g, unsafe.Pointer) bool\\n waitlock      unsafe.Pointer\\n waittraceev   byte\\n waittraceskip int\\n startingtrace bool\\n syscalltick   uint32\\n freelink      *m // on sched.freem\\n\\n // mFixup is used to synchronize OS related m state (credentials etc)\\n // use mutex to access.\\n mFixup struct {\\n  lock mutex\\n  fn   func(bool) bool\\n }\\n\\n // these are here because they are too large to be on the stack\\n // of low-level NOSPLIT functions.\\n libcall   libcall\\n libcallpc uintptr // for cpu profiler\\n libcallsp uintptr\\n libcallg  guintptr\\n syscall   libcall // stores syscall parameters on windows\\n\\n vdsoSP uintptr // SP for traceback while in VDSO call (0 if not in call)\\n vdsoPC uintptr // PC for traceback while in VDSO call\\n\\n // preemptGen counts the number of completed preemption\\n // signals. This is used to detect when a preemption is\\n // requested, but fails. Accessed atomically.\\n preemptGen uint32\\n\\n // Whether this is a pending preemption signal on this M.\\n // Accessed atomically.\\n signalPending uint32\\n\\n dlogPerM\\n\\n mOS\\n\\n // Up to 10 locks held by this m, maintained by the lock ranking code.\\n locksHeldLen int\\n locksHeld    [10]heldLockInfo\\n}\\n\\n```\\n\\n## P\\n\\n```go\\n\\ntype p struct {\\n id          int32\\n status      uint32 // one of pidle/prunning/...\\n link        puintptr\\n schedtick   uint32     // incremented on every scheduler call\\n syscalltick uint32     // incremented on every system call\\n sysmontick  sysmontick // last tick observed by sysmon\\n m           muintptr   // back-link to associated m (nil if idle)\\n mcache      *mcache\\n pcache      pageCache\\n raceprocctx uintptr\\n\\n deferpool    [5][]*_defer // pool of available defer structs of different sizes (see panic.go)\\n deferpoolbuf [5][32]*_defer\\n\\n // Cache of goroutine ids, amortizes accesses to runtime\xb7sched.goidgen.\\n goidcache    uint64\\n goidcacheend uint64\\n\\n // Queue of runnable goroutines. Accessed without lock.\\n runqhead uint32\\n runqtail uint32\\n runq     [256]guintptr\\n // runnext, if non-nil, is a runnable G that was ready\'d by\\n // the current G and should be run next instead of what\'s in\\n // runq if there\'s time remaining in the running G\'s time\\n // slice. It will inherit the time left in the current time\\n // slice. If a set of goroutines is locked in a\\n // communicate-and-wait pattern, this schedules that set as a\\n // unit and eliminates the (potentially large) scheduling\\n // latency that otherwise arises from adding the ready\'d\\n // goroutines to the end of the run queue.\\n runnext guintptr\\n\\n // Available G\'s (status == Gdead)\\n gFree struct {\\n  gList\\n  n int32\\n }\\n\\n sudogcache []*sudog\\n sudogbuf   [128]*sudog\\n\\n // Cache of mspan objects from the heap.\\n mspancache struct {\\n  // We need an explicit length here because this field is used\\n  // in allocation codepaths where write barriers are not allowed,\\n  // and eliminating the write barrier/keeping it eliminated from\\n  // slice updates is tricky, moreso than just managing the length\\n  // ourselves.\\n  len int\\n  buf [128]*mspan\\n }\\n\\n tracebuf traceBufPtr\\n\\n // traceSweep indicates the sweep events should be traced.\\n // This is used to defer the sweep start event until a span\\n // has actually been swept.\\n traceSweep bool\\n // traceSwept and traceReclaimed track the number of bytes\\n // swept and reclaimed by sweeping in the current sweep loop.\\n traceSwept, traceReclaimed uintptr\\n\\n palloc persistentAlloc // per-P to avoid mutex\\n\\n _ uint32 // Alignment for atomic fields below\\n\\n // The when field of the first entry on the timer heap.\\n // This is updated using atomic functions.\\n // This is 0 if the timer heap is empty.\\n timer0When uint64\\n\\n // The earliest known nextwhen field of a timer with\\n // timerModifiedEarlier status. Because the timer may have been\\n // modified again, there need not be any timer with this value.\\n // This is updated using atomic functions.\\n // This is 0 if the value is unknown.\\n timerModifiedEarliest uint64\\n\\n // Per-P GC state\\n gcAssistTime         int64 // Nanoseconds in assistAlloc\\n gcFractionalMarkTime int64 // Nanoseconds in fractional mark worker (atomic)\\n\\n // gcMarkWorkerMode is the mode for the next mark worker to run in.\\n // That is, this is used to communicate with the worker goroutine\\n // selected for immediate execution by\\n // gcController.findRunnableGCWorker. When scheduling other goroutines,\\n // this field must be set to gcMarkWorkerNotWorker.\\n gcMarkWorkerMode gcMarkWorkerMode\\n // gcMarkWorkerStartTime is the nanotime() at which the most recent\\n // mark worker started.\\n gcMarkWorkerStartTime int64\\n\\n // gcw is this P\'s GC work buffer cache. The work buffer is\\n // filled by write barriers, drained by mutator assists, and\\n // disposed on certain GC state transitions.\\n gcw gcWork\\n\\n // wbBuf is this P\'s GC write barrier buffer.\\n //\\n // TODO: Consider caching this in the running G.\\n wbBuf wbBuf\\n\\n runSafePointFn uint32 // if 1, run sched.safePointFn at next safe point\\n\\n // statsSeq is a counter indicating whether this P is currently\\n // writing any stats. Its value is even when not, odd when it is.\\n statsSeq uint32\\n\\n // Lock for timers. We normally access the timers while running\\n // on this P, but the scheduler can also do it from a different P.\\n timersLock mutex\\n\\n // Actions to take at some time. This is used to implement the\\n // standard library\'s time package.\\n // Must hold timersLock to access.\\n timers []*timer\\n\\n // Number of timers in P\'s heap.\\n // Modified using atomic instructions.\\n numTimers uint32\\n\\n // Number of timerModifiedEarlier timers on P\'s heap.\\n // This should only be modified while holding timersLock,\\n // or while the timer status is in a transient state\\n // such as timerModifying.\\n adjustTimers uint32\\n\\n // Number of timerDeleted timers in P\'s heap.\\n // Modified using atomic instructions.\\n deletedTimers uint32\\n\\n // Race context used while executing timer functions.\\n timerRaceCtx uintptr\\n\\n // preempt is set to indicate that this P should be enter the\\n // scheduler ASAP (regardless of what G is running on it).\\n preempt bool\\n\\n pad cpu.CacheLinePad\\n}\\n\\n```\\n\\n## Go \u7684\u6a21\u578b\u8c03\u5ea6\\n\\nM(thread) \u5185\u6838\u7ebf\u7a0b   , P(processor) \u8fdb\u7a0b ,G (goroutine) \u534f\u7a0b\\n\\n* G :  Go \u8fd0\u884c\u65f6\u5bf9goroutine\u7684\u63cf\u8ff0,G\u4e2d\u5b58\u653e\u5e76\u53d1\u6267\u884c\u7684 `\u4ee3\u7801\u5165\u53e3\u5730\u5740`,`\u4e0a\u4e0b\u6587`,`\u8fd0\u884c\u73af\u5883` (\u5173\u8054\u7684P\u548cM),\u8fd0\u884c\u6808\u7b49\u6267\u884c\u76f8\u5173\u7684\u4fe1\u606f,G\u7684\u65b0\u5efa,\u4f11\u7720,\u6062\u590d,\u505c\u6b62\u90fd\u53d7\u5230Go\u8fd0\u884c\u65f6\u7684\u7ba1\u7406\\n\\nGO\u8fd0\u884c\u65f6\u7684\u76d1\u63a7\u7ebf\u7a0b\u4f1a\u76d1\u63a7G\u7684\u8c03\u5ea6\uff0cG\u4e0d\u4f1a\u957f\u4e45\u5730\u963b\u585e\u7cfb\u7edf\u7ebf\u7a0b\uff0c\u8fd0\u884c\u65f6\u7684\u8c03\u5ea6\u5668\u4f1a\u81ea\u52a8\u5207\u6362\u5230\u5176\u4ed6G\u4e0a\u8fd0\u884c\u3002G\u65b0\u5efa\u6216\u6062\u590d\u65f6\u4f1a\u6dfb\u52a0\u5230\u8fd0\u884c\u961f\u5217\uff0c\u7b49\u5f85M\u53d6\u51fa\u5e76\u8fd0\u884c\u3002\\n\\n* M : OS\u5185\u6838\u7ebf\u7a0b,\u662f\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u8c03\u5ea6\u548c\u6267\u884c\u7684\u5b9e\u4f53.M\u4ec5\u8d1f\u8d23\u6267\u884c,M\u4e0d\u505c\u7684\u5524\u9192\u6216\u521b\u5efa,\u7136\u540e\u6267\u884c\\n\\n* P : \u4ee3\u8868M\u548cP\u6240\u9700\u8981\u7684\u8d44\u6e90,\u662f\u5bf9\u8d44\u6e90\u7684\u4e00\u79cd\u62bd\u8c61\u7ba1\u7406,P \u4e0d\u662f\u4e00\u6bb5\u4ee3\u7801\u5b9e\u4f53,\u800c\u662f\u4e00\u4e2a\u7ba1\u7406\u7684\u6570\u636e\u7ed3\u6784,P\u4e3b\u8981\u662f\u964d\u4f4e M\u5bf9G\u7684\u590d\u6742\u6027,\u589e\u52a0\u4e00\u4e2a\u95f4\u63a5\u7684\u63a7\u5236\u5c42\u6570\u636e\u7ed3\u6784,`P\u63a7\u5236Go\u7684\u5e76\u884c\u5ea6`,\u5b83\u4e0d\u662f\u5b9e\u4f53\\n\\nP\u6301\u6709G\u7684\u961f\u5217\uff0cP\u53ef\u4ee5\u9694\u79bb\u8c03\u5ea6\uff0c\u89e3\u9664P\u548cM\u7684\u7ed1\u5b9a\u5c31\u89e3\u9664\u4e86M\u5bf9\u4e00\u4e32G\u7684\u8c03\u7528\u3002\\n\\nG\u5e76\u4e0d\u662f\u6267\u884c\u4f53\uff0c\u800c\u662f\u5b58\u653e\u5e76\u53d1\u6267\u884c\u4f53\u7684\u5143\u4fe1\u606f\uff0c\u5305\u62ec\u5e76\u53d1\u6267\u884c\u7684\u5165\u53e3\u51fd\u6570\u3001\u5806\u6808\u3001\u4e0a\u4e0b\u6587\u7b49\u4fe1\u606f\u3002G\u7531\u4e8e\u4fdd\u5b58\u7684\u662f\u5143\u4fe1\u606f\uff0c\u4e3a\u4e86\u51cf\u5c11\u5bf9\u8c61\u7684\u5206\u914d\u548c\u56de\u6536\uff0cG\u5bf9\u8c61\u662f\u53ef\u4ee5\u590d\u7528\uff0c\u53ea\u9700\u8981\u5c06\u76f8\u5173\u5143\u4fe1\u606f\u521d\u59cb\u5316\u4e3a\u65b0\u503c\u5373\u53ef\u3002\\n\\nM\u4ec5\u8d1f\u8d23\u6267\u884c\uff0cM\u542f\u52a8\u65f6\u8fdb\u5165\u8fd0\u884c\u65f6\u7684\u7ba1\u7406\u4ee3\u7801\uff0c\u8fd9\u6bb5\u7ba1\u7406\u4ee3\u7801\u5fc5\u987b\u62ff\u5230P\u540e\uff0c\u624d\u80fd\u6267\u884c\u8c03\u5ea6\u3002\\n\\nP\u7684\u6570\u76ee\u9ed8\u8ba4\u662fCPU\u6838\u5fc3\u7684\u6570\u91cf\u3002M\u548cP\u7684\u6570\u76ee\u5dee\u4e0d\u591a\uff0c\u4f46\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\u52a8\u6001\u5730\u521b\u5efaM\uff0cM\u6709\u4e00\u4e2a\u6700\u5927\u503c\u4e0a\u9650\uff1a10000\uff1bG\u4e0eP\u662fM:N\u7684\u5173\u7cfb\uff0cM\u53ef\u4ee5\u6210\u5343\u4e0a\u4e07\uff0c\u8fdc\u8fdc\u5927\u4e8eN.\\n\\n## Work Stealing\u7b97\u6cd5\u7684\u57fa\u672c\u539f\u7406\\n\\n    M\u548cP\u6784\u6210\u4e00\u4e2a\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u6bcf\u4e2aP\u6709\u4e00\u4e2a\u672c\u5730\u7684\u53ef\u8c03\u5ea6\u7684G\u961f\u5217\uff0c\u961f\u5217\u91cc\u9762\u7684G\u4f1a\u88abM\u4f9d\u6b21\u8c03\u5ea6\u6267\u884c\uff0c\u5982\u679c\u672c\u5730\u961f\u5217\u7a7a\u4e86\uff0c\u5219\u53bb\u5168\u5c40\u961f\u5217\u5077\u53d6\u4e00\u90e8\u5206G\uff0c\u5982\u679c\u5168\u5c40\u961f\u5217\u4e5f\u662f\u7a7a\u7684\uff0c\u5219\u53bb\u5176\u4ed6\u7684P\u4e2d\u5077\u53d6\u4e00\u90e8\u5206G\u3002\\n\\n## \u4ec0\u4e48\u65f6\u5019\u521b\u5efaM\u3001P\u3001G\\n\\n\u5728\u7a0b\u5e8f\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u521d\u59cb\u5316\u7a7a\u95f2P\u5217\u8868\uff0cP\u662f\u8fd9\u4e2a\u65f6\u5019\u521b\u5efa\u7684\uff0c\u540c\u65f6\u7b2c\u4e00\u4e2aG\u4e5f\u662f\u5728\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u88ab\u521b\u5efa\u7684\u3002\\n\\n\u6bcf\u4e2a\u5e76\u53d1\u8c03\u7528\u90fd\u4f1a\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684G\u4efb\u52a1\uff0c\u5982\u4f55\u5524\u9192M\u6267\u884c\u4efb\u52a1\u3002\u8fd9\u4e2a\u5524\u9192\u4e0d\u662f\u7279\u5b9a\u5524\u9192\u67d0\u4e2a\u7ebf\u7a0b\u53bb\u5de5\u4f5c\uff0c\u800c\u662f\u5148\u5c1d\u8bd5\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0bM\uff0c\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u4ece\u5168\u5c40\u8c03\u5ea6\u7684\u7a7a\u95f2M\u5217\u8868\u4e2d\u83b7\u53d6\u53ef\u7528\u7684M\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684M\uff0c\u5219\u65b0\u5efaM\uff0c\u7136\u540e\u7ed1\u5b9aP\u548cGY\u8fd0\u884c\u3002M\u548cP\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u800c\u662f\u6309\u9700\u5206\u914d\u7684\\n\\nM\u7ebf\u7a0b\u6709\u7ba1\u7406\u8c03\u5ea6\u548c\u5207\u6362\u5806\u6808\u7684\u903b\u8f91\uff0c\u4f46\u662fM\u5fc5\u987b\u62ff\u5230P\u540e\u624d\u80fd\u8fd0\u884c\uff0c\u53ef\u7528\u770b\u5230M\u662f\u81ea\u9a71\u52a8\u7684\uff0c\u5355\u9700\u8981P\u7684\u914d\u5408\u3002\\n\\n\\n## goroutine\u7ecf\u5386\u7684\u8fc7\u7a0b\\n\\n1. \u901a\u8fc7go func()\u6765\u521b\u5efa\u4e00\u4e2a goroutine\\n2. \u6709\u4e24\u4e2a\u5b58\u50a8\u7684G\u961f\u5217,\u4e00\u4e2a\u662f\u5c40\u90e8\u8c03\u5ea6\u5668P\u7684\u672c\u5730\u961f\u5217,\u4e00\u4e2a\u662f\u5168\u5c40G\u961f\u5217,\u65b0\u521b\u5efa\u7684G\u4f1a\u5148\u4fdd\u5b58\u5728P\u7684\u672c\u5730\u961f\u5217\u4e2d,\u5982\u679cP\u7684\u672c\u5730\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u5c31\u4f1a\u4fdd\u5b58\u5728\u5168\u5c40\u961f\u5217\u4e2d\\n3. G\u53ea\u80fd\u8fd0\u884c\u5728M\u4e2d,\u4e00\u4e2aM\u5fc5\u987b\u6709\u4e00\u4e2aP,M\u4e0eP\u662f1:1\u7684\u5173\u7cfb. M\u4f1a\u5bf9P\u7684\u672c\u5730\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u72b6\u6001\u7684G\u6765\u6267\u884c,\u5982\u679cP\u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a,\u5c31\u4f1a\u5411\u5176\u5b83\u7684MP\u7ec4\u5408\u53d6\u4e00\u4e2a\u53ef\u6267\u884c\u7684G\u6765\u6267\u884c\\n4. \u4e00\u4e2aM \u8c03\u5ea6\u6267\u884c\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5faa\u73af\u673a\u5236\\n5. \u5f53 M\u6267\u884c\u67d0\u4e00\u4e2aG \u65f6\u5019 \u5982\u679c\u53d1\u751f\u4e86 syscall\u6216\u5176\u4f59\u963b\u585e\u64cd\u4f5c,M\u4f1a\u963b\u585e,\u5982\u679c"},{"id":"/2023/03/05/idempotent","metadata":{"permalink":"/blog/2023/03/05/idempotent","source":"@site/blog/2023/03/05/idempotent.md","title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","description":"\u9ad8\u5e76\u53d1\u5e42\u7b49\u89e3\u51b3\u65b9\u6848","date":"2023-03-05T00:00:00.000Z","formattedDate":"2023\u5e743\u67085\u65e5","tags":[{"label":"\u9ad8\u5e76\u53d1","permalink":"/blog/tags/\u9ad8\u5e76\u53d1"},{"label":"\u5e42\u7b49","permalink":"/blog/tags/\u5e42\u7b49"},{"label":"\u89e3\u51b3\u65b9\u6848","permalink":"/blog/tags/\u89e3\u51b3\u65b9\u6848"}],"readingTime":14.81,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"tags":["\u9ad8\u5e76\u53d1","\u5e42\u7b49","\u89e3\u51b3\u65b9\u6848"],"authors":"ahKevinXy","description":"\u9ad8\u5e76\u53d1\u5e42\u7b49\u89e3\u51b3\u65b9\u6848","hide_table_of_contents":false,"image":"https://www.dmoe.cc/random.php?type=2304052"},"unlisted":false,"prevItem":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","permalink":"/blog/2023/03/06/go_gmp"},"nextItem":{"title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","permalink":"/blog/2023/03/05/index"}},"content":"[from](https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&mid=2247490307&idx=1&sn=b9eeb427c33cb171da6c3f11243a88f4&chksm=c0ebc3ebf79c4afd0d5a1851a975534b672d86c531d28c5933013140173e794f5f53e78a6765&token=751314179&lang=zh_CN&scene=21#wechat_redirect)\\n\\n`\u63a5\u53e3\u5e42\u7b49\u6027`\u95ee\u9898\uff0c\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u662f\u4e00\u4e2a\u8ddf\u8bed\u8a00\u65e0\u5173\u7684\u516c\u5171\u95ee\u9898\u3002\u672c\u6587\u5206\u4eab\u4e86\u4e00\u4e9b\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u975e\u5e38\u5b9e\u7528\u7684\u529e\u6cd5\uff0c\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u6211\u5728\u9879\u76ee\u4e2d\u5b9e\u8df5\u8fc7\u7684\uff0c\u7ed9\u6709\u9700\u8981\u7684\u5c0f\u4f19\u4f34\u4e00\u4e2a\u53c2\u8003\\n\\n\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\u573a\u666f\\n\\n1. \u6709\u65f6\u6211\u4eec\u5728\u586b\u5199\u67d0\u4e9bform\u8868\u5355\u65f6\uff0c\u4fdd\u5b58\u6309\u94ae\u4e0d\u5c0f\u5fc3\u5feb\u901f\u70b9\u4e86\u4e24\u6b21\uff0c\u8868\u4e2d\u7adf\u7136\u4ea7\u751f\u4e86\u4e24\u6761\u91cd\u590d\u7684\u6570\u636e\uff0c\u53ea\u662fid\u4e0d\u4e00\u6837\\n2. \u6211\u4eec\u5728\u9879\u76ee\u4e2d\u4e3a\u4e86\u89e3\u51b3`\u63a5\u53e3\u8d85\u65f6`\u95ee\u9898\uff0c\u901a\u5e38\u4f1a\u5f15\u5165\u4e86\u91cd\u8bd5\u673a\u5236\u3002\u7b2c\u4e00\u6b21\u8bf7\u6c42`\u63a5\u53e3\u8d85\u65f6`\u4e86\uff0c\u8bf7\u6c42\u65b9\u6ca1\u80fd\u53ca\u65f6\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\uff08\u6b64\u65f6\u6709\u53ef\u80fd\u5df2\u7ecf\u6210\u529f\u4e86\uff09\uff0c\u4e3a\u4e86\u907f\u514d\u8fd4\u56de\u9519\u8bef\u7684\u7ed3\u679c\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u76f4\u63a5\u8fd4\u56de\u5931\u8d25\u5427\uff1f\uff09\uff0c\u4e8e\u662f\u4f1a\u5bf9\u8be5\u8bf7\u6c42\u91cd\u8bd5\u51e0\u6b21\uff0c\u8fd9\u6837\u4e5f\u4f1a\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\u3002\\n3. `mq`\u6d88\u8d39\u8005\u5728\u8bfb\u53d6\u6d88\u606f\u65f6\uff0c\u6709\u65f6\u5019\u4f1a\u8bfb\u53d6\u5230\u91cd\u590d\u6d88\u606f\uff0c\u5982\u679c\u5904\u7406\u4e0d\u597d\uff0c\u4e5f\u4f1a\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\u3002\\n\\n`\u63a5\u53e3\u5e42\u7b49\u6027`\u662f\u6307\u7528\u6237\u5bf9\u4e8e\u540c\u4e00\u64cd\u4f5c\u53d1\u8d77\u7684\u4e00\u6b21\u8bf7\u6c42\u6216\u8005\u591a\u6b21\u8bf7\u6c42\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u591a\u6b21\u70b9\u51fb\u800c\u4ea7\u751f\u4e86\u526f\u4f5c\u7528\u3002\\n\\n* insert\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u591a\u6b21\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u91cd\u590d\u6570\u636e\\n* update\u64cd\u4f5c\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u66f4\u65b0\u6570\u636e\uff0c\u6bd4\u5982\uff1aupdate user set status=1 where id=1\uff0c\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u5982\u679c\u8fd8\u6709\u8ba1\u7b97\uff0c\u6bd4\u5982\uff1aupdate user set status=status+1 where id=1\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u591a\u6b21\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u9519\u8bef\\n\\n## insert\u524d\u5148select\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728\u4fdd\u5b58\u6570\u636e\u7684\u63a5\u53e3\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u9632\u6b62\u4ea7\u751f\u91cd\u590d\u6570\u636e\uff0c\u4e00\u822c\u4f1a\u5728insert\u524d\uff0c\u5148\u6839\u636ename\u6216code\u5b57\u6bb5select\u4e00\u4e0b\u6570\u636e\u3002\u5982\u679c\u8be5\u6570\u636e\u5df2\u5b58\u5728\uff0c\u5219\u6267\u884cupdate\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u624d\u6267\u884c  insert\u64cd\u4f5c\u3002\\n\\n## \u52a0\u60b2\u89c2\u9501\\n\\n\u5728\u652f\u4ed8\u573a\u666f\u4e2d\uff0c\u7528\u6237A\u7684\u8d26\u53f7\u4f59\u989d\u6709150\u5143\uff0c\u60f3\u8f6c\u51fa100\u5143\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u7528\u6237A\u7684\u4f59\u989d\u53ea\u526950\u5143\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0csql\u662f\u8fd9\u6837\u7684\uff1a\\n\\n```sql\\nupdate user amount = amount-100 where id=123;\\n\\n```\\n\\n\u5982\u679c\u51fa\u73b0\u591a\u6b21\u76f8\u540c\u7684\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237A\u7684\u4f59\u989d\u53d8\u6210\u8d1f\u6570\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u7528\u6237A\u6765\u53ef\u80fd\u8981\u54ed\u4e86\u3002\u4e8e\u6b64\u540c\u65f6\uff0c\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4e5f\u8981\u54ed\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u5f88\u4e25\u91cd\u7684\u7cfb\u7edfbug\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u52a0\u60b2\u89c2\u9501\uff0c\u5c06\u7528\u6237A\u7684\u90a3\u884c\u6570\u636e\u9501\u4f4f\uff0c\u5728\u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a\u8bf7\u6c42\u83b7\u5f97\u9501\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u5176\u4ed6\u7684\u8bf7\u6c42\u5219\u7b49\u5f85\u3002\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\u901a\u8fc7\u5982\u4e0bsql\u9501\u4f4f\u5355\u884c\u6570\u636e\uff1a\\n\\n```sql\\nselect * from user id=123 for update;\\n\\n```\\n\\n1. \u591a\u4e2a\u8bf7\u6c42\u540c\u65f6\u6839\u636eid\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\n2. \u5224\u65ad\u4f59\u989d\u662f\u5426\u4e0d\u8db3100\uff0c\u5982\u679c\u4f59\u989d\u4e0d\u8db3\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u4f59\u989d\u4e0d\u8db3\u3002\\n3. \u5982\u679c\u4f59\u989d\u5145\u8db3\uff0c\u5219\u901a\u8fc7for update\u518d\u6b21\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u5e76\u4e14\u5c1d\u8bd5\u83b7\u53d6\u9501\\n4. \u53ea\u6709\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u80fd\u83b7\u53d6\u5230\u884c\u9501\uff0c\u5176\u4f59\u6ca1\u6709\u83b7\u53d6\u9501\u7684\u8bf7\u6c42\uff0c\u5219\u7b49\u5f85\u4e0b\u4e00\u6b21\u83b7\u53d6\u9501\u7684\u673a\u4f1a\\n5. \u7b2c\u4e00\u4e2a\u8bf7\u6c42\u83b7\u53d6\u5230\u9501\u4e4b\u540e\uff0c\u5224\u65ad\u4f59\u989d\u662f\u5426\u4e0d\u8db3100\uff0c\u5982\u679c\u4f59\u989d\u8db3\u591f\uff0c\u5219\u8fdb\u884cupdate\u64cd\u4f5c\u3002\\n6. \u5982\u679c\u4f59\u989d\u4e0d\u8db3\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u4f7f\u7528\u7684\u662fmysql\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u5f15\u64ce\u5fc5\u987b\u7528innodb\uff0c\u56e0\u4e3a\u5b83\u624d\u652f\u6301\u4e8b\u52a1\u3002\u6b64\u5916\uff0c\u8fd9\u91ccid\u5b57\u6bb5\u4e00\u5b9a\u8981\u662f\u4e3b\u952e\u6216\u8005\u552f\u4e00\u7d22\u5f15\uff0c\u4e0d\u7136\u4f1a\u9501\u4f4f\u6574\u5f20\u8868\u3002\\n\\n\u60b2\u89c2\u9501\u9700\u8981\u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u9501\u4f4f\u4e00\u884c\u6570\u636e\uff0c\u5982\u679c\u4e8b\u52a1\u8017\u65f6\u6bd4\u8f83\u957f\uff0c\u4f1a\u9020\u6210\u5927\u91cf\u7684\u8bf7\u6c42\u7b49\u5f85\uff0c\u5f71\u54cd\u63a5\u53e3\u6027\u80fd\u3002\\n\\n\u6bcf\u6b21\u8bf7\u6c42\u63a5\u53e3\u5f88\u96be\u4fdd\u8bc1\u90fd\u6709\u76f8\u540c\u7684\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u4e0d\u9002\u5408\u5e42\u7b49\u6027\u8bbe\u8ba1\u573a\u666f\uff0c\u4f46\u662f\u5728\u9632\u91cd\u573a\u666f\u4e2d\u662f\u53ef\u4ee5\u7684\u4f7f\u7528\u7684\u3002\\n\\n\u5728\u8fd9\u91cc\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c`\u9632\u91cd\u8bbe\u8ba1` \u548c `\u5e42\u7b49\u8bbe\u8ba1`\uff0c\u5176\u5b9e\u662f\u6709\u533a\u522b\u7684\u3002\u9632\u91cd\u8bbe\u8ba1\u4e3b\u8981\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u91cd\u590d\u6570\u636e\uff0c\u5bf9\u63a5\u53e3\u8fd4\u56de\u6ca1\u6709\u592a\u591a\u8981\u6c42\u3002\u800c\u5e42\u7b49\u8bbe\u8ba1\u9664\u4e86\u907f\u514d\u4ea7\u751f\u91cd\u590d\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u8981\u6c42\u6bcf\u6b21\u8bf7\u6c42\u90fd\u8fd4\u56de\u4e00\u6837\u7684\u7ed3\u679c\u3002\\n\\n## \u52a0\u4e50\u89c2\u9501\\n\\n\u65e2\u7136\u60b2\u89c2\u9501\u6709\u6027\u80fd\u95ee\u9898\uff0c\u4e3a\u4e86\u63d0\u5347\u63a5\u53e3\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e50\u89c2\u9501\u3002\u9700\u8981\u5728\u8868\u4e2d\u589e\u52a0\u4e00\u4e2atimestamp\u6216\u8005version\u5b57\u6bb5\uff0c\u8fd9\u91cc\u4ee5version\u5b57\u6bb5\u4e3a\u4f8b\u3002\\n\\n\u5728\u66f4\u65b0\u6570\u636e\u4e4b\u524d\u5148\u67e5\u8be2\u4e00\u4e0b\u6570\u636e\uff1a\\n\\n```sql\\nselect id,amount,version from user id=123;\\n\\n```\\n\\n\u5982\u679c\u6570\u636e\u5b58\u5728\uff0c\u5047\u8bbe\u67e5\u5230\u7684version\u7b49\u4e8e1\uff0c\u518d\u4f7f\u7528id\u548cversion\u5b57\u6bb5\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\u66f4\u65b0\u6570\u636e\uff1a\\n\\n```sql\\nupdate user set amount=amount+100,version=version+1\\nwhere id=123 and version=1;\\n\\n```\\n\\n\u66f4\u65b0\u6570\u636e\u7684\u540c\u65f6version+1\uff0c\u7136\u540e\u5224\u65ad\u672c\u6b21update\u64cd\u4f5c\u7684\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5927\u4e8e0\uff0c\u5219\u8bf4\u660e\u672c\u6b21\u66f4\u65b0\u6210\u529f\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5219\u8bf4\u660e\u672c\u6b21\u66f4\u65b0\u6ca1\u6709\u8ba9\u6570\u636e\u53d8\u66f4\u3002\\n\\n\u7531\u4e8e\u7b2c\u4e00\u6b21\u8bf7\u6c42version\u7b49\u4e8e1\u662f\u53ef\u4ee5\u6210\u529f\u7684\uff0c\u64cd\u4f5c\u6210\u529f\u540eversion\u53d8\u62102\u4e86\u3002\u8fd9\u65f6\u5982\u679c\u5e76\u53d1\u7684\u8bf7\u6c42\u8fc7\u6765\uff0c\u518d\u6267\u884c\u76f8\u540c\u7684sql\uff1a\\n\\n```sql\\nupdate user set amount=amount+100,version=version+1\\nwhere id=123 and version=1;\\n```\\n\\n\u8be5update\u64cd\u4f5c\u4e0d\u4f1a\u771f\u6b63\u66f4\u65b0\u6570\u636e\uff0c\u6700\u7ec8sql\u7684\u6267\u884c\u7ed3\u679c\u5f71\u54cd\u884c\u6570\u662f0\uff0c\u56e0\u4e3aversion\u5df2\u7ecf\u53d8\u62102\u4e86\uff0cwhere\u4e2d\u7684version=1\u80af\u5b9a\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u63a5\u53e3\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6210\u529f\uff0c\u56e0\u4e3aversion\u503c\u5df2\u7ecf\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u524d\u9762\u5fc5\u5b9a\u5df2\u7ecf\u6210\u529f\u8fc7\u4e00\u6b21\uff0c\u540e\u9762\u90fd\u662f\u91cd\u590d\u7684\u8bf7\u6c42\u3002\\n\\n1. \u5148\u6839\u636eid\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u5305\u542bversion\u5b57\u6bb5\\n2. \u6839\u636eid\u548cversion\u5b57\u6bb5\u503c\u4f5c\u4e3awhere\u6761\u4ef6\u7684\u53c2\u6570\uff0c\u66f4\u65b0\u7528\u6237\u4fe1\u606f\uff0c\u540c\u65f6version+1\\n3. \u5224\u65ad\u64cd\u4f5c\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5f71\u54cd1\u884c\uff0c\u5219\u8bf4\u660e\u662f\u4e00\u6b21\u8bf7\u6c42\uff0c\u53ef\u4ee5\u505a\u5176\u4ed6\u6570\u636e\u64cd\u4f5c\\n4. \u5982\u679c\u5f71\u54cd0\u884c\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\\n\\n## \u52a0\u552f\u4e00\u7d22\u5f15\\n\\n\u7edd\u5927\u6570\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u6570\u636e\u7684\u4ea7\u751f\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u8868\u4e2d\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u4e14\u6709\u6548\u7684\u65b9\u6848\u3002\\n\\n```sql\\nalter table `order` add UNIQUE KEY `un_code` (`code`);\\n```\\n\\n\u52a0\u4e86\u552f\u4e00\u7d22\u5f15\u4e4b\u540e\uff0c\u7b2c\u4e00\u6b21\u8bf7\u6c42\u6570\u636e\u53ef\u4ee5\u63d2\u5165\u6210\u529f\u3002\u4f46\u540e\u9762\u7684\u76f8\u540c\u8bf7\u6c42\uff0c\u63d2\u5165\u6570\u636e\u65f6\u4f1a\u62a5`Duplicate entry \'002\' for key \'order.un_code`\u5f02\u5e38\uff0c\u8868\u793a\u552f\u4e00\u7d22\u5f15\u6709\u51b2\u7a81\u3002\\n\\n\u867d\u8bf4\u629b\u5f02\u5e38\u5bf9\u6570\u636e\u6765\u8bf4\u6ca1\u6709\u5f71\u54cd\uff0c\u4e0d\u4f1a\u9020\u6210\u9519\u8bef\u6570\u636e\u3002\u4f46\u662f\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8be5\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u7136\u540e\u8fd4\u56de\u6210\u529f\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u5c06\u8be5\u6570\u636e\u63d2\u5165mysql\\n3. \u5224\u65ad\u662f\u5426\u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u64cd\u4f5c\u5176\u4ed6\u6570\u636e\uff08\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u4e1a\u52a1\u903b\u8f91\uff09\u3002\\n4. \u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u6355\u83b7\u552f\u4e00\u7d22\u5f15\u51b2\u7a81\u5f02\u5e38\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n## \u5efa\u9632\u91cd\u8868\\n\\n\u6709\u65f6\u5019\u8868\u4e2d\u5e76\u975e\u6240\u6709\u7684\u573a\u666f\u90fd\u4e0d\u5141\u8bb8\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\uff0c\u53ea\u6709\u67d0\u4e9b\u7279\u5b9a\u573a\u666f\u624d\u4e0d\u5141\u8bb8\u3002\u8fd9\u65f6\u5019\uff0c\u76f4\u63a5\u5728\u8868\u4e2d\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u663e\u7136\u662f\u4e0d\u592a\u5408\u9002\u7684\u3002\\n\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`\u5efa\u9632\u91cd\u8868`\u6765\u89e3\u51b3\u95ee\u9898\u3002\\n\\n\u8be5\u8868\u53ef\u4ee5\u53ea\u5305\u542b\u4e24\u4e2a\u5b57\u6bb5\uff1a`id` \u548c `\u552f\u4e00\u7d22\u5f15`\uff0c\u552f\u4e00\u7d22\u5f15\u53ef\u4ee5\u662f\u591a\u4e2a\u5b57\u6bb5\u6bd4\u5982\uff1aname\u3001code\u7b49\u7ec4\u5408\u8d77\u6765\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4f8b\u5982\uff1asusan_0001\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u5c06\u8be5\u6570\u636e\u63d2\u5165mysql\u9632\u91cd\u8868\\n3. \u5224\u65ad\u662f\u5426\u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u505amysql\u5176\u4ed6\u7684\u6570\u636e\u64cd\u4f5c\uff08\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u4e1a\u52a1\u903b\u8f91\uff09\u3002\\n4. \u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u6355\u83b7\u552f\u4e00\u7d22\u5f15\u51b2\u7a81\u5f02\u5e38\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u9632\u91cd\u8868\u548c\u4e1a\u52a1\u8868\u5fc5\u987b\u5728\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u64cd\u4f5c\u8981\u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u3002\\n\\n## \u6839\u636e\u72b6\u6001\u673a\\n\\n\u5f88\u591a\u65f6\u5019\u4e1a\u52a1\u8868\u662f\u6709\u72b6\u6001\u7684\uff0c\u6bd4\u5982\u8ba2\u5355\u8868\u4e2d\u6709\uff1a1-\u4e0b\u5355\u30012-\u5df2\u652f\u4ed8\u30013-\u5b8c\u6210\u30014-\u64a4\u9500\u7b49\u72b6\u6001\u3002\u5982\u679c\u8fd9\u4e9b\u72b6\u6001\u7684\u503c\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u6309\u7167\u4e1a\u52a1\u8282\u70b9\u6b63\u597d\u662f\u4ece\u5c0f\u5230\u5927\uff0c\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u5b83\u6765\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027\u3002\\n\\n\u5047\u5982`id=123`\u7684\u8ba2\u5355\u72b6\u6001\u662f\u5df2\u652f\u4ed8\uff0c\u73b0\u5728\u8981\u53d8\u6210\u5b8c\u6210\u72b6\u6001\u3002\\n\\n```sql\\nupdate `order` set status=3 where id=123 and status=2;\\n```\\n\\n\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\uff0c\u8be5\u8ba2\u5355\u7684\u72b6\u6001\u662f`\u5df2\u652f\u4ed8`\uff0c\u503c\u662f`2`\uff0c\u6240\u4ee5\u8be5`update`\u8bed\u53e5\u53ef\u4ee5\u6b63\u5e38\u66f4\u65b0\u6570\u636e\uff0c`sql`\u6267\u884c\u7ed3\u679c\u7684\u5f71\u54cd\u884c\u6570\u662f`1`\uff0c\u8ba2\u5355\u72b6\u6001\u53d8\u6210\u4e86`3`\u3002\\n\\n\u540e\u9762\u6709\u76f8\u540c\u7684\u8bf7\u6c42\u8fc7\u6765\uff0c\u518d\u6267\u884c\u76f8\u540c\u7684sql\u65f6\uff0c\u7531\u4e8e\u8ba2\u5355\u72b6\u6001\u53d8\u6210\u4e863\uff0c\u518d\u7528status=2\u4f5c\u4e3a\u6761\u4ef6\uff0c\u65e0\u6cd5\u67e5\u8be2\u51fa\u9700\u8981\u66f4\u65b0\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6700\u7ec8sql\u6267\u884c\u7ed3\u679c\u7684\u5f71\u54cd\u884c\u6570\u662f0\uff0c\u5373\u4e0d\u4f1a\u771f\u6b63\u7684\u66f4\u65b0\u6570\u636e\u3002\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u5f71\u54cd\u884c\u6570\u662f0\u65f6\uff0c\u63a5\u53e3\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u6839\u636eid\u548c\u5f53\u524d\u72b6\u6001\u4f5c\u4e3a\u6761\u4ef6\uff0c\u66f4\u65b0\u6210\u4e0b\u4e00\u4e2a\u72b6\u6001\\n3. \u5224\u65ad\u64cd\u4f5c\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5f71\u54cd\u4e861\u884c\uff0c\u8bf4\u660e\u5f53\u524d\u64cd\u4f5c\u6210\u529f\uff0c\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u6570\u636e\u64cd\u4f5c\u3002\\n4. \u5982\u679c\u5f71\u54cd\u4e860\u884c\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u4e3b\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u65b9\u6848\u4ec5\u9650\u4e8e\u8981\u66f4\u65b0\u7684`\u8868\u6709\u72b6\u6001\u5b57\u6bb5`\uff0c\u5e76\u4e14\u521a\u597d\u8981\u66f4\u65b0`\u72b6\u6001\u5b57\u6bb5`\u7684\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5e76\u975e\u6240\u6709\u573a\u666f\u90fd\u9002\u7528\u3002\\n\\n## \u52a0\u5206\u5e03\u5f0f\u9501\\n\\n\u5176\u5b9e\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684`\u52a0\u552f\u4e00\u7d22\u5f15`\u6216\u8005`\u52a0\u9632\u91cd\u8868`\uff0c\u672c\u8d28\u662f\u4f7f\u7528\u4e86`\u6570\u636e\u5e93`\u7684`\u5206\u5e03\u5f0f\u9501`\uff0c\u4e5f\u5c5e\u4e8e`\u5206\u5e03\u5f0f\u9501`\u7684\u4e00\u79cd\u3002\u4f46\u7531\u4e8e`\u6570\u636e\u5e93\u5206\u5e03\u5f0f\u9501`\u7684\u6027\u80fd\u4e0d\u592a\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u7528\uff1a`redis`\u6216`zookeeper`\u3002\\n\\n\u9274\u4e8e\u73b0\u5728\u5f88\u591a\u516c\u53f8\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u6539\u7528`apollo`\u6216`nacos`\uff0c\u5df2\u7ecf\u5f88\u5c11\u7528`zookeeper`\u4e86\uff0c\u6211\u4eec\u4ee5`redis`\u4e3a\u4f8b\u4ecb\u7ecd\u5206\u5e03\u5f0f\u9501\u3002\\n\\n\u76ee\u524d\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\u5b9e\u73b0redis\u7684\u5206\u5e03\u5f0f\u9501\uff1a\\n\\n1. setNx\u547d\u4ee4\\n2. set\u547d\u4ee4\\n3. Redission\u6846\u67b6\\n\\n\u5177\u4f53\u6b65\u9aa4\uff1a\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u4f1a\u6536\u96c6\u6570\u636e\uff0c\u5e76\u4e14\u751f\u6210\u8ba2\u5355\u53f7code\u4f5c\u4e3a\u552f\u4e00\u4e1a\u52a1\u5b57\u6bb5\u3002\\n2. \u4f7f\u7528redis\u7684set\u547d\u4ee4\uff0c\u5c06\u8be5\u8ba2\u5355code\u8bbe\u7f6e\u5230redis\u4e2d\uff0c\u540c\u65f6\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u3002\\n3. \u5224\u65ad\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u5982\u679c\u8bbe\u7f6e\u6210\u529f\uff0c\u8bf4\u660e\u662f\u7b2c\u4e00\u6b21\u8bf7\u6c42\uff0c\u5219\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u3002\\n4. \u5982\u679c\u8bbe\u7f6e\u5931\u8d25\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u5206\u5e03\u5f0f\u9501\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5408\u7406\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u8fc7\u77ed\uff0c\u65e0\u6cd5\u6709\u6548\u7684\u9632\u6b62\u91cd\u590d\u8bf7\u6c42\u3002\u5982\u679c\u8bbe\u7f6e\u8fc7\u957f\uff0c\u53ef\u80fd\u4f1a\u6d6a\u8d39redis\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\u800c\u5b9a\u3002\\n\\n## \u83b7\u53d6token\\n\\n\u9664\u4e86\u4e0a\u8ff0\u65b9\u6848\u4e4b\u5916\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u79cd\u4f7f\u7528token\u7684\u65b9\u6848\u3002\u8be5\u65b9\u6848\u8ddf\u4e4b\u524d\u7684\u6240\u6709\u65b9\u6848\u90fd\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u9700\u8981\u4e24\u6b21\u8bf7\u6c42\u624d\u80fd\u5b8c\u6210\u4e00\u6b21\u4e1a\u52a1\u64cd\u4f5c\u3002\\n\\n1. \u7b2c\u4e00\u6b21\u8bf7\u6c42\u83b7\u53d6token\\n2. \u7b2c\u4e8c\u6b21\u8bf7\u6c42\u5e26\u7740\u8fd9\u4e2atoken\uff0c\u5b8c\u6210\u4e1a\u52a1\u64cd\u4f5c\u3002\\n\\n\u5177\u4f53\u6b65\u9aa4\uff1a\\n\\n1. \u7528\u6237\u8bbf\u95ee\u9875\u9762\u65f6\uff0c\u6d4f\u89c8\u5668\u81ea\u52a8\u53d1\u8d77\u83b7\u53d6token\u8bf7\u6c42\u3002\\n2. \u670d\u52a1\u7aef\u751f\u6210token\uff0c\u4fdd\u5b58\u5230redis\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002\\n3. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u643a\u5e26\u8be5token\u3002\\n4. \u5728redis\u4e2d\u67e5\u8be2\u8be5token\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u662f\u7b2c\u4e00\u6b21\u8bf7\u6c42\uff0c\u505a\u5219\u540e\u7eed\u7684\u6570\u636e\u64cd\u4f5c\u3002\\n5. \u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n6. \u5728redis\u4e2dtoken\u4f1a\u5728\u8fc7\u671f\u65f6\u95f4\u4e4b\u540e\uff0c\u88ab\u81ea\u52a8\u5220\u9664\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1atoken\u5fc5\u987b\u662f\u5168\u5c40\u552f\u4e00\u7684\u3002"},{"id":"/2023/03/05/index","metadata":{"permalink":"/blog/2023/03/05/index","source":"@site/blog/2023/03/05/index.md","title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","description":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3,\u63a5\u53e3\u8bbe\u8ba1,\u9875\u9762\u4f18\u5316,\u4ee3\u7801\u89c4\u8303","date":"2023-03-05T00:00:00.000Z","formattedDate":"2023\u5e743\u67085\u65e5","tags":[{"label":"\u63a5\u53e3","permalink":"/blog/tags/\u63a5\u53e3"},{"label":"\u52a0\u5bc6","permalink":"/blog/tags/\u52a0\u5bc6"},{"label":"\u89c4\u8303","permalink":"/blog/tags/\u89c4\u8303"}],"readingTime":8.335,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"description":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3,\u63a5\u53e3\u8bbe\u8ba1,\u9875\u9762\u4f18\u5316,\u4ee3\u7801\u89c4\u8303","tags":["\u63a5\u53e3","\u52a0\u5bc6","\u89c4\u8303"],"authors":"ahKevinXy"},"unlisted":false,"prevItem":{"title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","permalink":"/blog/2023/03/05/idempotent"},"nextItem":{"title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","permalink":"/blog/2023/02/24/index"}},"content":"[from](https://juejin.cn/post/7176220436714225721)\\n\\n\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n## \u7b7e\u540d\\n\\n\u63a5\u53e3\u8bf7\u6c42\u5c06 `\u8bf7\u6c42\u53c2\u6570` + `\u65f6\u95f4\u6233` + `\u79d8\u94a5` \u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32,\u901a\u8fc7`md5` \u7b49hash \u7b97\u6cd5,\u751f\u6210\u4e00\u4e2asign\\n\\n## \u52a0\u5bc6\\n\\n### sm2 \u56fd\u5bc6\\n\\n### rsa \u52a0\u5bc6\\n\\n## ip \u767d\u540d\u5355\\n\\n\u4e3a\u4e86 \u9650\u5236 api \u63a5\u53e3\u7684\u5b89\u5168\u6027,\u9632\u6b62 \u63a5\u53e3\u7b7e\u540d\u6216\u52a0\u5bc6\u88ab\u7834\u89e3,\u653b\u51fb\u8005 \u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e0a\u8bf7\u6c42\u6539\u63a5\u53e3\\n\\n\u53ea\u6709 \u5728\u767d\u540d\u5355\u4e2d\u7684ip\u5730\u5740,\u624d\u80fd\u6210\u529f\u8bf7\u6c42api\u63a5\u53e3,\u5426\u5219\u8fd4\u56de\u65e0\u6743\u9650\\n\\n\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u589e\u52a0web\u9632\u706b\u5899\u4e86\uff0c\u6bd4\u5982\uff1aModSecurity (todo \u7814\u7a76)\u7b49\u3002\\n\\n## \u9650\u6d41\\n\\n\u9650\u6d41\u65b9\u6cd5\u6709\u4e09\u79cd\uff1a\\n\\n1. \u5bf9\u8bf7\u6c42ip\u505a\u9650\u6d41 : \u7b56\u7565\u5236\u5b9a\\n2. \u5bf9\u8bf7\u6c42\u63a5\u53e3\u505a\u9650\u6d41\\n3. \u5bf9\u8bf7\u6c42\u7528\u6237\u505a\u9650\u6d41\\n\\n\u6211\u4eec\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7nginx\uff0credis\u6216\u8005gateway\u5b9e\u73b0\u9650\u6d41\u7684\u529f\u80fd\u3002\\n\\n## \u53c2\u6570\u6821\u9a8c\\n\\n\u6211\u4eec\u9700\u8981\u5bf9API\u63a5\u53e3\u505a\u53c2\u6570\u6821\u9a8c\uff0c\u6bd4\u5982\uff1a\u6821\u9a8c\u5fc5\u586b\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a\uff0c\u6821\u9a8c\u5b57\u6bb5\u7c7b\u578b\uff0c\u6821\u9a8c\u5b57\u6bb5\u957f\u5ea6\uff0c\u6821\u9a8c\u679a\u4e3e\u503c\u7b49\u7b49\u3002\\n\\n\u8fd9\u6837\u505a\u53ef\u4ee5\u62e6\u622a\u4e00\u4e9b\u65e0\u6548\u7684\u8bf7\u6c42\u3002\\n\\n## \u7edf\u4e00\u8fd4\u56de\u503c\\n\\n\u6211\u4e4b\u524d\u8c03\u7528\u8fc7\u522b\u4eba\u7684API\u63a5\u53e3\uff0c\u6b63\u5e38\u8fd4\u56de\u6570\u636e\u662f\u4e00\u79cdjson\u683c\u5f0f\uff0c\u6bd4\u5982\uff1a\\n\\n\u7b7e\u540d\u9519\u8bef\u8fd4\u56de\u7684json\u683c\u5f0f\uff1a\\n\\n```json\\n{\\n    \\"code\\":1001,\\n    \\"message\\":\\"\u7b7e\u540d\u9519\u8bef\\",\\n    \\"data\\":null\\n}\\n\\n\\n```\\n\\n\u6ca1\u6709\u6570\u636e\u6743\u9650\u8fd4\u56de\u7684json\u683c\u5f0f\uff1a\\n\\n```json\\n{\\n    \\"rt\\":10,\\n    \\"errorMgt\\":\\"\u6ca1\u6709\u6743\u9650\\",\\n    \\"result\\":null\\n}\\n```\\n\\n## \u7edf\u4e00\u5c01\u88c5\u5f02\u5e38\\n\\n\u6211\u4eec\u7684API\u63a5\u53e3\u9700\u8981\u5bf9\u5f02\u5e38\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002\\n\\n\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u9047\u5230\u8fc7\u8fd9\u79cd\u573a\u666f\uff1a\u6709\u65f6\u5019\u5728API\u63a5\u53e3\u4e2d\uff0c\u9700\u8981\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4f46\u8868\u4e0d\u5b58\u5728\uff0c\u6216\u8005sql\u8bed\u53e5\u5f02\u5e38\uff0c\u5c31\u4f1a\u76f4\u63a5\u628asql\u4fe1\u606f\u5728API\u63a5\u53e3\u4e2d\u76f4\u63a5\u8fd4\u56de\u3002\\n\\n\u8fd4\u56de\u503c\u4e2d\u5305\u542b\u4e86`\u5f02\u5e38\u5806\u6808\u4fe1\u606f`\u3001`\u6570\u636e\u5e93\u4fe1\u606f`\u3001`\u9519\u8bef\u4ee3\u7801`\u548c`\u884c\u6570`\u7b49\u4fe1\u606f\u3002\\n\\n\u56e0\u6b64\u975e\u5e38\u6709\u5fc5\u8981\u5bf9API\u63a5\u53e3\u4e2d\u7684\u5f02\u5e38\u505a\u7edf\u4e00\u5904\u7406\uff0c\u628a\u5f02\u5e38\u8f6c\u6362\u6210\u8fd9\u6837\uff1a\\n\\n```json\\n{\\n    \\"code\\":500,\\n    \\"message\\":\\"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\\",\\n    \\"data\\":null\\n}\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728gateway\u4e2d\u5bf9\u5f02\u5e38\u8fdb\u884c\u62e6\u622a\uff0c\u505a\u7edf\u4e00\u5c01\u88c5\uff0c\u7136\u540e\u7ed9\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u662f\u5904\u7406\u540e\u6ca1\u6709\u654f\u611f\u4fe1\u606f\u7684\u9519\u8bef\u4fe1\u606f\u3002\\n\\n## \u8bf7\u6c42\u65e5\u5fd7\\n\\n\u6211\u4eec\u9700\u8981\u628aAPI\u63a5\u53e3\u7684\u8bf7\u6c42url\u3001\u8bf7\u6c42\u53c2\u6570\u3001\u8bf7\u6c42\u5934\u3001\u8bf7\u6c42\u65b9\u5f0f\u3001\u54cd\u5e94\u6570\u636e\u548c\u54cd\u5e94\u65f6\u95f4\u7b49\uff0c\u8bb0\u5f55\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002\\n\\n\u5f53\u7136\u6709\u4e9b\u65f6\u5019\uff0c\u8bf7\u6c42\u65e5\u5fd7\u4e0d\u5149\u662f\u4f60\u4eec\u516c\u53f8\u5f00\u53d1\u4eba\u5458\u9700\u8981\u67e5\u770b\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u7528\u6237\u4e5f\u9700\u8981\u80fd\u67e5\u770b\u63a5\u53e3\u7684\u8bf7\u6c42\u65e5\u5fd7\u3002\\n\\n\u8fd9\u65f6\u5c31\u9700\u8981\u628a\u65e5\u5fd7\u843d\u5730\u5230\u6570\u636e\u5e93\uff0c\u6bd4\u5982\uff1amongodb\u6216\u8005elastic search\uff0c\u7136\u540e\u505a\u4e00\u4e2aUI\u9875\u9762\uff0c\u7ed9\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u7528\u6237\u5f00\u901a\u67e5\u770b\u6743\u9650\u3002\u8fd9\u6837\u4ed6\u4eec\u5c31\u80fd\u5728\u5916\u7f51\u67e5\u770b\u8bf7\u6c42\u65e5\u5fd7\u4e86\uff0c\u4ed6\u4eec\u81ea\u5df1\u4e5f\u80fd\u5b9a\u4f4d\u4e00\u90e8\u5206\u95ee\u9898\u3002\\n\\n## \u5e42\u7b49\u8bbe\u8ba1\\n\\n\u7b2c\u4e09\u65b9\u5e73\u53f0\u6781\u6709\u53ef\u80fd\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u8bf7\u6c42\u6211\u4eec\u63a5\u53e3\u591a\u6b21\uff0c\u6bd4\u5982\uff1a\u57281\u79d2\u5185\u8bf7\u6c42\u4e24\u6b21\u3002\u6709\u53ef\u80fd\u662f\u4ed6\u4eec\u4e1a\u52a1\u7cfb\u7edf\u6709bug\uff0c\u6216\u8005\u5728\u505a\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u91cd\u8bd5\uff0c\u56e0\u6b64\u6211\u4eec\u7684API\u63a5\u53e3\u9700\u8981\u505a\u5e42\u7b49\u8bbe\u8ba1\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\u8981\u652f\u6301\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u7528\u76f8\u540c\u7684\u53c2\u6570\u8bf7\u6c42API\u63a5\u53e3\u591a\u6b21\uff0c\u7b2c\u4e00\u6b21\u8bf7\u6c42\u6570\u636e\u5e93\u4f1a\u65b0\u589e\u6570\u636e\uff0c\u4f46\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u4ee5\u540e\u5c31\u4e0d\u4f1a\u65b0\u589e\u6570\u636e\uff0c\u4f46\u4e5f\u4f1a\u8fd4\u56de\u6210\u529f\u3002\\n\\n\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u6570\u636e\u5e93\u4e2d\u589e\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u6216\u8005\u5728redis\u4fdd\u5b58requestId\u548c\u8bf7\u6c42\u53c2\u6765\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\u3002\\n\\n## \u9650\u5236\u8bb0\u5f55\u6761\u6570\\n\\n\u5bf9\u4e8e\u5bf9\u6211\u63d0\u4f9b\u7684\u6279\u91cf\u63a5\u53e3\uff0c\u4e00\u5b9a\u8981`\u9650\u5236\u8bf7\u6c42\u7684\u8bb0\u5f55\u6761\u6570`\u3002\\n\\n\u5982\u679c\u8bf7\u6c42\u7684\u6570\u636e\u592a\u591a\uff0c\u5f88\u5bb9\u6613\u9020\u6210API\u63a5\u53e3\u8d85\u65f6\u7b49\u95ee\u9898\uff0c\u8ba9API\u63a5\u53e3\u53d8\u5f97\u4e0d\u7a33\u5b9a\u3002\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u4e00\u6b21\u8bf7\u6c42\u4e2d\u7684\u53c2\u6570\uff0c\u6700\u591a\u652f\u6301\u4f20\u5165500\u6761\u8bb0\u5f55\u3002\\n\\n\u5982\u679c\u7528\u6237\u4f20\u5165\u591a\u4f59500\u6761\u8bb0\u5f55\uff0c\u5219\u63a5\u53e3\u76f4\u63a5\u7ed9\u51fa\u63d0\u793a\u3002\\n\\n## \u538b\u6d4b\\n\\n\u4e0a\u7ebf\u524d\u6211\u4eec\u52a1\u5fc5\u8981\u5bf9API\u63a5\u53e3\u505a\u4e00\u4e0b\u538b\u529b\u6d4b\u8bd5\uff0c\u77e5\u9053\u5404\u4e2a\u63a5\u53e3\u7684`qps`\u60c5\u51b5\u3002\\n\\n\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u53ef\u4ee5\u7528`jmeter`\u6216\u8005`apache benc` \u6216 `ab`\u5bf9API\u63a5\u53e3\u505a\u538b\u529b\u6d4b\u8bd5\u3002\\n\\n## \u5f02\u6b65\u5904\u7406\\n\\n\u4e00\u822c\u7684`API`\u63a5\u53e3\u7684\u903b\u8f91\u90fd\u662f\u540c\u6b65\u5904\u7406\u7684\uff0c\u8bf7\u6c42\u5b8c\u4e4b\u540e\u7acb\u523b\u8fd4\u56de\u7ed3\u679c\u3002\\n\\n\u4f46\u6709\u65f6\u5019\uff0c\u6211\u4eec\u7684`API`\u63a5\u53e3\u91cc\u9762\u7684\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\uff0c\u7279\u522b\u662f\u6709\u4e9b\u6279\u91cf\u63a5\u53e3\uff0c\u5982\u679c\u540c\u6b65\u5904\u7406\u4e1a\u52a1\uff0c\u8017\u65f6\u4f1a\u975e\u5e38\u957f\u3002\\n\\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u63d0\u5347`API`\u63a5\u53e3\u7684\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u6210\u5f02\u6b65\u5904\u7406\u3002\\n\\n\u5728API\u63a5\u53e3\u4e2d\u53ef\u4ee5\u53d1\u9001\u4e00\u6761mq\u6d88\u606f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\u4e4b\u540e\uff0c\u6709\u4e2a\u4e13\u95e8\u7684mq\u6d88\u8d39\u8005\u53bb\u5f02\u6b65\u6d88\u8d39\u8be5\u6d88\u606f\uff0c\u505a\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u3002\\n\\n\u76f4\u63a5\u5f02\u6b65\u5904\u7406\u7684\u63a5\u53e3\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5230\u3002\\n\\n\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\uff1a\u6211\u4eec\u56de\u8c03\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u544a\u77e5\u4ed6\u4eecAPI\u63a5\u53e3\u7684\u5904\u7406\u7ed3\u679c\uff0c\u5f88\u591a\u652f\u4ed8\u63a5\u53e3\u5c31\u662f\u8fd9\u4e48\u73a9\u7684\u3002\\n\\n\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\uff1a\u7b2c\u4e09\u65b9\u5e73\u53f0\u901a\u8fc7\u8f6e\u8be2\u8c03\u7528\u6211\u4eec\u53e6\u5916\u4e00\u4e2a\u67e5\u8be2\u72b6\u6001\u7684API\u63a5\u53e3\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u67e5\u8be2\u4e00\u6b21\u72b6\u6001\uff0c\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e4b\u524d\u7684\u90a3\u4e2aAPI\u63a5\u53e3\u4e2d\u7684id\u96c6\u5408\u3002\\n\\n## \u6570\u636e\u8131\u654f\\n\\n\u6709\u65f6\u5019\u7b2c\u4e09\u65b9\u5e73\u53f0\u8c03\u7528\u6211\u4eecAPI\u63a5\u53e3\u65f6\uff0c\u83b7\u53d6\u7684\u6570\u636e\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u654f\u611f\u6570\u636e\uff0c\u6bd4\u5982\uff1a\u7528\u6237\u624b\u673a\u53f7\u3001\u94f6\u884c\u5361\u53f7\u7b49\u7b49\u3002\\n\\n\u8fd9\u6837\u4fe1\u606f\u5982\u679c\u901a\u8fc7API\u63a5\u53e3\u76f4\u63a5\u4fdd\u7559\u5230\u5916\u7f51\uff0c\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u5f88\u5bb9\u6613\u9020\u6210\u7528\u6237\u9690\u79c1\u6570\u636e\u6cc4\u9732\u7684\u95ee\u9898\u3002\\n\\n\u8fd9\u5c31\u9700\u8981\u5bf9\u90e8\u5206\u6570\u636e\u505a\u6570\u636e\u8131\u654f\u4e86\u3002\\n\\n## \u5b8c\u6574\u7684\u63a5\u53e3\u6587\u6863\\n\\n\u8bf4\u5b9e\u8bdd\uff0c\u4e00\u4efd\u5b8c\u6574\u7684API\u63a5\u53e3\u6587\u6863\uff0c\u5728\u53cc\u65b9\u505a\u63a5\u53e3\u5bf9\u63a5\u65f6\uff0c\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u6c9f\u901a\u6210\u672c\uff0c\u8ba9\u5bf9\u65b9\u5c11\u8d70\u5f88\u591a\u5f2f\u8def\u3002\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u9700\u8981\u5305\u542b\u5982\u4e0b\u4fe1\u606f\uff1a\\n\\n1. \u63a5\u53e3\u5730\u5740\\n2. \u8bf7\u6c42\u65b9\u5f0f\uff0c\u6bd4\u5982\uff1apost\u6216get\\n3. \u8bf7\u6c42\u53c2\u6570\u548c\u5b57\u6bb5\u4ecb\u7ecd\\n4. \u8fd4\u56de\u503c\u548c\u5b57\u6bb5\u4ecb\u7ecd\\n5. \u8fd4\u56de\u7801\u548c\u9519\u8bef\u4fe1\u606f\\n6. \u52a0\u5bc6\u6216\u7b7e\u540d\u793a\u4f8b\\n7. \u5b8c\u6574\u7684\u8bf7\u6c42demo\\n8. \u989d\u5916\u7684\u8bf4\u660e\uff0c\u6bd4\u5982\uff1a\u5f00\u901aip\u767d\u540d\u5355\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u6700\u597d\u80fd\u591f\u7edf\u4e00\u63a5\u53e3\u548c\u5b57\u6bb5\u540d\u79f0\u7684\u547d\u540d\u98ce\u683c\uff0c\u6bd4\u5982\u90fd\u7528`\u9a7c\u5cf0\u6807\u8bc6`\u547d\u540d\u3002\\n\\n\u7edf\u4e00\u5b57\u6bb5\u7684\u7c7b\u578b\u548c\u957f\u5ea6\uff0c\u6bd4\u5982\uff1aid\u5b57\u6bb5\u7528Long\u7c7b\u578b\uff0c\u957f\u5ea6\u89c4\u5b9a20\u3002status\u5b57\u6bb5\u7528int\u7c7b\u578b\uff0c\u957f\u5ea6\u56fa\u5b9a2\u7b49\u3002\\n\\n\u7edf\u4e00\u65f6\u95f4\u683c\u5f0f\u5b57\u6bb5\uff0c\u6bd4\u5982\uff1atime\u7528String\u7c7b\u578b\uff0c\u683c\u5f0f\u4e3a\uff1ayyyy-MM-dd HH:mm:ss\u3002\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u5199\u660eAK/SK\u548c\u57df\u540d\uff0c\u627e\u67d0\u67d0\u5355\u72ec\u63d0\u4f9b\u7b49\u3002"},{"id":"/2023/02/24/index","metadata":{"permalink":"/blog/2023/02/24/index","source":"@site/blog/2023/02/24/index.md","title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","description":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","date":"2023-02-24T00:00:00.000Z","formattedDate":"2023\u5e742\u670824\u65e5","tags":[{"label":"umi","permalink":"/blog/tags/umi"},{"label":"antd","permalink":"/blog/tags/antd"}],"readingTime":0.285,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"tags":["umi","antd"],"authors":"ahKevinXy","description":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","permalink":"/blog/2023/03/05/index"},"nextItem":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","permalink":"/blog/2022/11/25/index"}},"content":"2023\u5e7402\u670824\u65e517:32:20\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n```typescript\\n\\nimport { defineConfig } from \\"umi\\";\\nimport zhCN from \'antd/locale/zh_CN\';\\nexport default defineConfig({\\n  plugins: [\'@umijs/plugins/dist/antd\'],\\n\\n\\n\\n  antd: {\\n    configProvider: {\\n      locale: zhCN\\n    },\\n  },\\n\\n  routes: [\\n    { path: \\"/\\", component: \\"index\\" },\\n    { path: \\"/docs\\", component: \\"docs\\" },\\n  ],\\n  npmClient: \'yarn\',\\n  base: \'/\',\\n  hash: true,\\n\\n\\n});\\n\\n\\n\\n\\n````"},{"id":"/2022/11/25/index","metadata":{"permalink":"/blog/2022/11/25/index","source":"@site/blog/2022/11/25/index.md","title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","description":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5 \u517c\u5bb9\u6027\u52a0\u5bc6\u89e3\u51b3\u65b9\u6848 \u5b8c\u7f8e\u89e3\u51b3\u8bed\u8a00\u4e4b\u95f4\u52a0\u5bc6\u4e0d\u517c\u5bb9","date":"2022-11-25T00:00:00.000Z","formattedDate":"2022\u5e7411\u670825\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Java","permalink":"/blog/tags/java"},{"label":"\u52a0\u5bc6","permalink":"/blog/tags/\u52a0\u5bc6"},{"label":"RSA","permalink":"/blog/tags/rsa"}],"readingTime":3.17,"hasTruncateMarker":true,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"/img/headers.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","tags":["Go","Java","\u52a0\u5bc6","RSA"],"authors":"ahKevinXy","keywords":["java","go","RSA","\u52a0\u5bc6","\u517c\u5bb9"],"description":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5 \u517c\u5bb9\u6027\u52a0\u5bc6\u89e3\u51b3\u65b9\u6848 \u5b8c\u7f8e\u89e3\u51b3\u8bed\u8a00\u4e4b\u95f4\u52a0\u5bc6\u4e0d\u517c\u5bb9","hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","permalink":"/blog/2023/02/24/index"},"nextItem":{"title":"\u7a0b\u5e8f\u5458\u5230\u67b6\u6784\u5e08","permalink":"/blog/2022/09/22/index"}},"content":"\u26a1\ufe0f \u548c \u7532\u65b9\u5bf9\u63a5\u7cfb\u7edf \u9047\u5230 java Rsa \u52a0\u5bc6  go \u65e0\u6cd5\u89e3\u5bc6\u7684\u95ee\u9898\\n\\n\\n\\n\\n\x3c!-- truncate --\x3e\\n:::note\\n\\n1. go \u751f\u6210\u7684\u516c\u94a5 \u4e0d\u80fd\u76f4\u63a5\u7ed9Java\u4f7f\u7528\\n2. java\u7684 \u516c\u94a5 \u9700\u8981\u628a  go \u751f\u6210\u7684\u5934 `-----BEGIN RSA Public Key-----` \u548c `-----END RSA Public Key-----` \u5220\u9664 \u4e0d\u80fd\u4fdd\u5b58\u5373\u53ef\\n\\n:::\\n\\n## go  \u4ee3\u7801\\n\\n```go\\npackage rsa\\n\\nimport (\\n\\t\\"crypto/rand\\"\\n\\t\\"crypto/rsa\\"\\n\\t\\"crypto/x509\\"\\n\\t\\"encoding/base64\\"\\n\\t\\"encoding/pem\\"\\n\\t\\"fmt\\"\\n\\t\\"os\\"\\n)\\n\\n//RSA\u89e3\u5bc6\\nfunc Decrypt(cipherText []byte, path string) []byte {\\n\\t//\u6253\u5f00\u6587\u4ef6\\n\\tfile, err := os.Open(path)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tdefer file.Close()\\n\\t//\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\\n\\tinfo, _ := file.Stat()\\n\\tbuf := make([]byte, info.Size())\\n\\tfile.Read(buf)\\n\\t//pem\u89e3\u7801\\n\\tblock, _ := pem.Decode(buf)\\n\\t//X509\u89e3\u7801\\n\\tprivateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\t//\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\\n\\tplainText, _ := rsa.DecryptPKCS1v15(rand.Reader, privateKey, cipherText)\\n\\t//\u8fd4\u56de\u660e\u6587\\n\\treturn plainText\\n}\\n\\n// DecryptByString\\n// @Description: \u89e3\u5bc6\\n// @Author ahKevinXy\\n// @Date 2022-11-22 16:50:15\\nfunc DecryptByString(cipherText string, key string) []byte {\\n\\t//\u6253\u5f00\u6587\u4ef6\\n\\tcontent := Base64Decode(cipherText)\\n\\t//X509\u89e3\u7801\\n\\n\\tblock, _ := pem.Decode([]byte(key))\\n\\n\\tprivateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\t//\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\\n\\tplainText, _ := rsa.DecryptPKCS1v15(rand.Reader, privateKey, content)\\n\\t//\u8fd4\u56de\u660e\u6587\\n\\treturn plainText\\n}\\n\\n//RSA\u52a0\u5bc6 \u901a\u8fc7\u79c1\u94a5\u8def\u5f84\\nfunc Encrypt(plainText []byte, path string) []byte {\\n\\t//\u6253\u5f00\u6587\u4ef6\\n\\tfile, err := os.Open(path)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\n\\tdefer file.Close()\\n\\t//\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\\n\\tinfo, _ := file.Stat()\\n\\tbuf := make([]byte, info.Size())\\n\\tfile.Read(buf)\\n\\t//pem\u89e3\u7801\\n\\tblock, _ := pem.Decode(buf)\\n\\t//x509\u89e3\u7801\\n\\tpublicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\t//\u7c7b\u578b\u65ad\u8a00\\n\\tpublicKey := publicKeyInterface.(*rsa.PublicKey)\\n\\t//\u5bf9\u660e\u6587\u8fdb\u884c\u52a0\u5bc6\\n\\tcipherText, err := rsa.EncryptPKCS1v15(rand.Reader, publicKey, plainText)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\t//\u8fd4\u56de\u5bc6\u6587\\n\\treturn cipherText\\n}\\n\\n// \u901a\u8fc7\u76f4\u63a5\u4f20 string \u65b9\u5f0f\\nfunc EncryptByString(plainText string, public string) string {\\n\\n\\tblock, _ := pem.Decode([]byte(public))\\n\\t//x509\u89e3\u7801\\n\\tpublicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\t//\u7c7b\u578b\u65ad\u8a00\\n\\tpublicKey := publicKeyInterface.(*rsa.PublicKey)\\n\\t//\u5bf9\u660e\u6587\u8fdb\u884c\u52a0\u5bc6\\n\\tcipherText, err := rsa.EncryptPKCS1v15(rand.Reader, publicKey, []byte(plainText))\\n\\tif err != nil {\\n\\t\\tpanic(err)\\n\\t}\\n\\tfmt.Println(cipherText)\\n\\t//\u8fd4\u56de\u5bc6\u6587\\n\\tfmt.Println(string(cipherText))\\n\\n\\treturn Base64EncodeString(string(cipherText))\\n\\n}\\n\\nfunc Base64EncodeString(str string) string {\\n\\treturn base64.StdEncoding.EncodeToString([]byte(str))\\n}\\n\\n// Base64Decode\\n// @Description: base64\u89e3\u7801\\n// @Author ahKevinXy\\n// @Date 2022-11-22 17:04:52\\nfunc Base64Decode(data string) []byte {\\n\\tdecodedByte, _ := base64.StdEncoding.DecodeString(data)\\n\\treturn decodedByte\\n}\\n```\\n\\n## java \u4ee3\u7801\\n\\n```java\\n\\nimport javax.crypto.Cipher;\\nimport java.io.ByteArrayOutputStream;\\nimport java.security.*;\\nimport java.security.interfaces.RSAPrivateKey;\\nimport java.security.interfaces.RSAPublicKey;\\nimport java.security.spec.InvalidKeySpecException;\\nimport java.security.spec.PKCS8EncodedKeySpec;\\nimport java.security.spec.X509EncodedKeySpec;\\nimport java.util.Base64;\\nimport java.util.HashMap;\\nimport java.util.Map;\\n\\n\\n\\npublic class RSATest {\\n\\n public static final String KEY_ALGORITHM = \\"RSA\\";\\n    // \u516c\u94a5\\n    private static final String PUBLIC_KEY = \\"xxxxx\u52a0\u5bc6\u516c\u94a5\\";\\n    private static final int MAX_ENCRYPT_BLOCK = 117;\\n    private static final int MAX_DECRYPT_BLOCK = 128;\\n    public static void main(String[] args) throws Exception {\\n\\n        String cipherText;\\n        String content = \\"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u52a0\u5bc6\u5bc6\u7801\\";\\n        String publicKey = PUBLIC_KEY;\\n\\n        cipherText = encrypt(content, publicKey);\\n        System.out.println(cipherText);\\n    }\\n\\n\\n\\n    // \u83b7\u53d6\u516c\u94a5\\n    public static PublicKey getPublicKey(String publicKeyString) throws NoSuchAlgorithmException, InvalidKeySpecException {\\n        byte[] publicKeyByte = Base64.getDecoder().decode(publicKeyString);\\n        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(publicKeyByte);\\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\\n        return keyFactory.generatePublic(keySpec);\\n    }\\n    public static String encrypt(String text, String publicKeyStr) {\\n        try {\\n          \\n            Cipher cipher = Cipher.getInstance(KEY_ALGORITHM);\\n            cipher.init(Cipher.ENCRYPT_MODE, getPublicKey(publicKeyStr));\\n            byte[] tempBytes = cipher.doFinal(text.getBytes(\\"UTF-8\\"));\\n            return Base64.getEncoder().encodeToString(tempBytes);\\n        } catch (Exception e) {\\n            throw new RuntimeException(\\"\u52a0\u5bc6\u5b57\u7b26\u4e32[\\" + text + \\"]\u65f6\u9047\u5230\u5f02\u5e38\\", e);\\n        }\\n    }\\n\\n\\n\\n\\n\\n}\\n\\n\\n\\n```"},{"id":"/2022/09/22/index","metadata":{"permalink":"/blog/2022/09/22/index","source":"@site/blog/2022/09/22/index.md","title":"\u7a0b\u5e8f\u5458\u5230\u67b6\u6784\u5e08","description":"\u8fd8\u662f\u76f4\u63a5\u653e\u5f03\u5427","date":"2022-09-22T00:00:00.000Z","formattedDate":"2022\u5e749\u670822\u65e5","tags":[],"readingTime":0.035,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","permalink":"/blog/2022/11/25/index"}},"content":"\u8fd8\u662f\u76f4\u63a5\u653e\u5f03\u5427"}]}')}}]);