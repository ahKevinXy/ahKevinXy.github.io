"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[1477],{30010:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"/2023/05/18/cpu","metadata":{"permalink":"/blog/2023/05/18/cpu","source":"@site/blog/2023/05/18/cpu.md","title":"CPU \u8be6\u89e3","description":"\u4ecb\u7ecd","date":"2023-05-18T00:00:00.000Z","formattedDate":"2023\u5e745\u670818\u65e5","tags":[{"label":"CPU","permalink":"/blog/tags/cpu"},{"label":"\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"CPU \u8be6\u89e3","tags":["CPU","\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy"},"nextItem":{"title":"git  tag","permalink":"/blog/2023/05/14/git"}},"content":"## \u4ecb\u7ecd\\n\\n\u4e2d\u592e\u5904\u7406\u5668,\u7b80\u79f0 CPU( Center Processing Unit )\\n\\n\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u90e8\u5206 `\u63a7\u5236\u5668` `\u8fd0\u7b97\u5668`,\u5176\u4e2d\u8fd8\u5305\u62ec \u9ad8\u901f\u7f13\u51b2 \u5b58\u50a8\u5668\u53ca\u5b9e\u73b0\u5b83\u4eec\u4e4b\u95f4\u8054\u7cfb\u7684\u6570\u636e,\u63a7\u5236\u7684\u603b\u7ebf.\u7535\u5b50\u8ba1\u7b97\u673a\u7684\u4e09\u5927\u6838\u5fc3\u90e8\u4ef6(CPU,\u5185\u5b58\u5b58\u50a8\u5668,\u8f93\u5165\\\\\u8f93\u51fa\u8bbe\u5907).\\n\\n\u4e2d\u592e\u5904\u7406\u5668\u4e3b\u8981\u4e3a\u5904\u7406\u6307\u4ee4,\u6267\u884c\u64cd\u4f5c,\u63a7\u5236\u65f6\u95f4,\u5904\u7406\u6570\u636e.\\n\\n## i7\\n\\n## i5\\n\\n## i3"},{"id":"/2023/05/14/git","metadata":{"permalink":"/blog/2023/05/14/git","source":"@site/blog/2023/05/14/git.md","title":"git  tag","description":"\u83b7\u53d6git tag \u5217\u8868","date":"2023-05-14T00:00:00.000Z","formattedDate":"2023\u5e745\u670814\u65e5","tags":[{"label":"git","permalink":"/blog/tags/git"},{"label":"command","permalink":"/blog/tags/command"}],"readingTime":0.385,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"git  tag","tags":["git","command"],"authors":"ahKevinXy"},"prevItem":{"title":"CPU \u8be6\u89e3","permalink":"/blog/2023/05/18/cpu"},"nextItem":{"title":"samba\u4fee\u6539\u5bc6\u7801","permalink":"/blog/2023/05/04/samb"}},"content":"## \u83b7\u53d6git tag \u5217\u8868\\n\\n```bash\\ngit tag\\n```\\n\\n## \u521b\u5efa\u6807\u7b7e\\n\\n```bash\\ngit tag -a v1.0.3 -m\\"tag \u5907\u6ce8\\"\\n```\\n\\n## \u67e5\u770b\u5907\u6ce8\\n\\n```bash\\ngit  show v1.0.3\\n```\\n\\n## \u5bf9\u5386\u53f2\u8fdb\u884c\u6807\u7b7e\\n\\n```bash\\ngit log --pretty=oneline\\n\\ngit tag -a v1.0.3 0d52aaab44\\n```\\n\\n## \u63d0\u4ea4tag\\n\\n```bash\\n git push origin --tags\\n```\\n\\n## \u5220\u9664\u6807\u7b7e\\n\\n```bash\\ngit tag -d v1.0.3\\n\\ngit push origin --delete <tagname>\\n```"},{"id":"/2023/05/04/samb","metadata":{"permalink":"/blog/2023/05/04/samb","source":"@site/blog/2023/05/04/samb.md","title":"samba\u4fee\u6539\u5bc6\u7801","description":"","date":"2023-05-04T00:00:00.000Z","formattedDate":"2023\u5e745\u67084\u65e5","tags":[{"label":"samba","permalink":"/blog/tags/samba"},{"label":"\u7fa4\u673a\u5668\u4eba","permalink":"/blog/tags/\u7fa4\u673a\u5668\u4eba"},{"label":"go","permalink":"/blog/tags/go"}],"readingTime":0.025,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"samba\u4fee\u6539\u5bc6\u7801","tags":["samba","\u7fa4\u673a\u5668\u4eba","go"],"authors":"ahKevinXy"},"prevItem":{"title":"git  tag","permalink":"/blog/2023/05/14/git"},"nextItem":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","permalink":"/blog/2023/05/04/webchat"}},"content":"```bash\\n smbpasswd -a <username>\\n```"},{"id":"/2023/05/04/webchat","metadata":{"permalink":"/blog/2023/05/04/webchat","source":"@site/blog/2023/05/04/webchat.md","title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","description":"\u5728\u7ec8\u7aef\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u673a\u5668\u4eba\u4e4b\u540e\uff0c\u521b\u5efa\u8005\u53ef\u4ee5\u5728\u673a\u5668\u4eba\u8be6\u60c5\u9875\u770b\u7684\u8be5\u673a\u5668\u4eba\u7279\u6709\u7684webhookurl\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6309\u4ee5\u4e0b\u8bf4\u660e\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u8d77HTTP POST \u8bf7\u6c42\uff0c\u5373\u53ef\u5b9e\u73b0\u7ed9\u8be5\u7fa4\u7ec4\u53d1\u9001\u6d88\u606f","date":"2023-05-04T00:00:00.000Z","formattedDate":"2023\u5e745\u67084\u65e5","tags":[{"label":"\u4f01\u4e1a\u5fae\u4fe1","permalink":"/blog/tags/\u4f01\u4e1a\u5fae\u4fe1"},{"label":"\u7fa4\u673a\u5668\u4eba","permalink":"/blog/tags/\u7fa4\u673a\u5668\u4eba"},{"label":"go","permalink":"/blog/tags/go"}],"readingTime":2.45,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","tags":["\u4f01\u4e1a\u5fae\u4fe1","\u7fa4\u673a\u5668\u4eba","go"],"authors":"ahKevinXy"},"prevItem":{"title":"samba\u4fee\u6539\u5bc6\u7801","permalink":"/blog/2023/05/04/samb"},"nextItem":{"title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","permalink":"/blog/2023/04/18/mysql"}},"content":"> \u5728\u7ec8\u7aef\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u673a\u5668\u4eba\u4e4b\u540e\uff0c\u521b\u5efa\u8005\u53ef\u4ee5\u5728\u673a\u5668\u4eba\u8be6\u60c5\u9875\u770b\u7684\u8be5\u673a\u5668\u4eba\u7279\u6709\u7684webhookurl\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6309\u4ee5\u4e0b\u8bf4\u660e\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u8d77HTTP POST \u8bf7\u6c42\uff0c\u5373\u53ef\u5b9e\u73b0\u7ed9\u8be5\u7fa4\u7ec4\u53d1\u9001\u6d88\u606f\\n> go \u8bed\u8a00\u5b9e\u73b0\u673a\u5668\u4eba\u63a8\u9001\u6d88\u606f\\n\\n* \u4f7f\u7528curl \u5de5\u5177\\n\\n```bash\\ncurl \'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=693axxx6-7aoc-4bc4-97a0-0ec2sifa5aaa\' \\\\\\n   -H \'Content-Type: application/json\' \\\\\\n   -d \'\\n   {\\n     \\"msgtype\\": \\"text\\",\\n     \\"text\\": {\\n         \\"content\\": \\"hello world\\"\\n     }\\n   }\'\\n\\n```\\n\\n* \u5f53\u524d\u81ea\u5b9a\u4e49\u673a\u5668\u4eba\u652f\u6301\u6587\u672c\uff08text\uff09\u3001markdown\uff08markdown\uff09\u3001\u56fe\u7247\uff08image\uff09\u3001\u56fe\u6587\uff08news\uff09\u56db\u79cd\u6d88\u606f\u7c7b\u578b\\n\\n* \u673a\u5668\u4eba\u7684text/markdown\u7c7b\u578b\u6d88\u606f\u652f\u6301\u5728content\u4e2d\u4f7f\u7528<@userid>\u6269\u5c55\u8bed\u6cd5\u6765@\u7fa4\u6210\u5458\\n\\n## go \u8bed\u8a00\u5b9e\u73b0\\n\\n```go\\n\\npackage helps\\n\\nimport (\\n \\"bytes\\"\\n \\"encoding/json\\"\\n \\"errors\\"\\n \\"io\\"\\n \\"fmt\\"\\n \\"io/ioutil\\"\\n \\"net/http\\"\\n \\"net/http/cookiejar\\"\\n \\"strings\\"\\n)\\n\\n\\n\\n// PushMessageToQwx\\n//  @Description:   \u63a8\u9001\u6d88\u606f\u5230\u4f01\u4e1a\u5fae\u4fe1\\n//  @Author  ahKevinXy\\n//  @Date 2023-04-12 10:32:59\\nfunc PushMessageToQwx(mp map[string]interface{}, noticeUrl string) {\\n\\n request, i, err := MakeHttpRequest(\\"POST\\", noticeUrl, mp, nil)\\n if err != nil {\\n  return\\n }\\n fmt.Println(request, i, err, \\"\u5904\u7406\u7ed3\u679c\\")\\n}\\n\\nconst (\\n POST  = \\"POST\\"\\n GET   = \\"GET\\"\\n PUT   = \\"PUT\\"\\n PATCH = \\"PATCH\\"\\n)\\n\\n// MakeHttpRequest\\n// @Description: HTTP\u8bf7\u6c42\\n// @Author ahKevinXy\\n// @Date 2022-11-08 16:49:40\\nfunc MakeHttpRequest(method, url string, entity map[string]interface{}, jar *cookiejar.Jar) (string, int, error) {\\n var body io.Reader\\n var err error\\n\\n if entity != nil {\\n  switch method {\\n  case POST, PUT, PATCH:\\n   b, err := json.Marshal(entity)\\n   if err != nil {\\n    return \\"\\", 0, err\\n   }\\n\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u003c\\"), []byte(\\"<\\"), -1)\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u003e\\"), []byte(\\">\\"), -1)\\n   b = bytes.Replace(b, []byte(\\"\\\\\\\\u0026\\"), []byte(\\"&\\"), -1)\\n\\n   body = bytes.NewBuffer(b)\\n\\n  case GET:\\n   if len(entity) > 0 {\\n    params := make([]string, len(entity))\\n    index := 0\\n    for k, v := range entity {\\n     _v := fmt.Sprintf(\\"%v\\", v)\\n     params[index] = fmt.Sprintf(\\"%s=%v\\", k, _v)\\n     index++\\n    }\\n    queryStr := strings.Join(params, \\"&\\")\\n    url = fmt.Sprintf(\\"%s?%s\\", url, queryStr)\\n   }\\n  }\\n }\\n\\n req, err := http.NewRequest(method, url, body)\\n if err != nil {\\n\\n  return \\"\\", 0, err\\n }\\n if entity != nil && (method == POST || method == PUT || method == PATCH) {\\n  req.Header.Set(\\"Content-Type\\", \\"application/json;charset=utf-8\\")\\n  req.Header.Set(\\"Accept\\", \\"application/json\\")\\n }\\n req.Header.Add(\\"Connection\\", \\"close\\")\\n req.Header.Set(\\"User-Agent\\", \\"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5\\")\\n\\n\\n client := http.DefaultClient\\n if jar != nil {\\n  client = &http.Client{\\n   Jar: jar,\\n  }\\n }\\n\\n res, err := client.Do(req)\\n if err != nil {\\n\\n  return \\"\\", 0, err\\n }\\n defer res.Body.Close()\\n\\n if res.StatusCode != http.StatusOK && res.StatusCode != http.StatusCreated && res.StatusCode != http.StatusNoContent {\\n\\n  return \\"\\", 0, errors.New(\\"http request failed to call\\")\\n }\\n resBody, err := ioutil.ReadAll(res.Body)\\n if err != nil {\\n \\n  return \\"\\", 0, errors.New(\\"the response could not be read\\")\\n }\\n\\n return string(resBody), res.StatusCode, nil\\n}\\n\\n\\n\\n```"},{"id":"/2023/04/18/mysql","metadata":{"permalink":"/blog/2023/04/18/mysql","source":"@site/blog/2023/04/18/mysql.md","title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","description":"\u67e5\u8be2\u6240\u6709\u7a7a\u95f4","date":"2023-04-18T00:00:00.000Z","formattedDate":"2023\u5e744\u670818\u65e5","tags":[{"label":"mysql","permalink":"/blog/tags/mysql"},{"label":"\u5de5\u5177","permalink":"/blog/tags/\u5de5\u5177"}],"readingTime":1.065,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"tags":["mysql","\u5de5\u5177"],"authors":"ahKevinXy"},"prevItem":{"title":"go \u4f01\u4e1a\u5fae\u4fe1\u673a\u5668\u4eba\u5b9e\u4f8b","permalink":"/blog/2023/05/04/webchat"},"nextItem":{"title":"Go \u4e2d\u7684sync poll","permalink":"/blog/2023/03/15/sync_poll"}},"content":"## \u67e5\u8be2\u6240\u6709\u7a7a\u95f4\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\nsum(table_rows) as \'\u8bb0\u5f55\u6570\',\\nsum(truncate(data_length/1024/1024, 2)) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\nsum(truncate(index_length/1024/1024, 2)) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\ngroup by table_schema\\norder by sum(data_length) desc, sum(index_length) desc;\\n```\\n\\n## \u67e5\u8be2\u7a7a\u95f4\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\ntable_name as \'\u8868\u540d\',\\ntable_rows as \'\u8bb0\u5f55\u6570\',\\ntruncate(data_length/1024/1024, 2) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\ntruncate(index_length/1024/1024, 2) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\norder by data_length desc, index_length desc;\\n```\\n\\n## \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5e93\u5bb9\u91cf\u5927\u5c0f\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\nsum(table_rows) as \'\u8bb0\u5f55\u6570\',\\nsum(truncate(data_length/1024/1024, 2)) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\nsum(truncate(index_length/1024/1024, 2)) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\nwhere table_schema=\'mysql\';\\n\\n```\\n\\n## \u67e5\u770b\u6307\u5b9a\u6570\u636e\u5e93\u5404\u8868\u5bb9\u91cf\u5927\u5c0f\\n\\n```sql\\nselect\\ntable_schema as \'\u6570\u636e\u5e93\',\\ntable_name as \'\u8868\u540d\',\\ntable_rows as \'\u8bb0\u5f55\u6570\',\\ntruncate(data_length/1024/1024, 2) as \'\u6570\u636e\u5bb9\u91cf(MB)\',\\ntruncate(index_length/1024/1024, 2) as \'\u7d22\u5f15\u5bb9\u91cf(MB)\'\\nfrom information_schema.tables\\nwhere table_schema=\'mysql\'\\norder by data_length desc, index_length desc;\\n```"},{"id":"/2023/03/15/sync_poll","metadata":{"permalink":"/blog/2023/03/15/sync_poll","source":"@site/blog/2023/03/15/sync_poll.md","title":"Go \u4e2d\u7684sync poll","description":"Go \u4e2d\u7684waitgroup","date":"2023-03-15T23:07:03.000Z","formattedDate":"2023\u5e743\u670815\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Go\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/go\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.12,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e2d\u7684sync poll","tags":["Go","Go\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","description":"Go \u4e2d\u7684waitgroup","keywords":["Go \u4e2d\u7684waitgroup"],"date":"2023-03-15T23:07:03.000Z"},"prevItem":{"title":"\u5e38\u7528MySQL \u4fe1\u606f\u67e5\u8be2","permalink":"/blog/2023/04/18/mysql"},"nextItem":{"title":"TODO","permalink":"/blog/todos"}},"content":"> \u4f7f\u7528\u573a\u666f\uff1a\u9891\u7e41\u6784\u9020\u7ed3\u6784\u4f53\uff0c\u5206\u914d\u5185\u5b58\uff0c\u53ef\u4ee5\u8003\u8651\u5bf9\u8c61\u6c60.\\n\\n[from](https://juejin.cn/post/7209625823580520504)"},{"id":"/todos","metadata":{"permalink":"/blog/todos","source":"@site/blog/todos/index.md","title":"TODO","description":"* go unsafe 2023-3-15 2326","date":"2023-03-15T15:30:34.000Z","formattedDate":"2023\u5e743\u670815\u65e5","tags":[],"readingTime":0.28,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Go \u4e2d\u7684sync poll","permalink":"/blog/2023/03/15/sync_poll"},"nextItem":{"title":"letcode \u6253\u5361","permalink":"/blog/letcode"}},"content":"* go unsafe 2023-3-15 23:22:26\\n* Go\u5f02\u6b65\u4efb\u52a1\u5904\u7406\u89e3\u51b3\u65b9\u6848\uff1aAsynq 2023-3-15 23:21:25\\n* go \u6d4b\u8bd5 testing 2023-3-15 23:21:30\\n* go 1.18\u540e\u6cdb\u578b\u5b66\u4e60 2023-3-15 23:21:35\\n* [CloudWeGo](https://www.cloudwego.io/zh/) \u5b66\u4e60 2023-3-15 23:19:41\\n* gin\u901a\u8fc7embed \u6253\u5305\u9759\u6001\u6587\u4ef6 2023-3-15 23:18:05"},{"id":"/letcode","metadata":{"permalink":"/blog/letcode","source":"@site/blog/letcode/index.md","title":"letcode \u6253\u5361","description":"letcode \u4e2a\u4eba\u5b66\u4e60","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"letcode","permalink":"/blog/tags/letcode"}],"readingTime":0,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"letcode \u6253\u5361","tags":["letcode"],"authors":"ahKevinXy","description":"letcode \u4e2a\u4eba\u5b66\u4e60","keywords":["letcode \u6253\u5361"],"date":"2023-03-07T13:09:13.000Z"},"prevItem":{"title":"TODO","permalink":"/blog/todos"},"nextItem":{"title":"Go defer \u8be6\u89e3","permalink":"/blog/2023/03/07/index"}},"content":""},{"id":"/2023/03/07/index","metadata":{"permalink":"/blog/2023/03/07/index","source":"@site/blog/2023/03/07/index.md","title":"Go defer \u8be6\u89e3","description":"Go defer \u8be6\u89e3","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":3.575,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go defer \u8be6\u89e3","tags":["Go"],"authors":"ahKevinXy","description":"Go defer \u8be6\u89e3","keywords":["Go defer \u8be6\u89e3"],"date":"2023-03-07T13:09:13.000Z"},"prevItem":{"title":"letcode \u6253\u5361","permalink":"/blog/letcode"},"nextItem":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","permalink":"/blog/2023/03/07/sort_go"}},"content":"## \u57fa\u672c\u529f\u80fd\u4ecb\u7ecd\\n\\n1. defer\u662f\u4e00\u79cd\u5ef6\u8fdf\u5904\u7406\u673a\u5236\uff0c\u662f\u5728\u51fd\u6570\u8fdb\u884creturn\u4e4b\u524d\u8fdb\u884c\u6267\u884c\u3002\\n2. defer\u662f\u91c7\u7528\u6808\u7684\u65b9\u5f0f\u6267\u884c\uff0c\u4e5f\u5c31\u662f\u8bf4\u5148\u5b9a\u4e49\u7684defer\u540e\u6267\u884c\uff0c\u540e\u5b9a\u4e49\u7684defer\u6700\u5148\u88ab\u6267\u884c\u3002\\n\\n## \u6269\u5c55\\n\\n1. defer \u6267\u884c\u987a\u5e8f . \u91c7\u7528\u6808\u7684\u65b9\u5f0f\u6267\u884c,\u5148\u5b9a\u4e49\u5148\u6267\u884c\\n2. defer \u4e0e return \u8c01\u5148\u8c01\u6267\u884c return \u4e4b\u540e\u7684\u8bed\u53e5\u5148\u6267\u884c\uff0cdefer \u540e\u7684\u8bed\u53e5\u540e\u6267\u884c\u3002\\n3. \u51fd\u6570\u7684\u8fd4\u56de\u503c\u521d\u59cb\u5316\u4e0e defer \u95f4\u63a5\u5f71\u54cd\u3002defer\u4e2d\u4fee\u6539\u4e86\u8fd4\u56de\u503c\uff0c\u5b9e\u9645\u8fd4\u56de\u7684\u503c\u662f\u6309\u7167defer\u4fee\u6539\u540e\u7684\u503c\u8fdb\u884c\u8fd4\u56de\\n4. defer \u9047\u89c1 panic\u3002\u6309\u7167defer\u7684\u6808\u987a\u5e8f\uff0c\u8f93\u51fapanic\u89e6\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684defer\\n5. defer \u4e2d\u5305\u542b panic\u3002\u6309\u7167defer\u7684\u6808\u987a\u5e8f\uff0c\u8f93\u51fapanic\u89e6\u53d1\u4e4b\u524d\u7684defer\u3002\u5e76\u4e14defer\u4e2d\u4f1a\u63a5\u6536\u5230panic\u4fe1\u606f\u3002\\n6. defer \u4e0b\u7684\u51fd\u6570\u53c2\u6570\u5305\u542b\u5b50\u51fd\u6570\u3002\u4f1a\u5148\u8fdb\u884c\u5b50\u51fd\u6570\u7684\u7ed3\u679c\u503c\uff0c\u7136\u540e\u5728\u6309\u7167\u6808\u7684\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\\n\\n## defer \u4e0epanic\\n\\npanic\u662fGo\u8bed\u8a00\u4e2d\u7684\u4e00\u79cd\u5f02\u5e38\u73b0\u8c61\uff0c\u5b83\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u5e76\u629b\u51fa\u5177\u4f53\u7684\u5f02\u5e38\u4fe1\u606f\\n\\n\u5f53\u51fd\u6570\u4e2d\u53d1\u751f\u4e86panic\u5f02\u5e38\uff0c\u4f1a\u9a6c\u4e0a\u4e2d\u6b62\u5f53\u524d\u51fd\u6570\u7684\u6267\u884c\uff0cpanic\u4e4b\u524d\u5b9a\u4e49\u7684defer\u90fd\u4f1a\u88ab\u6267\u884c\uff0c\u6240\u6709\u7684 defer \u8bed\u53e5\u90fd\u4f1a\u4fdd\u8bc1\u6267\u884c\u5e76\u628a\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u63a5\u6536\u5230 panic \u7684\u51fd\u6570\u8c03\u7528\u8005\u3002\u8fd9\u6837\u5411\u4e0a\u5192\u6ce1\u76f4\u5230\u6700\u9876\u5c42\uff0c\u5e76\u6267\u884c\uff08\u6bcf\u5c42\u7684\uff09 defer\uff0c\u5728\u6808\u9876\u5904\u7a0b\u5e8f\u5d29\u6e83\uff0c\u5e76\u5728\u547d\u4ee4\u884c\u4e2d\u7528\u4f20\u7ed9 panic \u7684\u503c\u62a5\u544a\u9519\u8bef\u60c5\u51b5\uff1a\u8fd9\u4e2a\u7ec8\u6b62\u8fc7\u7a0b\u5c31\u662f panicking\u3002\\n\\n## defer\u4e2d\u5305\u542bpanic\\n\\n\u7a0b\u5e8f\u4e2d\u867d\u7136\u53d1\u751f\u4e86panic\uff0c\u4f46\u662f\u5728panic\u4e4b\u524d\u5b9a\u4e49\u7684defer\u8bed\u53e5\uff0c\u8fd8\u662f\u4f1a\u88ab\u6267\u884c\u3002\u8981\u60f3\u5728defer\u4e2d\u83b7\u53d6\u5230\u5177\u4f53\u7684panic\u4fe1\u606f\uff0c\u9700\u8981\u4f7f\u7528 recover() \u8fdb\u884c\u83b7\u53d6\u3002\\n\\n\u8fd9\u4e2a\uff08recover\uff09\u5185\u5efa\u51fd\u6570\u88ab\u7528\u4e8e\u4ece panic \u6216 \u9519\u8bef\u573a\u666f\u4e2d\u6062\u590d\uff1a\u8ba9\u7a0b\u5e8f\u53ef\u4ee5\u4ece panicking \u91cd\u65b0\u83b7\u5f97\u63a7\u5236\u6743\uff0c\u505c\u6b62\u7ec8\u6b62\u8fc7\u7a0b\u8fdb\u800c\u6062\u590d\u6b63\u5e38\u6267\u884c\u3002\\n\\n## defer\u4e0b\u7684\u51fd\u6570\u53c2\u6570\u5305\u542b\u5b50\u51fd\u6570\\n\\n1. \u6267\u884c\u7b2c1\u4e2adefer\u65f6\uff0c\u538b\u5165defer\u6808\u4e2d\uff0c\u8be5defer\u4f1a\u6267\u884c\u4e00\u4e2afunction\u7684\u51fd\u6570\uff0c\u5728\u51fd\u6570\u8fd4\u56de\u4e4b\u524d\u6267\u884c\\n2. \u56e0\u4e3a\u8be5\u51fd\u6570\u4e2d\u53c8\u5305\u542b\u4e86\u4e00\u4e2a\u51fd\u6570(\u5b50\u51fd\u6570)\uff0cGo\u8bed\u8a00\u5904\u7406\u7684\u673a\u5236\u662f\uff0c\u5148\u6267\u884c\u8be5\u5b50\u51fd\u6570\u3002\\n3. \u6267\u884c\u5b8c\u5b50\u51fd\u6570\uff0c\u63a5\u7740\u518d\u6267\u884c\u7b2c2\u4e2adefer\u8bed\u53e5\u3002\u6b64\u65f6\uff0c\u7b2c2\u4e2adefer\u4e2d\u4e5f\u6709\u4e00\u4e2a\u5b50\u51fd\u6570\uff0c\u6309\u7167\u7b2c2\u70b9\u7684\u903b\u8f91\uff0c\u8fd9\u4e2a\u5b50\u51fd\u6570\u4f1a\u88ab\u76f4\u63a5\u6267\u884c\\n4. \u5b9a\u4e49\u5b8cdefer\u8bed\u53e5\u4e4b\u540e\uff0c\u6b64\u65f6\u7ed3\u675f\u8be5\u51fd\u6570\u7684\u8c03\u7528\u3002\u6240\u6709\u88ab\u5b9a\u4e49\u7684defer\u8bed\u53e5\uff0c\u6309\u7167\u6808\u987a\u5e8f\u8fdb\u884c\u8f93\u51fa\\n\\n\u5f53defer\u4e2d\u5b58\u5728\u5b50\u51fd\u6570\u65f6\uff0c\u5b50\u51fd\u6570\u4f1a\u6309\u7167defer\u5b9a\u4e49\u7684\u8bed\u53e5\u987a\u5e8f\uff0c\u4f18\u5148\u6267\u884c\u3002defer\u6700\u5916\u5c42\u7684\u903b\u8f91\uff0c\u5219\u6309\u7167\u6808\u7684\u987a\u5e8f\u6267\u884c\u3002"},{"id":"/2023/03/07/sort_go","metadata":{"permalink":"/blog/2023/03/07/sort_go","source":"@site/blog/2023/03/07/sort_go.md","title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","description":"Go defer \u8be6\u89e3","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"\u7b97\u6cd5","permalink":"/blog/tags/\u7b97\u6cd5"}],"readingTime":4.965,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","tags":["Go","\u7b97\u6cd5"],"authors":"ahKevinXy","description":"Go defer \u8be6\u89e3","keywords":["Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","\u6392\u5e8f","\u7b97\u6cd5","go"],"date":"2023-03-07T13:09:13.000Z"},"prevItem":{"title":"Go defer \u8be6\u89e3","permalink":"/blog/2023/03/07/index"},"nextItem":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","permalink":"/blog/2023/03/07/three_tools"}},"content":"## \u5192\u6ce1\u6392\u5e8f\\n>\\n> \u539f\u7406\\n\\n\u4ece\u5de6\u5230\u53f3\u904d\u5386\u6570\u7ec4\uff0c\u76f8\u90bb\u5143\u7d20\u4e24\u4e24\u8fdb\u884c\u6bd4\u8f83\u3002\u6bcf\u6b21\u6bd4\u8f83\u5b8c\u4e00\u8f6e\uff0c\u5c31\u4f1a\u627e\u5230\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u6216\u6700\u5c0f\u7684\u4e00\u4e2a\u3002\u8fd9\u4e2a\u6570\u5c31\u4f1a\u4ece\u5e8f\u5217\u7684\u6700\u53f3\u8fb9\u5192\u51fa\u6765\\n\\n## \u9009\u62e9\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u9996\u5148\u5728\u5f00\u59cb\u7684\u65f6\u5019\u904d\u5386\u6574\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u5e8f\u5217\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5143\u7d20\u4e0e\u7b2c\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362\uff0c\u8fd9\u6837\u6700\u5c0f\u7684\u5143\u7d20\u5c31\u653e\u5230\u4e86\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u4e0a\u4e86,\u7136\u540e\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u904d\u5386\uff0c\u627e\u5230\u5269\u4e0b\u7684n-1\u4e2a\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u5143\u7d20\uff0c\u518d\u4e0e\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u4ea4\u6362\u3002\u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u653e\u5230\u4e86\u6700\u7ec8\u4f4d\\n\\n## \u63d2\u5165\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5c06\u4e00\u4e2a\u8bb0\u5f55\u63d2\u5165\u5230\u5df2\u7ecf\u6392\u597d\u5e8f\u7684\u6709\u5e8f\u8868\u4e2d\uff0c\u4ece\u800c\u4e00\u4e2a\u65b0\u7684\u3001\u8bb0\u5f55\u6570\u589e1\u7684\u6709\u5e8f\u8868,\u5728\u5176\u5b9e\u73b0\u8fc7\u7a0b\u4f7f\u7528\u53cc\u5c42\u5faa\u73af\uff0c\u5916\u5c42\u5faa\u73af\u5bf9\u9664\u4e86\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u5916\u7684\u6240\u6709\u5143\u7d20\uff0c\u5185\u5c42\u5faa\u73af\u5bf9\u5f53\u524d\u5143\u7d20\u524d\u9762\u7684\u6709\u5e8f\u8868\u8fdb\u884c\u5f85\u63d2\u5165\u4f4d\u7f6e\u67e5\u627e\uff0c\u5e76\u8fdb\u884c\u79fb\u52a8\\n\\n## \u5feb\u901f\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5feb\u901f\u6392\u5e8f\u8981\u6c42\u6211\u4eec\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\uff0c\u6839\u636e\u8fd9\u4e2a\u57fa\u51c6\u4e3a\u539f\u6570\u7ec4\u5206\u7ec4\uff0c\u6bd4\u57fa\u51c6\u5927\u7684\u4e00\u7ec4\uff0c\u6bd4\u57fa\u51c6\u5c0f\u7684\u4e00\u7ec4\uff0c\u518d\u91cd\u590d\u9012\u5f52\u5730\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u91cd\u65b0\u5408\u5e76\u6bcf\u7ec4\u6392\u5e8f\u540e\u7684\u5e8f\u5217\uff0c\u5373\u4e3a\u6392\u597d\u5e8f\u7684\u5e8f\u5217\\n\\n## \u5f52\u5e76\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5f52\u5e76\u6392\u5e8f\u662f\u91c7\u7528\u5206\u6cbb\u6cd5\u7684\u4e00\u4e2a\u5178\u578b\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5c06\u5df2\u6709\u5e8f\u7684\u5b50\u5e8f\u5217\u5408\u5e76\u4e3a\u4e00\u4e2a\u5b8c\u5168\u6709\u5e8f\u7684\u5e8f\u5217\u3002\\n\\n\u5f52\u5e76\u6392\u5e8f\u7684\u8fc7\u7a0b\u662f\uff1a\u9996\u5148\u5c06\u5e8f\u5217\u62c6\u5206\u6210\u5b50\u5e8f\u5217\uff0c\u7136\u540e\u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u6700\u540e\u5c06\u6392\u5e8f\u597d\u7684\u5b50\u5e8f\u5217\u5408\u5e76\uff0c\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u6709\u5e8f\u7684\u5e8f\u5217\u3002\\n\\n## \u5806\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5148\u6765\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662f\u5806\uff1f\u5806\u662f\u4e00\u79cd\u8fd1\u4f3c\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5206\u4e3a\u5927\u6839\u5806\uff0c\u5c0f\u6839\u5806\u3002\\n\\n\u63a5\u7740\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u5806\u6392\u5e8f\u7684\u8fc7\u7a0b\uff1a\\n\\n1. \u5c06\u5f85\u6392\u5e8f\u5e8f\u5217\u6784\u9020\u6210\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u6b64\u65f6\uff0c\u6574\u4e2a\u6570\u7ec4\u7684\u6700\u5927\u503c\u5c31\u662f\u5806\u7ed3\u6784\u9876\u7aef\u7684\u6839\u8282\u70b9\u3002\\n2. \u5c06\u5806\u6839\u8282\u70b9\u7684\u6570\u4e0e\u672b\u5c3e\u7684\u6570\u4ea4\u6362\uff0c\u6b64\u65f6\uff0c\u672b\u5c3e\u7684\u6570\u4e3a\u6700\u5927\u503c\uff0c\u5269\u4f59\u5f85\u6392\u5e8f\u5e8f\u5217\u4e2a\u6570\u4e3an-1\u3002\\n3. \u5c06\u5269\u4f59\u7684n-1\u4e2a\u6570\u518d\u6784\u9020\u6210\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u518d\u5c06\u9876\u7aef\u6570\u4e0en-1\u4f4d\u7f6e\u7684\u6570\u4ea4\u6362\uff0c\u5982\u6b64\u53cd\u590d\u6267\u884c\uff0c\u4fbf\u80fd\u5f97\u5230\u6709\u5e8f\u6570\u7ec4\u3002\\n\\n## \u5e0c\u5c14\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5e0c\u5c14\u6392\u5e8f\u662f\u628a\u8bb0\u5f55\u6309\u4e0b\u6807\u7684\u4e00\u5b9a\u589e\u91cf\u5206\u7ec4\uff0c\u5bf9\u6bcf\u7ec4\u4f7f\u7528\u76f4\u63a5\u63d2\u5165\u6392\u5e8f\u7b97\u6cd5\u6392\u5e8f\uff1b\u968f\u7740\u589e\u91cf\u9010\u6e10\u51cf\u5c11\uff0c\u6bcf\u7ec4\u5305\u542b\u7684\u5173\u952e\u8bcd\u8d8a\u6765\u8d8a\u591a\uff0c\u5f53\u589e\u91cf\u51cf\u81f31\u65f6\uff0c\u6574\u4e2a\u6587\u4ef6\u6070\u88ab\u5206\u6210\u4e00\u7ec4\uff0c\u7b97\u6cd5\u4fbf\u7ec8\u6b62\u3002\\n\\n## \u8ba1\u6570\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u8ba1\u6570\u6392\u5e8f\u662f\u4e00\u79cd\u901a\u8fc7\u8ba1\u6570\u800c\u4e0d\u662f\u6bd4\u8f83\u8fdb\u884c\u6392\u5e8f\u7684\u7b97\u6cd5\uff0c\u9002\u7528\u4e8e\u8303\u56f4\u8f83\u5c0f\u7684\u6574\u6570\u5e8f\u5217\u3002\\n\u5b83\u7684\u4f18\u52bf\u5728\u4e8e\u5728\u5bf9\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u6574\u6570\u6392\u5e8f\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\u039f(n+k)\uff08\u5176\u4e2dk\u662f\u6574\u6570\u7684\u8303\u56f4\uff09\uff0c\u5feb\u4e8e\u4efb\u4f55\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\u3002\\n\\n## \u6876\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u5c06\u6570\u7ec4\u6309\u7167\u5143\u7d20\u6240\u5c5e\u8303\u56f4\u5206\u5230\u6709\u9650\u6570\u91cf\u7684\u6876\u91cc\uff0c\u518d\u5355\u72ec\u5bf9\u6bcf\u4e2a\u6876\u6392\u5e8f\uff08\u53ef\u4ee5\u4f7f\u7528\u522b\u7684\u6392\u5e8f\u7b97\u6cd5\u6216\u662f\u4ee5\u9012\u5f52\u65b9\u5f0f\u7ee7\u7eed\u4f7f\u7528\u6876\u6392\u5e8f\u8fdb\u884c\u6392\u5e8f\uff09\uff0c\u6700\u540e\u4f9d\u6b21\u628a\u5404\u4e2a\u6876\u4e2d\u7684\u8bb0\u5f55\u5217\u51fa\u6765\u8bb0\u5f97\u5230\u6709\u5e8f\u5e8f\u5217\u3002\\n\\n## \u57fa\u6570\u6392\u5e8f\\n\\n> \u539f\u7406\\n\\n\u4f9d\u6b21\u6309\u7167\u4e2a\u4f4d\u3001\u5341\u4f4d\u3001\u767e\u4f4d...\u7684\u987a\u5e8f\u5bf9\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u6b21\u7684\u5206\u7ec4\u6309\u7167\u7d22\u5f15\u5927\u5c0f\u91cd\u65b0\u7ec4\u6210\u65b0\u7684\u6570\u7ec4\u3002\u6700\u540e\u4e00\u8f6e\u7684\u65b0\u6570\u7ec4\u5373\u4e3a\u6392\u597d\u5e8f\u7684\u6570\u7ec4\\n\\n1. \u6211\u4eec\u6309\u7167\u4e2a\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\u3002\\n2. \u6211\u4eec\u6309\u7167\u5341\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\\n3. \u6211\u4eec\u6309\u7167\u767e\u4f4d\u5c06\u5f85\u6392\u5e8f\u6570\u7ec4\u5206\u7ec4\u3002"},{"id":"/2023/03/07/three_tools","metadata":{"permalink":"/blog/2023/03/07/three_tools","source":"@site/blog/2023/03/07/three_tools.md","title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","description":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":0.13,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","tags":["Go"],"authors":"ahKevinXy","description":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","keywords":["Go\u8bed\u8a00\u4e09\u5251\u5ba2","Go\u8bed\u8a00\u5de5\u5177","go"],"date":"2023-03-07T13:09:13.000Z"},"prevItem":{"title":"Go\u8bed\u8a00\u5b9e\u73b0\u5341\u5927\u6392\u5e8f\u7b97\u6cd5","permalink":"/blog/2023/03/07/sort_go"},"nextItem":{"title":"Go \u4e2d\u7684waitgroup","permalink":"/blog/2023/03/15/wait_group"}},"content":"## [viper](https://github.com/spf13/viper)\\n\\nGo configuration with fangs\\n\\n## [Cobra](https://github.com/spf13/cobra)\\n\\nA Commander for modern Go CLI interactions\\n\\n## [Pflag](https://github.com/spf13/pflag)\\n\\nDrop-in replacement for Go\'s flag package, implementing POSIX/GNU-style --flags."},{"id":"/2023/03/15/wait_group","metadata":{"permalink":"/blog/2023/03/15/wait_group","source":"@site/blog/2023/03/15/wait_group.md","title":"Go \u4e2d\u7684waitgroup","description":"Go \u4e2d\u7684waitgroup","date":"2023-03-07T13:09:13.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Go\u57fa\u7840\u77e5\u8bc6","permalink":"/blog/tags/go\u57fa\u7840\u77e5\u8bc6"}],"readingTime":0.48,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e2d\u7684waitgroup","tags":["Go","Go\u57fa\u7840\u77e5\u8bc6"],"authors":"ahKevinXy","description":"Go \u4e2d\u7684waitgroup","keywords":["Go \u4e2d\u7684waitgroup"],"date":"2023-03-07T13:09:13.000Z"},"prevItem":{"title":"Go\u8bed\u8a00 \u4e09\u5251\u5ba2","permalink":"/blog/2023/03/07/three_tools"},"nextItem":{"title":"\u8d44\u6e90\u6c47\u805a","permalink":"/blog/awesome"}},"content":"## \u4ec0\u4e48\u662fWaitGroup\\n\\n`WaitGroup` \u662f\u540c\u6b65goroutines\u7684\u4e00\u79cd\u6709\u6548\u65b9\u5f0f\uff0c\\n\\n\\n`WaitGroup` \u662f\u901a\u8fc7\u8c03\u7528\u6807\u51c6\u5e93`sync` \u5305\\n\\n```go\\n  var wg sync*WaitGroup\\n\\n```\\n\\nWaitGroup \u6709\u4e09\u4e2a\u91cd\u8981\u7684\u65b9\u6cd5\\n\\n1. Add: \u6dfb\u52a0\u5230\u4f60\u9700\u8981\u7b49\u5f85\u7684goroutines\u7684\u603b\u91cf\u4e0a\\n2. Done: \u4ece\u4f60\u9700\u8981\u7b49\u5f85\u7684goroutines\u4e0a\u51cf\u96641\\n3. Wait: \u963b\u6b62\u4ee3\u7801\u8fdb\u884c\u8fdb\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u6240\u6709\u7684goroutines\u5168\u90e8\u6267\u884c\u5b8c\u6210"},{"id":"/awesome","metadata":{"permalink":"/blog/awesome","source":"@site/blog/awesome/index.md","title":"\u8d44\u6e90\u6c47\u805a","description":"github","date":"2023-03-07T06:45:03.000Z","formattedDate":"2023\u5e743\u67087\u65e5","tags":[],"readingTime":0.005,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Go \u4e2d\u7684waitgroup","permalink":"/blog/2023/03/15/wait_group"},"nextItem":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","permalink":"/blog/2023/03/06/ants"}},"content":"[github](https://github.com/topics/awesome)"},{"id":"/2023/03/06/ants","metadata":{"permalink":"/blog/2023/03/06/ants","source":"@site/blog/2023/03/06/ants.md","title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"ants","permalink":"/blog/tags/ants"}],"readingTime":12.83,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","tags":["Go","ants"],"authors":"ahKevinXy","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","keywords":["\u5185\u5b58\u5bf9\u9f50","Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236"],"date":"2023-03-06T15:17:31.000Z"},"prevItem":{"title":"\u8d44\u6e90\u6c47\u805a","permalink":"/blog/awesome"},"nextItem":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","permalink":"/blog/2023/03/06/memory_struct"}},"content":"## \u7b80\u4ecb\\n\\n### ants\u662f\u4ec0\u4e48\\n\\nants\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 goroutine \u6c60\uff0c\u5b9e\u73b0\u4e86\u5bf9\u5927\u89c4\u6a21 goroutine \u7684\u8c03\u5ea6\u7ba1\u7406\u3001goroutine \u590d\u7528\uff0c\u5141\u8bb8\u4f7f\u7528\u8005\u5728\u5f00\u53d1\u5e76\u53d1\u7a0b\u5e8f\u7684\u65f6\u5019\u9650\u5236 goroutine \u6570\u91cf\uff0c\u590d\u7528\u8d44\u6e90\uff0c\u8fbe\u5230\u66f4\u9ad8\u6548\u6267\u884c\u4efb\u52a1\u7684\u6548\u679c\u3002\\n\\n### \u529f\u80fd\u7279\u70b9\\n\\n* \u81ea\u52a8\u8c03\u5ea6\u6d77\u91cf\u7684 goroutines\uff0c\u590d\u7528 goroutines\\n* \u5b9a\u671f\u6e05\u7406\u8fc7\u671f\u7684 goroutines\uff0c\u8fdb\u4e00\u6b65\u8282\u7701\u8d44\u6e90\\n* \u63d0\u4f9b\u4e86\u5927\u91cf\u6709\u7528\u7684\u63a5\u53e3\uff1a\u4efb\u52a1\u63d0\u4ea4\u3001\u83b7\u53d6\u8fd0\u884c\u4e2d\u7684 goroutine \u6570\u91cf\u3001\u52a8\u6001\u8c03\u6574 Pool \u5927\u5c0f\u3001\u91ca\u653e Pool\u3001\u91cd\u542f Pool\\n* \u4f18\u96c5\u5904\u7406 panic\uff0c\u9632\u6b62\u7a0b\u5e8f\u5d29\u6e83\\n* \u8d44\u6e90\u590d\u7528\uff0c\u6781\u5927\u8282\u7701\u5185\u5b58\u4f7f\u7528\u91cf\uff1b\u5728\u5927\u89c4\u6a21\u6279\u91cf\u5e76\u53d1\u4efb\u52a1\u573a\u666f\u4e0b\u6bd4\u539f\u751f goroutine \u5e76\u53d1\u5177\u6709\u66f4\u9ad8\u7684\u6027\u80fd\\n* \u975e\u963b\u585e\u673a\u5236\\n\\n### ants\u6838\u5fc3\u6982\u5ff5\\n\\n* Pool \uff1a\u534f\u7a0b\u6c60\\n* WorkerArray\uff1aPool\u6c60\u4e2d\u7684worker\u961f\u5217\uff0c\u5b58\u653e\u6240\u6709\u7684goWorker\\n* goWorker\uff1a\u8fd0\u884c\u4efb\u52a1\u7684\u5b9e\u9645\u6267\u884c\u8005\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a goroutine \u6765\u63a5\u53d7\u4efb\u52a1\u5e76\u6267\u884c\u51fd\u6570\u8c03\u7528\u3002\\n\\n## Pool\u534f\u7a0b\u6c60\\n\\n### Pool\u7ed3\u6784\\n\\n> Ants \u63d0\u4f9b\u4e86\u4e24\u79cdPool\u7ed3\u6784\uff1aPool\u548cPoolWithFunc \uff1b\u4f46\u4e24\u8005\u903b\u8f91\u5927\u81f4\u4e00\u6837\uff0c\u672c\u6587\u7740\u91cd\u4ecb\u7ecdPool\u7684\u7ed3\u6784\\n\\n```go\\n // Pool accepts the tasks from client, it limits the total of goroutines to a given number by recycling goroutines.\\ntype Pool struct {\\n // capacity of the pool, a negative value means that the capacity of pool is limitless, an infinite pool is used to\\n // avoid potential issue of endless blocking caused by nested usage of a pool: submitting a task to pool\\n // which submits a new task to the same pool.\\n  // \u534f\u7a0b\u6c60\u7684\u5bb9\u91cf\\n capacity int32\\n\\n // running is the number of the currently running goroutines.\\n  // \u6b63\u5728\u8fd0\u884c\u7684goroutines\u7684\u6570\u91cf\\n running int32\\n\\n // lock for protecting the worker queue.\\n  // \u9501\uff0c\u81ea\u65cb\u9501\uff0c\u4fdd\u62a4\u961f\u5217\\n lock sync.Locker\\n\\n // workers is a slice that store the available workers.\\n  // \u5b58\u653e\u6c60\u4e2d\u6240\u6709\u7684worker,workerArray\u5305\u542b\u53ef\u7528workers\u961f\u5217\u548c\u8fc7\u671fworkers\u961f\u5217\uff0c\u53ea\u4f1a\u4ece\u53ef\u7528workers\u961f\u5217\u4e2d\u53d6\u53ef\u7528worker\\n workers workerArray\\n\\n // state is used to notice the pool to closed itself.\\n  // \u8bb0\u5f55\u6c60\u5b50\u7684\u72b6\u6001 \uff08\u5173\u95ed\u3001\u5f00\u542f\uff09\\n state int32\\n\\n // cond for waiting to get an idle worker.\\n  // \u6761\u4ef6\u53d8\u91cf\\n cond *sync.Cond\\n\\n // workerCache speeds up the obtainment of a usable worker in function:retrieveWorker.\\n  // worker \u5bf9\u8c61\u6c60\\n workerCache sync.Pool\\n\\n // waiting is the number of goroutines already been blocked on pool.Submit(), protected by pool.lock\\n  //\u963b\u585e\u7b49\u5f85\u7684\u4efb\u52a1\u91cf\\n waiting int32\\n // \u6e05\u9053\u592b\uff0c\u5b9a\u65f6\u6e05\u7406workerarray \u961f\u5217\u4e2d\u8fc7\u671f\u7684worker\\n purgeDone int32\\n stopPurge context.CancelFunc\\n // \u5b9a\u65f6\u5668 \u66f4\u65b0pool\u4e2dnow\u7684\u5b57\u6bb5\\n ticktockDone int32\\n stopTicktock context.CancelFunc\\n\\n now atomic.Value\\n // \u9700\u8981\u81ea\u5b9a\u4e49\u52a0\u8f7d\u7684\u914d\u7f6e\\n options *Options\\n}\\n\\n```\\n\\n### Pool\u521b\u5efa\\n\\n```go\\n// NewPool generates an instance of ants pool.\\nfunc NewPool(size int, options ...Option) (*Pool, error) {\\n opts := loadOptions(options...) // \u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684options\u4e2d\u7684\u914d\u7f6e\\n\\n if size <= 0 {\\n  size = -1\\n }\\n\\n if !opts.DisablePurge {// \u5f53 DisablePurge \u4e3a true \u65f6\uff0cworker \u4e0d\u4f1a\u88ab\u6e05\u9664\u5e76\u4e14\u662f\u9a7b\u7559\u7684\u3002\\n  if expiry := opts.ExpiryDuration; expiry < 0 {\\n   return nil, ErrInvalidPoolExpiry\\n  } else if expiry == 0 {\\n   opts.ExpiryDuration = DefaultCleanIntervalTime // \u9ed8\u8ba4\u95f4\u9694\u65f6\u95f41s\\n  }\\n }\\n\\n if opts.Logger == nil {\\n  opts.Logger = defaultLogger\\n }\\n\\n p := &Pool{\\n  capacity: int32(size),\\n  lock:     syncx.NewSpinLock(),//\u81ea\u65cb\u9501\\n  options:  opts,\\n }\\n p.workerCache.New = func() interface{} { //sync.pool \u521d\u59cb\u5316\\n  return &goWorker{\\n   pool: p,\\n   task: make(chan func(), workerChanCap),\\n  }\\n }\\n if p.options.PreAlloc {\\n  if size == -1 {\\n   return nil, ErrInvalidPreAllocSize\\n  }\\n  p.workers = newWorkerArray(loopQueueType, size) //\u5faa\u73af\u961f\u5217\\n } else {\\n  p.workers = newWorkerArray(stackType, 0) //\u6570\u7ec4\\n }\\n\\n p.cond = sync.NewCond(p.lock) // sync.cond\u521d\u59cb\u5316\\n\\n p.goPurge()\\n p.goTicktock()\\n\\n return p, nil\\n}\\n\\n\\n```\\n\\n### \u81ea\u65cb\u9501SpinLock(\u91cd\u70b9)\\n\\n> \u601d\u8003\uff1a\u5982\u4f55\u8bbe\u8ba1\u4e00\u79cd\u81ea\u65cb\u9501\uff0c\u8bbe\u8ba1\u81ea\u65cb\u9501\u65f6\u9700\u8981\u6ce8\u610f\u4ec0\u4e48\uff1f\\n\\nspinLock\u662f\u57fa\u4e8eCAS\u673a\u5236\u548c\u6307\u6570\u9000\u907f\u7b97\u6cd5\u5b9e\u73b0\u7684\u4e00\u79cd\u81ea\u65cb\u9501\\n\\n```go\\npackage sync\\n\\nimport (\\n \\"runtime\\"\\n \\"sync\\"\\n \\"sync/atomic\\"\\n)\\n\\ntype spinLock uint32 // \u5b9e\u73b0sync.Locker\u63a5\u53e3\\n\\nconst maxBackoff = 16 //\u6700\u5927\u7684\u56de\u907f\u6b21\u6570\\n\\nfunc (sl *spinLock) Lock() {\\n backoff := 1\\n  // \u57fa\u4e8eCAS\u673a\u5236\uff0c\u5c1d\u8bd5\u83b7\u53d6\u9501\uff0c\u4e14\u4f7f\u7528\u6307\u6570\u9000\u907f\u7b97\u6cd5\u6765\u63d0\u4f9b\u83b7\u53d6\u9501\u7684\u6210\u529f\u7387\\n for !atomic.CompareAndSwapUint32((*uint32)(sl), 0, 1) {\\n  // Leverage the exponential backoff algorithm, see https://en.wikipedia.org/wiki/Exponential_backoff.\\n  for i := 0; i < backoff; i++ {\\n     //runtime.Gosched()\u51fd\u6570\u529f\u80fd\uff1a\u4f7f\u5f53\u524dgoroutine\u8ba9\u51faCPU\u65f6\u95f4\u7247\uff08\u201c\u56de\u907f\u201d\uff09\uff0c\u8ba9\u5176\u4ed6\u7684goroutine\u83b7\u5f97\u6267\u884c\u7684\u673a\u4f1a\u3002\u5f53\u524d\u7684goroutine\u4f1a\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u95f4\u70b9\u7ee7\u7eed\u8fd0\u884c\u3002\\n    //\u6ce8\u610f\uff1a\u5f53\u4e00\u4e2agoroutine\u53d1\u751f\u963b\u585e\uff0cGo\u4f1a\u81ea\u52a8\u5730\u628a\u4e0e\u8be5goroutine\u5904\u4e8e\u540c\u4e00\u7cfb\u7edf\u7ebf\u7a0b\u7684\u5176\u4ed6goroutines\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u7cfb\u7edf\u7ebf\u7a0b\u4e0a\u53bb\uff0c\u4ee5\u4f7f\u8fd9\u4e9bgoroutines\u4e0d\u963b\u585e\uff08\u4eceGMP\u6a21\u578b\u89d2\u5ea6\u6765\u8bf4\uff0c\u5c31\u662f\u5f53\u4e0eP\u7ed1\u5b9a\u7684M\u53d1\u751f\u963b\u585e\uff0cP\u5c31\u4e0e\u5176\u89e3\u7ed1\uff0c\u7136\u540e\u4e0e\u53e6\u4e00\u4e2a\u7a7a\u95f2\u7684M\u8fdb\u884c\u7ed1\u5b9a \u6216\u8005 \u53bb\u521b\u5efa\u4e00\u4e2aM\u8fdb\u884c\u7ed1\u5b9a\uff09\u3002\\n   runtime.Gosched()\\n  }\\n  if backoff < maxBackoff {\\n   backoff <<= 1\\n  }\\n }\\n}\\n\\nfunc (sl *spinLock) Unlock() {\\n  //\u539f\u5b50\u64cd\u4f5c\uff0c\u5e76\u53d1\u5b89\u5168\\n atomic.StoreUint32((*uint32)(sl), 0)\\n}\\n\\n// NewSpinLock instantiates a spin-lock.\\nfunc NewSpinLock() sync.Locker {\\n return new(spinLock)\\n}\\n\\n\\n```\\n\\nsync.Locker\\n\\n> \u8bbe\u8ba1\u9501\u65f6\u5fc5\u987b\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\\n\\n```go\\n// A Locker represents an object that can be locked and unlocked.\\ntype Locker interface {\\n Lock()\\n Unlock()\\n}\\n\\n```\\n\\n### \u5173\u952e\u77e5\u8bc6\u70b9\\n\\n* sync.Locker\u63a5\u53e3\\n* \u6307\u6570\u9000\u907f\u7b97\u6cd5\\n* atomic \u539f\u5b50\u5305\u4e2d\u7684\u65b9\u6cd5\u4e86\u89e3\\n* runtime.Gosched()\\n\\n## \u4efb\u52a1\u6267\u884c\\n\\n### goWorker\u7684\u7ed3\u6784\\n\\n```go\\n// goWorker is the actual executor who runs the tasks,\\n// it starts a goroutine that accepts tasks and\\n// performs function calls.\\n//goWorker \u662f\u8fd0\u884c\u4efb\u52a1\u7684\u5b9e\u9645\u6267\u884c\u8005\uff0c\u5b83\u542f\u52a8\u4e00\u4e2a goroutine \u6765\u63a5\u53d7\u4efb\u52a1\u5e76\u6267\u884c\u51fd\u6570\u8c03\u7528\u3002\\ntype goWorker struct {\\n // pool who owns this worker.\\n pool *Pool // \u62e5\u6709worker\u7684\u534f\u8bae\u6c60\\n\\n // task is a job should be done.\\n task chan func() // \u9700\u8981\u6267\u884c\u7684\u4efb\u52a1\uff0c\u6ce8\u610f\uff1a\u8be5chan \u53ef\u80fd\u662f\u7f13\u5b58\u533a\u6216\u8005\u975e\u7f13\u5b58\u533a\uff0c\u5982\u679c\u662f\u591a\u6838\u7684\u8bdd\uff0c\u7f13\u5b58\u533a\u7684\u5927\u5c0f\u662f1\\n\\n // recycleTime will be updated when putting a worker back into queue.\\n recycleTime time.Time // \u56de\u6536\u65f6\u95f4\\n}\\n```\\n\\n### goWoker\u7684\u521d\u59cb\u5316\\n\\n> goWorker \u662fsync.pool \u5bf9\u8c61\u6c60\u521b\u5efa\u7684\uff1b\u521d\u59cb\u5316\u5728Pool\u521b\u5efa\u65f6\\n\\n```go\\np.workerCache.New = func() interface{} {\\n  return &goWorker{\\n   pool: p,\\n   task: make(chan func(), workerChanCap),\\n  }\\n }\\n\\n```\\n\\n### workerChanCap\u7684\u503c\\n\\n```go\\n// workerChanCap determines whether the channel of a worker should be a buffered channel\\n // to get the best performance. Inspired by fasthttp at\\n // https://github.com/valyala/fasthttp/blob/master/workerpool.go#L139\\n workerChanCap = func() int {\\n  // Use blocking channel if GOMAXPROCS=1.\\n  // This switches context from sender to receiver immediately,\\n  // which results in higher performance (under go1.5 at least).\\n  if runtime.GOMAXPROCS(0) == 1 {\\n   return 0\\n  }\\n\\n  // Use non-blocking workerChan if GOMAXPROCS>1,\\n  // since otherwise the sender might be dragged down if the receiver is CPU-bound.\\n  return 1\\n }()\\n```\\n\\n### Task \u4efb\u52a1\u63d0\u4ea4\\n\\n```go\\nfunc (p *Pool) Submit(task func()) error {\\n if p.IsClosed() { // \u524d\u7f6e\u68c0\u67e5 \u534f\u7a0b\u6c60\u662f\u5426\u5173\u95ed\\n  return ErrPoolClosed\\n }\\n var w *goWorker\\n if w = p.retrieveWorker(); w == nil { //\u83b7\u53d6\u4e00\u4e2a\u53ef\u7528\u7684worker\u53d6\u6267\u884c\u4efb\u52a1\\n  return ErrPoolOverload\\n }\\n w.task <- task\\n return nil\\n}\\n\\n```\\n\\n### retrieveWorker \uff08\u53ef\u7528worker\u83b7\u53d6\uff09\\n\\n```go\\n// retrieveWorker returns an available worker to run the tasks.\\nfunc (p *Pool) retrieveWorker() (w *goWorker) {\\n spawnWorker := func() { // \u4f7f\u7528sync.pool \u521b\u5efaworker\\n  w = p.workerCache.Get().(*goWorker)\\n  w.run()\\n }\\n\\n p.lock.Lock() // \u81ea\u65cb\u9501 \u52a0\u9501\\n\\n w = p.workers.detach() // \u5c1d\u8bd5\u4eceworker\u6c60\u5b50\u4e2d\u83b7\u53d6\u53ef\u7528\u7684worker\uff0c\u6ce8\uff1a\u4efb\u52a1\u6267\u884c\u5b8c\u540e\uff0c\u4f1a\u56de\u6536worker \u4ee5\u4fbf\u4e0b\u6b21\u4f7f\u7528\\n if w != nil { // first try to fetch the worker from the queue  \u83b7\u53d6\u5230\u8fd4\u56de\\n  p.lock.Unlock()\\n } else if capacity := p.Cap(); capacity == -1 || capacity > p.Running() { // \u5224\u65ad\u6b63\u5728\u8fd0\u884c\u7684worker \u662f\u5426\u8d85\u8fc7 pool\u534f\u7a0b\u8bcd\u8bbe\u7f6e\u7684\u5bb9\u91cf\u5927\u5c0f\uff0c\u6ce8 capacity=-1 \u8868\u793a\u6c60\u5b50\u5bb9\u91cf\u65e0\u9650\u5927\\n  // if the worker queue is empty and we don\'t run out of the pool capacity,\\n  // then just spawn a new worker goroutine.\\n  p.lock.Unlock()\\n  spawnWorker() // \u521b\u5efaworker\\n } else { // otherwise, we\'ll have to keep them blocked and wait for at least one worker to be put back into pool.\\n  if p.options.Nonblocking { // \u5224\u65ad\u534f\u7a0b\u6c60\u662f\u5426 \u662f\u975e\u963b\u585e\u6a21\u5f0f \uff0c\u5982\u679c\u662f\u975e\u963b\u585e\u6a21\u5f0f\u4e0b\u5c31\u76f4\u63a5\u8fd4\u56de\\n   p.lock.Unlock()\\n   return\\n  }\\n retry: // \u963b\u585e\u6a21\u5f0f\u4e0b\u7684\u903b\u8f91\\n    // \u5224\u65ad\u963b\u585e\u7684\u4efb\u52a1\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u4e86\u8bbe\u7f6e\u7684\u6700\u5927\u9608\u503c\uff0c\u5982\u679c\u8d85\u8fc7\u76f4\u63a5\u8fd4\u56de\\n  if p.options.MaxBlockingTasks != 0 && p.Waiting() >= p.options.MaxBlockingTasks {\\n   p.lock.Unlock()\\n   return\\n  }\\n  p.addWaiting(1) // \u963b\u585e\u4efb\u52a1\u6570\u91cf\u52a01\\n  p.cond.Wait() // block and wait for an available worker\\n  p.addWaiting(-1) // \u83b7\u53d6\u5230\u53ef\u7528\u7684worker\u540e\uff0c\u963b\u585e\u6570\u91cf\u51cf\u4e00\\n\\n  if p.IsClosed() { // check pool\u6c60\u662f\u5426\u5173\u95ed\\n   p.lock.Unlock()\\n   return\\n  }\\n\\n  var nw int\\n  if nw = p.Running(); nw == 0 { // \u5982\u679c\u6b63\u5728\u6267\u884c\u7684worker\u6570\u91cf\u4e3a0\u65f6\uff0c\u9700\u8981\u91cd\u65b0\u521b\u5efawoker\\n   p.lock.Unlock()\\n   spawnWorker()\\n   return\\n  }\\n  if w = p.workers.detach(); w == nil { //\u4eceworkerArray\u4e2d\u83b7\u53d6\u53ef\u7528\u7684worker\\n   if nw < p.Cap() { // \u83b7\u53d6\u4e0d\u5230\uff0c\u5224\u65ad\u6b63\u5728\u8fd0\u884c\u7684goroutines\u7684\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u534f\u5c42\u6c60\u7684\u5bb9\u91cf\uff0c\u6ca1\u6709\u5c31\u521b\u5efa\\n    p.lock.Unlock()\\n    spawnWorker()\\n    return\\n   }\\n   goto retry // goto \u91cd\u8bd5\u963b\u585e\u6a21\u5f0f\u4e0b\u83b7\u53d6\u53ef\u7528worker\u7684\u903b\u8f91\\n  }\\n  p.lock.Unlock()\\n }\\n return\\n}\\n\\n```\\n\\n### WorkerArray \u5de5\u4f5c\u6c60\u7684\u7ed3\u6784\\n\\n```go\\n\\ntype workerArray interface {\\n len() int // \u957f\u5ea6\\n isEmpty() bool // \u662f\u5426\u4e3a\u7a7a\\n insert(worker *goWorker) error // \u63d2\u5165\\n detach() *goWorker // \u4eceWorkerArray\u83b7\u53d6\u53ef\u7528\u7684worker\\n retrieveExpiry(duration time.Duration) []*goWorker  //\u6e05\u9053\u592b\u8c03\u7528pool.worker\u4e2d\u7684\u6b64\u65b9\u6cd5\u6765\u6e05\u7406pool.workers\u4e2d\u7684\u8fc7\u671fworker\\n reset() // \u91cd\u7f6e\uff0c\u6e05\u7a7aWorkerArray\u4e2d\u6240\u6709\u7684Worker\\n}\\n\\n\\n\\n```\\n\\nworkerArray \u63a5\u53e3\u7684\u5b9e\u73b0workerStack \u548cloopQueue\\n\\n### \u4efb\u52a1\u6267\u884c\\n\\n```go\\n// run starts a goroutine to repeat the process\\n// that performs the function calls.\\nfunc (w *goWorker) run() {\\n   w.pool.addRunning(1) // pool\u7684running \u52a0 \u4e00\\n   go func() {\\n      defer func() {\\n         w.pool.addRunning(-1)\\n         w.pool.workerCache.Put(w)\\n         if p := recover(); p != nil {\\n            if ph := w.pool.options.PanicHandler; ph != nil {\\n               ph(p)\\n            } else {\\n               w.pool.options.Logger.Printf(\\"worker exits from a panic: %v\\\\n\\", p)\\n               var buf [4096]byte\\n               n := runtime.Stack(buf[:], false)\\n               w.pool.options.Logger.Printf(\\"worker exits from panic: %s\\\\n\\", string(buf[:n]))\\n            }\\n         }\\n         // Call Signal() here in case there are goroutines waiting for available workers.\\n         w.pool.cond.Signal() \\n      }()\\n\\n      for f := range w.task {\\n         if f == nil {\\n            return\\n         }\\n         f() // \u4efb\u52a1\u6267\u884c\\n         if ok := w.pool.revertWorker(w); !ok { // \u56de\u6536woker\\n            return\\n         }\\n      }\\n   }()\\n}\\n\\n```\\n\\n`revertWorker`worker\u56de\u6536\\n\\n> \u903b\u8f91\u7b80\u5355\uff1a1\u3001\u5f80workerArray \u961f\u5217\u4e2d\u63d2\u5165\uff1b2\u3001\u901a\u77e5\u6b63\u5728\u963b\u585e\u83b7\u53d6worker\u7684goroutines\\n\\n```go\\n// revertWorker puts a worker back into free pool, recycling the goroutines.\\nfunc (p *Pool) revertWorker(worker *goWorker) bool {\\n if capacity := p.Cap(); (capacity > 0 && p.Running() > capacity) || p.IsClosed() {\\n  p.cond.Broadcast()\\n  return false\\n }\\n worker.recycleTime = p.nowTime()\\n p.lock.Lock()\\n\\n // To avoid memory leaks, add a double check in the lock scope.\\n // Issue: https://github.com/panjf2000/ants/issues/113\\n if p.IsClosed() {\\n  p.lock.Unlock()\\n  return false\\n }\\n\\n err := p.workers.insert(worker)\\n if err != nil {\\n  p.lock.Unlock()\\n  return false\\n }\\n\\n // Notify the invoker stuck in \'retrieveWorker()\' of there is an available worker in the worker queue.\\n p.cond.Signal()\\n p.lock.Unlock()\\n return true\\n}\\n\\n\\n```\\n\\n### \u5b9a\u65f6\u6e05\u7406\u8fc7\u671f\u7684worker\\n\\n```go\\nfunc (p *Pool) goPurge() {\\n if p.options.DisablePurge {\\n  return\\n }\\n\\n // Start a goroutine to clean up expired workers periodically.\\n var ctx context.Context\\n ctx, p.stopPurge = context.WithCancel(context.Background())\\n go p.purgeStaleWorkers(ctx)\\n}\\n\\n// purgeStaleWorkers clears stale workers periodically, it runs in an individual goroutine, as a scavenger.\\nfunc (p *Pool) purgeStaleWorkers(ctx context.Context) {\\n ticker := time.NewTicker(p.options.ExpiryDuration)\\n\\n defer func() {\\n  ticker.Stop()\\n  atomic.StoreInt32(&p.purgeDone, 1)\\n }()\\n\\n for {\\n  select {\\n  case <-ctx.Done():\\n   return\\n  case <-ticker.C:\\n  }\\n\\n  if p.IsClosed() {\\n   break\\n  }\\n\\n  p.lock.Lock()\\n  expiredWorkers := p.workers.retrieveExpiry(p.options.ExpiryDuration)\\n  p.lock.Unlock()\\n\\n  // Notify obsolete workers to stop.\\n  // This notification must be outside the p.lock, since w.task\\n  // may be blocking and may consume a lot of time if many workers\\n  // are located on non-local CPUs.\\n  for i := range expiredWorkers {\\n   expiredWorkers[i].task <- nil\\n   expiredWorkers[i] = nil\\n  }\\n\\n  // There might be a situation where all workers have been cleaned up(no worker is running),\\n  // or another case where the pool capacity has been Tuned up,\\n  // while some invokers still get stuck in \\"p.cond.Wait()\\",\\n  // then it ought to wake all those invokers.\\n  if p.Running() == 0 || (p.Waiting() > 0 && p.Free() > 0) {\\n   p.cond.Broadcast()\\n  }\\n }\\n}\\n\\n\\n\\n```\\n\\nants\u6e90\u7801 \u81ea\u65cb\u9501\u7684\u8bbe\u8ba1\u3001sync.cond \u6761\u4ef6\u53d8\u91cf \u3001sync.pool \u5bf9\u8c61\u6c60\uff0c\u539f\u5b50\u64cd\u4f5c\uff0cchannel\u901a\u4fe1\u7b49"},{"id":"/2023/03/06/memory_struct","metadata":{"permalink":"/blog/2023/03/06/memory_struct","source":"@site/blog/2023/03/06/memory_struct.md","title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":4.98,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","tags":["Go"],"authors":"ahKevinXy","description":"Go\u7684\u7ed3\u6784\u4f53\u5185\u5b58\u5bf9\u9f50\u673a\u5236","keywords":["\u5185\u5b58","\u4f18\u5316"],"date":"2023-03-06T15:17:31.000Z"},"prevItem":{"title":"\u9ad8\u6027\u80fd\u534f\u7a0b\u6c60ants\u6e90\u7801\u5256\u6790","permalink":"/blog/2023/03/06/ants"},"nextItem":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","permalink":"/blog/2023/03/06/ms"}},"content":"## \u4ec0\u4e48\u662f\u5185\u5b58\u5bf9\u9f50\\n\\n\u4e3a\u4e86\u80fd\u8ba9CPU\u53ef\u4ee5\u66f4\u5feb\u7684\u5b58\u53d6\u5230\u5404\u4e2a\u5b57\u6bb5\uff0cGo\u7f16\u8bd1\u5668\u4f1a\u5e2e\u4f60\u628a`struct\u7ed3\u6784\u4f53`\u505a\u6570\u636e\u7684\u5bf9\u9f50\u3002\u6240\u8c13\u7684\u6570\u636e\u5bf9\u9f50\uff0c\u662f\u6307\u5185\u5b58\u5730\u5740\u662f\u6240\u5b58\u50a8\u6570\u636e\u7684\u5927\u5c0f\uff08\u6309\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u7684\u6574\u6570\u500d\uff0c\u4ee5\u4fbfCU\u53ef\u4ee5\u4e00\u6b21\u5c06\u8be5\u6570\u636e\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u51fa\u6765\u3002\u7f16\u8bd1\u5668\u901a\u8fc7\u5728\u7ed3\u6784\u4f53\u7684\u5404\u4e2a\u5b57\u6bb5\u4e4b\u95f4\u586b\u5145\u4e00\u4e9b\u7a7a\u767d\u5df2\u8fbe\u5230\u5bf9\u9f50\u7684\u76ee\u7684\u3002\\n\\n## \u5bf9\u9f50\u7cfb\u6570\\n\\n\u4e0d\u540c\u786c\u4ef6\u5e73\u53f0\u5360\u7528\u7684\u5927\u5c0f\u548c\u5bf9\u9f50\u503c\u90fd\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\\"\u5bf9\u9f50\u7cfb\u6570\\"\uff0c32\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f4\uff0c64\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f8\\n\\n\u4e0d\u540c\u7c7b\u578b\u7684\u5bf9\u9f50\u7cfb\u6570\u4e5f\u53ef\u80fd\u4e0d\u4e00\u6837\uff0c\u4f7f\u7528Go\u8bed\u8a00\u4e2d\u7684`unsafe.Alignof`\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u76f8\u5e94\u7c7b\u578b\u7684\u5bf9\u9f50\u7cfb\u6570\uff0c\u5bf9\u9f50\u7cfb\u6570\u90fd\u7b26\u54082^n\u8fd9\u4e2a\u89c4\u5f8b\uff0c\u6700\u5927\u4e5f\u4e0d\u4f1a\u8d85\u8fc78\\n\\n```go\\npackage main\\n\\nimport (\\n    \\"fmt\\"\\n    \\"unsafe\\"\\n)\\n\\nfunc main() {\\n    fmt.Printf(\\"bool alignof is %d\\\\n\\", unsafe.Alignof(bool(true)))\\n    fmt.Printf(\\"string alignof is %d\\\\n\\", unsafe.Alignof(string(\\"a\\")))\\n    fmt.Printf(\\"int alignof is %d\\\\n\\", unsafe.Alignof(int(0)))\\n    fmt.Printf(\\"float alignof is %d\\\\n\\", unsafe.Alignof(float64(0)))\\n    fmt.Printf(\\"int32 alignof is %d\\\\n\\", unsafe.Alignof(int32(0)))\\n    fmt.Printf(\\"float32 alignof is %d\\\\n\\", unsafe.Alignof(float32(0)))\\n}\\n```\\n\\n\u53ef\u4ee5\u67e5\u770b\u5230\u5404\u79cd\u7c7b\u578b\u5728Windows 64\u4f4d\u4e0a\u7684\u5bf9\u9f50\u7cfb\u6570\u5982\u4e0b\uff1a\\n\\n```bash\\nbool alignof is 1\\nstring alignof is 8 \\nint alignof is 8    \\nfloat alignof is 8  \\nint32 alignof is 4  \\nfloat32 alignof is 4\\n```\\n\\n## \u7f3a\u70b9\\n\\n\u5b58\u5728\u5185\u5b58\u7a7a\u95f4\u7684\u6d6a\u8d39\uff0c\u5b9e\u9645\u4e0a\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\\n\\n## \u4f18\u70b9\\n\\n1. \u63d0\u9ad8\u53ef\u79fb\u690d\u6027\uff0c\u6709\u4e9bCPU\u53ef\u4ee5\u8bbf\u95ee\u4efb\u610f\u5730\u5740\u4e0a\u7684\u4efb\u610f\u6570\u636e\uff0c\u800c\u6709\u4e9bCPU\u53ea\u80fd\u5728\u7279\u5b9a\u5730\u5740\u8bbf\u95ee\u6570\u636e\uff0c\u56e0\u6b64\u4e0d\u540c\u786c\u4ef6\u5e73\u53f0\u5177\u6709\u5dee\u5f02\u6027\uff0c\u8fd9\u6837\u7684\u4ee3\u7801\u5c31\u4e0d\u5177\u6709\u79fb\u690d\u6027\uff0c\u5982\u679c\u5728\u7f16\u8bd1\u65f6\uff0c\u5c06\u5206\u914d\u7684\u5185\u5b58\u8fdb\u884c\u5bf9\u9f50\uff0c\u8fd9\u5c31\u5177\u6709\u5e73\u53f0\u53ef\u4ee5\u79fb\u690d\u6027\u4e86\\n2. \u63d0\u9ad8\u5185\u5b58\u7684\u8bbf\u95ee\u6548\u7387\uff0c32\u4f4dCPU\u4e0b\u4e00\u6b21\u53ef\u4ee5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d632\u4f4d\uff084\u4e2a\u5b57\u8282\uff09\u7684\u6570\u636e\uff0c64\u4f4dCPU\u4e0b\u4e00\u6b21\u53ef\u4ee5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d664\u4f4d\uff088\u4e2a\u5b57\u8282\uff09\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u957f\u5ea6\u4e5f\u79f0\u4e3aCPU\u7684\u5b57\u957f\u3002CPU\u4e00\u6b21\u53ef\u4ee5\u8bfb\u53d61\u4e2a\u5b57\u957f\u7684\u6570\u636e\u5230\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u6240\u9700\u8981\u8bfb\u53d6\u7684\u6570\u636e\u6b63\u597d\u8de8\u4e861\u4e2a\u5b57\u957f\uff0c\u90a3\u5c31\u5f97\u82b1\u4e24\u4e2aCPU\u5468\u671f\u7684\u65f6\u95f4\u53bb\u8bfb\u53d6\u4e86\u3002\u56e0\u6b64\u5728\u5185\u5b58\u4e2d\u5b58\u653e\u6570\u636e\u65f6\u8fdb\u884c\u5bf9\u9f50\uff0c\u53ef\u4ee5\u63d0\u9ad8\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u3002\\n\\n## \u7ed3\u6784\u4f53\u5bf9\u9f50\u539f\u5219\\n\\n\u5bf9\u9f50\u539f\u5219\uff1a\\n\\n1. \u7b2c\u4e00\u4e2a\u6210\u5458\u5728\u7ed3\u6784\u4f53\u53d8\u91cf\u504f\u79fb\u5904\u4e3a0\u7684\u5730\u5740\u5904\\n2. \u5176\u4ed6\u6210\u5458\u8981\u5bf9\u9f50\u5230\u67d0\u4e2a\u6570\u5b57(\u5bf9\u9f50\u6570)\u7684\u6574\u6570\u500d\u7684\u5730\u5740\u5904\u3002\u5bf9\u9f50\u6570=\u7f16\u8bd1\u5668\u9ed8\u8ba4\u7684\u4e00\u4e2a\u5bf9\u9f50\u6570\u4e0e\u8be5\u6210\u5458\u5927\u5c0f\u7684\u8f83\u5c0f\u503c\u3002\u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\\"\u5bf9\u9f50\u7cfb\u6570\\"\uff0c32\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f4\uff0c64\u4f4d\u7cfb\u7edf\u5bf9\u9f50\u7cfb\u6570\u662f8\u3002\\n3. \u7ed3\u6784\u4f53\u603b\u5927\u5c0f\u4e3a\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\\n4. \u5982\u679c\u5d4c\u5957\u4e86\u7ed3\u6784\u4f53\u7684\u60c5\u51b5\uff0c\u5d4c\u5957\u7684\u7ed3\u6784\u4f53\u5bf9\u9f50\u5230\u81ea\u5df1\u7684\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u5904\uff0c\u7ed3\u6784\u4f53\u6574\u4f53\u5c31\u662f\u6240\u6709\u6700\u5927\u5bf9\u9f50\u6570\u7684\u6574\u6570\u500d\u3002\\n\\n```go\\ntype T1 struct {\\n    i16  int16 // 2 byte\\n    bool bool  // 1 byte\\n}\\n\\ntype T2 struct {\\n    i8  int8  // 1 byte\\n    i64 int64 // 8 byte\\n    i32 int32 // 4 byte\\n}\\n\\ntype T3 struct {\\n    i8  int8  // 1 byte\\n    i32 int32 // 4 byte\\n    i64 int64 // 8 byte\\n}\\n\\nfunc main() {\\n    fmt.Println(runtime.GOARCH) // amd64\\n\\n    t1 := T1{}\\n    fmt.Println(unsafe.Sizeof(t1)) // 4 bytes\\n\\n    t2 := T2{}\\n    fmt.Println(unsafe.Sizeof(t2)) // 24 bytes\\n\\n    t3 := T3{}\\n    fmt.Println(unsafe.Sizeof(t3)) // 16 bytes\\n}\\n```\\n\\n\u4ee5T1 \u7ed3\u6784\\ni16\u5e76\u6ca1\u6709\u76f4\u63a5\u653e\u5728bool\u7684\u540e\u9762\uff0c\u800c\u662f\u5728bool\u4e2d\u586b\u5145\u4e86\u4e00\u4e2a\u7a7a\u767d\u540e\uff0c\u653e\u5230\u4e86\u504f\u79fb\u91cf\u4e3a2\u7684\u4f4d\u7f6e\u4e0a\u3002\u5982\u679ci16\u4ece\u504f\u79fb\u91cf\u4e3a1\u7684\u4f4d\u7f6e\u5f00\u59cb\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u6839\u636e\u5bf9\u9f50\u539f\u52192\uff1a\u6784\u4f53\u53d8\u91cf\u4e2d\u6210\u5458\u7684\u504f\u79fb\u91cf\u5fc5\u987b\u662f\u6210\u5458\u5927\u5c0f\u7684\u6574\u6570\u500d\uff0c\u5957\u7528\u516c\u5f0f 1 % 2 = 1\uff0c\u5c31\u4e0d\u6ee1\u8db3\u5bf9\u9f50\u7684\u8981\u6c42\uff0c\u6240\u4ee5i16\u4ece\u504f\u79fb\u91cf\u4e3a2\u7684\u4f4d\u7f6e\u5f00\u59cb"},{"id":"/2023/03/06/ms","metadata":{"permalink":"/blog/2023/03/06/ms","source":"@site/blog/2023/03/06/ms.md","title":"\u61c2\u79d2\u6740\u7cfb\u7edf","description":"\u61c2\u79d2\u6740\u7cfb\u7edf","date":"2023-03-06T15:17:31.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":0.8,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","tags":["Go"],"authors":"ahKevinXy","description":"\u61c2\u79d2\u6740\u7cfb\u7edf","keywords":["\u61c2\u79d2\u6740\u7cfb\u7edf"],"date":"2023-03-06T15:17:31.000Z"},"prevItem":{"title":"Go\u7684\u5185\u5b58\u5bf9\u9f50\u673a\u5236","permalink":"/blog/2023/03/06/memory_struct"},"nextItem":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","permalink":"/blog/2023/03/06/im"}},"content":"## \u77e5\u8bc6\u70b9\u8be6\u89e3\\n\\n```mermaid\\nflowchart LR;\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u77ac\u65f6\u9ad8\u5e76\u53d1\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u6d3b\u52a8\u9884\u70ed\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u5206\u6279\u6d3b\u52a8\\n    \u77ac\u65f6\u9ad8\u5e76\u53d1 --\x3e \u51c6\u70b9\u6d3b\u52a8\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u6d3b\u52a8\u9875\u9762\\n    \u6d3b\u52a8\u9875\u9762 --\x3e \u9759\u6001\u5316\u5904\u7406\\n    \u6d3b\u52a8\u9875\u9762 --\x3e CDN\u52a0\u901f\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u79d2\u6740\u6309\u94ae\\n    \u79d2\u6740\u6309\u94ae --\x3e js\u63a7\u5236\u72b6\u6001\\n    \u79d2\u6740\u6309\u94ae --\x3e \u968f\u673a\u53c2\u6570\u66f4\u65b0CDN\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u8bfb\u591a\u5199\u5c11\\n    \u8bfb\u591a\u5199\u5c11 --\x3e DB \\n    \u8bfb\u591a\u5199\u5c11 --\x3e \u53ca\u65f6\u7f13\u5b58\\n    \u8bfb\u591a\u5199\u5c11 --\x3e \u591a\u8282\u70b9\u90e8\u7f72\\n    \u79d2\u6740\u7cfb\u7edf --\x3e \u7f13\u5b58\\n    \u7f13\u5b58 --\x3e \u5546\u54c1\u4fe1\u606f\u7f13\u5b58\\n    \u7f13\u5b58 --\x3e \u7f13\u5b58\u51fb\u7a7f\\n    \u7f13\u5b58 --\x3e \u7f13\u5b58\u7a7f\u900f\\n    \u7f13\u5b58 --\x3e \u5e03\u9686\u8fc7\u6ee4\u5668\\n     \\n    \\n\\n\\n\\n  \\n```"},{"id":"/2023/03/06/im","metadata":{"permalink":"/blog/2023/03/06/im","source":"@site/blog/2023/03/06/im.md","title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","description":"IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","date":"2023-03-06T14:10:16.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"im","permalink":"/blog/tags/im"}],"readingTime":2.81,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","tags":["im"],"authors":"ahKevinXy","description":"IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","keywords":["\u5373\u65f6\u901a\u4fe1","\u7f51\u7edc\u6a21\u578b","Socket\u7684\u4f5c\u7528\u4e0e\u7ec4\u6210"],"date":"2023-03-06T14:10:16.000Z"},"prevItem":{"title":"\u61c2\u79d2\u6740\u7cfb\u7edf","permalink":"/blog/2023/03/06/ms"},"nextItem":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","permalink":"/blog/2022/11/28/index"}},"content":"## \u57fa\u7840\u77e5\u8bc6\\n\\n### \u4ec0\u4e48\u662f\u7f51\u7edc\\n\\n* \u5728\u8ba1\u7b97\u673a\u9886\u57df\u4e2d\uff0c\u7f51\u7edc\u662f\u4fe1\u606f\u4f20\u8f93\uff0c\u63a5\u6536\uff0c\u5171\u4eab\u7684\u865a\u62df\u5e73\u53f0\\n* \u901a\u8fc7\u628a\u5404\u4e2a\u70b9\uff0c\u9762\uff0c\u4f53\u7684\u4fe1\u606f\u8054\u7cfb\u5230\u4e00\u8d77\uff0c\u4ece\u800c\u5b9e\u73b0\u8fd9\u4e9b\u8d44\u6e90\u7684\u5171\u4eab\\n\\n### \u4ec0\u4e48\u662f\u7f51\u7edc\u7f16\u7a0b\\n\\n* \u7f51\u7edc\u7f16\u7a0b\u4ece\u5927\u7684\u65b9\u9762\u8bf4\u5c31\u662f\u5bf9\u4fe1\u606f\u7684\u53d1\u9001\u5230\u63a5\u6536\\n* \u901a\u8fc7\u64cd\u4f5c\u76f8\u5bf9\u5e94api\u8c03\u5ea6\u8ba1\u7b97\u673a\u786c\u4ef6\u8d44\u6e90\uff0c\u5e76\u5229\u7528\u4f20\u8f93\u7ba1\u9053\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u8fc7\u7a0b\\n\\n### 7 \u5c42\u7f51\u7edc\u6a21\u578b OSI\\n\\n* \u57fa\u7840\u5c42\uff1a \u7269\u7406\u5c42\uff08physical\uff09,\u6570\u636e\u94fe\u8def\u5c42(datalink),\u7f51\u7edc\u5c42(network)\\n* \u4f20\u8f93\u5c42(Tramsport) :TCP-UDP \u534f\u8bae\u5c42\uff0cSocket\\n* \u9ad8\u7ea7\u5c42\uff1a \u4f1a\u8bdd\u5c42\uff08session\uff09,\u8868\u793a\u5c42(presentation),\u5e94\u7528\u5c42(Application)\\n  \\n### Socket\u7684\u4f5c\u7528\u4e0e\u7ec4\u6210\\n\\n* \u5728\u7f51\u7edc\u4f20\u8f93\u4e2d\u7528\u4e8e\u552f\u4e00\u6807\u793a\u4e24\u4e2a\u7aef\u70b9\u4e4b\u95f4\u7684\u94fe\u63a5\\n* \u7aef\u70b9: \u5305\u62ec\uff08ip+port)\\n* 4\u4e2a\u8981\u7d20\\n\\n### \u62a5\u6587\u6bb5\\n\\n* \u62a5\u6587\u6bb5\u662f\u6307TCP/IP \u534f\u8bae\u7f51\u7edc\u4f20\u8f93\u8fc7\u7a0b\u4e2d\uff0c\u8d77\u5230\u8def\u7531\u5bfc\u822a\u7684\u4f5c\u7528\\n* \u7528\u4ee5\u67e5\u8be2\u5404\u4e2a\u7f51\u7edc\u8def\u7531\u7f51\u6bb5\uff0cIP\u5730\u5740\uff0c\u4ea4\u6362\u534f\u8bae\u7b49IP\u6570\u636e\u5305\\n* \u62a5\u6587\u6bb5\u5145\u5f53\u6574\u4e2aTCP/IP\u534f\u8bae\u6570\u636e\u5305\u7684\u5bfc\u822a\u8def\u7531\u529f\u80fd\\n* \u62a5\u6587\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u5730\u5c01\u88c5\u6210\u5206\u7ec4\uff0c\u5305\uff0c\u5e27\u6765\u4f20\u8f93\\n* \u5c01\u88c5\u65b9\u5f0f\u5c31\u662f\u6dfb\u52a0\u4e00\u4e9b\u63a7\u5236\u4fe1\u606f\u7ec4\u6210\u7684\u9996\u90e8\uff0c\u5373\u62a5\u6587\u5934\\n\\n### \u4f20\u8f93\u534f\u8bae\\n\\n### Mac\u5730\u5740\\n\\n* Media Access Control\\n* \u5a92\u4f53\u8bbf\u95ee\u63a7\u5236\uff0c\u6216\u7269\u7406\u5730\u5740 \u786c\u4ef6\u5730\u5740\\n* \u7528\u6765\u5b9a\u4e49\u7f51\u7edc\u8bbe\u5907\u7684\u4f4d\u7f6e\\n\\n### \u7aef\u53e3\\n\\n* \u7aef\u53e3\u76f8\u5f53\u4e8e\u7a97\u53e3 0-1023 \u53f7\u7aef\u53e3  \u4ee5\u53ca1024-49151 \u53f7\u7aef\u53e3\u90fd\u662f\u7279\u6b8a\u7aef\u53e3\\n* 49142-65525\u52a8\u6001\u7aef\u53e3\\n\\n### UDP\\n\\n* User Datagram Protocol\\n* \u7528\u6237\u6570\u636e\u534f\u8bae\uff0c\u53c8\u79f0\u7528\u6237\u6570\u636e\u62a5\u6587\u534f\u8bae\\n* \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u9762\u5411\u6570\u636e\u62a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u6b63\u5f0f\u89c4\u8303\u4e3aRFC 768\\n* \u7528\u6237\u6570\u636e\u534f\u8bae\uff0c\u975e\u8fde\u63a5\u534f\u8bae\\n* \u4e00\u65e6\u628a\u5e94\u7528\u7a0b\u5e8f\u53d1\u7ed9\u7f51\u7edc\u5c42\u7684\u6570\u636e\u53d1\u9001\u51fa\u53bb\uff0c\u5c31\u4e0d\u4fdd\u7559\u6570\u636e\u5907\u4efd\\n* udp \u5728IP\u6570\u636e\u7684\u62a5\u7684\u5934\u90e8\u4ec5\u4ec5\u52a0\u5165\u4e86\u590d\u7528\u548c\u6570\u636e\u6821\u9a8c\\n* \u53d1\u9001\u7aef\u751f\u4ea7\u6570\u636e\uff0c\u63a5\u6536\u7aef\u4ece\u7f51\u7edc\u4e2d\u6293\u53d6\u6570\u636e\\n* \u7ed3\u6784\u7b80\u5355\uff0c\u65e0\u6821\u9a8c\uff0c\u901f\u5ea6\u5feb\uff0c\u5bb9\u6613\u4e22\u5305\uff0c\u53ef\u5e7f\u64ad\\n* udp \u5305\u6700\u5927\u957f\u5ea6 65535 2^16-1 \u81ea\u8eab\u534f\u8bae\u5360\u7528 32+32 = 64 \u4f4d=8\u5b57\u8282  65535-8=65527\\n\\n### UDP \u6838\u5fc3API"},{"id":"/2022/11/28/index","metadata":{"permalink":"/blog/2022/11/28/index","source":"@site/blog/2022/11/28/index.md","title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","description":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","date":"2023-03-06T13:46:13.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6587\u6863","permalink":"/blog/tags/\u6587\u6863"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","tags":["\u6587\u6863"],"authors":"ahKevinXy","description":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","hide_table_of_contents":false,"date":"2023-03-06T13:46:13.000Z"},"prevItem":{"title":"\u8bb0 IM \u5373\u65f6\u901a\u4fe1\u5f00\u53d1","permalink":"/blog/2023/03/06/im"},"nextItem":{"title":"\u540e\u7aef\u8d44\u6e90","permalink":"/blog/awesome/backend"}},"content":"> \u53c2\u8003 [\u98de\u4eab-\u5373\u65f6\u804a\u5929\u7cfb\u7edf\u6280\u672f\u6587\u6863](https://juejin.cn/post/6854573217747894279)\\n\\n:::info\\n\\n\u4e09\u90e8\u66f2:\\n\\n1. \u6982\u8ff0\\n2. \u7cfb\u7edf\u67b6\u6784\\n3. \u7cfb\u7edf\u6d41\u7a0b\u56fe\\n4. \u7cfb\u7edf\u5173\u952e\u4ecb\u7ecd(\u767b\u5f55\u8bbe\u8ba1,......)\\n5. \u7cfb\u7edf\u63a5\u53e3\u6587\u6863\\n\\n:::"},{"id":"/awesome/backend","metadata":{"permalink":"/blog/awesome/backend","source":"@site/blog/awesome/backend.md","title":"\u540e\u7aef\u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u5982\u4f55\u5199\u597d\u4e00\u4efd\u6280\u672f\u6587\u6863","permalink":"/blog/2022/11/28/index"},"nextItem":{"title":"\u524d\u7aef\u8d44\u6e90","permalink":"/blog/awesome/front"}},"content":""},{"id":"/awesome/front","metadata":{"permalink":"/blog/awesome/front","source":"@site/blog/awesome/front.md","title":"\u524d\u7aef\u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u540e\u7aef\u8d44\u6e90","permalink":"/blog/awesome/backend"},"nextItem":{"title":"Java \u8d44\u6e90","permalink":"/blog/awesome/java"}},"content":""},{"id":"/awesome/java","metadata":{"permalink":"/blog/awesome/java","source":"@site/blog/awesome/java.md","title":"Java \u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u524d\u7aef\u8d44\u6e90","permalink":"/blog/awesome/front"},"nextItem":{"title":"php \u8d44\u6e90","permalink":"/blog/awesome/php"}},"content":""},{"id":"/awesome/php","metadata":{"permalink":"/blog/awesome/php","source":"@site/blog/awesome/php.md","title":"php \u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Java \u8d44\u6e90","permalink":"/blog/awesome/java"},"nextItem":{"title":"react \u8d44\u6e90","permalink":"/blog/awesome/react"}},"content":""},{"id":"/awesome/react","metadata":{"permalink":"/blog/awesome/react","source":"@site/blog/awesome/react.md","title":"react \u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"php \u8d44\u6e90","permalink":"/blog/awesome/php"},"nextItem":{"title":"vue \u8d44\u6e90","permalink":"/blog/awesome/vue"}},"content":""},{"id":"/awesome/vue","metadata":{"permalink":"/blog/awesome/vue","source":"@site/blog/awesome/vue.md","title":"vue \u8d44\u6e90","description":"","date":"2023-03-06T06:00:09.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"react \u8d44\u6e90","permalink":"/blog/awesome/react"},"nextItem":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","permalink":"/blog/2023/03/06/go_chan"}},"content":""},{"id":"/2023/03/06/go_chan","metadata":{"permalink":"/blog/2023/03/06/go_chan","source":"@site/blog/2023/03/06/go_chan.md","title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","description":"","date":"2023-03-06T00:00:00.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6e90\u7801","permalink":"/blog/tags/\u6e90\u7801"},{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":1.98,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","tags":["\u6e90\u7801","Go"],"authors":"ahKevinXy"},"prevItem":{"title":"vue \u8d44\u6e90","permalink":"/blog/awesome/vue"},"nextItem":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","permalink":"/blog/2023/03/06/go_gmp"}},"content":"# hchan\\n\\n```go\\n\\ntype hchan struct {\\n qcount   uint           // \u901a\u9053\u4e2d\u7684\u603b\u6570\u636e total data in the queue\\n dataqsiz uint           // \u5faa\u73af\u961f\u5217\u7684\u5927\u5c0f size of the circular queue\\n buf      unsafe.Pointer // \u6307\u5411dataqsiz\u5143\u7d20\u6570\u7ec4  points to an array of dataqsiz elements\\n elemsize uint16 // \u5927\u5c0f\\n closed   uint32 // \u662f\u5426\u5173\u95ed\\n elemtype *_type // \u8282\u70b9\u7c7b\u578b element type\\n sendx    uint   // \u53d1\u9001\u6570\u636e send index\\n recvx    uint   // \u63a5\u53d7 receive index\\n recvq    waitq  // \u7b49\u5f85\u63a5\u53d7 list of recv waiters\\n sendq    waitq  //  \u7b49\u5f85\u53d1\u9001 list of send waiters\\n\\n // lock protects all fields in hchan, as well as several\\n // fields in sudogs blocked on this channel.\\n //\\n // Do not change another G\'s status while holding this lock\\n // (in particular, do not ready a G), as this can deadlock\\n // with stack shrinking.\\n lock mutex // \u9501\\n}\\n\\n```\\n\\n```go\\ntype waitq struct {\\n first *sudog // \u7b2c\u4e00\u4e2a\\n last  *sudog // \u6700\u540e\u4e00\u4e2a\\n}\\n```\\n\\n```go\\ntype sudog struct {\\n // The following fields are protected by the hchan.lock of the\\n // channel this sudog is blocking on. shrinkstack depends on\\n // this for sudogs involved in channel ops.\\n\\n g *g\\n\\n next *sudog // \u4e0b\u4e00\u4e2a\\n prev *sudog // \u4e0a\u4e00\u4e2a\\n elem unsafe.Pointer // \u6570\u636e\u5143\u7d20(\u53ef\u80fd\u6307\u5411\u5806\u6808)  data element (may point to stack)\\n\\n // The following fields are never accessed concurrently.\\n // For channels, waitlink is only accessed by g.\\n // For semaphores, all fields (including the ones above)\\n // are only accessed when holding a semaRoot lock.\\n\\n acquiretime int64 // \\n releasetime int64 // \\n ticket      uint32 //\\n\\n // isSelect indicates g is participating in a select, so\\n // g.selectDone must be CAS\'d to win the wake-up race.\\n isSelect bool\\n\\n // success indicates whether communication over channel c\\n // succeeded. It is true if the goroutine was awoken because a\\n // value was delivered over channel c, and false if awoken\\n // because c was closed.\\n success bool //\u662f\u5426\u6210\u529f\\n\\n parent   *sudog // semaRoot\u4e8c\u53c9\u6811  semaRoot binary tree\\n waitlink *sudog // g.\u7b49\u5f85\u5217\u8868\u6216semaRoot  g.waiting list or semaRoot\\n waittail *sudog // \u7b49\u5f85 semaRoot\\n c        *hchan // \u901a\u9053 channel\\n}\\n\\n```"},{"id":"/2023/03/06/go_gmp","metadata":{"permalink":"/blog/2023/03/06/go_gmp","source":"@site/blog/2023/03/06/go_gmp.md","title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","description":"path : src/runtime/runtime1.go","date":"2023-03-06T00:00:00.000Z","formattedDate":"2023\u5e743\u67086\u65e5","tags":[{"label":"\u6e90\u7801","permalink":"/blog/tags/\u6e90\u7801"},{"label":"Go","permalink":"/blog/tags/go"}],"readingTime":14.64,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","tags":["\u6e90\u7801","Go"],"authors":"ahKevinXy"},"prevItem":{"title":"Go \u6e90\u7801\u5b66\u4e60 --- chan","permalink":"/blog/2023/03/06/go_chan"},"nextItem":{"title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","permalink":"/blog/2023/03/05/idempotent"}},"content":"> path : src/runtime/runtime1.go\\n\\n> go  version 1.16.1\\n\\n## G\\n\\n```Go\\ntype g struct {\\n // Stack (\u6808)parameters(\u53c2\u6570).\\n // stack describes the actual stack memory: [stack.lo, stack.hi).\\n // stackguard0 is the stack pointer compared in the Go stack growth prologue.\\n//stackguard0\u662f\u5728Go\u5806\u6808\u589e\u957f\u5e8f\u8a00\u4e2d\u6bd4\u8f83\u7684\u5806\u6808\u6307\u9488\\n // It is stack.lo+StackGuard normally, but can be StackPreempt to trigger a preemption.\\n//lo+StackGuard\u6b63\u5e38\uff0c\u4f46\u53ef\u4ee5\u662fStackPreempt\u89e6\u53d1\u62a2\u5360\\n // stackguard1 is the stack pointer compared in the C stack growth prologue.\\n//stackguard1\u662f\u5728C\u5806\u6808\u589e\u957f\u5e8f\u8a00\u4e2d\u6bd4\u8f83\u7684\u5806\u6808\u6307\u9488\\n\\n // It is stack.lo+StackGuard on g0 and gsignal stacks.\\n // It is ~0 on other goroutine stacks, to trigger a call to morestackc (and crash).\\n stack       stack   // offset known to runtime/cgo \u5df2\u77e5\u7684\u504f\u79fb\u91cf\u4e3aruntime/cgo\\n stackguard0 uintptr // offset known to liblink \u5df2\u77e5liblink\u7684\u504f\u79fb\u91cf\\n stackguard1 uintptr // offset known to liblink\\n\\n _panic       *_panic // innermost panic - offset known to liblink\\n _defer       *_defer // innermost defer\\n m            *m      // current m; offset known to arm liblink\\n sched        gobuf\\n syscallsp    uintptr        // if status==Gsyscall, syscallsp = sched.sp to use during gc\\n syscallpc    uintptr        // if status==Gsyscall, syscallpc = sched.pc to use during gc\\n stktopsp     uintptr        // expected sp at top of stack, to check in traceback\\n param        unsafe.Pointer // passed parameter on wakeup\\n atomicstatus uint32\\n stackLock    uint32 // sigprof/scang lock; TODO: fold in to atomicstatus\\n goid         int64\\n schedlink    guintptr\\n waitsince    int64      // approx time when the g become blocked\\n waitreason   waitReason // if status==Gwaiting\\n\\n preempt       bool // preemption signal, duplicates stackguard0 = stackpreempt\\n preemptStop   bool // transition to _Gpreempted on preemption; otherwise, just deschedule\\n preemptShrink bool // shrink stack at synchronous safe point\\n\\n // asyncSafePoint is set if g is stopped at an asynchronous\\n // safe point. This means there are frames on the stack\\n // without precise pointer information.\\n asyncSafePoint bool\\n\\n paniconfault bool // panic (instead of crash) on unexpected fault address\\n gcscandone   bool // g has scanned stack; protected by _Gscan bit in status\\n throwsplit   bool // must not split stack\\n // activeStackChans indicates that there are unlocked channels\\n // pointing into this goroutine\'s stack. If true, stack\\n // copying needs to acquire channel locks to protect these\\n // areas of the stack.\\n activeStackChans bool\\n // parkingOnChan indicates that the goroutine is about to\\n // park on a chansend or chanrecv. Used to signal an unsafe point\\n // for stack shrinking. It\'s a boolean value, but is updated atomically.\\n parkingOnChan uint8\\n\\n raceignore     int8     // ignore race detection events\\n sysblocktraced bool     // StartTrace has emitted EvGoInSyscall about this goroutine\\n sysexitticks   int64    // cputicks when syscall has returned (for tracing)\\n traceseq       uint64   // trace event sequencer\\n tracelastp     puintptr // last P emitted an event for this goroutine\\n lockedm        muintptr\\n sig            uint32\\n writebuf       []byte\\n sigcode0       uintptr\\n sigcode1       uintptr\\n sigpc          uintptr\\n gopc           uintptr         // pc of go statement that created this goroutine\\n ancestors      *[]ancestorInfo // ancestor information goroutine(s) that created this goroutine (only used if debug.tracebackancestors)\\n startpc        uintptr         // pc of goroutine function\\n racectx        uintptr\\n waiting        *sudog         // sudog structures this g is waiting on (that have a valid elem ptr); in lock order\\n cgoCtxt        []uintptr      // cgo traceback context\\n labels         unsafe.Pointer // profiler labels\\n timer          *timer         // cached timer for time.Sleep\\n selectDone     uint32         // are we participating in a select and did someone win the race?\\n\\n // Per-G GC state\\n\\n // gcAssistBytes is this G\'s GC assist credit in terms of\\n // bytes allocated. If this is positive, then the G has credit\\n // to allocate gcAssistBytes bytes without assisting. If this\\n // is negative, then the G must correct this by performing\\n // scan work. We track this in bytes to make it fast to update\\n // and check for debt in the malloc hot path. The assist ratio\\n // determines how this corresponds to scan work debt.\\n gcAssistBytes int64\\n}\\n```\\n\\n## M\\n\\n```go\\n\\ntype m struct {\\n g0      *g     // goroutine with scheduling stack\\n morebuf gobuf  // gobuf arg to morestack\\n divmod  uint32 // div/mod denominator for arm - known to liblink\\n\\n // Fields not known to debuggers.\\n procid        uint64       // for debuggers, but offset not hard-coded\\n gsignal       *g           // signal-handling g\\n goSigStack    gsignalStack // Go-allocated signal handling stack\\n sigmask       sigset       // storage for saved signal mask\\n tls           [6]uintptr   // thread-local storage (for x86 extern register)\\n mstartfn      func()\\n curg          *g       // current running goroutine\\n caughtsig     guintptr // goroutine running during fatal signal\\n p             puintptr // attached p for executing go code (nil if not executing go code)\\n nextp         puintptr\\n oldp          puintptr // the p that was attached before executing a syscall\\n id            int64\\n mallocing     int32\\n throwing      int32\\n preemptoff    string // if != \\"\\", keep curg running on this m\\n locks         int32\\n dying         int32\\n profilehz     int32\\n spinning      bool // m is out of work and is actively looking for work\\n blocked       bool // m is blocked on a note\\n newSigstack   bool // minit on C thread called sigaltstack\\n printlock     int8\\n incgo         bool   // m is executing a cgo call\\n freeWait      uint32 // if == 0, safe to free g0 and delete m (atomic)\\n fastrand      [2]uint32\\n needextram    bool\\n traceback     uint8\\n ncgocall      uint64      // number of cgo calls in total\\n ncgo          int32       // number of cgo calls currently in progress\\n cgoCallersUse uint32      // if non-zero, cgoCallers in use temporarily\\n cgoCallers    *cgoCallers // cgo traceback if crashing in cgo call\\n doesPark      bool        // non-P running threads: sysmon and newmHandoff never use .park\\n park          note\\n alllink       *m // on allm\\n schedlink     muintptr\\n lockedg       guintptr\\n createstack   [32]uintptr // stack that created this thread.\\n lockedExt     uint32      // tracking for external LockOSThread\\n lockedInt     uint32      // tracking for internal lockOSThread\\n nextwaitm     muintptr    // next m waiting for lock\\n waitunlockf   func(*g, unsafe.Pointer) bool\\n waitlock      unsafe.Pointer\\n waittraceev   byte\\n waittraceskip int\\n startingtrace bool\\n syscalltick   uint32\\n freelink      *m // on sched.freem\\n\\n // mFixup is used to synchronize OS related m state (credentials etc)\\n // use mutex to access.\\n mFixup struct {\\n  lock mutex\\n  fn   func(bool) bool\\n }\\n\\n // these are here because they are too large to be on the stack\\n // of low-level NOSPLIT functions.\\n libcall   libcall\\n libcallpc uintptr // for cpu profiler\\n libcallsp uintptr\\n libcallg  guintptr\\n syscall   libcall // stores syscall parameters on windows\\n\\n vdsoSP uintptr // SP for traceback while in VDSO call (0 if not in call)\\n vdsoPC uintptr // PC for traceback while in VDSO call\\n\\n // preemptGen counts the number of completed preemption\\n // signals. This is used to detect when a preemption is\\n // requested, but fails. Accessed atomically.\\n preemptGen uint32\\n\\n // Whether this is a pending preemption signal on this M.\\n // Accessed atomically.\\n signalPending uint32\\n\\n dlogPerM\\n\\n mOS\\n\\n // Up to 10 locks held by this m, maintained by the lock ranking code.\\n locksHeldLen int\\n locksHeld    [10]heldLockInfo\\n}\\n\\n```\\n\\n## P\\n\\n```go\\n\\ntype p struct {\\n id          int32\\n status      uint32 // one of pidle/prunning/...\\n link        puintptr\\n schedtick   uint32     // incremented on every scheduler call\\n syscalltick uint32     // incremented on every system call\\n sysmontick  sysmontick // last tick observed by sysmon\\n m           muintptr   // back-link to associated m (nil if idle)\\n mcache      *mcache\\n pcache      pageCache\\n raceprocctx uintptr\\n\\n deferpool    [5][]*_defer // pool of available defer structs of different sizes (see panic.go)\\n deferpoolbuf [5][32]*_defer\\n\\n // Cache of goroutine ids, amortizes accesses to runtime\xb7sched.goidgen.\\n goidcache    uint64\\n goidcacheend uint64\\n\\n // Queue of runnable goroutines. Accessed without lock.\\n runqhead uint32\\n runqtail uint32\\n runq     [256]guintptr\\n // runnext, if non-nil, is a runnable G that was ready\'d by\\n // the current G and should be run next instead of what\'s in\\n // runq if there\'s time remaining in the running G\'s time\\n // slice. It will inherit the time left in the current time\\n // slice. If a set of goroutines is locked in a\\n // communicate-and-wait pattern, this schedules that set as a\\n // unit and eliminates the (potentially large) scheduling\\n // latency that otherwise arises from adding the ready\'d\\n // goroutines to the end of the run queue.\\n runnext guintptr\\n\\n // Available G\'s (status == Gdead)\\n gFree struct {\\n  gList\\n  n int32\\n }\\n\\n sudogcache []*sudog\\n sudogbuf   [128]*sudog\\n\\n // Cache of mspan objects from the heap.\\n mspancache struct {\\n  // We need an explicit length here because this field is used\\n  // in allocation codepaths where write barriers are not allowed,\\n  // and eliminating the write barrier/keeping it eliminated from\\n  // slice updates is tricky, moreso than just managing the length\\n  // ourselves.\\n  len int\\n  buf [128]*mspan\\n }\\n\\n tracebuf traceBufPtr\\n\\n // traceSweep indicates the sweep events should be traced.\\n // This is used to defer the sweep start event until a span\\n // has actually been swept.\\n traceSweep bool\\n // traceSwept and traceReclaimed track the number of bytes\\n // swept and reclaimed by sweeping in the current sweep loop.\\n traceSwept, traceReclaimed uintptr\\n\\n palloc persistentAlloc // per-P to avoid mutex\\n\\n _ uint32 // Alignment for atomic fields below\\n\\n // The when field of the first entry on the timer heap.\\n // This is updated using atomic functions.\\n // This is 0 if the timer heap is empty.\\n timer0When uint64\\n\\n // The earliest known nextwhen field of a timer with\\n // timerModifiedEarlier status. Because the timer may have been\\n // modified again, there need not be any timer with this value.\\n // This is updated using atomic functions.\\n // This is 0 if the value is unknown.\\n timerModifiedEarliest uint64\\n\\n // Per-P GC state\\n gcAssistTime         int64 // Nanoseconds in assistAlloc\\n gcFractionalMarkTime int64 // Nanoseconds in fractional mark worker (atomic)\\n\\n // gcMarkWorkerMode is the mode for the next mark worker to run in.\\n // That is, this is used to communicate with the worker goroutine\\n // selected for immediate execution by\\n // gcController.findRunnableGCWorker. When scheduling other goroutines,\\n // this field must be set to gcMarkWorkerNotWorker.\\n gcMarkWorkerMode gcMarkWorkerMode\\n // gcMarkWorkerStartTime is the nanotime() at which the most recent\\n // mark worker started.\\n gcMarkWorkerStartTime int64\\n\\n // gcw is this P\'s GC work buffer cache. The work buffer is\\n // filled by write barriers, drained by mutator assists, and\\n // disposed on certain GC state transitions.\\n gcw gcWork\\n\\n // wbBuf is this P\'s GC write barrier buffer.\\n //\\n // TODO: Consider caching this in the running G.\\n wbBuf wbBuf\\n\\n runSafePointFn uint32 // if 1, run sched.safePointFn at next safe point\\n\\n // statsSeq is a counter indicating whether this P is currently\\n // writing any stats. Its value is even when not, odd when it is.\\n statsSeq uint32\\n\\n // Lock for timers. We normally access the timers while running\\n // on this P, but the scheduler can also do it from a different P.\\n timersLock mutex\\n\\n // Actions to take at some time. This is used to implement the\\n // standard library\'s time package.\\n // Must hold timersLock to access.\\n timers []*timer\\n\\n // Number of timers in P\'s heap.\\n // Modified using atomic instructions.\\n numTimers uint32\\n\\n // Number of timerModifiedEarlier timers on P\'s heap.\\n // This should only be modified while holding timersLock,\\n // or while the timer status is in a transient state\\n // such as timerModifying.\\n adjustTimers uint32\\n\\n // Number of timerDeleted timers in P\'s heap.\\n // Modified using atomic instructions.\\n deletedTimers uint32\\n\\n // Race context used while executing timer functions.\\n timerRaceCtx uintptr\\n\\n // preempt is set to indicate that this P should be enter the\\n // scheduler ASAP (regardless of what G is running on it).\\n preempt bool\\n\\n pad cpu.CacheLinePad\\n}\\n\\n```\\n\\n## Go \u7684\u6a21\u578b\u8c03\u5ea6\\n\\nM(thread) \u5185\u6838\u7ebf\u7a0b   , P(processor) \u8fdb\u7a0b ,G (goroutine) \u534f\u7a0b\\n\\n* G :  Go \u8fd0\u884c\u65f6\u5bf9goroutine\u7684\u63cf\u8ff0,G\u4e2d\u5b58\u653e\u5e76\u53d1\u6267\u884c\u7684 `\u4ee3\u7801\u5165\u53e3\u5730\u5740`,`\u4e0a\u4e0b\u6587`,`\u8fd0\u884c\u73af\u5883` (\u5173\u8054\u7684P\u548cM),\u8fd0\u884c\u6808\u7b49\u6267\u884c\u76f8\u5173\u7684\u4fe1\u606f,G\u7684\u65b0\u5efa,\u4f11\u7720,\u6062\u590d,\u505c\u6b62\u90fd\u53d7\u5230Go\u8fd0\u884c\u65f6\u7684\u7ba1\u7406\\n\\nGO\u8fd0\u884c\u65f6\u7684\u76d1\u63a7\u7ebf\u7a0b\u4f1a\u76d1\u63a7G\u7684\u8c03\u5ea6\uff0cG\u4e0d\u4f1a\u957f\u4e45\u5730\u963b\u585e\u7cfb\u7edf\u7ebf\u7a0b\uff0c\u8fd0\u884c\u65f6\u7684\u8c03\u5ea6\u5668\u4f1a\u81ea\u52a8\u5207\u6362\u5230\u5176\u4ed6G\u4e0a\u8fd0\u884c\u3002G\u65b0\u5efa\u6216\u6062\u590d\u65f6\u4f1a\u6dfb\u52a0\u5230\u8fd0\u884c\u961f\u5217\uff0c\u7b49\u5f85M\u53d6\u51fa\u5e76\u8fd0\u884c\u3002\\n\\n* M : OS\u5185\u6838\u7ebf\u7a0b,\u662f\u64cd\u4f5c\u7cfb\u7edf\u5c42\u9762\u8c03\u5ea6\u548c\u6267\u884c\u7684\u5b9e\u4f53.M\u4ec5\u8d1f\u8d23\u6267\u884c,M\u4e0d\u505c\u7684\u5524\u9192\u6216\u521b\u5efa,\u7136\u540e\u6267\u884c\\n\\n* P : \u4ee3\u8868M\u548cP\u6240\u9700\u8981\u7684\u8d44\u6e90,\u662f\u5bf9\u8d44\u6e90\u7684\u4e00\u79cd\u62bd\u8c61\u7ba1\u7406,P \u4e0d\u662f\u4e00\u6bb5\u4ee3\u7801\u5b9e\u4f53,\u800c\u662f\u4e00\u4e2a\u7ba1\u7406\u7684\u6570\u636e\u7ed3\u6784,P\u4e3b\u8981\u662f\u964d\u4f4e M\u5bf9G\u7684\u590d\u6742\u6027,\u589e\u52a0\u4e00\u4e2a\u95f4\u63a5\u7684\u63a7\u5236\u5c42\u6570\u636e\u7ed3\u6784,`P\u63a7\u5236Go\u7684\u5e76\u884c\u5ea6`,\u5b83\u4e0d\u662f\u5b9e\u4f53\\n\\nP\u6301\u6709G\u7684\u961f\u5217\uff0cP\u53ef\u4ee5\u9694\u79bb\u8c03\u5ea6\uff0c\u89e3\u9664P\u548cM\u7684\u7ed1\u5b9a\u5c31\u89e3\u9664\u4e86M\u5bf9\u4e00\u4e32G\u7684\u8c03\u7528\u3002\\n\\nG\u5e76\u4e0d\u662f\u6267\u884c\u4f53\uff0c\u800c\u662f\u5b58\u653e\u5e76\u53d1\u6267\u884c\u4f53\u7684\u5143\u4fe1\u606f\uff0c\u5305\u62ec\u5e76\u53d1\u6267\u884c\u7684\u5165\u53e3\u51fd\u6570\u3001\u5806\u6808\u3001\u4e0a\u4e0b\u6587\u7b49\u4fe1\u606f\u3002G\u7531\u4e8e\u4fdd\u5b58\u7684\u662f\u5143\u4fe1\u606f\uff0c\u4e3a\u4e86\u51cf\u5c11\u5bf9\u8c61\u7684\u5206\u914d\u548c\u56de\u6536\uff0cG\u5bf9\u8c61\u662f\u53ef\u4ee5\u590d\u7528\uff0c\u53ea\u9700\u8981\u5c06\u76f8\u5173\u5143\u4fe1\u606f\u521d\u59cb\u5316\u4e3a\u65b0\u503c\u5373\u53ef\u3002\\n\\nM\u4ec5\u8d1f\u8d23\u6267\u884c\uff0cM\u542f\u52a8\u65f6\u8fdb\u5165\u8fd0\u884c\u65f6\u7684\u7ba1\u7406\u4ee3\u7801\uff0c\u8fd9\u6bb5\u7ba1\u7406\u4ee3\u7801\u5fc5\u987b\u62ff\u5230P\u540e\uff0c\u624d\u80fd\u6267\u884c\u8c03\u5ea6\u3002\\n\\nP\u7684\u6570\u76ee\u9ed8\u8ba4\u662fCPU\u6838\u5fc3\u7684\u6570\u91cf\u3002M\u548cP\u7684\u6570\u76ee\u5dee\u4e0d\u591a\uff0c\u4f46\u8fd0\u884c\u65f6\u4f1a\u6839\u636e\u5f53\u524d\u7684\u72b6\u6001\u52a8\u6001\u5730\u521b\u5efaM\uff0cM\u6709\u4e00\u4e2a\u6700\u5927\u503c\u4e0a\u9650\uff1a10000\uff1bG\u4e0eP\u662fM:N\u7684\u5173\u7cfb\uff0cM\u53ef\u4ee5\u6210\u5343\u4e0a\u4e07\uff0c\u8fdc\u8fdc\u5927\u4e8eN.\\n\\n## Work Stealing\u7b97\u6cd5\u7684\u57fa\u672c\u539f\u7406\\n\\n    M\u548cP\u6784\u6210\u4e00\u4e2a\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u6bcf\u4e2aP\u6709\u4e00\u4e2a\u672c\u5730\u7684\u53ef\u8c03\u5ea6\u7684G\u961f\u5217\uff0c\u961f\u5217\u91cc\u9762\u7684G\u4f1a\u88abM\u4f9d\u6b21\u8c03\u5ea6\u6267\u884c\uff0c\u5982\u679c\u672c\u5730\u961f\u5217\u7a7a\u4e86\uff0c\u5219\u53bb\u5168\u5c40\u961f\u5217\u5077\u53d6\u4e00\u90e8\u5206G\uff0c\u5982\u679c\u5168\u5c40\u961f\u5217\u4e5f\u662f\u7a7a\u7684\uff0c\u5219\u53bb\u5176\u4ed6\u7684P\u4e2d\u5077\u53d6\u4e00\u90e8\u5206G\u3002\\n\\n## \u4ec0\u4e48\u65f6\u5019\u521b\u5efaM\u3001P\u3001G\\n\\n\u5728\u7a0b\u5e8f\u542f\u52a8\u8fc7\u7a0b\u4e2d\u4f1a\u521d\u59cb\u5316\u7a7a\u95f2P\u5217\u8868\uff0cP\u662f\u8fd9\u4e2a\u65f6\u5019\u521b\u5efa\u7684\uff0c\u540c\u65f6\u7b2c\u4e00\u4e2aG\u4e5f\u662f\u5728\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u88ab\u521b\u5efa\u7684\u3002\\n\\n\u6bcf\u4e2a\u5e76\u53d1\u8c03\u7528\u90fd\u4f1a\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u7684G\u4efb\u52a1\uff0c\u5982\u4f55\u5524\u9192M\u6267\u884c\u4efb\u52a1\u3002\u8fd9\u4e2a\u5524\u9192\u4e0d\u662f\u7279\u5b9a\u5524\u9192\u67d0\u4e2a\u7ebf\u7a0b\u53bb\u5de5\u4f5c\uff0c\u800c\u662f\u5148\u5c1d\u8bd5\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0bM\uff0c\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\uff0c\u5219\u4ece\u5168\u5c40\u8c03\u5ea6\u7684\u7a7a\u95f2M\u5217\u8868\u4e2d\u83b7\u53d6\u53ef\u7528\u7684M\uff0c\u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684M\uff0c\u5219\u65b0\u5efaM\uff0c\u7136\u540e\u7ed1\u5b9aP\u548cGY\u8fd0\u884c\u3002M\u548cP\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u800c\u662f\u6309\u9700\u5206\u914d\u7684\\n\\nM\u7ebf\u7a0b\u6709\u7ba1\u7406\u8c03\u5ea6\u548c\u5207\u6362\u5806\u6808\u7684\u903b\u8f91\uff0c\u4f46\u662fM\u5fc5\u987b\u62ff\u5230P\u540e\u624d\u80fd\u8fd0\u884c\uff0c\u53ef\u7528\u770b\u5230M\u662f\u81ea\u9a71\u52a8\u7684\uff0c\u5355\u9700\u8981P\u7684\u914d\u5408\u3002\\n\\n\\n## goroutine\u7ecf\u5386\u7684\u8fc7\u7a0b\\n\\n1. \u901a\u8fc7go func()\u6765\u521b\u5efa\u4e00\u4e2a goroutine\\n2. \u6709\u4e24\u4e2a\u5b58\u50a8\u7684G\u961f\u5217,\u4e00\u4e2a\u662f\u5c40\u90e8\u8c03\u5ea6\u5668P\u7684\u672c\u5730\u961f\u5217,\u4e00\u4e2a\u662f\u5168\u5c40G\u961f\u5217,\u65b0\u521b\u5efa\u7684G\u4f1a\u5148\u4fdd\u5b58\u5728P\u7684\u672c\u5730\u961f\u5217\u4e2d,\u5982\u679cP\u7684\u672c\u5730\u961f\u5217\u5df2\u7ecf\u6ee1\u4e86\u5c31\u4f1a\u4fdd\u5b58\u5728\u5168\u5c40\u961f\u5217\u4e2d\\n3. G\u53ea\u80fd\u8fd0\u884c\u5728M\u4e2d,\u4e00\u4e2aM\u5fc5\u987b\u6709\u4e00\u4e2aP,M\u4e0eP\u662f1:1\u7684\u5173\u7cfb. M\u4f1a\u5bf9P\u7684\u672c\u5730\u961f\u5217\u5f39\u51fa\u4e00\u4e2a\u53ef\u6267\u884c\u72b6\u6001\u7684G\u6765\u6267\u884c,\u5982\u679cP\u7684\u672c\u5730\u961f\u5217\u4e3a\u7a7a,\u5c31\u4f1a\u5411\u5176\u5b83\u7684MP\u7ec4\u5408\u53d6\u4e00\u4e2a\u53ef\u6267\u884c\u7684G\u6765\u6267\u884c\\n4. \u4e00\u4e2aM \u8c03\u5ea6\u6267\u884c\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u5faa\u73af\u673a\u5236\\n5. \u5f53 M\u6267\u884c\u67d0\u4e00\u4e2aG \u65f6\u5019 \u5982\u679c\u53d1\u751f\u4e86 syscall\u6216\u5176\u4f59\u963b\u585e\u64cd\u4f5c,M\u4f1a\u963b\u585e,\u5982\u679c"},{"id":"/2023/03/05/idempotent","metadata":{"permalink":"/blog/2023/03/05/idempotent","source":"@site/blog/2023/03/05/idempotent.md","title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","description":"\u9ad8\u5e76\u53d1\u5e42\u7b49\u89e3\u51b3\u65b9\u6848","date":"2023-03-05T00:00:00.000Z","formattedDate":"2023\u5e743\u67085\u65e5","tags":[{"label":"\u9ad8\u5e76\u53d1","permalink":"/blog/tags/\u9ad8\u5e76\u53d1"},{"label":"\u5e42\u7b49","permalink":"/blog/tags/\u5e42\u7b49"},{"label":"\u89e3\u51b3\u65b9\u6848","permalink":"/blog/tags/\u89e3\u51b3\u65b9\u6848"}],"readingTime":14.8,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"tags":["\u9ad8\u5e76\u53d1","\u5e42\u7b49","\u89e3\u51b3\u65b9\u6848"],"authors":"ahKevinXy","description":"\u9ad8\u5e76\u53d1\u5e42\u7b49\u89e3\u51b3\u65b9\u6848","hide_table_of_contents":false,"image":"https://img.kuizuo.cn/v2-45d641f2191559d4eff581d0607efd61_1440w.jpg"},"prevItem":{"title":"\u6e90\u7801 \u4e0a\u89e3\u8bfb GMP\u6a21\u578b","permalink":"/blog/2023/03/06/go_gmp"},"nextItem":{"title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","permalink":"/blog/2023/03/05/index"}},"content":"[from](https://mp.weixin.qq.com/s?__biz=MzkwNjMwMTgzMQ==&mid=2247490307&idx=1&sn=b9eeb427c33cb171da6c3f11243a88f4&chksm=c0ebc3ebf79c4afd0d5a1851a975534b672d86c531d28c5933013140173e794f5f53e78a6765&token=751314179&lang=zh_CN&scene=21#wechat_redirect)\\n\\n`\u63a5\u53e3\u5e42\u7b49\u6027`\u95ee\u9898\uff0c\u5bf9\u4e8e\u5f00\u53d1\u4eba\u5458\u6765\u8bf4\uff0c\u662f\u4e00\u4e2a\u8ddf\u8bed\u8a00\u65e0\u5173\u7684\u516c\u5171\u95ee\u9898\u3002\u672c\u6587\u5206\u4eab\u4e86\u4e00\u4e9b\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u975e\u5e38\u5b9e\u7528\u7684\u529e\u6cd5\uff0c\u7edd\u5927\u90e8\u5206\u5185\u5bb9\u6211\u5728\u9879\u76ee\u4e2d\u5b9e\u8df5\u8fc7\u7684\uff0c\u7ed9\u6709\u9700\u8981\u7684\u5c0f\u4f19\u4f34\u4e00\u4e2a\u53c2\u8003\\n\\n\u573a\u666f\\n\\n1. \u6709\u65f6\u6211\u4eec\u5728\u586b\u5199\u67d0\u4e9bform\u8868\u5355\u65f6\uff0c\u4fdd\u5b58\u6309\u94ae\u4e0d\u5c0f\u5fc3\u5feb\u901f\u70b9\u4e86\u4e24\u6b21\uff0c\u8868\u4e2d\u7adf\u7136\u4ea7\u751f\u4e86\u4e24\u6761\u91cd\u590d\u7684\u6570\u636e\uff0c\u53ea\u662fid\u4e0d\u4e00\u6837\\n2. \u6211\u4eec\u5728\u9879\u76ee\u4e2d\u4e3a\u4e86\u89e3\u51b3`\u63a5\u53e3\u8d85\u65f6`\u95ee\u9898\uff0c\u901a\u5e38\u4f1a\u5f15\u5165\u4e86\u91cd\u8bd5\u673a\u5236\u3002\u7b2c\u4e00\u6b21\u8bf7\u6c42`\u63a5\u53e3\u8d85\u65f6`\u4e86\uff0c\u8bf7\u6c42\u65b9\u6ca1\u80fd\u53ca\u65f6\u83b7\u53d6\u8fd4\u56de\u7ed3\u679c\uff08\u6b64\u65f6\u6709\u53ef\u80fd\u5df2\u7ecf\u6210\u529f\u4e86\uff09\uff0c\u4e3a\u4e86\u907f\u514d\u8fd4\u56de\u9519\u8bef\u7684\u7ed3\u679c\uff08\u8fd9\u79cd\u60c5\u51b5\u4e0d\u53ef\u80fd\u76f4\u63a5\u8fd4\u56de\u5931\u8d25\u5427\uff1f\uff09\uff0c\u4e8e\u662f\u4f1a\u5bf9\u8be5\u8bf7\u6c42\u91cd\u8bd5\u51e0\u6b21\uff0c\u8fd9\u6837\u4e5f\u4f1a\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\u3002\\n3. `mq`\u6d88\u8d39\u8005\u5728\u8bfb\u53d6\u6d88\u606f\u65f6\uff0c\u6709\u65f6\u5019\u4f1a\u8bfb\u53d6\u5230\u91cd\u590d\u6d88\u606f\uff0c\u5982\u679c\u5904\u7406\u4e0d\u597d\uff0c\u4e5f\u4f1a\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\u3002\\n\\n`\u63a5\u53e3\u5e42\u7b49\u6027`\u662f\u6307\u7528\u6237\u5bf9\u4e8e\u540c\u4e00\u64cd\u4f5c\u53d1\u8d77\u7684\u4e00\u6b21\u8bf7\u6c42\u6216\u8005\u591a\u6b21\u8bf7\u6c42\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u591a\u6b21\u70b9\u51fb\u800c\u4ea7\u751f\u4e86\u526f\u4f5c\u7528\u3002\\n\\n* insert\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u591a\u6b21\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u4ea7\u751f\u91cd\u590d\u6570\u636e\\n* update\u64cd\u4f5c\uff0c\u5982\u679c\u53ea\u662f\u5355\u7eaf\u7684\u66f4\u65b0\u6570\u636e\uff0c\u6bd4\u5982\uff1aupdate user set status=1 where id=1\uff0c\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u5982\u679c\u8fd8\u6709\u8ba1\u7b97\uff0c\u6bd4\u5982\uff1aupdate user set status=status+1 where id=1\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u591a\u6b21\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u9519\u8bef\\n\\n## insert\u524d\u5148select\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5728\u4fdd\u5b58\u6570\u636e\u7684\u63a5\u53e3\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u9632\u6b62\u4ea7\u751f\u91cd\u590d\u6570\u636e\uff0c\u4e00\u822c\u4f1a\u5728insert\u524d\uff0c\u5148\u6839\u636ename\u6216code\u5b57\u6bb5select\u4e00\u4e0b\u6570\u636e\u3002\u5982\u679c\u8be5\u6570\u636e\u5df2\u5b58\u5728\uff0c\u5219\u6267\u884cupdate\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u624d\u6267\u884c  insert\u64cd\u4f5c\u3002\\n\\n## \u52a0\u60b2\u89c2\u9501\\n\\n\u5728\u652f\u4ed8\u573a\u666f\u4e2d\uff0c\u7528\u6237A\u7684\u8d26\u53f7\u4f59\u989d\u6709150\u5143\uff0c\u60f3\u8f6c\u51fa100\u5143\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u7528\u6237A\u7684\u4f59\u989d\u53ea\u526950\u5143\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0csql\u662f\u8fd9\u6837\u7684\uff1a\\n\\n```sql\\nupdate user amount = amount-100 where id=123;\\n\\n```\\n\\n\u5982\u679c\u51fa\u73b0\u591a\u6b21\u76f8\u540c\u7684\u8bf7\u6c42\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7528\u6237A\u7684\u4f59\u989d\u53d8\u6210\u8d1f\u6570\u3002\u8fd9\u79cd\u60c5\u51b5\uff0c\u7528\u6237A\u6765\u53ef\u80fd\u8981\u54ed\u4e86\u3002\u4e8e\u6b64\u540c\u65f6\uff0c\u7cfb\u7edf\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4e5f\u8981\u54ed\u4e86\uff0c\u56e0\u4e3a\u8fd9\u662f\u5f88\u4e25\u91cd\u7684\u7cfb\u7edfbug\u3002\\n\\n\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ef\u4ee5\u52a0\u60b2\u89c2\u9501\uff0c\u5c06\u7528\u6237A\u7684\u90a3\u884c\u6570\u636e\u9501\u4f4f\uff0c\u5728\u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a\u8bf7\u6c42\u83b7\u5f97\u9501\uff0c\u66f4\u65b0\u6570\u636e\uff0c\u5176\u4ed6\u7684\u8bf7\u6c42\u5219\u7b49\u5f85\u3002\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\u901a\u8fc7\u5982\u4e0bsql\u9501\u4f4f\u5355\u884c\u6570\u636e\uff1a\\n\\n```sql\\nselect * from user id=123 for update;\\n\\n```\\n\\n1. \u591a\u4e2a\u8bf7\u6c42\u540c\u65f6\u6839\u636eid\u67e5\u8be2\u7528\u6237\u4fe1\u606f\\n2. \u5224\u65ad\u4f59\u989d\u662f\u5426\u4e0d\u8db3100\uff0c\u5982\u679c\u4f59\u989d\u4e0d\u8db3\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u4f59\u989d\u4e0d\u8db3\u3002\\n3. \u5982\u679c\u4f59\u989d\u5145\u8db3\uff0c\u5219\u901a\u8fc7for update\u518d\u6b21\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u5e76\u4e14\u5c1d\u8bd5\u83b7\u53d6\u9501\\n4. \u53ea\u6709\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u80fd\u83b7\u53d6\u5230\u884c\u9501\uff0c\u5176\u4f59\u6ca1\u6709\u83b7\u53d6\u9501\u7684\u8bf7\u6c42\uff0c\u5219\u7b49\u5f85\u4e0b\u4e00\u6b21\u83b7\u53d6\u9501\u7684\u673a\u4f1a\\n5. \u7b2c\u4e00\u4e2a\u8bf7\u6c42\u83b7\u53d6\u5230\u9501\u4e4b\u540e\uff0c\u5224\u65ad\u4f59\u989d\u662f\u5426\u4e0d\u8db3100\uff0c\u5982\u679c\u4f59\u989d\u8db3\u591f\uff0c\u5219\u8fdb\u884cupdate\u64cd\u4f5c\u3002\\n6. \u5982\u679c\u4f59\u989d\u4e0d\u8db3\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u4f7f\u7528\u7684\u662fmysql\u6570\u636e\u5e93\uff0c\u5b58\u50a8\u5f15\u64ce\u5fc5\u987b\u7528innodb\uff0c\u56e0\u4e3a\u5b83\u624d\u652f\u6301\u4e8b\u52a1\u3002\u6b64\u5916\uff0c\u8fd9\u91ccid\u5b57\u6bb5\u4e00\u5b9a\u8981\u662f\u4e3b\u952e\u6216\u8005\u552f\u4e00\u7d22\u5f15\uff0c\u4e0d\u7136\u4f1a\u9501\u4f4f\u6574\u5f20\u8868\u3002\\n\\n\u60b2\u89c2\u9501\u9700\u8981\u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u9501\u4f4f\u4e00\u884c\u6570\u636e\uff0c\u5982\u679c\u4e8b\u52a1\u8017\u65f6\u6bd4\u8f83\u957f\uff0c\u4f1a\u9020\u6210\u5927\u91cf\u7684\u8bf7\u6c42\u7b49\u5f85\uff0c\u5f71\u54cd\u63a5\u53e3\u6027\u80fd\u3002\\n\\n\u6bcf\u6b21\u8bf7\u6c42\u63a5\u53e3\u5f88\u96be\u4fdd\u8bc1\u90fd\u6709\u76f8\u540c\u7684\u8fd4\u56de\u503c\uff0c\u6240\u4ee5\u4e0d\u9002\u5408\u5e42\u7b49\u6027\u8bbe\u8ba1\u573a\u666f\uff0c\u4f46\u662f\u5728\u9632\u91cd\u573a\u666f\u4e2d\u662f\u53ef\u4ee5\u7684\u4f7f\u7528\u7684\u3002\\n\\n\u5728\u8fd9\u91cc\u987a\u4fbf\u8bf4\u4e00\u4e0b\uff0c`\u9632\u91cd\u8bbe\u8ba1` \u548c `\u5e42\u7b49\u8bbe\u8ba1`\uff0c\u5176\u5b9e\u662f\u6709\u533a\u522b\u7684\u3002\u9632\u91cd\u8bbe\u8ba1\u4e3b\u8981\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u91cd\u590d\u6570\u636e\uff0c\u5bf9\u63a5\u53e3\u8fd4\u56de\u6ca1\u6709\u592a\u591a\u8981\u6c42\u3002\u800c\u5e42\u7b49\u8bbe\u8ba1\u9664\u4e86\u907f\u514d\u4ea7\u751f\u91cd\u590d\u6570\u636e\u4e4b\u5916\uff0c\u8fd8\u8981\u6c42\u6bcf\u6b21\u8bf7\u6c42\u90fd\u8fd4\u56de\u4e00\u6837\u7684\u7ed3\u679c\u3002\\n\\n## \u52a0\u4e50\u89c2\u9501\\n\\n\u65e2\u7136\u60b2\u89c2\u9501\u6709\u6027\u80fd\u95ee\u9898\uff0c\u4e3a\u4e86\u63d0\u5347\u63a5\u53e3\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e50\u89c2\u9501\u3002\u9700\u8981\u5728\u8868\u4e2d\u589e\u52a0\u4e00\u4e2atimestamp\u6216\u8005version\u5b57\u6bb5\uff0c\u8fd9\u91cc\u4ee5version\u5b57\u6bb5\u4e3a\u4f8b\u3002\\n\\n\u5728\u66f4\u65b0\u6570\u636e\u4e4b\u524d\u5148\u67e5\u8be2\u4e00\u4e0b\u6570\u636e\uff1a\\n\\n```sql\\nselect id,amount,version from user id=123;\\n\\n```\\n\\n\u5982\u679c\u6570\u636e\u5b58\u5728\uff0c\u5047\u8bbe\u67e5\u5230\u7684version\u7b49\u4e8e1\uff0c\u518d\u4f7f\u7528id\u548cversion\u5b57\u6bb5\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\u66f4\u65b0\u6570\u636e\uff1a\\n\\n```sql\\nupdate user set amount=amount+100,version=version+1\\nwhere id=123 and version=1;\\n\\n```\\n\\n\u66f4\u65b0\u6570\u636e\u7684\u540c\u65f6version+1\uff0c\u7136\u540e\u5224\u65ad\u672c\u6b21update\u64cd\u4f5c\u7684\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5927\u4e8e0\uff0c\u5219\u8bf4\u660e\u672c\u6b21\u66f4\u65b0\u6210\u529f\uff0c\u5982\u679c\u7b49\u4e8e0\uff0c\u5219\u8bf4\u660e\u672c\u6b21\u66f4\u65b0\u6ca1\u6709\u8ba9\u6570\u636e\u53d8\u66f4\u3002\\n\\n\u7531\u4e8e\u7b2c\u4e00\u6b21\u8bf7\u6c42version\u7b49\u4e8e1\u662f\u53ef\u4ee5\u6210\u529f\u7684\uff0c\u64cd\u4f5c\u6210\u529f\u540eversion\u53d8\u62102\u4e86\u3002\u8fd9\u65f6\u5982\u679c\u5e76\u53d1\u7684\u8bf7\u6c42\u8fc7\u6765\uff0c\u518d\u6267\u884c\u76f8\u540c\u7684sql\uff1a\\n\\n```sql\\nupdate user set amount=amount+100,version=version+1\\nwhere id=123 and version=1;\\n```\\n\\n\u8be5update\u64cd\u4f5c\u4e0d\u4f1a\u771f\u6b63\u66f4\u65b0\u6570\u636e\uff0c\u6700\u7ec8sql\u7684\u6267\u884c\u7ed3\u679c\u5f71\u54cd\u884c\u6570\u662f0\uff0c\u56e0\u4e3aversion\u5df2\u7ecf\u53d8\u62102\u4e86\uff0cwhere\u4e2d\u7684version=1\u80af\u5b9a\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u63a5\u53e3\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6210\u529f\uff0c\u56e0\u4e3aversion\u503c\u5df2\u7ecf\u4fee\u6539\u4e86\uff0c\u90a3\u4e48\u524d\u9762\u5fc5\u5b9a\u5df2\u7ecf\u6210\u529f\u8fc7\u4e00\u6b21\uff0c\u540e\u9762\u90fd\u662f\u91cd\u590d\u7684\u8bf7\u6c42\u3002\\n\\n1. \u5148\u6839\u636eid\u67e5\u8be2\u7528\u6237\u4fe1\u606f\uff0c\u5305\u542bversion\u5b57\u6bb5\\n2. \u6839\u636eid\u548cversion\u5b57\u6bb5\u503c\u4f5c\u4e3awhere\u6761\u4ef6\u7684\u53c2\u6570\uff0c\u66f4\u65b0\u7528\u6237\u4fe1\u606f\uff0c\u540c\u65f6version+1\\n3. \u5224\u65ad\u64cd\u4f5c\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5f71\u54cd1\u884c\uff0c\u5219\u8bf4\u660e\u662f\u4e00\u6b21\u8bf7\u6c42\uff0c\u53ef\u4ee5\u505a\u5176\u4ed6\u6570\u636e\u64cd\u4f5c\\n4. \u5982\u679c\u5f71\u54cd0\u884c\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\\n\\n## \u52a0\u552f\u4e00\u7d22\u5f15\\n\\n\u7edd\u5927\u6570\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u9632\u6b62\u91cd\u590d\u6570\u636e\u7684\u4ea7\u751f\uff0c\u6211\u4eec\u90fd\u4f1a\u5728\u8868\u4e2d\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u4e14\u6709\u6548\u7684\u65b9\u6848\u3002\\n\\n```sql\\nalter table `order` add UNIQUE KEY `un_code` (`code`);\\n```\\n\\n\u52a0\u4e86\u552f\u4e00\u7d22\u5f15\u4e4b\u540e\uff0c\u7b2c\u4e00\u6b21\u8bf7\u6c42\u6570\u636e\u53ef\u4ee5\u63d2\u5165\u6210\u529f\u3002\u4f46\u540e\u9762\u7684\u76f8\u540c\u8bf7\u6c42\uff0c\u63d2\u5165\u6570\u636e\u65f6\u4f1a\u62a5`Duplicate entry \'002\' for key \'order.un_code`\u5f02\u5e38\uff0c\u8868\u793a\u552f\u4e00\u7d22\u5f15\u6709\u51b2\u7a81\u3002\\n\\n\u867d\u8bf4\u629b\u5f02\u5e38\u5bf9\u6570\u636e\u6765\u8bf4\u6ca1\u6709\u5f71\u54cd\uff0c\u4e0d\u4f1a\u9020\u6210\u9519\u8bef\u6570\u636e\u3002\u4f46\u662f\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u6211\u4eec\u9700\u8981\u5bf9\u8be5\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u7136\u540e\u8fd4\u56de\u6210\u529f\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u5c06\u8be5\u6570\u636e\u63d2\u5165mysql\\n3. \u5224\u65ad\u662f\u5426\u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u64cd\u4f5c\u5176\u4ed6\u6570\u636e\uff08\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u4e1a\u52a1\u903b\u8f91\uff09\u3002\\n4. \u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u6355\u83b7\u552f\u4e00\u7d22\u5f15\u51b2\u7a81\u5f02\u5e38\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n## \u5efa\u9632\u91cd\u8868\\n\\n\u6709\u65f6\u5019\u8868\u4e2d\u5e76\u975e\u6240\u6709\u7684\u573a\u666f\u90fd\u4e0d\u5141\u8bb8\u4ea7\u751f\u91cd\u590d\u7684\u6570\u636e\uff0c\u53ea\u6709\u67d0\u4e9b\u7279\u5b9a\u573a\u666f\u624d\u4e0d\u5141\u8bb8\u3002\u8fd9\u65f6\u5019\uff0c\u76f4\u63a5\u5728\u8868\u4e2d\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u663e\u7136\u662f\u4e0d\u592a\u5408\u9002\u7684\u3002\\n\u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7`\u5efa\u9632\u91cd\u8868`\u6765\u89e3\u51b3\u95ee\u9898\u3002\\n\\n\u8be5\u8868\u53ef\u4ee5\u53ea\u5305\u542b\u4e24\u4e2a\u5b57\u6bb5\uff1a`id` \u548c `\u552f\u4e00\u7d22\u5f15`\uff0c\u552f\u4e00\u7d22\u5f15\u53ef\u4ee5\u662f\u591a\u4e2a\u5b57\u6bb5\u6bd4\u5982\uff1aname\u3001code\u7b49\u7ec4\u5408\u8d77\u6765\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4f8b\u5982\uff1asusan_0001\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u5c06\u8be5\u6570\u636e\u63d2\u5165mysql\u9632\u91cd\u8868\\n3. \u5224\u65ad\u662f\u5426\u6267\u884c\u6210\u529f\uff0c\u5982\u679c\u6210\u529f\uff0c\u5219\u505amysql\u5176\u4ed6\u7684\u6570\u636e\u64cd\u4f5c\uff08\u53ef\u80fd\u8fd8\u6709\u5176\u4ed6\u7684\u4e1a\u52a1\u903b\u8f91\uff09\u3002\\n4. \u5982\u679c\u6267\u884c\u5931\u8d25\uff0c\u6355\u83b7\u552f\u4e00\u7d22\u5f15\u51b2\u7a81\u5f02\u5e38\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u9632\u91cd\u8868\u548c\u4e1a\u52a1\u8868\u5fc5\u987b\u5728\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u64cd\u4f5c\u8981\u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u3002\\n\\n## \u6839\u636e\u72b6\u6001\u673a\\n\\n\u5f88\u591a\u65f6\u5019\u4e1a\u52a1\u8868\u662f\u6709\u72b6\u6001\u7684\uff0c\u6bd4\u5982\u8ba2\u5355\u8868\u4e2d\u6709\uff1a1-\u4e0b\u5355\u30012-\u5df2\u652f\u4ed8\u30013-\u5b8c\u6210\u30014-\u64a4\u9500\u7b49\u72b6\u6001\u3002\u5982\u679c\u8fd9\u4e9b\u72b6\u6001\u7684\u503c\u662f\u6709\u89c4\u5f8b\u7684\uff0c\u6309\u7167\u4e1a\u52a1\u8282\u70b9\u6b63\u597d\u662f\u4ece\u5c0f\u5230\u5927\uff0c\u6211\u4eec\u5c31\u80fd\u901a\u8fc7\u5b83\u6765\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027\u3002\\n\\n\u5047\u5982`id=123`\u7684\u8ba2\u5355\u72b6\u6001\u662f\u5df2\u652f\u4ed8\uff0c\u73b0\u5728\u8981\u53d8\u6210\u5b8c\u6210\u72b6\u6001\u3002\\n\\n```sql\\nupdate `order` set status=3 where id=123 and status=2;\\n```\\n\\n\u7b2c\u4e00\u6b21\u8bf7\u6c42\u65f6\uff0c\u8be5\u8ba2\u5355\u7684\u72b6\u6001\u662f`\u5df2\u652f\u4ed8`\uff0c\u503c\u662f`2`\uff0c\u6240\u4ee5\u8be5`update`\u8bed\u53e5\u53ef\u4ee5\u6b63\u5e38\u66f4\u65b0\u6570\u636e\uff0c`sql`\u6267\u884c\u7ed3\u679c\u7684\u5f71\u54cd\u884c\u6570\u662f`1`\uff0c\u8ba2\u5355\u72b6\u6001\u53d8\u6210\u4e86`3`\u3002\\n\\n\u540e\u9762\u6709\u76f8\u540c\u7684\u8bf7\u6c42\u8fc7\u6765\uff0c\u518d\u6267\u884c\u76f8\u540c\u7684sql\u65f6\uff0c\u7531\u4e8e\u8ba2\u5355\u72b6\u6001\u53d8\u6210\u4e863\uff0c\u518d\u7528status=2\u4f5c\u4e3a\u6761\u4ef6\uff0c\u65e0\u6cd5\u67e5\u8be2\u51fa\u9700\u8981\u66f4\u65b0\u7684\u6570\u636e\uff0c\u6240\u4ee5\u6700\u7ec8sql\u6267\u884c\u7ed3\u679c\u7684\u5f71\u54cd\u884c\u6570\u662f0\uff0c\u5373\u4e0d\u4f1a\u771f\u6b63\u7684\u66f4\u65b0\u6570\u636e\u3002\u4f46\u4e3a\u4e86\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\uff0c\u5f71\u54cd\u884c\u6570\u662f0\u65f6\uff0c\u63a5\u53e3\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6536\u96c6\u6570\u636e\u3002\\n2. \u6839\u636eid\u548c\u5f53\u524d\u72b6\u6001\u4f5c\u4e3a\u6761\u4ef6\uff0c\u66f4\u65b0\u6210\u4e0b\u4e00\u4e2a\u72b6\u6001\\n3. \u5224\u65ad\u64cd\u4f5c\u5f71\u54cd\u884c\u6570\uff0c\u5982\u679c\u5f71\u54cd\u4e861\u884c\uff0c\u8bf4\u660e\u5f53\u524d\u64cd\u4f5c\u6210\u529f\uff0c\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u6570\u636e\u64cd\u4f5c\u3002\\n4. \u5982\u679c\u5f71\u54cd\u4e860\u884c\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u4e3b\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u8be5\u65b9\u6848\u4ec5\u9650\u4e8e\u8981\u66f4\u65b0\u7684`\u8868\u6709\u72b6\u6001\u5b57\u6bb5`\uff0c\u5e76\u4e14\u521a\u597d\u8981\u66f4\u65b0`\u72b6\u6001\u5b57\u6bb5`\u7684\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u5e76\u975e\u6240\u6709\u573a\u666f\u90fd\u9002\u7528\u3002\\n\\n## \u52a0\u5206\u5e03\u5f0f\u9501\\n\\n\u5176\u5b9e\u524d\u9762\u4ecb\u7ecd\u8fc7\u7684`\u52a0\u552f\u4e00\u7d22\u5f15`\u6216\u8005`\u52a0\u9632\u91cd\u8868`\uff0c\u672c\u8d28\u662f\u4f7f\u7528\u4e86`\u6570\u636e\u5e93`\u7684`\u5206\u5e03\u5f0f\u9501`\uff0c\u4e5f\u5c5e\u4e8e`\u5206\u5e03\u5f0f\u9501`\u7684\u4e00\u79cd\u3002\u4f46\u7531\u4e8e`\u6570\u636e\u5e93\u5206\u5e03\u5f0f\u9501`\u7684\u6027\u80fd\u4e0d\u592a\u597d\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u7528\uff1a`redis`\u6216`zookeeper`\u3002\\n\\n\u9274\u4e8e\u73b0\u5728\u5f88\u591a\u516c\u53f8\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u6539\u7528`apollo`\u6216`nacos`\uff0c\u5df2\u7ecf\u5f88\u5c11\u7528`zookeeper`\u4e86\uff0c\u6211\u4eec\u4ee5`redis`\u4e3a\u4f8b\u4ecb\u7ecd\u5206\u5e03\u5f0f\u9501\u3002\\n\\n\u76ee\u524d\u4e3b\u8981\u6709\u4e09\u79cd\u65b9\u5f0f\u5b9e\u73b0redis\u7684\u5206\u5e03\u5f0f\u9501\uff1a\\n\\n1. setNx\u547d\u4ee4\\n2. set\u547d\u4ee4\\n3. Redission\u6846\u67b6\\n\\n\u5177\u4f53\u6b65\u9aa4\uff1a\\n\\n1. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u4f1a\u6536\u96c6\u6570\u636e\uff0c\u5e76\u4e14\u751f\u6210\u8ba2\u5355\u53f7code\u4f5c\u4e3a\u552f\u4e00\u4e1a\u52a1\u5b57\u6bb5\u3002\\n2. \u4f7f\u7528redis\u7684set\u547d\u4ee4\uff0c\u5c06\u8be5\u8ba2\u5355code\u8bbe\u7f6e\u5230redis\u4e2d\uff0c\u540c\u65f6\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\u3002\\n3. \u5224\u65ad\u662f\u5426\u8bbe\u7f6e\u6210\u529f\uff0c\u5982\u679c\u8bbe\u7f6e\u6210\u529f\uff0c\u8bf4\u660e\u662f\u7b2c\u4e00\u6b21\u8bf7\u6c42\uff0c\u5219\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u3002\\n4. \u5982\u679c\u8bbe\u7f6e\u5931\u8d25\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1a\u5206\u5e03\u5f0f\u9501\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5408\u7406\u7684\u8fc7\u671f\u65f6\u95f4\uff0c\u5982\u679c\u8bbe\u7f6e\u8fc7\u77ed\uff0c\u65e0\u6cd5\u6709\u6548\u7684\u9632\u6b62\u91cd\u590d\u8bf7\u6c42\u3002\u5982\u679c\u8bbe\u7f6e\u8fc7\u957f\uff0c\u53ef\u80fd\u4f1a\u6d6a\u8d39redis\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\u800c\u5b9a\u3002\\n\\n## \u83b7\u53d6token\\n\\n\u9664\u4e86\u4e0a\u8ff0\u65b9\u6848\u4e4b\u5916\uff0c\u8fd8\u6709\u6700\u540e\u4e00\u79cd\u4f7f\u7528token\u7684\u65b9\u6848\u3002\u8be5\u65b9\u6848\u8ddf\u4e4b\u524d\u7684\u6240\u6709\u65b9\u6848\u90fd\u6709\u70b9\u4e0d\u4e00\u6837\uff0c\u9700\u8981\u4e24\u6b21\u8bf7\u6c42\u624d\u80fd\u5b8c\u6210\u4e00\u6b21\u4e1a\u52a1\u64cd\u4f5c\u3002\\n\\n1. \u7b2c\u4e00\u6b21\u8bf7\u6c42\u83b7\u53d6token\\n2. \u7b2c\u4e8c\u6b21\u8bf7\u6c42\u5e26\u7740\u8fd9\u4e2atoken\uff0c\u5b8c\u6210\u4e1a\u52a1\u64cd\u4f5c\u3002\\n\\n\u5177\u4f53\u6b65\u9aa4\uff1a\\n\\n1. \u7528\u6237\u8bbf\u95ee\u9875\u9762\u65f6\uff0c\u6d4f\u89c8\u5668\u81ea\u52a8\u53d1\u8d77\u83b7\u53d6token\u8bf7\u6c42\u3002\\n2. \u670d\u52a1\u7aef\u751f\u6210token\uff0c\u4fdd\u5b58\u5230redis\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002\\n3. \u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u643a\u5e26\u8be5token\u3002\\n4. \u5728redis\u4e2d\u67e5\u8be2\u8be5token\u662f\u5426\u5b58\u5728\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u662f\u7b2c\u4e00\u6b21\u8bf7\u6c42\uff0c\u505a\u5219\u540e\u7eed\u7684\u6570\u636e\u64cd\u4f5c\u3002\\n5. \u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u662f\u91cd\u590d\u8bf7\u6c42\uff0c\u5219\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\\n6. \u5728redis\u4e2dtoken\u4f1a\u5728\u8fc7\u671f\u65f6\u95f4\u4e4b\u540e\uff0c\u88ab\u81ea\u52a8\u5220\u9664\u3002\\n\\n> \u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u662f\uff1atoken\u5fc5\u987b\u662f\u5168\u5c40\u552f\u4e00\u7684\u3002"},{"id":"/2023/03/05/index","metadata":{"permalink":"/blog/2023/03/05/index","source":"@site/blog/2023/03/05/index.md","title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","description":"from","date":"2023-03-05T00:00:00.000Z","formattedDate":"2023\u5e743\u67085\u65e5","tags":[{"label":"\u63a5\u53e3","permalink":"/blog/tags/\u63a5\u53e3"},{"label":"\u52a0\u5bc6","permalink":"/blog/tags/\u52a0\u5bc6"},{"label":"\u89c4\u8303","permalink":"/blog/tags/\u89c4\u8303"}],"readingTime":8.32,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"tags":["\u63a5\u53e3","\u52a0\u5bc6","\u89c4\u8303"],"authors":"ahKevinXy"},"prevItem":{"title":"\u9ad8\u5e76\u53d1\u4e0b\u5982\u4f55\u4fdd\u8bc1\u63a5\u53e3\u7684\u5e42\u7b49\u6027","permalink":"/blog/2023/03/05/idempotent"},"nextItem":{"title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","permalink":"/blog/2023/02/24/index"}},"content":"[from](https://juejin.cn/post/7176220436714225721)\\n\\n## \u7b7e\u540d\\n\\n\u63a5\u53e3\u8bf7\u6c42\u5c06 `\u8bf7\u6c42\u53c2\u6570` + `\u65f6\u95f4\u6233` + `\u79d8\u94a5` \u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32,\u901a\u8fc7`md5` \u7b49hash \u7b97\u6cd5,\u751f\u6210\u4e00\u4e2asign\\n\\n## \u52a0\u5bc6\\n\\n### sm2 \u56fd\u5bc6\\n\\n### rsa \u52a0\u5bc6\\n\\n## ip \u767d\u540d\u5355\\n\\n\u4e3a\u4e86 \u9650\u5236 api \u63a5\u53e3\u7684\u5b89\u5168\u6027,\u9632\u6b62 \u63a5\u53e3\u7b7e\u540d\u6216\u52a0\u5bc6\u88ab\u7834\u89e3,\u653b\u51fb\u8005 \u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u670d\u52a1\u5668\u4e0a\u8bf7\u6c42\u6539\u63a5\u53e3\\n\\n\u53ea\u6709 \u5728\u767d\u540d\u5355\u4e2d\u7684ip\u5730\u5740,\u624d\u80fd\u6210\u529f\u8bf7\u6c42api\u63a5\u53e3,\u5426\u5219\u8fd4\u56de\u65e0\u6743\u9650\\n\\n\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u589e\u52a0web\u9632\u706b\u5899\u4e86\uff0c\u6bd4\u5982\uff1aModSecurity (todo \u7814\u7a76)\u7b49\u3002\\n\\n## \u9650\u6d41\\n\\n\u9650\u6d41\u65b9\u6cd5\u6709\u4e09\u79cd\uff1a\\n\\n1. \u5bf9\u8bf7\u6c42ip\u505a\u9650\u6d41 : \u7b56\u7565\u5236\u5b9a\\n2. \u5bf9\u8bf7\u6c42\u63a5\u53e3\u505a\u9650\u6d41\\n3. \u5bf9\u8bf7\u6c42\u7528\u6237\u505a\u9650\u6d41\\n\\n\u6211\u4eec\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7nginx\uff0credis\u6216\u8005gateway\u5b9e\u73b0\u9650\u6d41\u7684\u529f\u80fd\u3002\\n\\n## \u53c2\u6570\u6821\u9a8c\\n\\n\u6211\u4eec\u9700\u8981\u5bf9API\u63a5\u53e3\u505a\u53c2\u6570\u6821\u9a8c\uff0c\u6bd4\u5982\uff1a\u6821\u9a8c\u5fc5\u586b\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a\uff0c\u6821\u9a8c\u5b57\u6bb5\u7c7b\u578b\uff0c\u6821\u9a8c\u5b57\u6bb5\u957f\u5ea6\uff0c\u6821\u9a8c\u679a\u4e3e\u503c\u7b49\u7b49\u3002\\n\\n\u8fd9\u6837\u505a\u53ef\u4ee5\u62e6\u622a\u4e00\u4e9b\u65e0\u6548\u7684\u8bf7\u6c42\u3002\\n\\n## \u7edf\u4e00\u8fd4\u56de\u503c\\n\\n\u6211\u4e4b\u524d\u8c03\u7528\u8fc7\u522b\u4eba\u7684API\u63a5\u53e3\uff0c\u6b63\u5e38\u8fd4\u56de\u6570\u636e\u662f\u4e00\u79cdjson\u683c\u5f0f\uff0c\u6bd4\u5982\uff1a\\n\\n\u7b7e\u540d\u9519\u8bef\u8fd4\u56de\u7684json\u683c\u5f0f\uff1a\\n\\n```json\\n{\\n    \\"code\\":1001,\\n    \\"message\\":\\"\u7b7e\u540d\u9519\u8bef\\",\\n    \\"data\\":null\\n}\\n\\n\\n```\\n\\n\u6ca1\u6709\u6570\u636e\u6743\u9650\u8fd4\u56de\u7684json\u683c\u5f0f\uff1a\\n\\n```json\\n{\\n    \\"rt\\":10,\\n    \\"errorMgt\\":\\"\u6ca1\u6709\u6743\u9650\\",\\n    \\"result\\":null\\n}\\n```\\n\\n## \u7edf\u4e00\u5c01\u88c5\u5f02\u5e38\\n\\n\u6211\u4eec\u7684API\u63a5\u53e3\u9700\u8981\u5bf9\u5f02\u5e38\u8fdb\u884c\u7edf\u4e00\u5904\u7406\u3002\\n\\n\u4e0d\u77e5\u9053\u4f60\u6709\u6ca1\u6709\u9047\u5230\u8fc7\u8fd9\u79cd\u573a\u666f\uff1a\u6709\u65f6\u5019\u5728API\u63a5\u53e3\u4e2d\uff0c\u9700\u8981\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4f46\u8868\u4e0d\u5b58\u5728\uff0c\u6216\u8005sql\u8bed\u53e5\u5f02\u5e38\uff0c\u5c31\u4f1a\u76f4\u63a5\u628asql\u4fe1\u606f\u5728API\u63a5\u53e3\u4e2d\u76f4\u63a5\u8fd4\u56de\u3002\\n\\n\u8fd4\u56de\u503c\u4e2d\u5305\u542b\u4e86`\u5f02\u5e38\u5806\u6808\u4fe1\u606f`\u3001`\u6570\u636e\u5e93\u4fe1\u606f`\u3001`\u9519\u8bef\u4ee3\u7801`\u548c`\u884c\u6570`\u7b49\u4fe1\u606f\u3002\\n\\n\u56e0\u6b64\u975e\u5e38\u6709\u5fc5\u8981\u5bf9API\u63a5\u53e3\u4e2d\u7684\u5f02\u5e38\u505a\u7edf\u4e00\u5904\u7406\uff0c\u628a\u5f02\u5e38\u8f6c\u6362\u6210\u8fd9\u6837\uff1a\\n\\n```json\\n{\\n    \\"code\\":500,\\n    \\"message\\":\\"\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\\",\\n    \\"data\\":null\\n}\\n```\\n\\n\u6211\u4eec\u53ef\u4ee5\u5728gateway\u4e2d\u5bf9\u5f02\u5e38\u8fdb\u884c\u62e6\u622a\uff0c\u505a\u7edf\u4e00\u5c01\u88c5\uff0c\u7136\u540e\u7ed9\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u662f\u5904\u7406\u540e\u6ca1\u6709\u654f\u611f\u4fe1\u606f\u7684\u9519\u8bef\u4fe1\u606f\u3002\\n\\n## \u8bf7\u6c42\u65e5\u5fd7\\n\\n\u6211\u4eec\u9700\u8981\u628aAPI\u63a5\u53e3\u7684\u8bf7\u6c42url\u3001\u8bf7\u6c42\u53c2\u6570\u3001\u8bf7\u6c42\u5934\u3001\u8bf7\u6c42\u65b9\u5f0f\u3001\u54cd\u5e94\u6570\u636e\u548c\u54cd\u5e94\u65f6\u95f4\u7b49\uff0c\u8bb0\u5f55\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002\\n\\n\u5f53\u7136\u6709\u4e9b\u65f6\u5019\uff0c\u8bf7\u6c42\u65e5\u5fd7\u4e0d\u5149\u662f\u4f60\u4eec\u516c\u53f8\u5f00\u53d1\u4eba\u5458\u9700\u8981\u67e5\u770b\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u7528\u6237\u4e5f\u9700\u8981\u80fd\u67e5\u770b\u63a5\u53e3\u7684\u8bf7\u6c42\u65e5\u5fd7\u3002\\n\\n\u8fd9\u65f6\u5c31\u9700\u8981\u628a\u65e5\u5fd7\u843d\u5730\u5230\u6570\u636e\u5e93\uff0c\u6bd4\u5982\uff1amongodb\u6216\u8005elastic search\uff0c\u7136\u540e\u505a\u4e00\u4e2aUI\u9875\u9762\uff0c\u7ed9\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u7528\u6237\u5f00\u901a\u67e5\u770b\u6743\u9650\u3002\u8fd9\u6837\u4ed6\u4eec\u5c31\u80fd\u5728\u5916\u7f51\u67e5\u770b\u8bf7\u6c42\u65e5\u5fd7\u4e86\uff0c\u4ed6\u4eec\u81ea\u5df1\u4e5f\u80fd\u5b9a\u4f4d\u4e00\u90e8\u5206\u95ee\u9898\u3002\\n\\n## \u5e42\u7b49\u8bbe\u8ba1\\n\\n\u7b2c\u4e09\u65b9\u5e73\u53f0\u6781\u6709\u53ef\u80fd\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u8bf7\u6c42\u6211\u4eec\u63a5\u53e3\u591a\u6b21\uff0c\u6bd4\u5982\uff1a\u57281\u79d2\u5185\u8bf7\u6c42\u4e24\u6b21\u3002\u6709\u53ef\u80fd\u662f\u4ed6\u4eec\u4e1a\u52a1\u7cfb\u7edf\u6709bug\uff0c\u6216\u8005\u5728\u505a\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u91cd\u8bd5\uff0c\u56e0\u6b64\u6211\u4eec\u7684API\u63a5\u53e3\u9700\u8981\u505a\u5e42\u7b49\u8bbe\u8ba1\u3002\\n\\n\u4e5f\u5c31\u662f\u8bf4\u8981\u652f\u6301\u5728\u6781\u77ed\u7684\u65f6\u95f4\u5185\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u7528\u76f8\u540c\u7684\u53c2\u6570\u8bf7\u6c42API\u63a5\u53e3\u591a\u6b21\uff0c\u7b2c\u4e00\u6b21\u8bf7\u6c42\u6570\u636e\u5e93\u4f1a\u65b0\u589e\u6570\u636e\uff0c\u4f46\u7b2c\u4e8c\u6b21\u8bf7\u6c42\u4ee5\u540e\u5c31\u4e0d\u4f1a\u65b0\u589e\u6570\u636e\uff0c\u4f46\u4e5f\u4f1a\u8fd4\u56de\u6210\u529f\u3002\\n\\n\u6211\u4eec\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u6570\u636e\u5e93\u4e2d\u589e\u52a0\u552f\u4e00\u7d22\u5f15\uff0c\u6216\u8005\u5728redis\u4fdd\u5b58requestId\u548c\u8bf7\u6c42\u53c2\u6765\u4fdd\u8bc1\u63a5\u53e3\u5e42\u7b49\u6027\u3002\\n\\n## \u9650\u5236\u8bb0\u5f55\u6761\u6570\\n\\n\u5bf9\u4e8e\u5bf9\u6211\u63d0\u4f9b\u7684\u6279\u91cf\u63a5\u53e3\uff0c\u4e00\u5b9a\u8981`\u9650\u5236\u8bf7\u6c42\u7684\u8bb0\u5f55\u6761\u6570`\u3002\\n\\n\u5982\u679c\u8bf7\u6c42\u7684\u6570\u636e\u592a\u591a\uff0c\u5f88\u5bb9\u6613\u9020\u6210API\u63a5\u53e3\u8d85\u65f6\u7b49\u95ee\u9898\uff0c\u8ba9API\u63a5\u53e3\u53d8\u5f97\u4e0d\u7a33\u5b9a\u3002\\n\\n\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5efa\u8bae\u4e00\u6b21\u8bf7\u6c42\u4e2d\u7684\u53c2\u6570\uff0c\u6700\u591a\u652f\u6301\u4f20\u5165500\u6761\u8bb0\u5f55\u3002\\n\\n\u5982\u679c\u7528\u6237\u4f20\u5165\u591a\u4f59500\u6761\u8bb0\u5f55\uff0c\u5219\u63a5\u53e3\u76f4\u63a5\u7ed9\u51fa\u63d0\u793a\u3002\\n\\n## \u538b\u6d4b\\n\\n\u4e0a\u7ebf\u524d\u6211\u4eec\u52a1\u5fc5\u8981\u5bf9API\u63a5\u53e3\u505a\u4e00\u4e0b\u538b\u529b\u6d4b\u8bd5\uff0c\u77e5\u9053\u5404\u4e2a\u63a5\u53e3\u7684`qps`\u60c5\u51b5\u3002\\n\\n\u6211\u4eec\u5728\u5de5\u4f5c\u4e2d\u53ef\u4ee5\u7528`jmeter`\u6216\u8005`apache benc` \u6216 `ab`\u5bf9API\u63a5\u53e3\u505a\u538b\u529b\u6d4b\u8bd5\u3002\\n\\n## \u5f02\u6b65\u5904\u7406\\n\\n\u4e00\u822c\u7684`API`\u63a5\u53e3\u7684\u903b\u8f91\u90fd\u662f\u540c\u6b65\u5904\u7406\u7684\uff0c\u8bf7\u6c42\u5b8c\u4e4b\u540e\u7acb\u523b\u8fd4\u56de\u7ed3\u679c\u3002\\n\\n\u4f46\u6709\u65f6\u5019\uff0c\u6211\u4eec\u7684`API`\u63a5\u53e3\u91cc\u9762\u7684\u4e1a\u52a1\u903b\u8f91\u975e\u5e38\u590d\u6742\uff0c\u7279\u522b\u662f\u6709\u4e9b\u6279\u91cf\u63a5\u53e3\uff0c\u5982\u679c\u540c\u6b65\u5904\u7406\u4e1a\u52a1\uff0c\u8017\u65f6\u4f1a\u975e\u5e38\u957f\u3002\\n\\n\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u63d0\u5347`API`\u63a5\u53e3\u7684\u6027\u80fd\uff0c\u6211\u4eec\u53ef\u4ee5\u6539\u6210\u5f02\u6b65\u5904\u7406\u3002\\n\\n\u5728API\u63a5\u53e3\u4e2d\u53ef\u4ee5\u53d1\u9001\u4e00\u6761mq\u6d88\u606f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6210\u529f\u3002\u4e4b\u540e\uff0c\u6709\u4e2a\u4e13\u95e8\u7684mq\u6d88\u8d39\u8005\u53bb\u5f02\u6b65\u6d88\u8d39\u8be5\u6d88\u606f\uff0c\u505a\u4e1a\u52a1\u903b\u8f91\u5904\u7406\u3002\\n\\n\u76f4\u63a5\u5f02\u6b65\u5904\u7406\u7684\u63a5\u53e3\uff0c\u7b2c\u4e09\u65b9\u5e73\u53f0\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u5230\u3002\\n\\n\u7b2c\u4e00\u79cd\u65b9\u5f0f\u662f\uff1a\u6211\u4eec\u56de\u8c03\u7b2c\u4e09\u65b9\u5e73\u53f0\u7684\u63a5\u53e3\uff0c\u544a\u77e5\u4ed6\u4eecAPI\u63a5\u53e3\u7684\u5904\u7406\u7ed3\u679c\uff0c\u5f88\u591a\u652f\u4ed8\u63a5\u53e3\u5c31\u662f\u8fd9\u4e48\u73a9\u7684\u3002\\n\\n\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u662f\uff1a\u7b2c\u4e09\u65b9\u5e73\u53f0\u901a\u8fc7\u8f6e\u8be2\u8c03\u7528\u6211\u4eec\u53e6\u5916\u4e00\u4e2a\u67e5\u8be2\u72b6\u6001\u7684API\u63a5\u53e3\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u67e5\u8be2\u4e00\u6b21\u72b6\u6001\uff0c\u4f20\u5165\u7684\u53c2\u6570\u662f\u4e4b\u524d\u7684\u90a3\u4e2aAPI\u63a5\u53e3\u4e2d\u7684id\u96c6\u5408\u3002\\n\\n## \u6570\u636e\u8131\u654f\\n\\n\u6709\u65f6\u5019\u7b2c\u4e09\u65b9\u5e73\u53f0\u8c03\u7528\u6211\u4eecAPI\u63a5\u53e3\u65f6\uff0c\u83b7\u53d6\u7684\u6570\u636e\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u654f\u611f\u6570\u636e\uff0c\u6bd4\u5982\uff1a\u7528\u6237\u624b\u673a\u53f7\u3001\u94f6\u884c\u5361\u53f7\u7b49\u7b49\u3002\\n\\n\u8fd9\u6837\u4fe1\u606f\u5982\u679c\u901a\u8fc7API\u63a5\u53e3\u76f4\u63a5\u4fdd\u7559\u5230\u5916\u7f51\uff0c\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u5f88\u5bb9\u6613\u9020\u6210\u7528\u6237\u9690\u79c1\u6570\u636e\u6cc4\u9732\u7684\u95ee\u9898\u3002\\n\\n\u8fd9\u5c31\u9700\u8981\u5bf9\u90e8\u5206\u6570\u636e\u505a\u6570\u636e\u8131\u654f\u4e86\u3002\\n\\n## \u5b8c\u6574\u7684\u63a5\u53e3\u6587\u6863\\n\\n\u8bf4\u5b9e\u8bdd\uff0c\u4e00\u4efd\u5b8c\u6574\u7684API\u63a5\u53e3\u6587\u6863\uff0c\u5728\u53cc\u65b9\u505a\u63a5\u53e3\u5bf9\u63a5\u65f6\uff0c\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u6c9f\u901a\u6210\u672c\uff0c\u8ba9\u5bf9\u65b9\u5c11\u8d70\u5f88\u591a\u5f2f\u8def\u3002\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u9700\u8981\u5305\u542b\u5982\u4e0b\u4fe1\u606f\uff1a\\n\\n1. \u63a5\u53e3\u5730\u5740\\n2. \u8bf7\u6c42\u65b9\u5f0f\uff0c\u6bd4\u5982\uff1apost\u6216get\\n3. \u8bf7\u6c42\u53c2\u6570\u548c\u5b57\u6bb5\u4ecb\u7ecd\\n4. \u8fd4\u56de\u503c\u548c\u5b57\u6bb5\u4ecb\u7ecd\\n5. \u8fd4\u56de\u7801\u548c\u9519\u8bef\u4fe1\u606f\\n6. \u52a0\u5bc6\u6216\u7b7e\u540d\u793a\u4f8b\\n7. \u5b8c\u6574\u7684\u8bf7\u6c42demo\\n8. \u989d\u5916\u7684\u8bf4\u660e\uff0c\u6bd4\u5982\uff1a\u5f00\u901aip\u767d\u540d\u5355\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u6700\u597d\u80fd\u591f\u7edf\u4e00\u63a5\u53e3\u548c\u5b57\u6bb5\u540d\u79f0\u7684\u547d\u540d\u98ce\u683c\uff0c\u6bd4\u5982\u90fd\u7528`\u9a7c\u5cf0\u6807\u8bc6`\u547d\u540d\u3002\\n\\n\u7edf\u4e00\u5b57\u6bb5\u7684\u7c7b\u578b\u548c\u957f\u5ea6\uff0c\u6bd4\u5982\uff1aid\u5b57\u6bb5\u7528Long\u7c7b\u578b\uff0c\u957f\u5ea6\u89c4\u5b9a20\u3002status\u5b57\u6bb5\u7528int\u7c7b\u578b\uff0c\u957f\u5ea6\u56fa\u5b9a2\u7b49\u3002\\n\\n\u7edf\u4e00\u65f6\u95f4\u683c\u5f0f\u5b57\u6bb5\uff0c\u6bd4\u5982\uff1atime\u7528String\u7c7b\u578b\uff0c\u683c\u5f0f\u4e3a\uff1ayyyy-MM-dd HH:mm:ss\u3002\\n\\n\u63a5\u53e3\u6587\u6863\u4e2d\u5199\u660eAK/SK\u548c\u57df\u540d\uff0c\u627e\u67d0\u67d0\u5355\u72ec\u63d0\u4f9b\u7b49\u3002"},{"id":"/2023/02/24/index","metadata":{"permalink":"/blog/2023/02/24/index","source":"@site/blog/2023/02/24/index.md","title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","description":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","date":"2023-02-24T00:00:00.000Z","formattedDate":"2023\u5e742\u670824\u65e5","tags":[{"label":"umi","permalink":"/blog/tags/umi"},{"label":"antd","permalink":"/blog/tags/antd"}],"readingTime":0.27,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"tags":["umi","antd"],"authors":"ahKevinXy","description":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","hide_table_of_contents":false},"prevItem":{"title":"\u5982\u4f55\u4f18\u96c5\u7684\u63a5\u53e3","permalink":"/blog/2023/03/05/index"},"nextItem":{"title":"\u4f18\u79c0\u535a\u5ba2","permalink":"/blog/stars"}},"content":"2023\u5e7402\u670824\u65e517:32:20\\n\\n```typescript\\n\\nimport { defineConfig } from \\"umi\\";\\nimport zhCN from \'antd/locale/zh_CN\';\\nexport default defineConfig({\\n  plugins: [\'@umijs/plugins/dist/antd\'],\\n\\n\\n\\n  antd: {\\n    configProvider: {\\n      locale: zhCN\\n    },\\n  },\\n\\n  routes: [\\n    { path: \\"/\\", component: \\"index\\" },\\n    { path: \\"/docs\\", component: \\"docs\\" },\\n  ],\\n  npmClient: \'yarn\',\\n  base: \'/\',\\n  hash: true,\\n\\n\\n});\\n\\n\\n\\n\\n````"},{"id":"/stars","metadata":{"permalink":"/blog/stars","source":"@site/blog/stars/index.md","title":"\u4f18\u79c0\u535a\u5ba2","description":"CppGuide","date":"2022-12-04T06:15:06.000Z","formattedDate":"2022\u5e7412\u67084\u65e5","tags":[],"readingTime":0.07,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"umi4 \u914d\u7f6e antd \u9ed8\u8ba4\u4e2d\u6587\u6a21\u5f0f","permalink":"/blog/2023/02/24/index"},"nextItem":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","permalink":"/blog/2022/11/25/index"}},"content":"[CppGuide](https://github.com/balloonwj/CppGuide)\\n\\n[\u9648\u5929\u5947,cs\u5165\u95e8\u4e00\u6761\u9f99\u670d\u52a1](https://csdiy.wiki/)"},{"id":"/2022/11/25/index","metadata":{"permalink":"/blog/2022/11/25/index","source":"@site/blog/2022/11/25/index.md","title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","description":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","date":"2022-11-25T00:00:00.000Z","formattedDate":"2022\u5e7411\u670825\u65e5","tags":[{"label":"Go","permalink":"/blog/tags/go"},{"label":"Java","permalink":"/blog/tags/java"},{"label":"\u52a0\u5bc6","permalink":"/blog/tags/\u52a0\u5bc6"},{"label":"RSA","permalink":"/blog/tags/rsa"}],"readingTime":3.19,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","tags":["Go","Java","\u52a0\u5bc6","RSA"],"authors":"ahKevinXy","description":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","hide_table_of_contents":false},"prevItem":{"title":"\u4f18\u79c0\u535a\u5ba2","permalink":"/blog/stars"},"nextItem":{"title":"\u8ba1\u7b97\u673a\u4e13\u4e1a\u672f\u8bed\u89e3\u91ca","permalink":"/blog/english/base"}},"content":"![visitors](https://visitor-badge.glitch.me/badge?page_id=ahKevinXy/ahKevinXy.github.io/blog/2022_11_25)\\n\u26a1\ufe0f \u548c \u7532\u65b9\u5bf9\u63a5\u7cfb\u7edf \u9047\u5230 java Rsa \u52a0\u5bc6  go \u65e0\u6cd5\u89e3\u5bc6\u7684\u95ee\u9898\\n\\n:::note\\n\\n1. go \u751f\u6210\u7684\u516c\u94a5 \u4e0d\u80fd\u76f4\u63a5\u7ed9Java\u4f7f\u7528\\n2. java\u7684 \u516c\u94a5 \u9700\u8981\u628a  go \u751f\u6210\u7684\u5934 `-----BEGIN RSA Public Key-----` \u548c `-----END RSA Public Key-----` \u5220\u9664 \u4e0d\u80fd\u4fdd\u5b58\u5373\u53ef\\n\\n:::\\n\\n## go  \u4ee3\u7801\\n\\n```go\\npackage rsa\\nimport (\\n \\"crypto/rand\\"\\n \\"crypto/rsa\\"\\n \\"crypto/x509\\"\\n \\"encoding/pem\\"\\n \\"os\\"\\n \\"crypto\\"\\n \\"encoding/base64\\"\\n \\"encoding/pem\\"\\n \\"errors\\"\\n \\"fmt\\"\\n \\"os\\"\\n \\"strings\\"\\n)\\n    \\n//RSA\u89e3\u5bc6\\nfunc Decrypt(cipherText []byte, path string) []byte {\\n //\u6253\u5f00\u6587\u4ef6\\n file, err := os.Open(path)\\n if err != nil {\\n  panic(err)\\n }\\n defer file.Close()\\n //\u83b7\u53d6\u6587\u4ef6\u5185\u5bb9\\n info, _ := file.Stat()\\n buf := make([]byte, info.Size())\\n file.Read(buf)\\n //pem\u89e3\u7801\\n block, _ := pem.Decode(buf)\\n //X509\u89e3\u7801\\n privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)\\n if err != nil {\\n  panic(err)\\n }\\n //\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\\n plainText, _ := rsa.DecryptPKCS1v15(rand.Reader, privateKey, cipherText)\\n //\u8fd4\u56de\u660e\u6587\\n return plainText\\n}\\n\\n// DecryptByString\\n// @Description: \u89e3\u5bc6\\n// @Author ahKevinXy\\n// @Date 2022-11-22 16:50:15\\nfunc DecryptByString(cipherText string, key string) []byte {\\n //\u6253\u5f00\u6587\u4ef6\\n content := Base64Decode(cipherText)\\n //X509\u89e3\u7801\\n\\n block, _ := pem.Decode([]byte(key))\\n\\n privateKey, err := x509.ParsePKCS1PrivateKey(block.Bytes)\\n if err != nil {\\n  panic(err)\\n }\\n //\u5bf9\u5bc6\u6587\u8fdb\u884c\u89e3\u5bc6\\n plainText, _ := rsa.DecryptPKCS1v15(rand.Reader, privateKey, content)\\n //\u8fd4\u56de\u660e\u6587\\n return plainText\\n}\\n\\n\\n\\n\\n//RSA\u52a0\u5bc6 \u901a\u8fc7\u79c1\u94a5\u8def\u5f84\\nfunc Encrypt(plainText []byte, path string) []byte {\\n //\u6253\u5f00\u6587\u4ef6\\n file, err := os.Open(path)\\n if err != nil {\\n  panic(err)\\n }\\n \\n\\n defer file.Close()\\n //\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\\n info, _ := file.Stat()\\n buf := make([]byte, info.Size())\\n file.Read(buf)\\n //pem\u89e3\u7801\\n block, _ := pem.Decode(buf)\\n //x509\u89e3\u7801\\n publicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)\\n if err != nil {\\n  panic(err)\\n }\\n //\u7c7b\u578b\u65ad\u8a00\\n publicKey := publicKeyInterface.(*rsa.PublicKey)\\n //\u5bf9\u660e\u6587\u8fdb\u884c\u52a0\u5bc6\\n cipherText, err := rsa.EncryptPKCS1v15(rand.Reader, publicKey, plainText)\\n if err != nil {\\n  panic(err)\\n }\\n //\u8fd4\u56de\u5bc6\u6587\\n return cipherText\\n}\\n\\n// \u901a\u8fc7\u76f4\u63a5\u4f20 string \u65b9\u5f0f\\nfunc EncryptByString(plainText string, public string) string {\\n\\n block, _ := pem.Decode([]byte(public))\\n //x509\u89e3\u7801\\n publicKeyInterface, err := x509.ParsePKIXPublicKey(block.Bytes)\\n if err != nil {\\n  panic(err)\\n }\\n //\u7c7b\u578b\u65ad\u8a00\\n publicKey := publicKeyInterface.(*rsa.PublicKey)\\n //\u5bf9\u660e\u6587\u8fdb\u884c\u52a0\u5bc6\\n cipherText, err := rsa.EncryptPKCS1v15(rand.Reader, publicKey, []byte(plainText))\\n if err != nil {\\n  panic(err)\\n }\\n fmt.Println(cipherText)\\n //\u8fd4\u56de\u5bc6\u6587\\n fmt.Println(string(cipherText))\\n\\n return Base64EncodeString(string(cipherText))\\n\\n}\\n\\nfunc Base64EncodeString(str string) string {\\n return base64.StdEncoding.EncodeToString([]byte(str))\\n}\\n\\n// Base64Decode\\n// @Description: base64\u89e3\u7801\\n// @Author ahKevinXy\\n// @Date 2022-11-22 17:04:52\\nfunc Base64Decode(data string) []byte {\\n decodedByte, _ := base64.StdEncoding.DecodeString(data)\\n return decodedByte\\n}\\n```\\n\\n## java \u4ee3\u7801\\n\\n```java\\n\\nimport javax.crypto.Cipher;\\nimport java.io.ByteArrayOutputStream;\\nimport java.security.*;\\nimport java.security.interfaces.RSAPrivateKey;\\nimport java.security.interfaces.RSAPublicKey;\\nimport java.security.spec.InvalidKeySpecException;\\nimport java.security.spec.PKCS8EncodedKeySpec;\\nimport java.security.spec.X509EncodedKeySpec;\\nimport java.util.Base64;\\nimport java.util.HashMap;\\nimport java.util.Map;\\n\\n\\n\\npublic class RSATest {\\n\\n public static final String KEY_ALGORITHM = \\"RSA\\";\\n    // \u516c\u94a5\\n    private static final String PUBLIC_KEY = \\"xxxxx\u52a0\u5bc6\u516c\u94a5\\";\\n    private static final int MAX_ENCRYPT_BLOCK = 117;\\n    private static final int MAX_DECRYPT_BLOCK = 128;\\n    public static void main(String[] args) throws Exception {\\n\\n        String cipherText;\\n        String content = \\"\u8fd9\u662f\u4e00\u4e2a\u6d4b\u8bd5\u52a0\u5bc6\u5bc6\u7801\\";\\n        String publicKey = PUBLIC_KEY;\\n\\n        cipherText = encrypt(content, publicKey);\\n        System.out.println(cipherText);\\n    }\\n\\n\\n\\n    // \u83b7\u53d6\u516c\u94a5\\n    public static PublicKey getPublicKey(String publicKeyString) throws NoSuchAlgorithmException, InvalidKeySpecException {\\n        byte[] publicKeyByte = Base64.getDecoder().decode(publicKeyString);\\n        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(publicKeyByte);\\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\\n        return keyFactory.generatePublic(keySpec);\\n    }\\n    public static String encrypt(String text, String publicKeyStr) {\\n        try {\\n          \\n            Cipher cipher = Cipher.getInstance(KEY_ALGORITHM);\\n            cipher.init(Cipher.ENCRYPT_MODE, getPublicKey(publicKeyStr));\\n            byte[] tempBytes = cipher.doFinal(text.getBytes(\\"UTF-8\\"));\\n            return Base64.getEncoder().encodeToString(tempBytes);\\n        } catch (Exception e) {\\n            throw new RuntimeException(\\"\u52a0\u5bc6\u5b57\u7b26\u4e32[\\" + text + \\"]\u65f6\u9047\u5230\u5f02\u5e38\\", e);\\n        }\\n    }\\n\\n\\n\\n\\n\\n}\\n\\n\\n\\n```"},{"id":"/english/base","metadata":{"permalink":"/blog/english/base","source":"@site/blog/english/base.md","title":"\u8ba1\u7b97\u673a\u4e13\u4e1a\u672f\u8bed\u89e3\u91ca","description":"CPU","date":"2022-11-22T17:01:44.000Z","formattedDate":"2022\u5e7411\u670822\u65e5","tags":[],"readingTime":0.01,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"Go \u4e0e Java  Rsa\u52a0\u5bc6\u7b97\u6cd5","permalink":"/blog/2022/11/25/index"},"nextItem":{"title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","permalink":"/blog/english"}},"content":"## CPU"},{"id":"/english","metadata":{"permalink":"/blog/english","source":"@site/blog/english/index.md","title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","description":"\u5fae\u670d\u52a1 Microservice","date":"2022-10-03T15:56:47.000Z","formattedDate":"2022\u5e7410\u67083\u65e5","tags":[],"readingTime":0.21,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u8ba1\u7b97\u673a\u4e13\u4e1a\u672f\u8bed\u89e3\u91ca","permalink":"/blog/english/base"},"nextItem":{"title":"\u767d\u5ad6\u7684\u51b7\u77e5\u8bc6","permalink":"/blog/free"}},"content":"## \u5fae\u670d\u52a1 Microservice\\n\\n## (\u6808)Stack\\n\\n## \u6848\u4f8b case\\n\\n## \u4f8b\u5b50 example\\n\\n## \u81ea\u7531\u804c\u4e1a\u8005 freelancer  --  work \uff08\u5de5\u4f5c\uff09\\n\\n## \u786c\u4ef6 hardware\\n\\n## \u610f\u89c1\u53cd\u9988 feedback\\n\\n## \u6982\u8981 summary"},{"id":"/free","metadata":{"permalink":"/blog/free","source":"@site/blog/free/index.md","title":"\u767d\u5ad6\u7684\u51b7\u77e5\u8bc6","description":"\u767d\u5ad6\u5de5\u5177","date":"2022-10-02T15:47:32.000Z","formattedDate":"2022\u5e7410\u67082\u65e5","tags":[{"label":"\u514d\u8d39","permalink":"/blog/tags/\u514d\u8d39"}],"readingTime":0.2,"hasTruncateMarker":false,"authors":[{"name":"ahKevinXy","title":"\u4f5c\u8005","url":"https://github.com/ahKevinXy","email":"ahkevinxy@gmail.com","imageURL":"https://github.com/ahKevinXy.png","key":"ahKevinXy"}],"frontMatter":{"tags":["\u514d\u8d39"],"authors":"ahKevinXy","description":"\u767d\u5ad6\u5de5\u5177","hide_table_of_contents":false},"prevItem":{"title":"\u4e13\u4e1a\u82f1\u8bed\u7ffb\u8bd1","permalink":"/blog/english"},"nextItem":{"title":"\u7a0b\u5e8f\u5458\u5230\u67b6\u6784\u5e08","permalink":"/blog/2022/09/22/index"}},"content":"## \u5f00\u653e \u56fe\u7247\u751f\u6210\u5668 any idea you can imagine and create\\n\\n[undraw](https://undraw.co/)\\n\\n## \u6258\u7ba1\u5e73\u53f0 (\u51e0\u4e4e\u65e0\u9650\u5236\u4f7f\u7528)\\n\\n[\u963f\u91cccodeup](https://codeup.aliyun.com/)\\n\\n## \u8fdc\u7a0b\u7f16\u8f91\u5668\\n\\n[\u963f\u91ccide](https://ide.aliyun.com/)"},{"id":"/2022/09/22/index","metadata":{"permalink":"/blog/2022/09/22/index","source":"@site/blog/2022/09/22/index.md","title":"\u7a0b\u5e8f\u5458\u5230\u67b6\u6784\u5e08","description":"\u8fd8\u662f\u76f4\u63a5\u653e\u5f03\u5427","date":"2022-09-22T00:00:00.000Z","formattedDate":"2022\u5e749\u670822\u65e5","tags":[],"readingTime":0.035,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u767d\u5ad6\u7684\u51b7\u77e5\u8bc6","permalink":"/blog/free"},"nextItem":{"title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","permalink":"/blog/source"}},"content":"\u8fd8\u662f\u76f4\u63a5\u653e\u5f03\u5427"},{"id":"/source","metadata":{"permalink":"/blog/source","source":"@site/blog/source/index.md","title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","description":"Gihub \u6398\u91d1\u8ba1\u5212","date":"2022-09-03T13:37:22.000Z","formattedDate":"2022\u5e749\u67083\u65e5","tags":[],"readingTime":0.22,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u7a0b\u5e8f\u5458\u5230\u67b6\u6784\u5e08","permalink":"/blog/2022/09/22/index"},"nextItem":{"title":"\u535a\u5ba2","permalink":"/blog/index"}},"content":"## [Gihub \u6398\u91d1\u8ba1\u5212](https://www.zhihu.com/people/github-stars)\\n\\n## [\u5f00\u6e90\u5927\u5c4f\u5c55\u793a](https://zhuanlan.zhihu.com/p/384830720)\\n\\n## SNS\\n\\n* [ThinkSNS](https://github.com/slimkit/plus)\\n\\n## \u7b14\u8bb0\\n\\n:::info\\nAn open source, markdown-based, self-hosted note taking webapp.\\n\\n:::\\n\\n* [batnoter](https://github.com/batnoter/batnoter.git)\\n\\n* [topgoer](https://www.topgoer.com/)\\n\\n## go \u5b66\u4e60\u8d44\u6599(\u5168)"},{"id":"/index","metadata":{"permalink":"/blog/index","source":"@site/blog/index.md","title":"\u535a\u5ba2","description":"","date":"2022-08-30T03:49:14.000Z","formattedDate":"2022\u5e748\u670830\u65e5","tags":[],"readingTime":0,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u4f18\u8d28\u5f00\u6e90\u8f6f\u4ef6","permalink":"/blog/source"},"nextItem":{"title":"\u7f51\u7ad9\u5bfc\u822a","permalink":"/blog/awesome/go"}},"content":""},{"id":"/awesome/go","metadata":{"permalink":"/blog/awesome/go","source":"@site/blog/awesome/go.md","title":"\u7f51\u7ad9\u5bfc\u822a","description":"Go \u8d44\u6e90\u7f51\u7ad9\u5bfc\u822a","date":"2022-08-30T03:49:14.000Z","formattedDate":"2022\u5e748\u670830\u65e5","tags":[],"readingTime":0.075,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"prevItem":{"title":"\u535a\u5ba2","permalink":"/blog/index"}},"content":"## [Go \u8d44\u6e90\u7f51\u7ad9\u5bfc\u822a](https://hao.studygolang.com/)\\n\\n<iframe  src=\\"https://awesome-go.com/\\" width=\\"100%\\" height=\\"800\\"  allowfullscreen frameborder=\\"0\\"></iframe>"}]}')}}]);