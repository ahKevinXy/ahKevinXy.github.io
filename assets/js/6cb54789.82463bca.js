"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[99930],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=l(t),y=o,f=s["".concat(i,".").concat(y)]||s[y]||m[y]||a;return t?r.createElement(f,u(u({ref:n},p),{},{components:t})):r.createElement(f,u({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,u=new Array(a);u[0]=y;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[s]="string"==typeof e?e:o,u[1]=c;for(var l=2;l<a;l++)u[l]=t[l];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},33979:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>u,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=t(87462),o=(t(67294),t(3905));const a={},u="\u5ef6\u65f6\u961f\u5217",c={unversionedId:"backend/go/code/delayqueue/index",id:"backend/go/code/delayqueue/index",title:"\u5ef6\u65f6\u961f\u5217",description:"",source:"@site/docs/backend/go/code/delayqueue/index.md",sourceDirName:"backend/go/code/delayqueue",slug:"/backend/go/code/delayqueue/",permalink:"/docs/backend/go/code/delayqueue/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"index",permalink:"/docs/backend/go/code/container/list/"},next:{title:"\u70ed\u63d2\u4ef6",permalink:"/docs/backend/go/code/hot_plugin/"}},i={},l=[],p={toc:l},s="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5ef6\u65f6\u961f\u5217"},"\u5ef6\u65f6\u961f\u5217"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'package delayqueue\n\nimport (\n "context"\n "sync"\n "sync/atomic"\n "time"\n\n "github.com/jiaxwu/gommon/container/heap"\n)\n\ntype entry[T any] struct {\n value      T\n expiration time.Time // \u5230\u671f\u65f6\u95f4\n}\n\n// \u5ef6\u8fdf\u961f\u5217\n// \u53c2\u8003https://github.com/RussellLuo/timingwheel/blob/master/delayqueue/delayqueue.go\ntype DelayQueue[T any] struct {\n h *heap.Heap[*entry[T]]\n // // \u4fdd\u8bc1\u5e76\u53d1\u5b89\u5168\n mutex sync.Mutex\n // \u8868\u793aTake()\u662f\u5426\u6b63\u5728\u7b49\u5f85\u961f\u5217\u4e0d\u4e3a\u7a7a\u6216\u66f4\u65e9\u5230\u671f\u7684\u5143\u7d20\n // 0\u8868\u793aTake()\u6ca1\u5728\u7b49\u5f85\uff0c1\u8868\u793aTake()\u5728\u7b49\u5f85\n sleeping int32\n // \u5524\u9192\u901a\u9053\n wakeup chan struct{}\n}\n\n// \u521b\u5efa\u5ef6\u8fdf\u961f\u5217\nfunc New[T any]() *DelayQueue[T] {\n return &DelayQueue[T]{\n  h: heap.New(nil, func(e1, e2 *entry[T]) bool {\n   return e1.expiration.Before(e2.expiration)\n  }),\n  wakeup: make(chan struct{}),\n }\n}\n\n// \u6dfb\u52a0\u5ef6\u8fdf\u5143\u7d20\u5230\u961f\u5217\nfunc (q *DelayQueue[T]) Push(value T, delay time.Duration) {\n q.mutex.Lock()\n defer q.mutex.Unlock()\n entry := &entry[T]{\n  value:      value,\n  expiration: time.Now().Add(delay),\n }\n q.h.Push(entry)\n // \u5524\u9192\u7b49\u5f85\u7684Take()\n // \u8fd9\u91cc\u8868\u793a\u65b0\u6dfb\u52a0\u7684\u5143\u7d20\u5230\u671f\u65f6\u95f4\u662f\u6700\u65e9\u7684\uff0c\u6216\u8005\u539f\u6765\u961f\u5217\u4e3a\u7a7a\n // \u56e0\u6b64\u5fc5\u987b\u5524\u9192\u7b49\u5f85\u7684Take()\uff0c\u56e0\u4e3a\u53ef\u4ee5\u62ff\u5230\u66f4\u65e9\u5230\u671f\u7684\u5143\u7d20\n if q.h.Peek() == entry {\n  // \u628asleeping\u4ece1\u4fee\u6539\u62100\uff0c\u4e5f\u5c31\u662f\u5524\u9192\u7b49\u5f85\u7684Take()\n  if atomic.CompareAndSwapInt32(&q.sleeping, 1, 0) {\n   q.wakeup <- struct{}{}\n  }\n }\n}\n\n// \u7b49\u5f85\u76f4\u5230\u6709\u5143\u7d20\u5230\u671f\n// \u6216\u8005ctx\u88ab\u5173\u95ed\nfunc (q *DelayQueue[T]) Take(ctx context.Context) (T, bool) {\n for {\n  var timer *time.Timer\n  q.mutex.Lock()\n  // \u6709\u5143\u7d20\n  if !q.h.Empty() {\n   // \u83b7\u53d6\u5143\u7d20\n   entry := q.h.Peek()\n   now := time.Now()\n   if now.After(entry.expiration) {\n    q.h.Pop()\n    q.mutex.Unlock()\n    return entry.value, true\n   }\n   // \u5230\u671f\u65f6\u95f4\uff0c\u4f7f\u7528time.NewTimer()\u624d\u80fd\u591f\u8c03\u7528Stop()\uff0c\u4ece\u800c\u91ca\u653e\u5b9a\u65f6\u5668\n   timer = time.NewTimer(entry.expiration.Sub(now))\n  }\n  // \u8d70\u5230\u8fd9\u91cc\u8868\u793a\u9700\u8981\u7b49\u5f85\u4e86\uff0c\u8bbe\u7f6e\u4e3a1\u544a\u8bc9Push()\u5728\u6709\u65b0\u5143\u7d20\u65f6\u8981\u901a\u77e5\n  atomic.StoreInt32(&q.sleeping, 1)\n  q.mutex.Unlock()\n\n  // \u4e0d\u4e3a\u7a7a\uff0c\u9700\u8981\u540c\u65f6\u7b49\u5f85\u5143\u7d20\u5230\u671f\uff0c\u5e76\u4e14\u9664\u975etimer\u5230\u671f\uff0c\u5426\u5219\u90fd\u9700\u8981\u5173\u95edtimer\u907f\u514d\u6cc4\u9732\n  if timer != nil {\n   select {\n   case <-q.wakeup: // \u65b0\u7684\u66f4\u5feb\u5230\u671f\u5143\u7d20\n    timer.Stop()\n   case <-timer.C: // \u9996\u5143\u7d20\u5230\u671f\n    // \u8bbe\u7f6e\u4e3a0\uff0c\u5982\u679c\u539f\u6765\u4e5f\u4e3a0\u8868\u793a\u6709Push()\u6b63\u5728q.wakeup\u88ab\u963b\u585e\n    if atomic.SwapInt32(&q.sleeping, 0) == 0 {\n     // \u907f\u514dPush()\u7684\u534f\u7a0b\u88ab\u963b\u585e\n     <-q.wakeup\n    }\n   case <-ctx.Done(): // \u88ab\u5173\u95ed\n    timer.Stop()\n    var t T\n    return t, false\n   }\n  } else {\n   select {\n   case <-q.wakeup: // \u65b0\u7684\u66f4\u5feb\u5230\u671f\u5143\u7d20\n   case <-ctx.Done(): // \u88ab\u5173\u95ed\n    var t T\n    return t, false\n   }\n  }\n }\n}\n\n// \u8fd4\u56de\u4e00\u4e2a\u901a\u9053\uff0c\u8f93\u51fa\u5230\u671f\u5143\u7d20\n// size\u662f\u901a\u9053\u7f13\u5b58\u5927\u5c0f\nfunc (q *DelayQueue[T]) Channel(ctx context.Context, size int) <-chan T {\n out := make(chan T, size)\n go func() {\n  for {\n   entry, ok := q.Take(ctx)\n   if !ok {\n    close(out)\n    return\n   }\n   out <- entry\n  }\n }()\n return out\n}\n\n// \u83b7\u53d6\u961f\u5934\u5143\u7d20\nfunc (q *DelayQueue[T]) Peek() (T, bool) {\n q.mutex.Lock()\n defer q.mutex.Unlock()\n if q.h.Empty() {\n  var t T\n  return t, false\n }\n return q.h.Peek().value, true\n}\n\n// \u83b7\u53d6\u5230\u671f\u5143\u7d20\nfunc (q *DelayQueue[T]) Pop() (T, bool) {\n q.mutex.Lock()\n defer q.mutex.Unlock()\n // \u6ca1\u5143\u7d20\n if q.h.Empty() {\n  var t T\n  return t, false\n }\n entry := q.h.Peek()\n // \u8fd8\u6ca1\u5143\u7d20\u5230\u671f\n if time.Now().Before(entry.expiration) {\n  var t T\n  return t, false\n }\n // \u79fb\u9664\u5143\u7d20\n q.h.Pop()\n return entry.value, true\n}\n\n// \u662f\u5426\u961f\u5217\u4e3a\u7a7a\nfunc (q *DelayQueue[T]) Empty() bool {\n q.mutex.Lock()\n defer q.mutex.Unlock()\n return q.h.Empty()\n}\n')))}m.isMDXComponent=!0}}]);