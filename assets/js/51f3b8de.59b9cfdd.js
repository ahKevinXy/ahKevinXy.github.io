"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[75453],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var u=r.createContext({}),s=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=s(n.components);return r.createElement(u.Provider,{value:e},n.children)},p="mdxType",g={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,u=n.parentName,c=l(n,["components","mdxType","originalType","parentName"]),p=s(t),m=a,d=p["".concat(u,".").concat(m)]||p[m]||g[m]||i;return t?r.createElement(d,o(o({ref:e},c),{},{components:t})):r.createElement(d,o({ref:e},c))}));function d(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,o=new Array(i);o[0]=m;var l={};for(var u in e)hasOwnProperty.call(e,u)&&(l[u]=e[u]);l.originalType=n,l[p]="string"==typeof n?n:a,o[1]=l;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},56306:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(83117),a=t(80102),i=(t(67294),t(3905)),o=["components"],l={},u="gin \u5b66\u4e60",s={unversionedId:"backend/go/gin/base",id:"backend/go/gin/base",title:"gin \u5b66\u4e60",description:"gin \u4ecb\u7ecd",source:"@site/docs/backend/go/gin/base.md",sourceDirName:"backend/go/gin",slug:"/backend/go/gin/base",permalink:"/docs/backend/go/gin/base",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Gin \u6846\u67b6",permalink:"/docs/backend/go/gin/"},next:{title:"\u5b98\u65b9\u6587\u6863",permalink:"/docs/backend/go/gin/offical"}},c={},p=[{value:"gin \u4ecb\u7ecd",id:"gin-\u4ecb\u7ecd",level:2},{value:"Radix \u6811",id:"radix-\u6811",level:2},{value:"\u7279\u6027",id:"\u7279\u6027",level:2},{value:"\u5feb\u901f",id:"\u5feb\u901f",level:3},{value:"\u652f\u6301\u4e2d\u95f4\u4ef6",id:"\u652f\u6301\u4e2d\u95f4\u4ef6",level:3},{value:"Crash \u5904\u7406",id:"crash-\u5904\u7406",level:3},{value:"JSON \u9a8c\u8bc1",id:"json-\u9a8c\u8bc1",level:3},{value:"\u8def\u7531\u7ec4",id:"\u8def\u7531\u7ec4",level:3},{value:"\u9519\u8bef\u7ba1\u7406",id:"\u9519\u8bef\u7ba1\u7406",level:3},{value:"\u5185\u7f6e\u6e32\u67d3",id:"\u5185\u7f6e\u6e32\u67d3",level:3},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u4f7f\u7528Jsoniter \u7f16\u8bd1",id:"\u4f7f\u7528jsoniter-\u7f16\u8bd1",level:2},{value:"AsciiJson",id:"asciijson",level:2},{value:"HTML \u6e32\u67d3",id:"html-\u6e32\u67d3",level:2},{value:"\u81ea\u5b9a\u4e49\u6a21\u677f\u6e32\u67d3\u5668",id:"\u81ea\u5b9a\u4e49\u6a21\u677f\u6e32\u67d3\u5668",level:3},{value:"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26",id:"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26",level:3},{value:"\u81ea\u5b9a\u4e49\u6a21\u677f\u529f\u80fd",id:"\u81ea\u5b9a\u4e49\u6a21\u677f\u529f\u80fd",level:3},{value:"Multipart/Urlencoded \u7ed1\u5b9a",id:"multiparturlencoded-\u7ed1\u5b9a",level:2},{value:"Multipart/Urlencoded \u8868\u5355",id:"multiparturlencoded-\u8868\u5355",level:2},{value:"PureJSON",id:"purejson",level:2},{value:"Query \u548c post form",id:"query-\u548c-post-form",level:2},{value:"XML/JSON/YAML/ProtoBuf \u6e32\u67d3",id:"xmljsonyamlprotobuf-\u6e32\u67d3",level:2},{value:"\u5355\u6587\u4ef6",id:"\u5355\u6587\u4ef6",level:2},{value:"\u591a\u6587\u4ef6",id:"\u591a\u6587\u4ef6",level:2},{value:"\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6",id:"\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6",level:2},{value:"\u4ece reader \u8bfb\u53d6\u6570\u636e",id:"\u4ece-reader-\u8bfb\u53d6\u6570\u636e",level:2},{value:"\u4f18\u96c5\u5730\u91cd\u542f\u6216\u505c\u6b62",id:"\u4f18\u96c5\u5730\u91cd\u542f\u6216\u505c\u6b62",level:2},{value:"\u4f7f\u7528\u4e2d\u95f4\u4ef6",id:"\u4f7f\u7528\u4e2d\u95f4\u4ef6",level:2},{value:"\u53ea\u7ed1\u5b9a url \u67e5\u8be2\u5b57\u7b26\u4e32",id:"\u53ea\u7ed1\u5b9a-url-\u67e5\u8be2\u5b57\u7b26\u4e32",level:2},{value:"\u5728\u4e2d\u95f4\u4ef6\u4e2d\u4f7f\u7528 Goroutine",id:"\u5728\u4e2d\u95f4\u4ef6\u4e2d\u4f7f\u7528-goroutine",level:2},{value:"\u652f\u6301 Let&#39;s Encrypt",id:"\u652f\u6301-lets-encrypt",level:2},{value:"\u6620\u5c04\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u53c2\u6570",id:"\u6620\u5c04\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u53c2\u6570",level:2},{value:"\u67e5\u8be2\u5b57\u7b26\u4e32\u53c2\u6570",id:"\u67e5\u8be2\u5b57\u7b26\u4e32\u53c2\u6570",level:2},{value:"\u6a21\u578b\u7ed1\u5b9a\u548c\u9a8c\u8bc1",id:"\u6a21\u578b\u7ed1\u5b9a\u548c\u9a8c\u8bc1",level:2},{value:"\u7ed1\u5b9a HTML \u590d\u9009\u6846",id:"\u7ed1\u5b9a-html-\u590d\u9009\u6846",level:2},{value:"\u7ed1\u5b9a Uri",id:"\u7ed1\u5b9a-uri",level:2},{value:"\u7ed1\u5b9a\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u6570\u636e",id:"\u7ed1\u5b9a\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u6570\u636e",level:2},{value:"\u8fd0\u884c\u591a\u4e2a\u670d\u52a1",id:"\u8fd0\u884c\u591a\u4e2a\u670d\u52a1",level:2},{value:"\u9759\u6001\u6587\u4ef6\u670d\u52a1",id:"\u9759\u6001\u6587\u4ef6\u670d\u52a1",level:2},{value:"\u9759\u6001\u8d44\u6e90\u5d4c\u5165",id:"\u9759\u6001\u8d44\u6e90\u5d4c\u5165",level:2}],g={toc:p},m="wrapper";function d(n){var e=n.components,t=(0,a.Z)(n,o);return(0,i.kt)(m,(0,r.Z)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gin-\u5b66\u4e60"},"gin \u5b66\u4e60"),(0,i.kt)("h2",{id:"gin-\u4ecb\u7ecd"},"gin \u4ecb\u7ecd"),(0,i.kt)("p",null,"Gin \u662f\u4e00\u4e2a\u7528 Go (Golang) \u7f16\u5199\u7684 Web \u6846\u67b6\u3002 \u5b83\u5177\u6709\u7c7b\u4f3c martini \u7684 API\uff0c\u6027\u80fd\u8981\u597d\u5f97\u591a\uff0c\u591a\u4e8f\u4e86 httprouter\uff0c\u901f\u5ea6\u63d0\u9ad8\u4e86 40 \u500d\u3002 \u5982\u679c\u60a8\u9700\u8981\u6027\u80fd\u548c\u826f\u597d\u7684\u751f\u4ea7\u529b\uff0c\u60a8\u4e00\u5b9a\u4f1a\u559c\u6b22 Gin\u3002"),(0,i.kt)("p",null,"\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd Gin \u662f\u4ec0\u4e48\uff0c\u5b83\u89e3\u51b3\u4e86\u54ea\u4e9b\u95ee\u9898\uff0c\u4ee5\u53ca\u5b83\u5982\u4f55\u5e2e\u52a9\u4f60\u7684\u9879\u76ee\u3002"),(0,i.kt)("h2",{id:"radix-\u6811"},"Radix \u6811"),(0,i.kt)("p",null,"Radix \u6811\u8bbe\u8ba1\u601d\u60f3\u6765\u81ea\u4e8e DonaldR.Morrison \u4e8e 1968 \u5e74\u63d0\u51fa\u7684 Patricia \u6811\uff08Practical Algorithm To Retrieve Information Coded In Alphanumeric\uff09\uff0c\u8fd9\u662f\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u952e\u503c\u7684\u67e5\u627e\u6811\uff0c\u5c24\u5176\u9002\u5408\u5904\u7406\u975e\u5e38\u957f\u7684\u3001\u53ef\u53d8\u957f\u5ea6\u7684\u952e\u503c\u3002 Patricia \u7684\u57fa\u672c\u601d\u60f3\u662f\u6784\u5efa\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5728\u6bcf\u4e2a\u8282\u70b9\u4e2d\u90fd\u5b58\u50a8\u6709\u5728\u8fdb\u884c\u4e0b\u4e00\u6b21 bit \u6d4b\u8bd5\u4e4b\u524d\u9700\u8981\u8df3\u8fc7\u7684 bit \u6570\u76ee\uff0c\u4ee5\u6b64\u6765\u907f\u514d\u5355\u8def\u5206\u652f\u3002Patricia \u6811\u4e00\u822c\u7531\u5185\u90e8\u8282\u70b9\u548c\u5916\u90e8\u8282\u70b9\u7ec4\u6210\uff0c\u5185\u90e8\u8282\u70b9\u6307\u793a\u9700\u8981\u8fdb\u884c bit \u6d4b\u8bd5\u7684\u4f4d\u7f6e\uff0c\u5e76\u6839\u636e bit \u6d4b\u8bd5\u7ed3\u679c\u51b3\u5b9a\u67e5\u627e\u64cd\u4f5c\u524d\u8fdb\u7684\u65b9\u5411\uff1b\u5916\u90e8\u8282\u70b9\u7528\u4e8e\u5b58\u50a8\u952e\u503c\uff0c\u67e5\u627e\u64cd\u4f5c\u5c06\u4e8e\u5916\u90e8\u8282\u70b9\u5904\u7ec8\u7ed3\u3002"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Patricia \u67e5\u627e\uff0c\u7ec8\u7ed3\u4e8e\u67d0\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5224\u65ad\u8be5\u53f6\u5b50\u8282\u70b9\u662f\u5426\u4e0e\u67e5\u627e\u952e\u76f8\u540c"),(0,i.kt)("li",{parentName:"ol"},"\u5982\u679c\u627e\u5230\u7684\u53f6\u5b50\u8282\u70b9\u65e0\u6cd5\u4e0e\u67e5\u627e\u952e\u5339\u914d\uff0c\u5219\u5728\u8fd9\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u91cd\u590d\u952e\u94fe\u8868\u4e2d\u5bfb\u627e\u7f51\u7edc\u5339\u914d\u7684\u53ef\u80fd\u3002"),(0,i.kt)("li",{parentName:"ol"},"\u5982\u679c\u627e\u5230\u7684\u53f6\u5b50\u8282\u70b9\u53ca\u5176\u91cd\u590d\u952e\u4e0e\u67e5\u627e\u952e\u4e0d\u6ee1\u8db3\u7f51\u7edc\u5339\u914d\u6761\u4ef6\uff0c\u5219\u5411\u6811\u9876\u56de\u6eaf\uff0c\u7ee7\u7eed\u5bfb\u627e\u7f51\u7edc\u5339\u914d\u7684\u53ef\u80fd")),(0,i.kt)("h2",{id:"\u7279\u6027"},"\u7279\u6027"),(0,i.kt)("h3",{id:"\u5feb\u901f"},"\u5feb\u901f"),(0,i.kt)("p",null,"\u57fa\u4e8e Radix \u6811\u7684\u8def\u7531\uff0c\u5c0f\u5185\u5b58\u5360\u7528\u3002\u6ca1\u6709\u53cd\u5c04\u3002\u53ef\u9884\u6d4b\u7684 API \u6027\u80fd\u3002"),(0,i.kt)("h3",{id:"\u652f\u6301\u4e2d\u95f4\u4ef6"},"\u652f\u6301\u4e2d\u95f4\u4ef6"),(0,i.kt)("p",null,"\u4f20\u5165\u7684 HTTP \u8bf7\u6c42\u53ef\u4ee5\u7531\u4e00\u7cfb\u5217\u4e2d\u95f4\u4ef6\u548c\u6700\u7ec8\u64cd\u4f5c\u6765\u5904\u7406\u3002 \u4f8b\u5982\uff1aLogger\uff0cAuthorization\uff0cGZIP\uff0c\u6700\u7ec8\u64cd\u4f5c DB\u3002"),(0,i.kt)("h3",{id:"crash-\u5904\u7406"},"Crash \u5904\u7406"),(0,i.kt)("p",null,"Gin \u53ef\u4ee5 catch \u4e00\u4e2a\u53d1\u751f\u5728 HTTP \u8bf7\u6c42\u4e2d\u7684 panic \u5e76 recover \u5b83\u3002\u8fd9\u6837\uff0c\u4f60\u7684\u670d\u52a1\u5668\u5c06\u59cb\u7ec8\u53ef\u7528\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5411 Sentry \u62a5\u544a\u8fd9\u4e2a panic\uff01"),(0,i.kt)("h3",{id:"json-\u9a8c\u8bc1"},"JSON \u9a8c\u8bc1"),(0,i.kt)("p",null,"Gin \u53ef\u4ee5\u89e3\u6790\u5e76\u9a8c\u8bc1\u8bf7\u6c42\u7684 JSON\uff0c\u4f8b\u5982\u68c0\u67e5\u6240\u9700\u503c\u7684\u5b58\u5728\u3002"),(0,i.kt)("h3",{id:"\u8def\u7531\u7ec4"},"\u8def\u7531\u7ec4"),(0,i.kt)("p",null,"\u66f4\u597d\u5730\u7ec4\u7ec7\u8def\u7531\u3002\u662f\u5426\u9700\u8981\u6388\u6743\uff0c\u4e0d\u540c\u7684 API \u7248\u672c\u2026\u2026 \u6b64\u5916\uff0c\u8fd9\u4e9b\u7ec4\u53ef\u4ee5\u65e0\u9650\u5236\u5730\u5d4c\u5957\u800c\u4e0d\u4f1a\u964d\u4f4e\u6027\u80fd\u3002"),(0,i.kt)("h3",{id:"\u9519\u8bef\u7ba1\u7406"},"\u9519\u8bef\u7ba1\u7406"),(0,i.kt)("p",null,"Gin \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b9\u4fbf\u7684\u65b9\u6cd5\u6765\u6536\u96c6 HTTP \u8bf7\u6c42\u671f\u95f4\u53d1\u751f\u7684\u6240\u6709\u9519\u8bef\u3002\u6700\u7ec8\uff0c\u4e2d\u95f4\u4ef6\u53ef\u4ee5\u5c06\u5b83\u4eec\u5199\u5165\u65e5\u5fd7\u6587\u4ef6\uff0c\u6570\u636e\u5e93\u5e76\u901a\u8fc7\u7f51\u7edc\u53d1\u9001\u3002"),(0,i.kt)("h3",{id:"\u5185\u7f6e\u6e32\u67d3"},"\u5185\u7f6e\u6e32\u67d3"),(0,i.kt)("p",null,"Gin \u4e3a JSON\uff0cXML \u548c HTML \u6e32\u67d3\u63d0\u4f9b\u4e86\u6613\u4e8e\u4f7f\u7528\u7684 API\u3002"),(0,i.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,i.kt)("p",null,"1.\u4e0b\u8f7d\u5e76\u5b89\u88c5 gin\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go get -u github.com/gin-gonic/gin\n")),(0,i.kt)("p",null,"2.\u5c06 gin \u5f15\u5165\u5230\u4ee3\u7801\u4e2d\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "github.com/gin-gonic/gin"\n')),(0,i.kt)("p",null,"3.\uff08\u53ef\u9009\uff09\u5982\u679c\u4f7f\u7528\u8bf8\u5982 http.StatusOK \u4e4b\u7c7b\u7684\u5e38\u91cf\uff0c\u5219\u9700\u8981\u5f15\u5165 net/http \u5305\uff1a"),(0,i.kt)("h2",{id:"\u4f7f\u7528jsoniter-\u7f16\u8bd1"},"\u4f7f\u7528Jsoniter \u7f16\u8bd1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"  go build -tags=jsoniter . \n")),(0,i.kt)("h2",{id:"asciijson"},"AsciiJson"),(0,i.kt)("p",null,"\u4f7f\u7528 AsciiJson \u751f\u6210\u5177\u6709\u8f6c\u4e49\u7684\u975eASCII\u5b57\u7b26\u4e32\u7684ASCII-only json"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'  func main(){\n    r := gin.Default()\n    r.GET("/json",func (c *gin.Context){\n        data := map[string]interface{}{\n          "lang":"GO\u8bed\u8a00",\n          "tag":"<br>",\n        }\n        // \u8f93\u51fa{"lang":"GO\\u8bed\\u8a00","tag":"\\u003cbr\\u003e"}\n        c.AsciiJSON(http.StatusOK,data)\n    })\n  }\n\n')),(0,i.kt)("h2",{id:"html-\u6e32\u67d3"},"HTML \u6e32\u67d3"),(0,i.kt)("p",null,"\u4f7f\u7528 LoadHTMLGlob() \u6216\u8005 LoadHTMLFiles()"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n router.LoadHTMLGlob("templates/*")\n //router.LoadHTMLFiles("templates/template1.html", "templates/template2.html")\n router.GET("/index", func(c *gin.Context) {\n  c.HTML(http.StatusOK, "index.tmpl", gin.H{\n   "title": "Main website",\n  })\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("p",null,"templates/index.tmpl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<html>\n <h1>\n  {{ .title }}\n </h1>\n</html>\n")),(0,i.kt)("p",null,"\u4f7f\u7528\u4e0d\u540c\u76ee\u5f55\u4e0b\u540d\u79f0\u76f8\u540c\u7684\u6a21\u677f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n router.LoadHTMLGlob("templates/**/*")\n router.GET("/posts/index", func(c *gin.Context) {\n  c.HTML(http.StatusOK, "posts/index.tmpl", gin.H{\n   "title": "Posts",\n  })\n })\n router.GET("/users/index", func(c *gin.Context) {\n  c.HTML(http.StatusOK, "users/index.tmpl", gin.H{\n   "title": "Users",\n  })\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("p",null,"templates/posts/index.tmpl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'{{ define "posts/index.tmpl" }}\n<html><h1>\n {{ .title }}\n</h1>\n<p>Using posts/index.tmpl</p>\n</html>\n{{ end }}\n')),(0,i.kt)("p",null,"templates/users/index.tmpl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'{{ define "users/index.tmpl" }}\n<html><h1>\n {{ .title }}\n</h1>\n<p>Using users/index.tmpl</p>\n</html>\n{{ end }}\n\n')),(0,i.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u6a21\u677f\u6e32\u67d3\u5668"},"\u81ea\u5b9a\u4e49\u6a21\u677f\u6e32\u67d3\u5668"),(0,i.kt)("p",null,"\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 html \u6a21\u677f\u6e32\u67d3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import "html/template"\n\nfunc main() {\n router := gin.Default()\n html := template.Must(template.ParseFiles("file1", "file2"))\n router.SetHTMLTemplate(html)\n router.Run(":8080")\n}\n\n')),(0,i.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26"},"\u81ea\u5b9a\u4e49\u5206\u9694\u7b26"),(0,i.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u5206\u9694"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},' r := gin.Default()\n r.Delims("{[{", "}]}")\n r.LoadHTMLGlob("/path/to/templates")\n')),(0,i.kt)("h3",{id:"\u81ea\u5b9a\u4e49\u6a21\u677f\u529f\u80fd"},"\u81ea\u5b9a\u4e49\u6a21\u677f\u529f\u80fd"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "fmt"\n    "html/template"\n    "net/http"\n    "time"\n\n    "github.com/gin-gonic/gin"\n)\n\nfunc formatAsDate(t time.Time) string {\n    year, month, day := t.Date()\n    return fmt.Sprintf("%d/%02d/%02d", year, month, day)\n}\n\nfunc main() {\n    router := gin.Default()\n    router.Delims("{[{", "}]}")\n    router.SetFuncMap(template.FuncMap{\n        "formatAsDate": formatAsDate,\n    })\n    router.LoadHTMLFiles("./testdata/template/raw.tmpl")\n\n    router.GET("/raw", func(c *gin.Context) {\n        c.HTML(http.StatusOK, "raw.tmpl", map[string]interface{}{\n            "now": time.Date(2017, 07, 01, 0, 0, 0, 0, time.UTC),\n        })\n    })\n\n    router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"multiparturlencoded-\u7ed1\u5b9a"},"Multipart/Urlencoded \u7ed1\u5b9a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "github.com/gin-gonic/gin"\n)\n\ntype LoginForm struct {\n User     string `form:"user" binding:"required"`\n Password string `form:"password" binding:"required"`\n}\n\nfunc main() {\n router := gin.Default()\n router.POST("/login", func(c *gin.Context) {\n  // \u4f60\u53ef\u4ee5\u4f7f\u7528\u663e\u5f0f\u7ed1\u5b9a\u58f0\u660e\u7ed1\u5b9a multipart form\uff1a\n  // c.ShouldBindWith(&form, binding.Form)\n  // \u6216\u8005\u7b80\u5355\u5730\u4f7f\u7528 ShouldBind \u65b9\u6cd5\u81ea\u52a8\u7ed1\u5b9a\uff1a\n  var form LoginForm\n  // \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5c06\u81ea\u52a8\u9009\u62e9\u5408\u9002\u7684\u7ed1\u5b9a\n  if c.ShouldBind(&form) == nil {\n   if form.User == "user" && form.Password == "password" {\n    c.JSON(200, gin.H{"status": "you are logged in"})\n   } else {\n    c.JSON(401, gin.H{"status": "unauthorized"})\n   }\n  }\n })\n router.Run(":8080")\n}\n\n\n')),(0,i.kt)("h2",{id:"multiparturlencoded-\u8868\u5355"},"Multipart/Urlencoded \u8868\u5355"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n\n router.POST("/form_post", func(c *gin.Context) {\n  message := c.PostForm("message")\n  nick := c.DefaultPostForm("nick", "anonymous")\n\n  c.JSON(200, gin.H{\n   "status":  "posted",\n   "message": message,\n   "nick":    nick,\n  })\n })\n router.Run(":8080")\n}\n\n')),(0,i.kt)("h2",{id:"purejson"},"PureJSON"),(0,i.kt)("p",null,"\u901a\u5e38\uff0cJSON \u4f7f\u7528 unicode \u66ff\u6362\u7279\u6b8a HTML \u5b57\u7b26\uff0c\u4f8b\u5982 < \u53d8\u4e3a \\ u003c\u3002\u5982\u679c\u8981\u6309\u5b57\u9762\u5bf9\u8fd9\u4e9b\u5b57\u7b26\u8fdb\u884c\u7f16\u7801\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528 PureJSON\u3002Go 1.6 \u53ca\u66f4\u4f4e\u7248\u672c\u65e0\u6cd5\u4f7f\u7528\u6b64\u529f\u80fd\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n r := gin.Default()\n \n // \u63d0\u4f9b unicode \u5b9e\u4f53\n r.GET("/json", func(c *gin.Context) {\n  c.JSON(200, gin.H{\n   "html": "<b>Hello, world!</b>",\n  })\n })\n \n // \u63d0\u4f9b\u5b57\u9762\u5b57\u7b26\n r.GET("/purejson", func(c *gin.Context) {\n  c.PureJSON(200, gin.H{\n   "html": "<b>Hello, world!</b>",\n  })\n })\n \n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n r.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"query-\u548c-post-form"},"Query \u548c post form"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"POST /post?id=1234&page=1 HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nname=manu&message=this_is_great\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n\n router.POST("/post", func(c *gin.Context) {\n\n  id := c.Query("id")\n  page := c.DefaultQuery("page", "0")\n  name := c.PostForm("name")\n  message := c.PostForm("message")\n\n  fmt.Printf("id: %s; page: %s; name: %s; message: %s", id, page, name, message)\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"xmljsonyamlprotobuf-\u6e32\u67d3"},"XML/JSON/YAML/ProtoBuf \u6e32\u67d3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc main() {\n r := gin.Default()\n\n // gin.H \u662f map[string]interface{} \u7684\u4e00\u79cd\u5feb\u6377\u65b9\u5f0f\n r.GET("/someJSON", func(c *gin.Context) {\n  c.JSON(http.StatusOK, gin.H{"message": "hey", "status": http.StatusOK})\n })\n\n r.GET("/moreJSON", func(c *gin.Context) {\n  // \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\n  var msg struct {\n   Name    string `json:"user"`\n   Message string\n   Number  int\n  }\n  msg.Name = "Lena"\n  msg.Message = "hey"\n  msg.Number = 123\n  // \u6ce8\u610f msg.Name \u5728 JSON \u4e2d\u53d8\u6210\u4e86 "user"\n  // \u5c06\u8f93\u51fa\uff1a{"user": "Lena", "Message": "hey", "Number": 123}\n  c.JSON(http.StatusOK, msg)\n })\n\n r.GET("/someXML", func(c *gin.Context) {\n  c.XML(http.StatusOK, gin.H{"message": "hey", "status": http.StatusOK})\n })\n\n r.GET("/someYAML", func(c *gin.Context) {\n  c.YAML(http.StatusOK, gin.H{"message": "hey", "status": http.StatusOK})\n })\n\n r.GET("/someProtoBuf", func(c *gin.Context) {\n  reps := []int64{int64(1), int64(2)}\n  label := "test"\n  // protobuf \u7684\u5177\u4f53\u5b9a\u4e49\u5199\u5728 testdata/protoexample \u6587\u4ef6\u4e2d\u3002\n  data := &protoexample.Test{\n   Label: &label,\n   Reps:  reps,\n  }\n  // \u8bf7\u6ce8\u610f\uff0c\u6570\u636e\u5728\u54cd\u5e94\u4e2d\u53d8\u4e3a\u4e8c\u8fdb\u5236\u6570\u636e\n  // \u5c06\u8f93\u51fa\u88ab protoexample.Test protobuf \u5e8f\u5217\u5316\u4e86\u7684\u6570\u636e\n  c.ProtoBuf(http.StatusOK, data)\n })\n\n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n r.Run(":8080")\n}\n\n')),(0,i.kt)("h2",{id:"\u5355\u6587\u4ef6"},"\u5355\u6587\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n // \u4e3a multipart forms \u8bbe\u7f6e\u8f83\u4f4e\u7684\u5185\u5b58\u9650\u5236 (\u9ed8\u8ba4\u662f 32 MiB)\n router.MaxMultipartMemory = 8 << 20  // 8 MiB\n router.POST("/upload", func(c *gin.Context) {\n  // \u5355\u6587\u4ef6\n  file, _ := c.FormFile("file")\n  log.Println(file.Filename)\n\n  dst := "./" + file.Filename\n  // \u4e0a\u4f20\u6587\u4ef6\u81f3\u6307\u5b9a\u7684\u5b8c\u6574\u6587\u4ef6\u8def\u5f84\n  c.SaveUploadedFile(file, dst)\n\n  c.String(http.StatusOK, fmt.Sprintf("\'%s\' uploaded!", file.Filename))\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"\u591a\u6587\u4ef6"},"\u591a\u6587\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n // \u4e3a multipart forms \u8bbe\u7f6e\u8f83\u4f4e\u7684\u5185\u5b58\u9650\u5236 (\u9ed8\u8ba4\u662f 32 MiB)\n router.MaxMultipartMemory = 8 << 20  // 8 MiB\n router.POST("/upload", func(c *gin.Context) {\n  // Multipart form\n  form, _ := c.MultipartForm()\n  files := form.File["upload[]"]\n\n  for _, file := range files {\n   log.Println(file.Filename)\n\n   // \u4e0a\u4f20\u6587\u4ef6\u81f3\u6307\u5b9a\u76ee\u5f55\n   c.SaveUploadedFile(file, dst)\n  }\n  c.String(http.StatusOK, fmt.Sprintf("%d files uploaded!", len(files)))\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6"},"\u9ed8\u8ba4\u7684\u4e2d\u95f4\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// Default \u4f7f\u7528 Logger \u548c Recovery \u4e2d\u95f4\u4ef6\nr := gin.Default()\n")),(0,i.kt)("h2",{id:"\u4ece-reader-\u8bfb\u53d6\u6570\u636e"},"\u4ece reader \u8bfb\u53d6\u6570\u636e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n router.GET("/someDataFromReader", func(c *gin.Context) {\n  response, err := http.Get("https://raw.githubusercontent.com/gin-gonic/logo/master/color.png")\n  if err != nil || response.StatusCode != http.StatusOK {\n   c.Status(http.StatusServiceUnavailable)\n   return\n  }\n\n  reader := response.Body\n  contentLength := response.ContentLength\n  contentType := response.Header.Get("Content-Type")\n\n  extraHeaders := map[string]string{\n   "Content-Disposition": `attachment; filename="gopher.png"`,\n  }\n\n  c.DataFromReader(http.StatusOK, contentLength, contentType, reader, extraHeaders)\n })\n router.Run(":8080")\n}\n\n')),(0,i.kt)("h2",{id:"\u4f18\u96c5\u5730\u91cd\u542f\u6216\u505c\u6b62"},"\u4f18\u96c5\u5730\u91cd\u542f\u6216\u505c\u6b62"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "context"\n "log"\n "net/http"\n "os"\n "os/signal"\n "time"\n\n "github.com/gin-gonic/gin"\n)\n\nfunc main() {\n router := gin.Default()\n router.GET("/", func(c *gin.Context) {\n  time.Sleep(5 * time.Second)\n  c.String(http.StatusOK, "Welcome Gin Server")\n })\n\n srv := &http.Server{\n  Addr:    ":8080",\n  Handler: router,\n }\n\n go func() {\n  // \u670d\u52a1\u8fde\u63a5\n  if err := srv.ListenAndServe(); err != nil && err != http.ErrServerClosed {\n   log.Fatalf("listen: %s\\n", err)\n  }\n }()\n\n // \u7b49\u5f85\u4e2d\u65ad\u4fe1\u53f7\u4ee5\u4f18\u96c5\u5730\u5173\u95ed\u670d\u52a1\u5668\uff08\u8bbe\u7f6e 5 \u79d2\u7684\u8d85\u65f6\u65f6\u95f4\uff09\n quit := make(chan os.Signal)\n signal.Notify(quit, os.Interrupt)\n <-quit\n log.Println("Shutdown Server ...")\n\n ctx, cancel := context.WithTimeout(context.Background(), 5*time.Second)\n defer cancel()\n if err := srv.Shutdown(ctx); err != nil {\n  log.Fatal("Server Shutdown:", err)\n }\n log.Println("Server exiting")\n}\n\n\n\n\n')),(0,i.kt)("h2",{id:"\u4f7f\u7528\u4e2d\u95f4\u4ef6"},"\u4f7f\u7528\u4e2d\u95f4\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n // \u65b0\u5efa\u4e00\u4e2a\u6ca1\u6709\u4efb\u4f55\u9ed8\u8ba4\u4e2d\u95f4\u4ef6\u7684\u8def\u7531\n r := gin.New()\n\n // \u5168\u5c40\u4e2d\u95f4\u4ef6\n // Logger \u4e2d\u95f4\u4ef6\u5c06\u65e5\u5fd7\u5199\u5165 gin.DefaultWriter\uff0c\u5373\u4f7f\u4f60\u5c06 GIN_MODE \u8bbe\u7f6e\u4e3a release\u3002\n // By default gin.DefaultWriter = os.Stdout\n r.Use(gin.Logger())\n\n // Recovery \u4e2d\u95f4\u4ef6\u4f1a recover \u4efb\u4f55 panic\u3002\u5982\u679c\u6709 panic \u7684\u8bdd\uff0c\u4f1a\u5199\u5165 500\u3002\n r.Use(gin.Recovery())\n\n // \u4f60\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u8def\u7531\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\u7684\u4e2d\u95f4\u4ef6\u3002\n r.GET("/benchmark", MyBenchLogger(), benchEndpoint)\n\n // \u8ba4\u8bc1\u8def\u7531\u7ec4\n // authorized := r.Group("/", AuthRequired())\n // \u548c\u4f7f\u7528\u4ee5\u4e0b\u4e24\u884c\u4ee3\u7801\u7684\u6548\u679c\u5b8c\u5168\u4e00\u6837:\n authorized := r.Group("/")\n // \u8def\u7531\u7ec4\u4e2d\u95f4\u4ef6! \u5728\u6b64\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728 "authorized" \u8def\u7531\u7ec4\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u521b\u5efa\u7684 \n    // AuthRequired() \u4e2d\u95f4\u4ef6\n authorized.Use(AuthRequired())\n {\n  authorized.POST("/login", loginEndpoint)\n  authorized.POST("/submit", submitEndpoint)\n  authorized.POST("/read", readEndpoint)\n\n  // \u5d4c\u5957\u8def\u7531\u7ec4\n  testing := authorized.Group("testing")\n  testing.GET("/analytics", analyticsEndpoint)\n }\n\n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n r.Run(":8080")\n}\n\n')),(0,i.kt)("h2",{id:"\u53ea\u7ed1\u5b9a-url-\u67e5\u8be2\u5b57\u7b26\u4e32"},"\u53ea\u7ed1\u5b9a url \u67e5\u8be2\u5b57\u7b26\u4e32"),(0,i.kt)("p",null,"ShouldBindQuery \u51fd\u6570\u53ea\u7ed1\u5b9a url \u67e5\u8be2\u53c2\u6570\u800c\u5ffd\u7565 post \u6570\u636e\u3002\u53c2\u9605\u8be6\u7ec6\u4fe1\u606f."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "log"\n\n "github.com/gin-gonic/gin"\n)\n\ntype Person struct {\n Name    string `form:"name"`\n Address string `form:"address"`\n}\n\nfunc main() {\n route := gin.Default()\n route.Any("/testing", startPage)\n route.Run(":8085")\n}\n\nfunc startPage(c *gin.Context) {\n var person Person\n if c.ShouldBindQuery(&person) == nil {\n  log.Println("====== Only Bind By Query String ======")\n  log.Println(person.Name)\n  log.Println(person.Address)\n }\n c.String(200, "Success")\n}\n\n')),(0,i.kt)("h2",{id:"\u5728\u4e2d\u95f4\u4ef6\u4e2d\u4f7f\u7528-goroutine"},"\u5728\u4e2d\u95f4\u4ef6\u4e2d\u4f7f\u7528 Goroutine"),(0,i.kt)("p",null,"\u5f53\u5728\u4e2d\u95f4\u4ef6\u6216 handler \u4e2d\u542f\u52a8\u65b0\u7684 Goroutine \u65f6\uff0c\u4e0d\u80fd\u4f7f\u7528\u539f\u59cb\u7684\u4e0a\u4e0b\u6587\uff0c\u5fc5\u987b\u4f7f\u7528\u53ea\u8bfb\u526f\u672c\u3002"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"\u4e4b\u95f4\u60f3\u901a\u8fc7\u4e2d\u95f4\u4ef6 \u8bb0\u5f55\u8bf7\u6c42\u65e5\u5fd7\u53d1\u73b0\u4e0d\u80fd\u4f7f\u7528")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n r := gin.Default()\n\n r.GET("/long_async", func(c *gin.Context) {\n  // \u521b\u5efa\u5728 goroutine \u4e2d\u4f7f\u7528\u7684\u526f\u672c\n  cCp := c.Copy()\n  go func() {\n   // \u7528 time.Sleep() \u6a21\u62df\u4e00\u4e2a\u957f\u4efb\u52a1\u3002\n   time.Sleep(5 * time.Second)\n\n   // \u8bf7\u6ce8\u610f\u60a8\u4f7f\u7528\u7684\u662f\u590d\u5236\u7684\u4e0a\u4e0b\u6587 "cCp"\uff0c\u8fd9\u4e00\u70b9\u5f88\u91cd\u8981\n   log.Println("Done! in path " + cCp.Request.URL.Path)\n  }()\n })\n\n r.GET("/long_sync", func(c *gin.Context) {\n  // \u7528 time.Sleep() \u6a21\u62df\u4e00\u4e2a\u957f\u4efb\u52a1\u3002\n  time.Sleep(5 * time.Second)\n\n  // \u56e0\u4e3a\u6ca1\u6709\u4f7f\u7528 goroutine\uff0c\u4e0d\u9700\u8981\u62f7\u8d1d\u4e0a\u4e0b\u6587\n  log.Println("Done! in path " + c.Request.URL.Path)\n })\n\n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n r.Run(":8080")\n}\n\n\n\n')),(0,i.kt)("h2",{id:"\u652f\u6301-lets-encrypt"},"\u652f\u6301 Let's Encrypt"),(0,i.kt)("p",null,"\u4e00\u884c\u4ee3\u7801\u652f\u6301 LetsEncrypt HTTPS servers \u793a\u4f8b\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "log"\n\n "github.com/gin-gonic/autotls"\n "github.com/gin-gonic/gin"\n)\n\nfunc main() {\n r := gin.Default()\n\n // Ping handler\n r.GET("/ping", func(c *gin.Context) {\n  c.String(200, "pong")\n })\n\n log.Fatal(autotls.Run(r, "example1.com", "example2.com"))\n}\n')),(0,i.kt)("h2",{id:"\u6620\u5c04\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u53c2\u6570"},"\u6620\u5c04\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u53c2\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"POST /post?ids[a]=1234&ids[b]=hello HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\n\nnames[first]=thinkerou&names[second]=tianou\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n\n router.POST("/post", func(c *gin.Context) {\n\n  ids := c.QueryMap("ids")\n  names := c.PostFormMap("names")\n\n  fmt.Printf("ids: %v; names: %v", ids, names)\n })\n router.Run(":8080")\n}\n\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ids: map[b:hello a:1234], names: map[second:tianou first:thinkerou]\n\n")),(0,i.kt)("h2",{id:"\u67e5\u8be2\u5b57\u7b26\u4e32\u53c2\u6570"},"\u67e5\u8be2\u5b57\u7b26\u4e32\u53c2\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc main() {\n router := gin.Default()\n\n // \u4f7f\u7528\u73b0\u6709\u7684\u57fa\u7840\u8bf7\u6c42\u5bf9\u8c61\u89e3\u6790\u67e5\u8be2\u5b57\u7b26\u4e32\u53c2\u6570\u3002\n // \u793a\u4f8b URL\uff1a /welcome?firstname=Jane&lastname=Doe\n router.GET("/welcome", func(c *gin.Context) {\n  firstname := c.DefaultQuery("firstname", "Guest")\n  lastname := c.Query("lastname") // c.Request.URL.Query().Get("lastname") \u7684\u4e00\u79cd\u5feb\u6377\u65b9\u5f0f\n\n  c.String(http.StatusOK, "Hello %s %s", firstname, lastname)\n })\n router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"\u6a21\u578b\u7ed1\u5b9a\u548c\u9a8c\u8bc1"},"\u6a21\u578b\u7ed1\u5b9a\u548c\u9a8c\u8bc1"),(0,i.kt)("p",null,"\u8981\u5c06\u8bf7\u6c42\u4f53\u7ed1\u5b9a\u5230\u7ed3\u6784\u4f53\u4e2d\uff0c\u4f7f\u7528\u6a21\u578b\u7ed1\u5b9a\u3002 Gin\u76ee\u524d\u652f\u6301JSON\u3001XML\u3001YAML\u548c\u6807\u51c6\u8868\u5355\u503c\u7684\u7ed1\u5b9a\uff08foo=bar\uff06boo=baz\uff09\u3002"),(0,i.kt)("p",null,"Gin\u4f7f\u7528 go-playground/validator/v10 \u8fdb\u884c\u9a8c\u8bc1\u3002 \u67e5\u770b\u6807\u7b7e\u7528\u6cd5\u7684\u5168\u90e8\u6587\u6863."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Gin\u63d0\u4f9b\u4e86\u4e24\u7c7b\u7ed1\u5b9a\u65b9\u6cd5\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Type - Must bind"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Methods - Bind, BindJSON, BindXML, BindQuery, BindYAML"),(0,i.kt)("li",{parentName:"ul"},"Behavior - \u8fd9\u4e9b\u65b9\u6cd5\u5c5e\u4e8e MustBindWith \u7684\u5177\u4f53\u8c03\u7528\u3002 \u5982\u679c\u53d1\u751f\u7ed1\u5b9a\u9519\u8bef\uff0c\u5219\u8bf7\u6c42\u7ec8\u6b62\uff0c\u5e76\u89e6\u53d1 c.AbortWithError(400, err).SetType(ErrorTypeBind)\u3002\u54cd\u5e94\u72b6\u6001\u7801\u88ab\u8bbe\u7f6e\u4e3a 400 \u5e76\u4e14 Content-Type \u88ab\u8bbe\u7f6e\u4e3a text/plain; charset=utf-8\u3002 \u5982\u679c\u60a8\u5728\u6b64\u4e4b\u540e\u5c1d\u8bd5\u8bbe\u7f6e\u54cd\u5e94\u72b6\u6001\u7801\uff0cGin\u4f1a\u8f93\u51fa\u65e5\u5fd7 ","[GIN-debug][WARNING]"," Headers were already written. Wanted to override status code 400 with 422\u3002 \u5982\u679c\u60a8\u5e0c\u671b\u66f4\u597d\u5730\u63a7\u5236\u7ed1\u5b9a\uff0c\u8003\u8651\u4f7f\u7528 ShouldBind \u7b49\u6548\u65b9\u6cd5\u3002"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Type - Should bind"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Methods - ShouldBind, ShouldBindJSON, ShouldBindXML, ShouldBindQuery, ShouldBindYAML"),(0,i.kt)("li",{parentName:"ul"},"Behavior - \u8fd9\u4e9b\u65b9\u6cd5\u5c5e\u4e8e ShouldBindWith \u7684\u5177\u4f53\u8c03\u7528\u3002 \u5982\u679c\u53d1\u751f\u7ed1\u5b9a\u9519\u8bef\uff0cGin \u4f1a\u8fd4\u56de\u9519\u8bef\u5e76\u7531\u5f00\u53d1\u8005\u5904\u7406\u9519\u8bef\u548c\u8bf7\u6c42\u3002")))),(0,i.kt)("p",null,"\u4f7f\u7528 Bind \u65b9\u6cd5\u65f6\uff0cGin \u4f1a\u5c1d\u8bd5\u6839\u636e Content-Type \u63a8\u65ad\u5982\u4f55\u7ed1\u5b9a\u3002 \u5982\u679c\u4f60\u660e\u786e\u77e5\u9053\u8981\u7ed1\u5b9a\u4ec0\u4e48\uff0c\u53ef\u4ee5\u4f7f\u7528 MustBindWith \u6216 ShouldBindWith\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u7ed1\u5b9a JSON\ntype Login struct {\n User     string `form:"user" json:"user" xml:"user"  binding:"required"`\n Password string `form:"password" json:"password" xml:"password" binding:"required"`\n}\n\nfunc main() {\n router := gin.Default()\n\n // \u7ed1\u5b9a JSON ({"user": "manu", "password": "123"})\n router.POST("/loginJSON", func(c *gin.Context) {\n  var json Login\n  if err := c.ShouldBindJSON(&json); err != nil {\n   c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})\n   return\n  }\n  \n  if json.User != "manu" || json.Password != "123" {\n   c.JSON(http.StatusUnauthorized, gin.H{"status": "unauthorized"})\n   return\n  } \n  \n  c.JSON(http.StatusOK, gin.H{"status": "you are logged in"})\n })\n\n // \u7ed1\u5b9a XML (\n // <?xml version="1.0" encoding="UTF-8"?>\n // <root>\n //  <user>manu</user>\n //  <password>123</password>\n // </root>)\n router.POST("/loginXML", func(c *gin.Context) {\n  var xml Login\n  if err := c.ShouldBindXML(&xml); err != nil {\n   c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})\n   return\n  }\n  \n  if xml.User != "manu" || xml.Password != "123" {\n   c.JSON(http.StatusUnauthorized, gin.H{"status": "unauthorized"})\n   return\n  } \n  \n  c.JSON(http.StatusOK, gin.H{"status": "you are logged in"})\n })\n\n // \u7ed1\u5b9a HTML \u8868\u5355 (user=manu&password=123)\n router.POST("/loginForm", func(c *gin.Context) {\n  var form Login\n  // \u6839\u636e Content-Type Header \u63a8\u65ad\u4f7f\u7528\u54ea\u4e2a\u7ed1\u5b9a\u5668\u3002\n  if err := c.ShouldBind(&form); err != nil {\n   c.JSON(http.StatusBadRequest, gin.H{"error": err.Error()})\n   return\n  }\n  \n  if form.User != "manu" || form.Password != "123" {\n   c.JSON(http.StatusUnauthorized, gin.H{"status": "unauthorized"})\n   return\n  } \n  \n  c.JSON(http.StatusOK, gin.H{"status": "you are logged in"})\n })\n\n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n router.Run(":8080")\n}\n\n')),(0,i.kt)("h2",{id:"\u7ed1\u5b9a-html-\u590d\u9009\u6846"},"\u7ed1\u5b9a HTML \u590d\u9009\u6846"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'type myForm struct {\n    Colors []string `form:"colors[]"`\n}\n\n\nfunc formHandler(c *gin.Context) {\n    var fakeForm myForm\n    c.ShouldBind(&fakeForm)\n    c.JSON(200, gin.H{"color": fakeForm.Colors})\n}\n\n')),(0,i.kt)("h2",{id:"\u7ed1\u5b9a-uri"},"\u7ed1\u5b9a Uri"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport "github.com/gin-gonic/gin"\n\ntype Person struct {\n ID   string `uri:"id" binding:"required,uuid"`\n Name string `uri:"name" binding:"required"`\n}\n\nfunc main() {\n route := gin.Default()\n route.GET("/:name/:id", func(c *gin.Context) {\n  var person Person\n  if err := c.ShouldBindUri(&person); err != nil {\n   c.JSON(400, gin.H{"msg": err.Error()})\n   return\n  }\n  c.JSON(200, gin.H{"name": person.Name, "uuid": person.ID})\n })\n route.Run(":8088")\n}\n\n')),(0,i.kt)("h2",{id:"\u7ed1\u5b9a\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u6570\u636e"},"\u7ed1\u5b9a\u67e5\u8be2\u5b57\u7b26\u4e32\u6216\u8868\u5355\u6570\u636e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "log"\n "time"\n\n "github.com/gin-gonic/gin"\n)\n\ntype Person struct {\n Name     string    `form:"name"`\n Address  string    `form:"address"`\n Birthday time.Time `form:"birthday" time_format:"2006-01-02" time_utc:"1"`\n}\n\nfunc main() {\n route := gin.Default()\n route.GET("/testing", startPage)\n route.Run(":8085")\n}\n\nfunc startPage(c *gin.Context) {\n var person Person\n // \u5982\u679c\u662f `GET` \u8bf7\u6c42\uff0c\u53ea\u4f7f\u7528 `Form` \u7ed1\u5b9a\u5f15\u64ce\uff08`query`\uff09\u3002\n // \u5982\u679c\u662f `POST` \u8bf7\u6c42\uff0c\u9996\u5148\u68c0\u67e5 `content-type` \u662f\u5426\u4e3a `JSON` \u6216 `XML`\uff0c\u7136\u540e\u518d\u4f7f\u7528 `Form`\uff08`form-data`\uff09\u3002\n // \u67e5\u770b\u66f4\u591a\uff1ahttps://github.com/gin-gonic/gin/blob/master/binding/binding.go#L88\n if c.ShouldBind(&person) == nil {\n  log.Println(person.Name)\n  log.Println(person.Address)\n  log.Println(person.Birthday)\n }\n\n c.String(200, "Success")\n}\n\n')),(0,i.kt)("h2",{id:"\u8fd0\u884c\u591a\u4e2a\u670d\u52a1"},"\u8fd0\u884c\u591a\u4e2a\u670d\u52a1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n "log"\n "net/http"\n "time"\n\n "github.com/gin-gonic/gin"\n "golang.org/x/sync/errgroup"\n)\n\nvar (\n g errgroup.Group\n)\n\nfunc router01() http.Handler {\n e := gin.New()\n e.Use(gin.Recovery())\n e.GET("/", func(c *gin.Context) {\n  c.JSON(\n   http.StatusOK,\n   gin.H{\n    "code":  http.StatusOK,\n    "error": "Welcome server 01",\n   },\n  )\n })\n\n return e\n}\n\nfunc router02() http.Handler {\n e := gin.New()\n e.Use(gin.Recovery())\n e.GET("/", func(c *gin.Context) {\n  c.JSON(\n   http.StatusOK,\n   gin.H{\n    "code":  http.StatusOK,\n    "error": "Welcome server 02",\n   },\n  )\n })\n\n return e\n}\n\nfunc main() {\n server01 := &http.Server{\n  Addr:         ":8080",\n  Handler:      router01(),\n  ReadTimeout:  5 * time.Second,\n  WriteTimeout: 10 * time.Second,\n }\n\n server02 := &http.Server{\n  Addr:         ":8081",\n  Handler:      router02(),\n  ReadTimeout:  5 * time.Second,\n  WriteTimeout: 10 * time.Second,\n }\n\n g.Go(func() error {\n  return server01.ListenAndServe()\n })\n\n g.Go(func() error {\n  return server02.ListenAndServe()\n })\n\n if err := g.Wait(); err != nil {\n  log.Fatal(err)\n }\n}\n\n')),(0,i.kt)("h2",{id:"\u9759\u6001\u6587\u4ef6\u670d\u52a1"},"\u9759\u6001\u6587\u4ef6\u670d\u52a1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n router := gin.Default()\n router.Static("/assets", "./assets")\n router.StaticFS("/more_static", http.Dir("my_file_system"))\n router.StaticFile("/favicon.ico", "./resources/favicon.ico")\n\n // \u76d1\u542c\u5e76\u5728 0.0.0.0:8080 \u4e0a\u542f\u52a8\u670d\u52a1\n router.Run(":8080")\n}\n')),(0,i.kt)("h2",{id:"\u9759\u6001\u8d44\u6e90\u5d4c\u5165"},"\u9759\u6001\u8d44\u6e90\u5d4c\u5165"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n r := gin.New()\n\n t, err := loadTemplate()\n if err != nil {\n  panic(err)\n }\n r.SetHTMLTemplate(t)\n\n r.GET("/", func(c *gin.Context) {\n  c.HTML(http.StatusOK, "/html/index.tmpl", nil)\n })\n r.Run(":8080")\n}\n\n// loadTemplate \u52a0\u8f7d\u7531 go-assets-builder \u5d4c\u5165\u7684\u6a21\u677f\nfunc loadTemplate() (*template.Template, error) {\n t := template.New("")\n for name, file := range Assets.Files {\n  if file.IsDir() || !strings.HasSuffix(name, ".tmpl") {\n   continue\n  }\n  h, err := ioutil.ReadAll(file)\n  if err != nil {\n   return nil, err\n  }\n  t, err = t.New(name).Parse(string(h))\n  if err != nil {\n   return nil, err\n  }\n }\n return t, nil\n}\n\n')))}d.isMDXComponent=!0}}]);