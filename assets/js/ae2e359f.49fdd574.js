"use strict";(self.webpackChunkah_kevin_xy=self.webpackChunkah_kevin_xy||[]).push([[64644],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>k});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},c=Object.keys(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)r=c[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),o=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},d=function(e){var n=o(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",v={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,c=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=o(r),u=i,k=p["".concat(l,".").concat(u)]||p[u]||v[u]||c;return r?t.createElement(k,a(a({ref:n},d),{},{components:r})):t.createElement(k,a({ref:n},d))}));function k(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var c=r.length,a=new Array(c);a[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var o=2;o<c;o++)a[o]=r[o];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},25297:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>v,frontMatter:()=>c,metadata:()=>s,toc:()=>o});var t=r(87462),i=(r(67294),r(3905));const c={},a="etcd",s={unversionedId:"backend/database/etcd/index",id:"backend/database/etcd/index",title:"etcd",description:"etcd \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u952e\u503c\u5bf9\u5b58\u50a8\u7cfb\u7edf,\u7531coresos \u5f00\u53d1,\u5185\u90e8\u91c7\u7528 raft \u534f\u8bae\u4f5c\u4e3a\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u7528\u4e8e\u53ef\u9760\u3001\u5feb\u901f\u5730\u4fdd\u5b58\u5173\u952e\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u8bbf\u95ee\u3002\u901a\u8fc7\u5206\u5e03\u5f0f\u9501\u3001leader\u9009\u4e3e\u548c\u5199\u5c4f\u969c(write barriers)\uff0c\u6765\u5b9e\u73b0\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u534f\u4f5c\u3002etcd\u96c6\u7fa4\u662f\u4e3a\u9ad8\u53ef\u7528\u3001\u6301\u4e45\u5316\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u800c\u51c6\u5907\u3002",source:"@site/docs/backend/database/etcd/index.md",sourceDirName:"backend/database/etcd",slug:"/backend/database/etcd/",permalink:"/docs/backend/database/etcd/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u6570\u636e\u5e93",permalink:"/docs/backend/database/"},next:{title:"\u57fa\u7840",permalink:"/docs/backend/database/etcd/base/"}},l={},o=[{value:"\u6982\u5ff5\u8bcd\u6c47",id:"\u6982\u5ff5\u8bcd\u6c47",level:2},{value:"\u5e94\u7528\u573a\u666f",id:"\u5e94\u7528\u573a\u666f",level:2},{value:"ectd \u4e0e redis",id:"ectd-\u4e0e-redis",level:2},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:2},{value:"\u670d\u52a1\u6ce8\u518c",id:"\u670d\u52a1\u6ce8\u518c",level:3},{value:"\u3000\u3000\u3000\u3000\u670d\u52a1\u53d1\u73b0\u3000\u3000",id:"\u670d\u52a1\u53d1\u73b0",level:3}],d={toc:o},p="wrapper";function v(e){let{components:n,...r}=e;return(0,i.kt)(p,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"etcd"},"etcd"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"}," etcd \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u952e\u503c\u5bf9\u5b58\u50a8\u7cfb\u7edf,\u7531coresos \u5f00\u53d1,\u5185\u90e8\u91c7\u7528 raft \u534f\u8bae\u4f5c\u4e3a\u4e00\u81f4\u6027\u7b97\u6cd5\uff0c\u7528\u4e8e\u53ef\u9760\u3001\u5feb\u901f\u5730\u4fdd\u5b58\u5173\u952e\u6570\u636e\uff0c\u5e76\u63d0\u4f9b\u8bbf\u95ee\u3002\u901a\u8fc7\u5206\u5e03\u5f0f\u9501\u3001leader\u9009\u4e3e\u548c\u5199\u5c4f\u969c(write barriers)\uff0c\u6765\u5b9e\u73b0\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u534f\u4f5c\u3002etcd\u96c6\u7fa4\u662f\u4e3a\u9ad8\u53ef\u7528\u3001\u6301\u4e45\u5316\u6570\u636e\u5b58\u50a8\u548c\u68c0\u7d22\u800c\u51c6\u5907\u3002")),(0,i.kt)("h2",{id:"\u6982\u5ff5\u8bcd\u6c47"},"\u6982\u5ff5\u8bcd\u6c47"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Raft\uff1a         etcd\u6240\u91c7\u7528\u7684\u4fdd\u8bc1\u5206\u5e03\u5f0f\u7cfb\u7edf\u5f3a\u4e00\u81f4\u6027\u7684\u7b97\u6cd5\u3002"),(0,i.kt)("li",{parentName:"ol"},"Node\uff1a       \u4e00\u4e2aRaft\u72b6\u6001\u673a\u5b9e\u4f8b\u3002"),(0,i.kt)("li",{parentName:"ol"},"Member\uff1a  \u4e00\u4e2aetcd\u5b9e\u4f8b\u3002\u5b83\u7ba1\u7406\u7740\u4e00\u4e2aNode\uff0c\u5e76\u4e14\u53ef\u4ee5\u4e3a\u5ba2\u6237\u7aef\u8bf7\u6c42\u63d0\u4f9b\u670d\u52a1\u3002"),(0,i.kt)("li",{parentName:"ol"},"Cluster\uff1a    \u7531\u591a\u4e2aMember\u6784\u6210\u3001\u53ef\u4ee5\u534f\u540c\u5de5\u4f5c\u7684etcd\u96c6\u7fa4\u3002"),(0,i.kt)("li",{parentName:"ol"},"Peer\uff1a        \u5bf9\u540c\u4e00\u4e2aetcd\u96c6\u7fa4\u4e2d\u53e6\u5916\u4e00\u4e2aMember\u7684\u79f0\u547c\u3002"),(0,i.kt)("li",{parentName:"ol"},"Client\uff1a      \u5411etcd\u96c6\u7fa4\u53d1\u9001HTTP\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u3002"),(0,i.kt)("li",{parentName:"ol"},"WAL\uff1a        \u9884\u5199\u5f0f\u65e5\u5fd7\uff0cetcd\u7528\u4e8e\u6301\u4e45\u5316\u5b58\u50a8\u7684\u65e5\u5fd7\u683c\u5f0f\u3002"),(0,i.kt)("li",{parentName:"ol"},"snapshot\uff1a etcd\u9632\u6b62WAL\u6587\u4ef6\u8fc7\u591a\u800c\u8bbe\u7f6e\u7684\u5feb\u7167\uff0c\u5b58\u50a8etcd\u6570\u636e\u72b6\u6001\u3002"),(0,i.kt)("li",{parentName:"ol"},"Proxy\uff1a       etcd\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u4e3aetcd\u96c6\u7fa4\u63d0\u4f9b\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u3002"),(0,i.kt)("li",{parentName:"ol"},"Leader\uff1a     Raft\u7b97\u6cd5\u4e2d\uff0c\u901a\u8fc7\u7ade\u9009\u800c\u4ea7\u751f\u7684\u3001\u5904\u7406\u6240\u6709\u6570\u636e\u63d0\u4ea4\u7684\u8282\u70b9\u3002"),(0,i.kt)("li",{parentName:"ol"},"Follower\uff1a  \u7ade\u9009\u5931\u8d25\u7684\u8282\u70b9\u4f5c\u4e3aRaft\u4e2d\u7684\u4ece\u5c5e\u8282\u70b9\uff0c\u4e3a\u7b97\u6cd5\u63d0\u4f9b\u5f3a\u4e00\u81f4\u6027\u4fdd\u8bc1\u3002"),(0,i.kt)("li",{parentName:"ol"},"Term\uff1a        \u67d0\u4e2a\u8282\u70b9\u6210\u4e3aLeader\u5230\u4e0b\u4e00\u6b21\u7ade\u9009\u65f6\u95f4\uff0c\u79f0\u4e3a\u4e00\u4e2aTerm\u3002"),(0,i.kt)("li",{parentName:"ol"},"Index\uff1a       \u6570\u636e\u9879\u7f16\u53f7\u3002Raft\u4e2d\u901a\u8fc7Term\u548cIndex\u6765\u5b9a\u4f4d\u6570\u636e")),(0,i.kt)("h2",{id:"\u5e94\u7528\u573a\u666f"},"\u5e94\u7528\u573a\u666f"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u670d\u52a1\u53d1\u73b0"),(0,i.kt)("li",{parentName:"ul"},"\u6d88\u606f\u53d1\u5e03\u4e0e\u8ba2\u9605"),(0,i.kt)("li",{parentName:"ul"},"\u8d1f\u8f7d\u5747\u8861"),(0,i.kt)("li",{parentName:"ul"},"\u5206\u5e03\u5f0f\u901a\u77e5\u4e0e\u534f\u8c03"),(0,i.kt)("li",{parentName:"ul"},"\u5206\u5e03\u5f0f\u9501\u3001\u5206\u5e03\u5f0f\u961f\u5217"),(0,i.kt)("li",{parentName:"ul"},"\u96c6\u7fa4\u76d1\u63a7\u4e0eLeader\u7ade\u9009")),(0,i.kt)("h2",{id:"ectd-\u4e0e-redis"},"ectd \u4e0e redis"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"etcd: \u7528\u4e8e\u5171\u4eab\u914d\u7f6e\u548c\u670d\u52a1\u53d1\u73b0\u7684\u5206\u5e03\u5f0f\u4e00\u81f4\u952e\u503c\u5b58\u50a8. etcd \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u952e\u503c\u5b58\u50a8, \u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u8de8\u673a\u5668\u96c6\u7fa4\u5b58\u50a8\u6570\u636e\u7684\u53ef\u9760\u65b9\u5f0f. etcd \u5728\u7f51\u7edc\u5206\u533a\u671f\u95f4\u4f18\u96c5\u5730\u5904\u7406 master \u9009\u4e3e, \u5e76\u4e14\u4f1a\u5bb9\u5fcd\u673a\u5668\u6545\u969c.\n\nredis:  \u6301\u4e45\u5316\u5728\u78c1\u76d8\u4e0a\u7684\u5185\u5b58\u6570\u636e\u5e93, Redis \u662f\u4e00\u4e2a\u5f00\u6e90\u3001BSD \u8bb8\u53ef\u7684\u9ad8\u7ea7\u952e\u503c\u5b58\u50a8. \u5b83\u901a\u5e38\u88ab\u79f0\u4e3a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668, \u56e0\u4e3a\u952e\u53ef\u4ee5\u5305\u542b\u5b57\u7b26\u4e32\u3001\u6563\u5217\u3001\u5217\u8868\u3001\u96c6\u5408\u548c\u6392\u5e8f\u96c6\u5408.\n")),(0,i.kt)("h2",{id:"\u4ee3\u7801\u5b9e\u73b0"},"\u4ee3\u7801\u5b9e\u73b0"),(0,i.kt)("h3",{id:"\u670d\u52a1\u6ce8\u518c"},"\u670d\u52a1\u6ce8\u518c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nimport (\n    "context"\n    "github.com/coreos/etcd/clientv3"\n    "log"\n    "time"\n)\n\n// ServiceRegister \u521b\u5efa\u79df\u7ea6\u6ce8\u518c\u670d\u52a1\ntype ServiceRegister struct {\n    cli *clientv3.Client //etcd client \n    leaseID clientv3.leaseID //\u79df\u7ea6ID\n    keepAliveChan <-chan *clientv3.LeaseKeepAliveResponse\n    key string //key \n    val string //value\n}\n//NewServiceRegister \u65b0\u5efa\u6ce8\u518c\u670d\u52a1\nfunc NewServiceRegister(endpoints []string, key, val string, lease int64) (*ServiceRegister, error) {\n    cli, err := clientv3.New(clientv3.Config{\n        Endpoints:   endpoints,\n        DialTimeout: 5 * time.Second,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    ser := &ServiceRegister{\n        cli: cli,\n        key: key,\n        val: val,\n    }\n \n    //\u7533\u8bf7\u79df\u7ea6\u8bbe\u7f6e\u65f6\u95f4keepalive\u5e76\u6ce8\u518c\u670d\u52a1\n    if err := ser.putKeyWithLease(lease); err != nil {\n        return nil, err\n    }\n \n    return ser, nil\n}\n \n//\u8bbe\u7f6e\u79df\u7ea6\nfunc (s *ServiceRegister) putKeyWithLease(lease int64) error {\n    //\u8bbe\u7f6e\u79df\u7ea6\u65f6\u95f4\n    resp, err := s.cli.Grant(context.Background(), lease)\n    if err != nil {\n        return err\n    }\n    //\u6ce8\u518c\u670d\u52a1\u5e76\u7ed1\u5b9a\u79df\u7ea6\n    _, err = s.cli.Put(context.Background(), s.key, s.val, clientv3.WithLease(resp.ID))\n    if err != nil {\n        return err\n    }\n    //\u8bbe\u7f6e\u7eed\u79df \u5b9a\u671f\u53d1\u9001\u9700\u6c42\u8bf7\u6c42\n    leaseRespChan, err := s.cli.KeepAlive(context.Background(), resp.ID)\n \n    if err != nil {\n        return err\n    }\n    s.leaseID = resp.ID\n    log.Println(s.leaseID)\n    s.keepAliveChan = leaseRespChan\n    log.Printf("Put key:%s  val:%s  success!", s.key, s.val)\n    return nil\n}\n \n//ListenLeaseRespChan \u76d1\u542c \u7eed\u79df\u60c5\u51b5\nfunc (s *ServiceRegister) ListenLeaseRespChan() {\n    for leaseKeepResp := range s.keepAliveChan {\n        log.Println("\u7eed\u7ea6\u6210\u529f", leaseKeepResp)\n    }\n    log.Println("\u5173\u95ed\u7eed\u79df")\n}\n \n// Close \u6ce8\u9500\u670d\u52a1\nfunc (s *ServiceRegister) Close() error {\n    //\u64a4\u9500\u79df\u7ea6\n    if _, err := s.cli.Revoke(context.Background(), s.leaseID); err != nil {\n        return err\n    }\n    log.Println("\u64a4\u9500\u79df\u7ea6")\n    return s.cli.Close()\n}\n \nfunc main() {\n    var endpoints = []string{"192.168.79.134:2379"}\n    ser, err := NewServiceRegister(endpoints, "/web", "192.168.1.51:8000", 5)\n    if err != nil {\n        log.Fatalln(err)\n    }\n    //\u76d1\u542c\u7eed\u79df\u76f8\u5e94chan\n    go ser.ListenLeaseRespChan()\n    select {\n    case <-time.After(20 * time.Second):\n        ser.Close()\n    }\n}\n')),(0,i.kt)("h3",{id:"\u670d\u52a1\u53d1\u73b0"},"\u3000\u3000\u3000\u3000\u670d\u52a1\u53d1\u73b0\u3000\u3000"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\npackage main\n \nimport (\n    "context"\n    "log"\n    "sync"\n    "time"\n \n    "github.com/coreos/etcd/clientv3"\n    "github.com/coreos/etcd/mvcc/mvccpb"\n)\n \n//ServiceDiscovery \u670d\u52a1\u53d1\u73b0\ntype ServiceDiscovery struct {\n    cli        *clientv3.Client  //etcd client\n    serverList map[string]string //\u670d\u52a1\u5217\u8868\n    lock       sync.Mutex\n}\n \n//NewServiceDiscovery  \u65b0\u5efa\u53d1\u73b0\u670d\u52a1\nfunc NewServiceDiscovery(endpoints []string) *ServiceDiscovery {\n    cli, err := clientv3.New(clientv3.Config{\n        Endpoints:   endpoints,\n        DialTimeout: 5 * time.Second,\n    })\n    if err != nil {\n        log.Fatal(err)\n    }\n \n    return &ServiceDiscovery{\n        cli:        cli,\n        serverList: make(map[string]string),\n    }\n}\n \n//WatchService \u521d\u59cb\u5316\u670d\u52a1\u5217\u8868\u548c\u76d1\u89c6\nfunc (s *ServiceDiscovery) WatchService(prefix string) error {\n    //\u6839\u636e\u524d\u7f00\u83b7\u53d6\u73b0\u6709\u7684key\n    resp, err := s.cli.Get(context.Background(), prefix, clientv3.WithPrefix())\n    if err != nil {\n        return err\n    }\n \n    for _, ev := range resp.Kvs {\n        s.SetServiceList(string(ev.Key), string(ev.Value))\n    }\n \n    //\u76d1\u89c6\u524d\u7f00\uff0c\u4fee\u6539\u53d8\u66f4\u7684server\n    go s.watcher(prefix)\n    return nil\n}\n \n//watcher \u76d1\u542c\u524d\u7f00\nfunc (s *ServiceDiscovery) watcher(prefix string) {\n    rch := s.cli.Watch(context.Background(), prefix, clientv3.WithPrefix())\n    log.Printf("watching prefix:%s now...", prefix)\n    for wresp := range rch {\n        for _, ev := range wresp.Events {\n            switch ev.Type {\n            case mvccpb.PUT: //\u4fee\u6539\u6216\u8005\u65b0\u589e\n                s.SetServiceList(string(ev.Kv.Key), string(ev.Kv.Value))\n            case mvccpb.DELETE: //\u5220\u9664\n                s.DelServiceList(string(ev.Kv.Key))\n            }\n        }\n    }\n}\n \n//SetServiceList \u65b0\u589e\u670d\u52a1\u5730\u5740\nfunc (s *ServiceDiscovery) SetServiceList(key, val string) {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    s.serverList[key] = string(val)\n    log.Println("put key :", key, "val:", val)\n}\n \n//DelServiceList \u5220\u9664\u670d\u52a1\u5730\u5740\nfunc (s *ServiceDiscovery) DelServiceList(key string) {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    delete(s.serverList, key)\n    log.Println("del key:", key)\n}\n \n//GetServices \u83b7\u53d6\u670d\u52a1\u5730\u5740\nfunc (s *ServiceDiscovery) GetServices() []string {\n    s.lock.Lock()\n    defer s.lock.Unlock()\n    addrs := make([]string, 0)\n \n    for _, v := range s.serverList {\n        addrs = append(addrs, v)\n    }\n    return addrs\n}\n \n//Close \u5173\u95ed\u670d\u52a1\nfunc (s *ServiceDiscovery) Close() error {\n    return s.cli.Close()\n}\n \nfunc main() {\n    var endpoints = []string{"192.168.79.134:2379"}\n    ser := NewServiceDiscovery(endpoints)\n    defer ser.Close()\n    _ = ser.WatchService("/web")\n    for {\n        select {\n        case <-time.Tick(10 * time.Second):\n            log.Println(ser.GetServices())\n        }\n    }\n}\n')))}v.isMDXComponent=!0}}]);